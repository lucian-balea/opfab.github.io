var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.8","fields":["title","body"],"fieldVectors":[["title/classes/AcceptLogIn.html",[0,0.276,1,2.43]],["body/classes/AcceptLogIn.html",[0,0.527,1,3.637,2,0.464,3,0.02,4,0.02,5,0.049,6,2.052,7,1.501,8,1.064,9,4.361,10,1.526,11,2.153,12,3.285,13,3.699,14,3.898,15,2.96,16,3.513,17,2.011,18,4.192,19,4.151,20,3.698,21,3.191,22,3.109,23,3.27,24,2.534,25,4.084,26,4.192,27,3.174,28,1.574,29,3.698,30,3.984,31,4.192,32,0.191,33,0.951,34,0.148,35,0.339,36,0.874,37,1.468,38,1.21,39,0.25,40,1.006,41,3.881,42,0.207,43,5.715,44,0.264,45,0.005,46,0.259,47,0.264,48,3.868,49,0.42,50,0.366,51,0.09,52,0.344,53,3.097,54,1.762,55,2.513,56,1.762,57,2.159,58,2.604,59,2.159,60,0.06,61,0.539,62,2.003,63,3.159,64,1.074,65,2.105,66,3.441,67,2.604,68,3.698,69,3.068,70,4.719,71,3.984,72,3.441,73,2.104,74,2.506,75,3.717,76,3.232,77,4.055,78,3.441,79,1.359,80,3.441,81,2.104,82,3.159,83,3.49,84,3.521,85,1.797,86,2.104,87,1.526,88,0.908,89,2.159,90,2.768,91,1.033,92,2.104,93,2.104,94,1.873,95,3.159,96,2.104,97,2.104,98,1.445,99,1.797,100,0.819,101,1.797,102,1.728,103,1.834,104,1.526,105,2.159,106,2.159,107,3.191,108,3.109,109,1.795,110,3.109,111,2.159,112,1.225,113,1.225,114,1.145,115,2.159,116,2.104,117,1.914,118,2.159,119,1.914,120,1.526,121,1.089,122,2.104,123,2.926,124,3.191,125,3.097,126,2.96,127,1.552,128,0.993,129,2.104,130,2.052,131,3.984,132,1.103,133,2.159,134,2.003,135,2.104,136,2.893,137,1.276,138,2.159,139,2.159,140,4.192,141,2.104,142,2.159,143,3.109,144,2.159,145,3.109,146,0.532,147,2.159,148,2.104,149,2.159,150,2.104,151,2.159,152,2.656,153,3.109,154,1.453,155,2.159,156,2.159,157,2.159,158,2.711,159,2.159,160,2.159,161,2.052,162,0.002,163,0.003,164,0.002]],["title/classes/AcceptLogOut.html",[0,0.276,77,2.539]],["body/classes/AcceptLogOut.html",[0,0.529,1,3.334,2,0.474,3,0.02,4,0.02,5,0.046,6,2.096,7,1.533,8,1.067,9,4.321,10,1.055,11,1.948,12,3.285,13,3.627,14,3.927,15,2.046,16,3.544,17,2.077,18,4.235,19,4,20,3.158,21,2.205,22,2.149,23,3.096,24,2.322,25,3.743,26,3.842,27,2.909,28,1.442,29,3.158,30,3.651,31,3.241,32,0.189,33,0.955,34,0.151,35,0.345,36,0.814,37,1.284,38,1.215,39,0.302,41,2.812,42,0.177,45,0.005,49,0.429,50,0.374,51,0.09,52,0.351,53,3.136,54,1.8,55,2.544,56,1.8,57,2.205,58,2.645,59,2.205,60,0.06,61,0.55,62,2.046,63,3.199,64,1.097,65,2.131,66,3.483,67,2.645,68,3.743,69,3.112,70,4.751,71,4.025,72,3.483,73,2.149,74,2.545,75,4,76,3.265,77,4.421,78,3.483,79,1.38,80,3.483,81,2.149,82,3.199,83,3.526,84,3.565,85,1.836,86,2.149,87,1.558,88,0.927,89,2.205,90,2.812,91,1.055,92,2.149,93,2.149,94,1.913,95,3.199,96,2.149,97,2.149,98,1.457,99,1.836,100,0.826,101,1.836,102,1.765,103,1.874,104,1.558,105,2.205,106,2.205,107,3.241,108,3.158,109,1.823,110,3.158,111,2.205,112,1.232,113,1.232,114,1.152,115,2.205,116,2.149,117,1.955,118,2.205,119,1.955,120,1.558,121,1.112,122,2.149,123,2.962,124,3.241,125,3.136,126,3.007,127,1.585,128,1.014,129,2.149,130,2.096,131,4.288,132,1.127,133,2.205,134,2.046,135,2.149,136,2.938,137,1.296,138,2.205,139,2.205,140,4.718,141,2.149,142,2.205,143,3.158,144,2.205,145,3.158,146,0.543,147,3.241,148,3.158,149,3.241,150,3.158,151,3.241,152,3.199,153,3.743,154,1.484,155,2.205,156,2.205,157,2.205,158,2.753,159,2.205,160,2.205,161,2.096,162,0.002,163,0.003,164,0.002,165,5.805]],["title/classes/AcceptLogOutSuccess.html",[0,0.276,78,2.539]],["body/classes/AcceptLogOutSuccess.html",[0,0.529,1,3.332,2,0.473,3,0.02,4,0.02,5,0.049,6,2.094,7,1.531,8,1.067,9,4.38,10,1.054,11,2.074,12,3.291,13,3.72,14,3.926,15,2.044,16,3.325,17,2.024,18,3.841,19,3.999,20,3.156,21,2.204,22,2.147,23,3.095,24,2.559,25,4.125,26,4.234,27,3.205,28,1.589,29,3.156,30,4.023,31,3.239,32,0.189,33,0.955,34,0.151,35,0.345,36,0.814,37,1.283,38,1.215,39,0.173,41,2.81,42,0.12,45,0.005,49,0.428,50,0.374,51,0.09,52,0.351,53,3.134,54,1.798,55,2.543,56,1.798,57,2.204,58,2.643,59,2.204,60,0.06,61,0.55,62,2.044,63,3.197,64,1.096,65,2.13,66,3.482,67,2.643,68,3.742,69,3.081,70,4.75,71,4.023,72,3.482,73,2.147,74,2.544,75,3.753,76,3.264,77,4.276,78,3.838,79,1.379,80,3.482,81,2.147,82,3.197,83,3.524,84,3.563,85,1.834,86,2.147,87,1.557,88,0.927,89,2.204,90,2.81,91,1.054,92,2.147,93,2.147,94,1.912,95,3.197,96,2.147,97,2.147,98,1.457,99,1.834,100,0.826,101,1.834,102,1.764,103,1.872,104,1.557,105,2.204,106,2.204,107,3.239,108,3.156,109,1.822,110,3.156,111,2.204,112,1.232,113,1.232,114,1.151,115,2.204,116,2.147,117,1.954,118,2.204,119,1.954,120,1.557,121,1.111,122,2.147,123,2.961,124,3.239,125,3.134,126,3.005,127,1.583,128,1.013,129,2.147,130,2.094,131,4.023,132,1.126,133,2.204,134,2.044,135,2.147,136,3.482,137,1.535,138,2.204,139,2.204,140,4.511,141,2.147,142,2.204,143,3.742,144,2.204,145,3.156,146,0.543,147,2.204,148,2.147,149,2.204,150,2.147,151,2.204,152,3.197,153,3.742,154,2.179,155,3.239,156,2.204,157,2.204,158,2.752,159,2.204,160,2.204,161,2.094,162,0.002,163,0.003,164,0.002,166,3.947]],["title/classes/Action.html",[0,0.276,8,0.528]],["body/classes/Action.html",[0,0.512,2,0.51,3,0.022,4,0.022,5,0.026,8,0.645,11,1.572,23,1.735,24,1.434,28,1.817,32,0.158,36,0.428,38,1.329,39,0.414,42,0.129,44,0.29,45,0.005,46,0.481,47,0.29,50,0.58,51,0.086,60,0.06,61,0.853,87,1.677,88,0.998,100,1.059,112,1.257,113,1.257,114,1.175,123,3.089,162,0.003,163,0.003,164,0.002,167,2.51,168,3.814,169,4.781,170,5.551,171,3.495,172,4.506,173,2.961,174,4.939,175,4.939,176,3.261,177,3.456,178,4.939,179,4.939,180,4.939,181,4.939,182,4.939,183,3.335,184,4.251,185,2.202,186,0.947,187,3.171,188,1.735,189,1.975,190,0.858,191,4.939,192,1.975,193,1.354,194,2.736,195,2.673,196,2.673,197,2.673,198,2.373,199,2.673,200,4.118,201,2.588,202,2.673,203,2.51,204,3.851,205,2.061,206,3.031,207,2.51,208,3.851,209,1.523,210,2.228,211,2.097,212,2.612,213,1.83,214,2.588,215,2.673,216,2.373,217,3.728,218,3.728,219,3.199,220,2.673,221,2.673,222,2.588,223,2.588,224,2.784,225,2.673,226,2.673,227,2.673,228,1.797,229,2.312,230,2.439,231,2.673,232,2.673,233,2.673,234,2.673,235,2.51,236,2.904,237,2.673,238,1.05,239,2.439,240,2.588,241,1.899,242,2.588,243,2.312,244,2.673,245,2.673,246,2.929,247,2.673,248,2.673,249,2.673,250,3.851,251,2.673,252,2.673,253,2.673,254,2.673,255,2.104,256,2.673,257,2.673,258,2.373,259,2.673,260,2.673,261,2.673,262,2.673,263,2.673,264,3.728,265,1.263,266,1.263,267,2.588,268,2.588,269,2.588,270,2.016,271,2.673,272,2.673,273,2.036,274,2.673,275,2.373,276,3.728,277,2.673,278,2.673]],["title/components/ActionComponent.html",[279,1,280,1.718]],["body/components/ActionComponent.html",[0,0.274,3,0.026,4,0.035,5,0.042,8,1.003,32,0.18,33,0.68,34,0.19,35,0.407,36,0.503,39,0.3,42,0.29,44,0.341,45,0.005,46,0.565,47,0.341,51,0.105,60,0.031,64,1.387,91,1.333,100,0.933,112,0.686,113,0.686,114,0.642,121,1.405,128,1.282,132,1.424,162,0.002,163,0.003,164,0.002,171,2.895,176,2.847,177,3.67,186,1.061,189,2.32,243,4.586,265,1.483,266,2.037,279,1.561,280,2.887,281,2.28,282,1.762,283,2.149,284,1.789,285,1.789,286,4.992,287,2.85,288,1.685,289,3.593,290,3.124,291,7.831,292,2.42,293,6.856,294,2.329,295,7.027,296,1.61,297,3.167,298,6.995,299,7.831,300,7.331,301,6.497,302,4.992,303,7.565,304,7.831,305,6.856,306,6.856,307,4.992,308,4.992,309,4.992,310,4.992,311,4.992,312,1.589,313,2.234,314,4.992,315,0.9,316,1.66,317,2.948,318,3.039,319,2.586,320,4.479,321,4.479,322,6.856,323,4.992,324,4.992,325,4.992,326,4.992,327,4.992,328,6.856,329,1.789,330,1.762,331,1.789,332,1.789,333,1.789,334,1.789,335,1.59,336,1.789,337,1.789,338,1.789,339,1.735,340,1.66,341,1.762,342,1.789,343,1.789,344,1.789,345,1.143,346,1.789,347,1.546,348,2.457,349,2.42,350,1.613,351,3.021,352,1.789,353,1.789,354,1.71,355,1.789,356,1.71,357,2.425,358,2.457,359,1.71,360,2.457,361,1.71,362,1.789,363,1.685,364,1.789,365,1.71,366,1.789,367,3.021,368,1.71,369,1.789,370,1.66,371,2.457,372,1.71,373,1.685,374,1.66,375,1.762,376,1.789,377,1.71,378,2.42,379,1.789,380,1.735,381,1.636,382,2.457,383,1.71,384,1.789,385,3.021,386,1.66,387,1.789,388,1.71,389,1.71,390,1.762,391,1.685,392,1.789,393,1.71,394,1.71,395,1.789,396,1.685,397,1.789,398,1.71,399,1.789,400,1.735,401,1.71,402,1.789,403,1.71,404,1.463,405,1.789,406,1.71,407,2.42,408,1.71,409,2.806,410,1.789,411,1.71,412,1.789,413,1.71,414,1.789,415,1.66,416,1.71,417,1.685,418,1.71,419,1.71,420,1.879,421,1.71,422,1.789,423,1.71,424,1.71,425,1.71,426,1.265,427,1.685,428,1.685,429,1.789,430,1.685,431,1.789,432,1.685,433,1.762,434,1.789]],["title/classes/ActionStatus.html",[0,0.276,224,1.946]],["body/classes/ActionStatus.html",[0,0.513,2,0.516,3,0.022,4,0.022,5,0.026,8,0.453,11,1.585,23,1.755,24,1.451,28,1.824,32,0.149,36,0.433,38,1.33,39,0.415,42,0.131,44,0.294,45,0.005,46,0.484,47,0.294,50,0.584,51,0.086,60,0.06,61,0.86,87,1.696,88,1.009,100,1.056,112,1.261,113,1.261,114,1.179,123,1.851,162,0.003,163,0.003,164,0.002,167,2.539,169,3.759,170,5.506,171,3.504,172,4.53,173,2.953,174,4.965,175,4.965,176,3.278,177,3.472,178,4.965,179,4.965,180,4.965,181,4.965,182,4.965,183,1.998,186,0.955,187,3.198,188,1.755,189,1.998,190,0.868,191,4.965,192,1.998,193,1.37,194,2.759,195,2.704,196,2.704,197,2.704,198,2.401,199,2.704,200,4.145,201,2.618,202,2.704,203,2.539,204,3.883,205,2.069,206,3.056,207,2.539,208,3.883,209,1.533,210,2.247,211,2.114,212,2.629,213,1.851,214,2.618,215,2.704,216,2.401,217,3.759,218,3.759,219,3.206,220,2.704,221,2.704,222,2.618,223,2.618,224,3.063,225,2.704,226,2.704,227,2.704,228,1.818,229,2.339,230,2.467,231,2.704,232,2.704,233,2.704,234,2.704,235,2.539,236,2.928,237,2.704,238,1.062,239,2.467,240,2.618,241,1.922,242,2.618,243,2.339,244,2.704,245,2.704,246,2.948,247,2.704,248,2.704,249,2.704,250,3.883,251,2.704,252,2.704,253,2.704,254,2.704,255,2.128,256,2.704,257,2.704,258,2.401,259,2.704,260,2.704,261,2.704,262,2.704,263,2.704,264,3.759,265,1.278,266,1.278,267,2.618,268,2.618,269,2.618,270,2.04,271,2.704,272,2.704,273,2.053,274,2.704,275,2.401,276,3.759,277,2.704,278,2.704,435,3.858,436,4.3]],["title/classes/AddActionsAppear.html",[0,0.276,437,2.729]],["body/classes/AddActionsAppear.html",[0,0.538,2,0.636,3,0.027,4,0.027,5,0.032,8,1.051,32,0.193,33,0.981,34,0.202,35,0.424,36,0.72,37,1.689,38,1.248,39,0.233,40,1.38,42,0.246,44,0.362,45,0.005,46,0.355,47,0.362,49,0.576,50,0.502,51,0.085,52,0.471,60,0.061,61,0.739,79,1.699,88,1.246,98,1.742,100,0.95,112,1.346,113,1.346,114,1.258,146,1.306,162,0.002,163,0.003,164,0.002,186,1.612,188,2.165,211,2.448,238,1.311,437,4.703,438,3.133,439,7.147,440,5.306,441,4.495,442,3.044,443,4.396,444,1.931,445,4.09,446,2.725,447,4.512,448,4.512,449,2.066,450,4.287,451,4.186,452,4.512,453,4.512,454,1.85,455,1.294,456,1.345,457,1.514,458,1.514,459,2.059,460,3.133,461,1.494,462,1.643,463,3.337,464,3.337,465,3.337,466,3.337,467,3.337,468,3.337,469,3.337,470,3.337,471,3.23]],["title/classes/AddLightCardFailure.html",[0,0.276,472,2.242]],["body/classes/AddLightCardFailure.html",[0,0.552,2,0.489,3,0.021,4,0.021,5,0.025,8,1.077,10,2.185,11,1.046,12,1.298,32,0.195,33,1.001,34,0.155,35,0.353,36,0.598,37,1.64,38,1.267,39,0.396,40,1.06,42,0.213,44,0.278,45,0.005,46,0.273,47,0.278,49,0.442,50,0.386,51,0.092,52,0.362,60,0.062,61,0.568,65,1.262,79,0.969,88,1.921,98,1.688,100,0.787,109,1.279,112,1.305,113,1.305,114,1.22,146,1.213,154,1.53,162,0.002,163,0.003,164,0.002,186,1.485,190,0.822,193,1.891,224,2.304,238,1.006,316,1.355,345,1.359,444,1.483,446,2.256,449,1.717,454,1.604,455,0.994,456,1.033,457,1.162,458,1.162,459,1.581,461,1.147,462,1.262,472,3.44,473,3.578,474,1.893,475,1.846,476,5.938,477,4.074,478,2.876,479,2.573,480,1.262,481,1.244,482,1.932,483,1.856,484,1.754,485,3.192,486,4.768,487,3.131,488,1.856,489,3.016,490,2.76,491,1.932,492,1.506,493,3.192,494,3.131,495,1.262,496,3.016,497,3.261,498,1.754,499,3.131,500,1.893,501,3.131,502,3.131,503,1.932,504,1.932,505,3.131,506,3.072,507,3.131,508,1.722,509,1.786,510,3.131,511,1.416,512,3.131,513,1.932,514,3.131,515,1.893,516,3.131,517,1.692,518,1.607,519,1.973,520,1.973,521,1.973,522,1.754,523,1.973,524,1.973,525,1.973,526,1.634,527,1.973,528,1.973,529,1.973,530,1.973,531,1.555,532,1.973,533,1.973,534,1.973,535,1.932,536,1.932,537,1.973,538,1.973,539,1.973,540,1.973,541,1.973,542,1.893]],["title/classes/AddThirdActions.html",[0,0.276,502,2.242]],["body/classes/AddThirdActions.html",[0,0.552,2,0.489,3,0.021,4,0.021,5,0.025,8,1.077,10,2.185,11,1.046,12,1.298,32,0.195,33,1.001,34,0.155,35,0.353,36,0.598,37,1.64,38,1.267,39,0.396,40,1.06,42,0.213,44,0.278,45,0.005,46,0.273,47,0.278,49,0.442,50,0.386,51,0.092,52,0.362,60,0.062,61,0.568,65,1.262,79,0.969,88,1.921,98,1.688,100,0.787,109,1.279,112,1.305,113,1.305,114,1.22,146,1.213,154,1.53,162,0.002,163,0.003,164,0.002,186,1.485,190,0.822,193,1.891,224,2.304,238,1.006,316,1.355,345,1.359,444,1.483,446,2.256,449,1.717,454,1.604,455,0.994,456,1.033,457,1.162,458,1.162,459,1.581,461,1.147,462,1.262,472,3.131,473,3.578,474,1.893,475,1.846,478,1.973,479,2.573,480,1.262,481,1.244,482,1.932,483,1.856,484,1.754,485,3.192,486,4.768,487,3.131,488,1.856,489,3.016,490,2.76,491,1.932,492,1.506,493,3.192,494,3.131,495,1.262,496,3.016,497,3.261,498,1.754,499,3.131,500,1.893,501,3.131,502,3.44,503,1.932,504,1.932,505,3.131,506,3.072,507,3.131,508,1.722,509,1.786,510,3.131,511,1.416,512,3.131,513,1.932,514,3.131,515,1.893,516,3.131,517,1.692,518,1.607,519,1.973,520,1.973,521,1.973,522,1.754,523,1.973,524,1.973,525,1.973,526,1.634,527,1.973,528,1.973,529,1.973,530,1.973,531,1.555,532,2.876,533,1.973,534,1.973,535,1.932,536,1.932,537,1.973,538,1.973,539,1.973,540,1.973,541,1.973,542,1.893,543,5.938,544,4.074]],["title/components/AppComponent.html",[279,1,354,1.718]],["body/components/AppComponent.html",[0,0.229,3,0.022,4,0.031,5,0.037,8,0.636,12,2.479,17,1.646,32,0.178,33,0.599,34,0.159,35,0.359,36,0.784,38,0.888,39,0.311,42,0.282,44,0.412,45,0.005,46,0.553,47,0.412,49,0.844,50,0.737,51,0.112,52,0.37,60,0.025,64,1.972,65,2.41,67,2.751,91,1.113,100,0.796,109,2.444,121,1.174,126,2.16,128,1.071,132,1.189,137,1.982,162,0.002,163,0.003,164,0.002,173,2.534,186,0.934,205,0.991,212,2.584,219,2.823,230,4.073,265,1.239,266,1.794,279,1.415,280,1.428,281,2.008,282,1.471,283,1.795,284,1.494,285,1.494,287,2.584,288,1.407,289,3.558,290,2.751,292,2.131,294,2.269,296,1.418,297,2.923,312,1.4,313,1.723,315,0.752,329,1.494,330,1.471,331,1.494,332,1.494,333,1.494,334,1.494,335,1.328,336,1.494,337,1.494,338,1.494,339,1.449,340,1.387,341,1.471,342,1.494,343,1.494,344,1.494,345,0.954,346,1.494,347,1.291,348,2.164,349,2.131,350,1.347,351,2.789,352,1.494,353,1.494,354,2.665,355,1.494,356,1.428,357,2.198,358,2.164,359,1.428,360,2.164,361,1.428,362,1.494,363,1.407,364,1.494,365,1.428,366,1.494,367,2.789,368,1.428,369,1.494,370,1.387,371,2.164,372,1.428,373,1.407,374,1.387,375,1.471,376,1.494,377,1.428,378,2.131,379,1.494,380,1.449,381,1.367,382,2.164,383,1.428,384,1.494,385,2.789,386,1.387,387,1.494,388,1.428,389,1.428,390,1.471,391,1.407,392,1.494,393,1.428,394,1.428,395,1.494,396,1.407,397,1.494,398,1.428,399,1.494,400,1.449,401,1.428,402,1.494,403,1.428,404,1.222,405,1.494,406,1.428,407,2.131,408,1.428,409,2.544,410,1.494,411,1.428,412,1.494,413,1.428,414,1.494,415,1.387,416,1.428,417,1.407,418,1.428,419,1.428,420,1.655,421,1.428,422,1.494,423,1.428,424,1.428,425,1.428,426,1.057,427,1.407,428,1.407,429,1.494,430,1.407,431,1.494,432,1.407,433,1.471,434,1.494,495,1.291,508,2.553,515,2.806,545,4.169,546,4.705,547,7.099,548,6.038,549,7.099,550,5.531,551,7.099,552,5.825,553,7.783,554,6.008,555,6.038,556,1.471,557,6.955,558,7.099,559,4.959,560,6.038,561,6.038,562,6.038,563,4.705,564,4.085,565,6.038,566,4.169,567,5.531,568,6.038,569,4.705,570,5.418,571,4.461,572,3.465,573,6.038,574,4.169,575,4.169,576,4.169,577,4.169,578,4.169,579,4.169,580,4.258,581,4.169,582,2.94,583,2.82,584,1.158,585,1.158,586,1.189,587,3.08,588,4.169,589,3.741,590,3.249,591,3.798,592,3.459,593,1.978,594,4.169,595,4.169,596,2.16,597,3.741,598,3.284,599,1.158,600,4.169,601,4.169,602,4.169,603,4.169,604,4.169,605,4.169,606,4.169,607,3.249,608,4.169,609,4.169,610,4.258,611,4.169,612,4.169,613,4.169,614,2.462,615,4.169,616,4.169,617,4.169,618,1.938,619,4.169,620,4.169,621,4.169,622,4.169,623,4.169,624,3.798,625,6.038,626,6.038,627,6.038,628,2.94,629,3.249,630,3.741,631,2.538,632,2.462,633,3.249,634,4.169,635,2.94,636,4.169,637,3.741,638,4.169,639,3.249]],["title/modules/AppModule.html",[640,2.2,641,3.706]],["body/modules/AppModule.html",[0,0.31,3,0.029,4,0.038,5,0.046,36,0.569,45,0.005,51,0.126,58,2.574,60,0.035,76,2.432,91,1.508,121,2.664,128,1.45,132,2.7,162,0.003,163,0.003,164,0.003,315,1.019,317,3.336,318,3.439,319,4.592,329,2.024,330,1.994,331,2.024,332,2.024,333,2.024,334,2.024,335,1.799,336,2.024,337,2.024,338,2.024,339,1.964,340,1.878,341,1.994,342,2.024,343,2.024,344,2.024,345,1.293,346,2.024,347,1.749,354,3.476,377,3.242,394,3.242,398,3.242,403,3.242,567,4.401,582,5.255,583,3.821,640,2.477,641,7.814,642,2.859,643,3.241,644,5.077,645,4.4,646,2.997,647,5.069,648,5.069,649,5.069,650,5.069,651,6.993,652,6.809,653,6.809,654,6.403,655,4.4,656,3.439,657,5.649,658,4.053,659,7.452,660,4.053,661,7.452,662,5.649,663,7.452,664,2.997,665,4.687,666,6.686,667,7.452,668,3.336,669,5.806,670,5.806,671,2.859,672,5.649,673,5.806,674,5.649,675,3.821,676,5.649,677,5.649,678,5.069,679,5.649,680,4.173,681,2.926,682,2.926,683,5.649,684,5.649,685,6.686,686,4.687,687,4.687,688,3.821,689,4.687,690,5.806,691,4.687,692,5.649,693,5.649,694,4.687,695,4.687,696,4.687,697,5.649,698,5.649,699,5.649,700,5.069,701,5.649,702,5.649,703,5.069,704,5.649,705,5.649,706,3.679,707,3.679,708,5.649,709,5.649,710,5.649,711,5.649,712,5.649,713,5.649,714,4.173,715,4.401]],["title/modules/AppRoutingModule.html",[640,2.2,651,3.706]],["body/modules/AppRoutingModule.html",[0,0.329,3,0.031,4,0.04,5,0.047,8,0.631,12,1.909,24,2.614,36,0.604,45,0.005,51,0.102,60,0.052,82,2.786,83,2.786,87,2.364,91,1.6,121,2.18,127,3.107,128,1.539,134,3.105,162,0.003,163,0.004,164,0.003,205,2.358,219,2.813,236,2.843,238,1.481,255,2.967,258,3.346,279,1.195,313,1.71,315,1.081,329,2.148,330,2.115,331,2.148,332,2.148,333,2.148,334,2.148,335,1.909,336,2.148,337,2.148,338,2.148,339,2.084,340,1.993,341,2.115,342,2.148,343,2.148,344,2.148,345,1.372,346,2.148,357,1.856,546,4.67,598,3.26,642,3.034,646,3.18,651,5.723,658,3.26,660,4.213,666,5.378,678,5.378,716,5.994,717,4.428,718,7.746,719,5.225,720,5.723,721,5.908,722,3.439,723,8.582,724,4.324,725,8.582,726,6.426,727,7.329,728,9.071,729,5.994,730,7.068,731,7.068,732,5.994,733,4.973,734,5.994,735,2.628,736,5.994,737,4.973,738,3.904,739,5.994,740,5.994,741,5.994,742,5.378,743,5.994,744,4.872,745,4.973,746,4.973,747,5.994,748,5.994,749,4.973,750,5.994,751,4.67,752,4.973,753,5.994,754,5.994,755,5.994,756,8.582,757,5.994,758,7.746,759,5.994,760,2.731,761,5.994,762,4.055,763,4.055,764,5.994,765,5.994,766,5.994,767,5.994,768,5.994,769,5.994,770,5.994,771,7.746,772,5.994,773,3.54,774,5.994,775,5.994,776,5.994]],["title/interfaces/AppState.html",[585,1.393,777,1.884]],["body/interfaces/AppState.html",[3,0.027,4,0.027,5,0.032,12,2.863,15,3.672,25,5.417,32,0.19,34,0.2,35,0.421,45,0.005,51,0.127,52,0.466,60,0.055,69,2.904,137,1.793,162,0.002,163,0.003,164,0.002,186,1.391,205,2.046,239,4.067,357,2.784,381,2.946,404,2.634,420,2.464,461,1.995,585,1.969,719,5.64,724,5.018,735,3.941,777,1.969,778,2.781,779,5.242,780,4.769,781,5.653,782,7.139,783,7.139,784,7.139,785,7.139,786,7.139,787,7.139,788,8.604,789,7.139,790,7.139,791,7.139,792,7.139,793,7.139,794,5.242,795,4.999,796,4.085,797,4.704,798,7.089,799,5.242,800,7.089,801,7.089,802,2.715,803,2.781,804,7.089,805,5.242,806,5.881,807,5.242,808,5.881,809,5.242,810,5.242,811,5.242,812,7.089,813,4.704,814,7.089,815,5.242,816,7.089,817,5.242,818,5.242,819,7.089,820,5.242,821,7.089,822,5.242,823,7.089,824,5.242,825,7.089,826,5.242,827,7.089,828,5.242,829,7.089,830,5.242,831,5.242,832,5.242,833,4.316,834,5.242,835,5.242,836,5.242,837,5.881,838,5.242,839,5.242,840,5.242,841,5.881,842,5.242,843,5.242,844,4.704,845,5.881,846,5.242,847,5.242,848,5.242,849,5.881,850,5.242,851,5.242,852,5.881,853,5.242,854,5.242,855,5.881,856,5.242,857,7.089,858,5.242,859,5.242,860,5.881,861,5.242,862,7.089,863,5.242,864,5.523,865,5.242,866,5.242,867,4.704,868,4.704,869,5.242,870,7.089,871,4.704,872,4.704,873,5.242]],["title/classes/ApplyFilter.html",[0,0.276,874,2.962]],["body/classes/ApplyFilter.html",[0,0.465,2,0.828,3,0.036,4,0.036,5,0.042,8,1.006,32,0.196,33,0.908,34,0.263,35,0.503,36,0.853,37,1.55,38,1.194,39,0.303,40,1.797,42,0.279,44,0.472,45,0.005,46,0.463,47,0.472,49,0.749,50,0.654,51,0.109,52,0.613,60,0.058,61,0.962,64,1.918,65,2.623,98,1.527,112,1.164,113,1.164,114,1.088,162,0.003,163,0.004,164,0.003,173,1.97,190,1.394,426,2.322,475,2.414,724,4.728,874,5.639,875,5.381,876,8.469,877,6.907,878,7.599,879,4.672,880,4.498,881,5.156,882,4.344,883,5.381,884,3.963,885,5.73,886,6.197,887,4.344,888,5.972,889,6.197,890,6.197,891,5.73]],["title/injectables/ArchiveEffects.html",[855,4.162,892,1.393]],["body/injectables/ArchiveEffects.html",[0,0.306,3,0.029,4,0.029,5,0.034,8,0.872,10,1.971,11,1.896,17,2.126,28,1.848,32,0.157,34,0.212,35,0.438,39,0.244,42,0.252,44,0.38,45,0.005,46,0.373,47,0.38,49,0.801,50,0.699,51,0.121,52,0.495,60,0.034,88,2.258,109,2.319,112,0.766,113,0.766,114,0.716,120,3.266,127,3.965,137,2.104,146,1.212,162,0.003,163,0.003,164,0.003,190,1.124,205,2.096,209,2.073,241,4.099,246,3.598,266,2.193,294,1.946,315,1.004,357,2.286,426,1.871,454,1.275,479,1.678,480,1.725,481,1.701,556,1.966,584,1.547,585,1.547,586,1.589,599,1.547,618,4.382,855,6.125,892,2.051,893,2.443,894,5.57,895,8.281,896,8.281,897,5.743,898,5.57,899,6.514,900,7.383,901,5.752,902,4.89,903,6.125,904,7.383,905,7.383,906,7.383,907,7.383,908,7.383,909,6.218,910,5.604,911,7.912,912,4.016,913,5.57,914,7.383,915,7.383,916,7.383,917,5.128,918,7.383,919,7.383,920,7.383,921,7.383,922,6.625,923,5.57,924,3.03,925,2.885,926,4.34,927,2.443,928,2.642,929,4.115,930,1.966,931,3.628,932,3.391,933,3.289,934,4.622,935,5.57,936,4.998,937,3.503,938,3.391,939,5.57]],["title/components/ArchiveFiltersComponent.html",[279,1,356,1.718]],["body/components/ArchiveFiltersComponent.html",[0,0.219,3,0.021,4,0.03,5,0.036,17,2.126,28,1.922,32,0.17,33,0.58,34,0.152,35,0.347,36,0.402,39,0.175,42,0.279,44,0.273,45,0.005,46,0.511,47,0.273,49,0.433,50,0.656,51,0.111,52,0.355,60,0.047,61,0.556,64,1.109,91,1.066,100,0.598,104,3.008,121,1.124,128,1.502,132,1.139,137,1.893,162,0.004,163,0.003,164,0.002,173,1.139,183,1.856,186,0.905,190,1.539,201,4.216,205,2.137,206,1.976,209,1.47,219,1.309,246,2.826,265,1.186,266,2.265,279,1.381,280,1.367,281,1.946,282,1.409,283,1.719,284,1.431,285,1.431,287,2.52,288,1.347,289,3.549,290,2.666,292,2.065,294,1.052,296,1.374,297,2.864,312,1.356,313,1.976,315,0.72,317,2.358,318,2.431,319,2.068,329,1.431,330,1.409,331,1.431,332,1.431,333,1.431,334,1.431,335,1.272,336,1.431,337,1.431,338,1.431,339,1.388,340,1.328,341,1.409,342,1.431,343,1.431,344,1.431,345,0.914,346,1.431,347,1.236,348,2.097,349,3.093,350,1.29,351,2.732,352,1.431,353,1.431,354,1.367,355,1.431,356,2.611,357,2.96,358,2.097,359,1.367,360,2.097,361,1.367,362,1.431,363,1.347,364,1.431,365,1.367,366,1.431,367,2.732,368,1.367,369,1.431,370,1.328,371,2.097,372,1.367,373,1.347,374,1.328,375,1.409,376,1.431,377,1.367,378,2.065,379,1.431,380,1.388,381,1.309,382,2.097,383,1.367,384,1.431,385,2.732,386,1.328,387,1.431,388,1.367,389,1.367,390,1.409,391,1.347,392,1.431,393,1.367,394,1.367,395,1.431,396,1.347,397,1.431,398,1.367,399,1.431,400,1.388,401,1.367,402,1.431,403,1.367,404,1.17,405,1.431,406,1.367,407,2.065,408,1.367,409,2.482,410,1.431,411,1.367,412,1.431,413,1.367,414,1.431,415,1.328,416,1.367,417,2.739,418,1.367,419,1.367,420,2.225,421,1.367,422,1.431,423,1.367,424,1.367,425,1.367,426,1.483,427,1.347,428,1.347,429,1.431,430,1.347,431,1.431,432,1.347,433,1.409,434,1.431,556,1.409,584,1.109,585,1.109,586,1.139,593,1.894,596,2.068,599,1.109,618,1.856,628,4.126,639,5.941,671,2.021,902,2.358,917,4.415,922,3.583,940,6.573,941,7.733,942,3.583,943,6.925,944,5.25,945,6.925,946,6.925,947,4.216,948,4.884,949,7.625,950,5.176,951,5.851,952,3.993,953,3.993,954,4.257,955,3.993,956,5.851,957,3.993,958,3.993,959,3.993,960,3.993,961,3.111,962,5.512,963,3.993,964,3.313,965,3.993,966,3.993,967,5.25,968,5.25,969,2.431,970,5.25,971,3.583,972,5.25,973,3.583,974,5.25,975,3.583,976,5.25,977,3.583,978,5.25,979,3.993,980,3.993,981,2.816,982,3.993,983,1.784,984,3.993,985,3.993,986,3.993,987,5.851,988,3.993,989,3.993,990,3.993,991,3.993,992,3.313,993,3.583,994,3.583,995,3.583,996,3.993,997,3.993,998,3.993,999,3.993,1000,3.993,1001,5.851,1002,3.993,1003,3.993,1004,3.993,1005,3.993,1006,3.993,1007,3.993,1008,3.993,1009,3.993,1010,3.993,1011,5.851,1012,3.583,1013,6.214,1014,5.25,1015,3.583,1016,3.993,1017,3.993,1018,3.111,1019,3.993]],["title/components/ArchiveListComponent.html",[279,1,359,1.718]],["body/components/ArchiveListComponent.html",[0,0.281,3,0.026,4,0.036,5,0.043,17,1.838,32,0.169,33,0.691,34,0.195,36,0.799,39,0.224,42,0.259,44,0.349,45,0.005,46,0.571,47,0.349,51,0.112,52,0.454,60,0.031,64,1.421,91,1.365,121,1.44,128,1.313,132,1.459,137,2.052,162,0.002,163,0.003,164,0.002,172,2.934,176,2.895,177,3.293,186,1.079,265,1.519,266,2.53,279,1.581,280,1.751,281,2.318,282,1.805,283,2.201,284,1.833,285,1.833,287,2.886,288,1.726,289,3.598,290,3.176,292,2.46,296,1.636,297,3.199,312,1.185,313,1.989,315,0.922,329,1.833,330,1.805,331,1.833,332,1.833,333,1.833,334,1.833,335,1.629,336,1.833,337,1.833,338,1.833,339,1.778,340,1.701,341,1.805,342,1.833,343,1.833,344,1.833,345,1.171,346,1.833,347,1.584,348,2.498,349,2.46,350,1.652,351,3.052,352,1.833,353,1.833,354,1.751,355,1.833,356,1.751,357,3.042,358,2.498,359,2.917,360,2.498,361,1.751,362,1.833,363,1.726,364,1.833,365,1.751,366,1.833,367,3.052,368,1.751,369,1.833,370,1.701,371,2.498,372,1.751,373,1.726,374,1.701,375,1.805,376,1.833,377,1.751,378,2.46,379,1.833,380,1.778,381,1.676,382,2.498,383,1.751,384,1.833,385,3.052,386,1.701,387,1.833,388,1.751,389,1.751,390,1.805,391,1.726,392,1.833,393,1.751,394,1.751,395,1.833,396,1.726,397,1.833,398,1.751,399,1.833,400,1.778,401,1.751,402,1.833,403,1.751,404,1.499,405,1.833,406,1.751,407,2.46,408,1.751,409,2.842,410,1.833,411,1.751,412,1.833,413,1.751,414,1.833,415,1.701,416,1.751,417,1.726,418,1.751,419,1.751,420,1.911,421,1.751,422,1.833,423,1.751,424,1.751,425,1.751,426,1.296,427,1.726,428,1.726,429,1.833,430,1.726,431,1.833,432,1.726,433,1.805,434,1.833,479,2.389,480,1.584,481,1.562,495,1.584,498,3.414,522,3.414,556,1.805,584,1.421,585,1.421,586,1.459,599,1.421,631,4.244,632,4.116,633,3.985,724,3.892,927,2.242,930,1.805,940,6.285,1020,7.394,1021,4.589,1022,7.116,1023,6.255,1024,6.255,1025,5.114,1026,5.114,1027,2.855,1028,4.589,1029,4.589,1030,3.985,1031,5.431,1032,3.985,1033,3.985,1034,4.243]],["title/components/ArchiveListPageComponent.html",[279,1,361,1.718]],["body/components/ArchiveListPageComponent.html",[0,0.259,3,0.024,4,0.034,5,0.04,17,2.134,32,0.17,33,0.653,34,0.18,35,0.391,36,0.475,39,0.207,42,0.273,44,0.45,45,0.005,46,0.58,47,0.45,51,0.112,52,0.419,60,0.029,64,1.309,91,1.258,121,1.327,127,2.643,128,1.21,132,1.345,137,2.001,162,0.002,163,0.003,164,0.002,177,1.957,186,1.02,265,1.4,266,3.075,279,1.514,280,1.614,281,2.191,282,1.663,283,2.029,284,1.689,285,1.689,287,2.765,288,1.59,289,3.583,290,3.002,292,2.325,296,1.547,297,3.089,312,1.527,313,2.346,315,0.85,329,1.689,330,1.663,331,1.689,332,1.689,333,1.689,334,1.689,335,1.501,336,1.689,337,1.689,338,1.689,339,1.638,340,1.567,341,1.663,342,1.689,343,1.689,344,1.689,345,1.079,346,1.689,347,1.46,348,2.361,349,2.325,350,1.523,351,2.948,352,1.689,353,1.689,354,1.614,355,1.689,356,1.614,357,2.993,358,2.361,359,1.614,360,2.361,361,2.817,362,1.689,363,1.59,364,1.689,365,1.614,366,1.689,367,2.948,368,1.614,369,1.689,370,1.567,371,2.361,372,1.614,373,1.59,374,1.567,375,1.663,376,1.689,377,1.614,378,2.325,379,1.689,380,1.638,381,1.545,382,2.361,383,1.614,384,1.689,385,2.948,386,1.567,387,1.689,388,1.614,389,1.614,390,1.663,391,1.59,392,1.689,393,1.614,394,1.614,395,1.689,396,1.59,397,1.689,398,1.614,399,1.689,400,1.638,401,1.614,402,1.689,403,1.614,404,1.381,405,1.689,406,1.614,407,2.325,408,1.614,409,2.722,410,1.689,411,1.614,412,1.689,413,1.614,414,1.689,415,1.567,416,1.614,417,1.59,418,1.614,419,1.614,420,1.806,421,1.614,422,1.689,423,1.614,424,1.614,425,1.614,426,1.195,427,1.59,428,1.59,429,1.689,430,1.59,431,1.689,432,1.59,433,1.663,434,1.689,495,1.46,556,1.663,584,1.309,585,1.309,586,1.345,593,2.236,599,1.309,618,2.19,760,2.147,927,2.067,930,1.663,933,2.783,934,3.91,940,6.492,947,4.625,948,6.104,992,3.91,993,4.229,994,4.229,995,4.229,1020,7.637,1027,2.631,1029,4.229,1035,8.26,1036,4.713,1037,7.596,1038,6.589,1039,7.596,1040,6.589,1041,6.589,1042,4.713,1043,6.589,1044,4.713,1045,6.589,1046,4.713,1047,4.713,1048,4.713,1049,3.482,1050,4.713,1051,3.91,1052,4.713,1053,3.324,1054,4.713,1055,4.713,1056,6.324,1057,6.589,1058,6.589,1059,6.589,1060,6.589,1061,6.589]],["title/classes/ArchiveQuerySuccess.html",[0,0.276,932,3.054]],["body/classes/ArchiveQuerySuccess.html",[0,0.525,2,0.701,3,0.03,4,0.03,5,0.036,8,1.039,10,2.034,32,0.195,33,0.965,34,0.223,35,0.452,36,0.767,37,1.688,38,1.234,39,0.256,40,1.519,42,0.258,44,0.399,45,0.005,46,0.391,47,0.399,49,0.634,50,0.553,51,0.101,52,0.519,60,0.06,61,0.814,98,1.722,100,0.597,112,1.338,113,1.338,114,1.25,127,3.603,146,1.165,162,0.004,163,0.004,164,0.003,186,1.179,190,1.538,246,2.384,273,1.942,345,1.337,357,2.958,426,1.481,451,3.945,454,1.94,455,1.425,456,1.481,457,1.666,458,1.666,475,2.234,479,1.759,480,1.809,481,1.784,495,1.809,497,2.229,526,2.343,572,3.351,902,5.005,917,3.177,931,3.804,932,5.468,933,5.005,937,3.674,938,5.16,1062,3.804,1063,7.617,1064,5.841,1065,5.372,1066,5.331,1067,3.804,1068,5.16,1069,4.119,1070,4.119,1071,4.119,1072,3.951,1073,4.119,1074,4.119,1075,3.951]],["title/interfaces/ArchiveState.html",[777,1.884,782,4.162]],["body/interfaces/ArchiveState.html",[3,0.038,4,0.038,5,0.044,28,1.831,32,0.184,34,0.277,35,0.519,45,0.005,51,0.112,60,0.053,100,0.958,127,3.898,162,0.003,163,0.004,164,0.003,173,2.672,190,1.962,205,1.729,210,2.647,219,2.384,479,2.19,480,2.252,481,2.221,526,3.987,624,6.252,777,2.731,778,3.858,782,7.772,880,4.736,917,5.407,937,4.574,1072,6.724,1076,7.272,1077,7.272,1078,7.272,1079,7.272,1080,7.272,1081,2.869]],["title/components/ArchivesComponent.html",[279,1,363,1.693]],["body/components/ArchivesComponent.html",[0,0.293,3,0.027,4,0.037,5,0.044,17,2.095,32,0.171,33,0.71,34,0.203,35,0.425,36,0.536,39,0.233,42,0.264,44,0.364,45,0.005,46,0.58,47,0.364,51,0.113,52,0.473,60,0.033,64,1.479,91,1.421,121,1.499,128,1.367,132,1.519,137,2.077,162,0.002,163,0.003,164,0.002,186,1.108,190,1.075,265,1.582,266,2.128,279,1.614,280,1.823,281,2.382,282,1.879,283,2.292,284,1.908,285,1.908,287,2.946,288,1.796,289,3.604,290,3.263,292,2.528,296,1.682,297,3.252,312,1.234,313,1.519,315,0.96,329,1.908,330,1.879,331,1.908,332,1.908,333,1.908,334,1.908,335,1.696,336,1.908,337,1.908,338,1.908,339,1.851,340,1.77,341,1.879,342,1.908,343,1.908,344,1.908,345,1.219,346,1.908,347,1.649,348,2.567,349,2.528,350,1.72,351,3.103,352,1.908,353,1.908,354,1.823,355,1.908,356,1.823,357,2.507,358,2.567,359,1.823,360,2.567,361,1.823,362,1.908,363,2.922,364,1.908,365,1.823,366,1.908,367,3.103,368,1.823,369,1.908,370,1.77,371,2.567,372,1.823,373,1.796,374,1.77,375,1.879,376,1.908,377,1.823,378,2.528,379,1.908,380,1.851,381,1.745,382,2.567,383,1.823,384,1.908,385,3.103,386,1.77,387,1.908,388,1.823,389,1.823,390,1.879,391,1.796,392,1.908,393,1.823,394,1.823,395,1.908,396,1.796,397,1.908,398,1.823,399,1.908,400,1.851,401,1.823,402,1.908,403,1.823,404,1.56,405,1.908,406,1.823,407,2.528,408,1.823,409,2.901,410,1.908,411,1.823,412,1.908,413,1.823,414,1.908,415,1.77,416,1.823,417,1.796,418,1.823,419,1.823,420,1.963,421,1.823,422,1.908,423,1.823,424,1.823,425,1.823,426,1.349,427,1.796,428,1.796,429,1.908,430,1.796,431,1.908,432,1.796,433,1.879,434,1.908,479,1.604,480,1.649,481,1.626,495,1.649,498,3.485,522,3.485,556,1.879,584,1.479,585,1.479,586,1.519,599,1.479,726,5.943,927,2.334,930,1.879,936,4.777,1027,2.972,1028,4.777,1051,4.417,1053,3.754,1082,5.324,1083,8.095,1084,7.163,1085,7.163,1086,5.324,1087,5.324,1088,5.324,1089,4.417,1090,5.324,1091,4.777,1092,5.324]],["title/modules/ArchivesModule.html",[640,2.2,1093,3.908]],["body/modules/ArchivesModule.html",[0,0.338,3,0.032,4,0.041,5,0.048,36,0.62,45,0.005,51,0.123,60,0.038,76,2.649,91,1.643,128,1.58,162,0.003,163,0.004,164,0.003,266,2.341,315,1.11,317,3.635,318,3.747,319,4.081,329,2.206,330,2.172,331,2.206,332,2.206,333,2.206,334,2.206,335,1.96,336,2.206,337,2.206,338,2.206,339,2.14,340,2.047,341,2.172,342,2.206,343,2.206,344,2.206,345,1.409,346,2.206,347,1.906,356,3.318,359,3.318,361,3.318,363,3.269,383,3.318,406,3.318,640,2.699,642,3.115,643,3.532,644,5.291,645,3.635,646,3.265,655,4.653,656,3.747,658,4.286,660,4.286,665,4.955,668,3.635,669,6.139,670,6.139,671,3.115,673,6.139,675,4.164,680,5.821,681,3.188,682,3.188,726,5.107,941,5.107,1020,6.537,1035,5.523,1093,8.208,1094,5.523,1095,5.523,1096,5.523,1097,7.157,1098,6.832,1099,6.155,1100,9.47,1101,6.155,1102,5.523,1103,5.523,1104,6.155,1105,5.523,1106,5.523,1107,7.07,1108,5.523,1109,5.523,1110,5.523]],["title/modules/ArchivesRoutingModule.html",[640,2.2,1097,3.706]],["body/modules/ArchivesRoutingModule.html",[0,0.375,3,0.035,4,0.043,5,0.051,36,0.687,45,0.005,51,0.119,60,0.042,91,1.82,128,1.751,162,0.003,163,0.004,164,0.003,205,1.621,279,1.895,315,1.229,329,2.443,330,2.406,331,2.443,332,2.443,333,2.443,334,2.443,335,2.172,336,2.443,337,2.443,338,2.443,339,2.37,340,2.267,341,2.406,342,2.443,343,2.443,344,2.443,345,1.561,346,2.443,363,2.835,370,3.028,386,2.794,531,3.207,642,3.451,646,3.617,658,3.709,660,4.57,717,5.038,720,6.208,721,5.931,722,3.912,727,7.345,730,5.313,731,6.546,737,5.657,1097,6.208,1102,6.118,1111,6.819,1112,6.118,1113,6.118,1114,5.313,1115,5.657,1116,6.118,1117,8.172,1118,6.118,1119,6.118,1120,6.118,1121,6.118,1122,5.313]],["title/classes/AuthObject.html",[0,0.276,1123,3.538]],["body/classes/AuthObject.html",[0,0.449,2,0.277,3,0.012,4,0.012,5,0.014,7,0.895,8,0.243,9,2.262,12,2.885,13,1.582,17,1.728,23,1.986,24,0.778,27,0.975,28,1.88,32,0.146,33,0.378,34,0.088,35,0.226,36,0.986,37,0.645,39,0.248,41,3.743,42,0.19,44,0.26,45,0.005,46,0.326,47,0.332,49,0.25,51,0.107,52,0.205,53,3.07,54,1.051,55,1.408,58,1.735,60,0.047,61,0.321,63,1.072,67,1.735,69,1.231,74,1.011,82,3.591,83,2.626,85,1.072,87,0.91,90,3.453,91,2.063,94,2.357,95,1.77,99,3.591,100,1.013,101,4.168,102,4.23,103,3.665,104,2.229,117,1.141,119,2.797,120,3.29,125,2.575,128,1.25,137,1.822,146,0.669,158,1.807,162,0.001,163,0.002,164,0.001,173,2.126,185,1.194,190,0.465,205,2.251,209,2.119,210,2.057,211,1.305,212,1.771,219,1.595,228,0.975,229,1.254,246,1.554,273,2.715,294,2.429,313,2.53,315,0.416,340,1.879,345,1.293,374,0.767,420,1.715,426,0.584,444,0.839,455,0.929,461,0.649,492,0.852,495,0.714,511,0.802,552,3.985,559,3.493,564,1.094,580,1.626,584,0.64,585,0.64,586,0.658,593,1.094,596,1.194,598,4.621,599,1.352,610,2.686,618,1.77,631,2.319,664,1.223,688,1.56,706,2.481,707,3.17,735,2.134,738,3.681,760,1.735,762,3.292,763,3.292,773,3.337,777,2.123,780,2.021,802,1.194,803,1.223,892,1.058,927,1.67,928,1.094,930,0.814,983,2.175,1027,1.287,1056,2.686,1081,0.91,1123,4.412,1124,1.626,1125,5.267,1126,4.622,1127,4.622,1128,2.306,1129,2.306,1130,2.306,1131,2.306,1132,2.306,1133,2.306,1134,3.242,1135,1.626,1136,1.56,1137,1.502,1138,3.554,1139,1.56,1140,1.704,1141,5.882,1142,1.626,1143,1.194,1144,1.287,1145,4.175,1146,2.814,1147,2.814,1148,2.814,1149,3.985,1150,2.814,1151,1.704,1152,1.704,1153,1.704,1154,1.704,1155,1.362,1156,1.626,1157,2.814,1158,1.626,1159,1.704,1160,1.704,1161,3.596,1162,1.704,1163,1.704,1164,1.704,1165,1.704,1166,1.704,1167,1.704,1168,1.704,1169,1.704,1170,1.704,1171,1.704,1172,5.45,1173,1.704,1174,5.027,1175,1.704,1176,1.626,1177,1.704,1178,1.704,1179,1.704,1180,1.704,1181,2.814,1182,1.704,1183,1.704,1184,4.622,1185,1.626,1186,1.704,1187,1.704,1188,1.704,1189,1.704,1190,1.704,1191,1.704,1192,1.704,1193,1.704,1194,3.17,1195,1.323,1196,1.704,1197,1.362,1198,1.704,1199,5.267,1200,5.507,1201,2.814,1202,4.622,1203,1.704,1204,3.596,1205,1.704,1206,2.814,1207,1.704,1208,4.175,1209,2.814,1210,1.704,1211,1.704,1212,1.704,1213,1.704,1214,1.704,1215,1.704,1216,2.814,1217,1.704,1218,2.814,1219,2.814,1220,1.704,1221,1.704,1222,2.686,1223,1.704,1224,2.814,1225,1.704,1226,1.704,1227,1.626,1228,2.481,1229,1.704,1230,1.56,1231,1.704,1232,1.704,1233,1.704,1234,2.814,1235,1.704,1236,3.596,1237,1.704,1238,5.256,1239,3.596,1240,3.596,1241,3.596,1242,3.596,1243,3.596,1244,3.432,1245,1.704,1246,1.704,1247,1.704,1248,1.704,1249,2.814,1250,2.686,1251,2.814,1252,1.626,1253,2.647,1254,2.814,1255,2.814,1256,2.072,1257,1.704,1258,3.596,1259,2.792,1260,2.814,1261,1.704,1262,2.814,1263,1.704,1264,2.686,1265,1.704,1266,2.814,1267,1.704,1268,1.704,1269,2.814,1270,2.814,1271,1.704,1272,1.704,1273,1.704,1274,1.704,1275,1.704,1276,1.704,1277,1.704,1278,2.814,1279,1.704,1280,1.704,1281,1.704,1282,1.704,1283,1.704,1284,1.704,1285,1.704,1286,0.975,1287,1.704,1288,1.704,1289,1.704,1290,1.704,1291,1.704,1292,1.704,1293,1.704,1294,4.622,1295,4.175,1296,1.704,1297,1.704,1298,3.985,1299,1.704,1300,1.626,1301,1.704,1302,1.704,1303,2.874,1304,1.704,1305,2.814,1306,1.704,1307,2.814,1308,1.704,1309,1.56,1310,1.704,1311,1.704,1312,1.704,1313,1.704,1314,1.704,1315,1.704,1316,1.56,1317,1.704,1318,2.396,1319,1.704,1320,1.704,1321,1.704,1322,1.704,1323,1.704,1324,1.704,1325,1.704,1326,1.704,1327,1.704,1328,1.704,1329,1.704,1330,1.704,1331,1.704,1332,1.704,1333,2.814,1334,1.704,1335,1.704,1336,3.596,1337,2.814,1338,1.704,1339,1.704,1340,2.814,1341,2.814,1342,1.704,1343,1.704,1344,1.704,1345,1.704,1346,1.704,1347,1.704,1348,1.704,1349,3.596,1350,2.814,1351,1.626,1352,1.704,1353,1.704,1354,1.704,1355,1.56,1356,1.704,1357,1.704,1358,1.704,1359,1.704,1360,1.704,1361,1.704,1362,2.686,1363,1.704,1364,1.704,1365,1.704,1366,2.814,1367,2.814,1368,1.704,1369,1.704,1370,1.704,1371,1.704,1372,1.704,1373,1.704,1374,1.704,1375,1.704,1376,1.704,1377,1.704,1378,1.704,1379,1.45,1380,1.704,1381,1.704,1382,1.704,1383,2.814,1384,1.704,1385,1.704,1386,1.704,1387,1.704,1388,1.704,1389,1.704,1390,1.704,1391,1.704,1392,1.704,1393,1.704,1394,1.626,1395,1.704,1396,1.704,1397,1.704,1398,1.704,1399,1.704,1400,1.704,1401,1.704,1402,1.704,1403,1.704,1404,1.704,1405,1.704,1406,1.704,1407,1.704,1408,1.254,1409,1.928,1410,3.596,1411,2.186,1412,1.704,1413,1.704,1414,1.704,1415,1.704,1416,1.223,1417,1.704,1418,1.704,1419,1.704,1420,4.175,1421,1.704,1422,3.985,1423,1.704,1424,1.704,1425,1.704,1426,3.292,1427,1.626,1428,1.704,1429,1.626,1430,1.704,1431,2.814,1432,2.686,1433,1.735,1434,1.704,1435,1.626,1436,1.704,1437,1.704,1438,2.686,1439,2.249,1440,1.704,1441,1.704,1442,1.626,1443,2.814,1444,1.704,1445,2.814,1446,1.704,1447,1.502,1448,1.704,1449,1.704,1450,1.704,1451,1.704,1452,1.704,1453,1.704,1454,1.704,1455,1.704,1456,2.814,1457,1.704,1458,1.704,1459,1.704,1460,1.704,1461,1.704]],["title/interfaces/AuthState.html",[777,1.884,783,4.162]],["body/interfaces/AuthState.html",[3,0.035,4,0.035,5,0.042,28,1.429,32,0.194,34,0.26,35,0.499,45,0.005,51,0.1,53,4.448,54,3.107,55,3.791,56,3.107,60,0.051,91,2.606,99,4.537,100,1.075,101,4.537,102,4.363,103,4.631,104,3.592,162,0.003,163,0.004,164,0.003,173,2.598,205,1.621,210,3.666,219,2.235,777,2.561,778,3.617,783,7.556,1462,6.819,1463,7.606,1464,9.762,1465,7.606,1466,6.819,1467,6.819]],["title/injectables/AuthenticationEffects.html",[15,2.598,892,1.393]],["body/injectables/AuthenticationEffects.html",[0,0.135,1,3.136,3,0.013,4,0.013,5,0.015,7,1.557,8,1.002,11,1.508,12,3.063,13,3.175,14,1.866,15,2.079,17,2.29,19,3.628,20,3.195,22,2.183,23,2.397,28,2.07,32,0.177,34,0.094,35,0.238,37,1.294,39,0.108,42,0.254,44,0.5,45,0.005,46,0.512,47,0.347,49,0.829,50,0.694,51,0.112,52,0.218,55,3.007,56,1.12,60,0.015,62,1.273,65,1.243,66,2.575,67,2.676,69,2.794,71,2.13,72,2.575,75,2.907,77,4.216,78,2.575,80,2.575,82,2.73,83,2.365,88,1.795,91,1.855,92,2.183,100,0.52,102,3.635,104,1.583,109,2.182,112,0.552,113,0.552,114,0.516,116,2.183,120,3.286,123,2.528,125,3.872,126,2.079,127,2.787,129,2.183,131,2.13,135,2.183,137,1.765,141,3.195,145,2.183,146,0.7,148,3.195,150,3.195,152,3.009,153,2.183,161,4.588,162,0.002,163,0.002,164,0.001,171,0.909,183,2.73,189,1.142,190,1.746,192,1.142,205,1.934,209,2.129,212,1.852,230,3.37,238,0.992,241,4.336,246,1.638,258,2.241,294,1.931,296,0.942,312,1.179,313,0.701,315,0.443,443,2.768,444,2.138,456,0.623,487,2.274,531,1.532,556,0.867,559,4.268,564,3.295,567,1.915,569,3.128,584,1.115,585,0.683,586,0.701,590,1.915,592,2.039,593,1.166,598,3.521,599,0.683,629,3.128,675,1.663,719,5.174,722,1.41,724,2.241,745,4.221,752,4.873,762,4.699,773,2.371,802,1.273,803,1.304,892,1.115,893,1.078,897,4.979,899,4.34,901,3.128,903,3.33,912,3.986,924,1.337,925,1.273,926,1.915,927,2.231,928,3.071,929,1.816,930,0.867,947,2.444,961,3.128,1027,4.092,1049,1.816,1053,2.831,1081,0.97,1137,1.601,1155,1.451,1172,2.831,1194,2.614,1227,2.831,1228,2.614,1230,4.699,1252,2.831,1286,3.231,1298,2.831,1362,1.733,1408,1.337,1409,2.575,1411,2.303,1427,4.142,1468,2.458,1469,5.088,1470,5.088,1471,4.014,1472,5.874,1473,4.577,1474,2.458,1475,4.014,1476,4.014,1477,4.014,1478,4.014,1479,2.715,1480,3.973,1481,4.014,1482,4.014,1483,5.088,1484,2.458,1485,4.014,1486,4.014,1487,2.458,1488,4.014,1489,2.458,1490,4.014,1491,4.014,1492,2.458,1493,6.343,1494,6.947,1495,4.014,1496,5.412,1497,4.014,1498,4.014,1499,4.014,1500,4.386,1501,4.014,1502,4.014,1503,4.014,1504,4.014,1505,4.014,1506,4.014,1507,6.947,1508,5.874,1509,5.874,1510,5.874,1511,5.874,1512,6.947,1513,5.874,1514,6.081,1515,4.014,1516,4.014,1517,4.014,1518,4.014,1519,4.014,1520,4.014,1521,4.014,1522,4.379,1523,4.014,1524,4.014,1525,4.014,1526,3.602,1527,4.014,1528,4.014,1529,4.014,1530,4.014,1531,2.458,1532,4.014,1533,3.33,1534,2.966,1535,4.014,1536,4.014,1537,3.128,1538,2.525,1539,4.014,1540,4.014,1541,3.2,1542,6.947,1543,4.014,1544,2.458,1545,4.014,1546,4.014,1547,4.014,1548,5.088,1549,4.014,1550,4.014,1551,4.014,1552,4.014,1553,4.014,1554,4.014,1555,4.014,1556,2.458,1557,4.014,1558,5.271,1559,2.458,1560,2.614,1561,4.014,1562,4.014,1563,4.014,1564,6.474,1565,2.458,1566,4.014,1567,4.014,1568,4.014,1569,5.088,1570,4.014,1571,4.014,1572,2.525,1573,4.014,1574,4.014,1575,2.458,1576,4.014,1577,2.444,1578,1.663,1579,2.458,1580,1.816,1581,1.663,1582,1.546,1583,1.816,1584,2.458,1585,2.458,1586,6.474,1587,2.458,1588,2.458,1589,2.458,1590,2.458,1591,2.458,1592,1.915,1593,2.458,1594,2.458,1595,2.458,1596,2.458,1597,2.458,1598,2.458,1599,4.014,1600,2.458,1601,2.458,1602,4.014,1603,2.458,1604,2.458,1605,2.458,1606,2.458,1607,2.458,1608,2.458,1609,2.458]],["title/interfaces/AuthenticationModeHandler.html",[777,1.884,1174,3.538]],["body/interfaces/AuthenticationModeHandler.html",[0,0.439,3,0.012,4,0.012,5,0.014,7,0.901,8,0.245,9,1.781,12,2.89,13,1.591,17,1.733,23,1.996,24,1.293,27,0.982,28,1.883,32,0.128,33,0.38,34,0.089,36,0.954,37,0.649,39,0.214,41,3.753,42,0.173,44,0.334,45,0.005,46,0.38,47,0.262,49,0.252,51,0.107,52,0.206,53,2.229,54,1.058,55,1.417,58,1.746,60,0.047,61,0.324,63,1.079,67,1.746,69,1.238,74,1.018,82,3.601,83,2.638,85,1.079,87,0.916,90,3.464,91,2.069,94,1.856,95,1.781,99,2.919,100,1.006,101,3.956,102,4.235,103,3.675,104,2.239,117,1.15,119,2.809,120,3.228,125,2.229,128,1.256,137,1.826,146,0.673,158,1.818,162,0.001,163,0.002,164,0.001,173,2.21,190,0.469,205,2.253,209,2.121,210,2.066,211,1.312,212,1.78,219,1.603,228,0.982,229,1.263,246,1.564,273,2.486,294,2.432,296,0.9,312,1.316,313,2.633,315,0.419,340,1.888,345,1.299,374,0.772,420,1.722,426,0.589,444,0.845,455,1.193,461,0.654,492,0.859,495,0.719,511,0.807,552,4.429,559,3.507,564,1.102,580,1.638,584,0.645,585,0.645,586,0.663,593,1.102,596,1.203,598,4.63,599,1.359,610,2.702,618,1.781,631,2.333,664,1.232,688,1.571,706,2.496,707,3.186,735,2.145,738,3.697,760,1.746,762,3.309,763,3.309,773,3.352,777,2.359,778,1.232,780,2.033,802,1.203,803,1.232,892,1.064,927,1.68,928,1.102,930,0.82,983,2.186,1027,1.297,1056,2.702,1081,0.916,1123,4.003,1124,1.638,1125,4.995,1126,2.831,1127,1.716,1134,3.257,1135,1.638,1136,1.571,1137,1.513,1138,3.57,1139,1.571,1140,1.716,1141,5.894,1142,1.638,1143,1.203,1144,1.297,1145,4.194,1146,2.831,1147,2.831,1148,2.831,1149,4.003,1150,2.831,1151,1.716,1152,1.716,1153,1.716,1154,1.716,1155,1.372,1156,1.638,1157,2.831,1158,1.638,1159,1.716,1160,1.716,1161,3.614,1162,1.716,1163,1.716,1164,1.716,1165,1.716,1166,1.716,1167,1.716,1168,1.716,1169,1.716,1170,1.716,1171,1.716,1172,5.629,1173,1.716,1174,5.272,1175,1.716,1176,1.638,1177,1.716,1178,1.716,1179,1.716,1180,1.716,1181,2.831,1182,1.716,1183,1.716,1184,4.64,1185,1.638,1186,1.716,1187,1.716,1188,1.716,1189,1.716,1190,1.716,1191,1.716,1192,1.716,1193,1.716,1194,3.186,1195,1.333,1196,1.716,1197,1.372,1198,1.716,1199,5.284,1200,5.523,1201,2.831,1202,4.64,1203,1.716,1204,3.614,1205,1.716,1206,2.831,1207,1.716,1208,4.194,1209,2.831,1210,1.716,1211,1.716,1212,1.716,1213,1.716,1214,1.716,1215,1.716,1216,2.831,1217,1.716,1218,2.831,1219,2.831,1220,1.716,1221,1.716,1222,2.702,1223,1.716,1224,2.831,1225,1.716,1226,1.716,1227,1.638,1228,2.496,1229,1.716,1230,1.571,1231,1.716,1232,1.716,1233,1.716,1234,2.831,1235,1.716,1236,3.614,1237,1.716,1238,5.272,1239,3.614,1240,3.614,1241,3.614,1242,3.614,1243,3.614,1244,3.45,1245,1.716,1246,1.716,1247,1.716,1248,1.716,1249,2.831,1250,2.702,1251,2.831,1252,1.638,1253,2.661,1254,2.831,1255,2.831,1256,2.084,1257,1.716,1258,3.614,1259,2.807,1260,2.831,1261,1.716,1262,2.831,1263,1.716,1264,2.702,1265,1.716,1266,2.831,1267,1.716,1268,1.716,1269,2.831,1270,2.831,1271,1.716,1272,1.716,1273,1.716,1274,1.716,1275,1.716,1276,1.716,1277,1.716,1278,2.831,1279,1.716,1280,1.716,1281,1.716,1282,1.716,1283,1.716,1284,1.716,1285,1.716,1286,0.982,1287,1.716,1288,1.716,1289,1.716,1290,1.716,1291,1.716,1292,1.716,1293,1.716,1294,4.64,1295,5.284,1296,1.716,1297,1.716,1298,4.003,1299,1.716,1300,1.638,1301,1.716,1302,1.716,1303,2.889,1304,1.716,1305,2.831,1306,1.716,1307,2.831,1308,1.716,1309,1.571,1310,1.716,1311,1.716,1312,1.716,1313,1.716,1314,1.716,1315,1.716,1316,1.571,1317,1.716,1318,2.41,1319,1.716,1320,1.716,1321,1.716,1322,1.716,1323,1.716,1324,1.716,1325,1.716,1326,1.716,1327,1.716,1328,1.716,1329,1.716,1330,1.716,1331,1.716,1332,1.716,1333,2.831,1334,1.716,1335,1.716,1336,3.614,1337,2.831,1338,1.716,1339,1.716,1340,2.831,1341,2.831,1342,1.716,1343,1.716,1344,1.716,1345,1.716,1346,1.716,1347,1.716,1348,1.716,1349,3.614,1350,2.831,1351,1.638,1352,1.716,1353,1.716,1354,1.716,1355,1.571,1356,1.716,1357,1.716,1358,1.716,1359,1.716,1360,1.716,1361,1.716,1362,2.702,1363,1.716,1364,1.716,1365,1.716,1366,2.831,1367,2.831,1368,1.716,1369,1.716,1370,1.716,1371,1.716,1372,1.716,1373,1.716,1374,1.716,1375,1.716,1376,1.716,1377,1.716,1378,1.716,1379,1.461,1380,1.716,1381,1.716,1382,1.716,1383,2.831,1384,1.716,1385,1.716,1386,1.716,1387,1.716,1388,1.716,1389,1.716,1390,1.716,1391,1.716,1392,1.716,1393,1.716,1394,1.638,1395,1.716,1396,1.716,1397,1.716,1398,1.716,1399,1.716,1400,1.716,1401,1.716,1402,1.716,1403,1.716,1404,1.716,1405,1.716,1406,1.716,1407,1.716,1408,1.263,1409,1.939,1410,3.614,1411,2.199,1412,1.716,1413,1.716,1414,1.716,1415,1.716,1416,1.232,1417,1.716,1418,3.614,1419,1.716,1420,4.64,1421,1.716,1422,5.043,1423,1.716,1424,1.716,1425,1.716,1426,3.309,1427,1.638,1428,1.716,1429,1.638,1430,1.716,1431,2.831,1432,2.702,1433,1.746,1434,1.716,1435,1.638,1436,1.716,1437,2.831,1438,2.702,1439,2.263,1440,1.716,1441,1.716,1442,1.638,1443,2.831,1444,1.716,1445,2.831,1446,1.716,1447,1.513,1448,1.716,1449,1.716,1450,1.716,1451,1.716,1452,1.716,1453,1.716,1454,1.716,1455,1.716,1456,2.831,1457,1.716,1458,1.716,1459,1.716,1460,1.716,1461,1.716,1610,3.179,1611,2.323,1612,2.323,1613,2.323,1614,2.323,1615,1.927,1616,2.323]],["title/components/BaseSettingComponent.html",[279,1,365,1.718]],["body/components/BaseSettingComponent.html",[0,0.224,3,0.021,4,0.021,5,0.025,28,1.245,32,0.18,33,0.589,34,0.156,35,0.353,36,0.706,39,0.179,42,0.303,44,0.559,45,0.005,46,0.606,47,0.559,49,0.645,50,0.809,51,0.113,52,0.362,60,0.025,64,1.133,100,0.787,114,0.524,121,1.148,128,1.977,132,1.163,137,1.907,143,2.218,162,0.002,163,0.003,164,0.002,173,2,176,2.467,177,3.198,186,0.919,190,0.823,205,0.969,209,1.488,210,1.484,228,1.724,236,1.934,265,1.211,266,1.765,279,1.535,280,1.396,281,1.976,282,1.439,284,1.461,285,1.461,287,2.551,288,1.376,289,3.554,292,2.097,294,2.429,296,1.395,297,2.893,312,2.096,313,2.335,315,0.735,335,2.233,347,1.263,348,2.129,349,2.097,350,1.317,351,2.76,352,1.461,353,1.461,354,1.396,355,1.461,356,1.396,357,2.171,358,2.129,359,1.396,360,2.129,361,1.396,362,1.461,363,1.376,364,1.461,365,2.638,366,3.161,367,2.76,368,1.396,369,1.461,370,1.356,371,2.129,372,1.396,373,1.376,374,1.356,375,1.439,376,1.461,377,1.396,378,2.097,379,1.461,380,1.417,381,1.336,382,2.129,383,1.396,384,1.461,385,2.76,386,1.356,387,1.461,388,1.396,389,1.396,390,1.439,391,1.376,392,1.461,393,1.396,394,1.396,395,1.461,396,1.376,397,1.461,398,1.396,399,1.461,400,1.417,401,1.396,402,1.461,403,1.396,404,1.195,405,1.461,406,1.396,407,2.097,408,1.396,409,2.512,410,1.461,411,1.396,412,1.461,413,1.396,414,1.461,415,1.356,416,1.396,417,1.376,418,1.396,419,1.396,420,1.629,421,1.396,422,1.461,423,1.396,424,1.396,425,1.396,426,1.506,427,1.376,428,1.376,429,1.461,430,1.376,431,1.461,432,1.376,433,1.439,434,1.461,556,1.439,584,1.133,585,1.133,586,1.163,593,1.934,596,2.112,618,1.895,671,2.064,735,2.605,930,1.439,947,2.482,954,4.3,1143,2.112,1155,2.408,1286,2.511,1303,3.509,1379,2.565,1416,3.152,1617,10.008,1618,7.394,1619,3.177,1620,4.139,1621,6.221,1622,4.629,1623,4.943,1624,4.267,1625,6.853,1626,4.943,1627,4.943,1628,4.19,1629,4.548,1630,5.431,1631,4.19,1632,4.943,1633,4.943,1634,4.943,1635,5.941,1636,4.078,1637,3.659,1638,3.659,1639,2.876,1640,4.078,1641,2.876,1642,4.078,1643,4.078,1644,4.19,1645,5.149,1646,4.078,1647,2.876,1648,4.078,1649,4.078,1650,4.078,1651,2.876,1652,4.078,1653,4.078,1654,4.078,1655,4.078,1656,3.659,1657,2.34,1658,3.383,1659,3.659,1660,3.659,1661,3.177,1662,4.629,1663,3.013,1664,2.876,1665,3.659,1666,2.876,1667,4.078,1668,4.078,1669,4.078,1670,3.659,1671,2.876,1672,4.078,1673,5.941,1674,4.078,1675,5.331,1676,4.078,1677,4.078,1678,4.078,1679,4.078,1680,4.629,1681,4.078,1682,3.177,1683,4.078,1684,3.177,1685,4.078,1686,4.078,1687,4.078,1688,4.078,1689,4.078,1690,4.078,1691,4.078,1692,3.177,1693,3.177,1694,4.078,1695,4.078,1696,4.078,1697,4.078,1698,4.078,1699,4.078,1700,4.078,1701,4.078,1702,4.078,1703,3.659,1704,4.078,1705,4.629]],["title/directives/CalcHeightDirective.html",[350,1.621,428,1.693]],["body/directives/CalcHeightDirective.html",[0,0.309,3,0.029,4,0.029,5,0.034,28,1.18,32,0.179,34,0.215,35,0.441,39,0.247,42,0.294,44,0.508,45,0.005,46,0.498,47,0.508,50,0.533,51,0.099,60,0.034,100,1.013,114,0.723,162,0.003,163,0.003,164,0.003,176,3.087,177,3.677,205,1.979,209,1.767,287,2.049,288,1.899,289,2.509,294,2.492,296,1.745,312,1.305,313,1.606,315,1.015,335,2.82,345,1.288,349,2.624,350,2.689,427,1.899,428,2.988,508,3.143,518,2.22,584,1.564,599,1.564,631,3.427,632,5.695,746,4.67,752,4.67,930,1.987,1031,4.386,1081,2.22,1537,4.386,1706,9.789,1707,5.629,1708,8.324,1709,7.434,1710,9.643,1711,9.643,1712,9.205,1713,5.243,1714,6.486,1715,5.629,1716,7.945,1717,7.434,1718,7.434,1719,5.629,1720,5.629,1721,5.629,1722,5.629,1723,7.434,1724,5.629,1725,4.386,1726,5.051,1727,5.629,1728,5.629,1729,5.629,1730,5.629,1731,5.629,1732,5.629,1733,5.629,1734,5.051,1735,5.051,1736,5.629,1737,7.469,1738,7.434,1739,5.629,1740,5.051,1741,5.629,1742,5.629,1743,5.629,1744,5.051,1745,7.434,1746,5.629,1747,9.205,1748,5.629,1749,5.629,1750,5.629,1751,8.324,1752,5.629,1753,5.629,1754,5.629,1755,6.671,1756,5.629,1757,5.629,1758,5.629,1759,5.629,1760,5.629,1761,6.671,1762,5.629,1763,5.629,1764,5.629,1765,7.434,1766,5.629,1767,5.629,1768,7.434,1769,8.324,1770,5.629,1771,5.629,1772,5.629,1773,7.434,1774,5.629,1775,5.629,1776,5.629,1777,5.629,1778,4.67,1779,7.434,1780,7.434,1781,5.629,1782,5.629,1783,5.629,1784,5.629,1785,5.629]],["title/classes/Card.html",[0,0.276,186,0.776]],["body/classes/Card.html",[0,0.436,2,0.747,3,0.032,4,0.032,5,0.038,11,2.243,32,0.118,38,1.323,39,0.383,42,0.19,44,0.425,45,0.005,46,0.417,47,0.425,51,0.095,60,0.053,61,0.868,100,1.088,112,1.091,113,1.091,114,1.02,162,0.003,163,0.004,164,0.003,171,3.696,185,5.178,186,1.228,187,4.766,189,2.894,206,4.325,211,2.992,216,4.878,273,3.423,283,2.68,480,1.928,481,1.902,492,3.23,554,6.224,635,4.391,1786,5.166,1787,5.587,1788,5.16,1789,6.162,1790,6.455,1791,6.455,1792,6.455,1793,6.432,1794,6.808,1795,6.808,1796,6.455,1797,6.455,1798,6.227,1799,6.184,1800,7.249,1801,4.852,1802,4.056,1803,5.587,1804,5.166]],["title/components/CardComponent.html",[279,1,368,1.718]],["body/components/CardComponent.html",[0,0.196,3,0.018,4,0.028,5,0.033,8,0.89,28,1.128,32,0.179,33,0.534,34,0.136,35,0.32,36,0.82,39,0.156,42,0.299,44,0.443,45,0.005,46,0.545,47,0.443,49,0.783,50,0.613,51,0.114,52,0.317,60,0.022,64,0.991,67,1.626,88,1.818,91,0.953,100,0.983,104,1.408,109,1.121,112,0.491,113,0.491,114,0.459,121,1.005,128,0.916,132,1.018,137,1.941,162,0.002,163,0.002,164,0.002,173,1.536,176,2.235,177,2.691,183,2.502,186,1.445,187,1.849,190,0.72,205,1.841,209,1.955,212,1.299,214,2.173,219,2.365,235,2.108,265,1.925,266,1.599,273,2.155,279,1.292,280,1.222,281,1.79,282,1.26,283,1.536,284,1.279,285,1.279,287,2.358,288,1.204,289,3.524,290,2.452,292,1.9,294,2.345,296,1.264,297,2.71,300,7.01,312,1.959,313,2.059,315,0.644,316,1.187,329,1.279,330,1.26,331,1.279,332,1.279,333,1.279,334,1.279,335,2.593,336,1.279,337,1.279,338,1.279,339,1.241,340,1.187,341,1.26,342,1.279,343,1.279,344,1.279,345,0.817,346,1.279,347,1.105,348,1.929,349,1.9,350,1.153,351,2.586,352,1.279,353,1.279,354,1.222,355,1.279,356,1.222,357,2.007,358,1.929,359,1.222,360,1.929,361,1.222,362,1.279,363,1.204,364,1.279,365,1.222,366,1.279,367,2.586,368,2.471,369,1.279,370,1.187,371,1.929,372,1.222,373,1.204,374,1.187,375,1.26,376,1.279,377,1.222,378,1.9,379,1.279,380,1.241,381,1.17,382,1.929,383,1.222,384,1.279,385,2.586,386,1.187,387,1.279,388,1.222,389,1.222,390,1.26,391,1.204,392,1.279,393,1.222,394,1.222,395,1.279,396,1.204,397,1.279,398,1.222,399,1.279,400,1.241,401,1.222,402,1.279,403,1.222,404,1.046,405,1.279,406,1.222,407,1.9,408,1.222,409,2.322,410,1.279,411,1.222,412,1.279,413,1.222,414,1.279,415,1.187,416,1.222,417,1.204,418,1.222,419,1.222,420,2.123,421,1.222,422,1.279,423,1.222,424,1.222,425,1.222,426,0.905,427,1.204,428,1.204,429,1.279,430,1.204,431,1.279,432,1.204,433,1.26,434,1.279,437,1.941,479,2.812,480,1.105,481,1.09,495,2.235,497,1.362,531,1.362,550,5.049,554,2.414,584,0.991,585,0.991,586,1.018,587,2.637,593,1.693,596,1.849,599,0.991,607,4.194,618,1.659,628,2.517,681,1.849,682,1.849,719,4.956,722,2.048,749,2.961,773,2.108,780,2.856,930,1.26,948,4.57,950,4.261,969,2.173,983,1.595,1018,2.781,1195,2.048,1408,1.941,1409,3.652,1411,3.088,1439,2.108,1500,3.718,1620,3.827,1624,3.945,1625,4.384,1629,4.261,1664,2.517,1675,3.203,1796,2.637,1802,2.325,1805,3.569,1806,6.48,1807,5.383,1808,5.815,1809,5.815,1810,6.48,1811,6.48,1812,5.383,1813,7.216,1814,5.383,1815,7.216,1816,6.48,1817,3.385,1818,3.569,1819,3.618,1820,4.7,1821,5.383,1822,3.569,1823,3.569,1824,5.383,1825,3.569,1826,3.569,1827,5.383,1828,3.569,1829,3.569,1830,3.569,1831,3.569,1832,3.569,1833,3.569,1834,3.569,1835,3.569,1836,3.569,1837,3.569,1838,3.569,1839,3.569,1840,3.203,1841,3.569,1842,2.961,1843,3.203,1844,3.569,1845,3.203,1846,3.569,1847,4.83,1848,3.569,1849,2.781,1850,2.961,1851,2.781,1852,3.203,1853,3.569,1854,3.569,1855,3.569,1856,3.569,1857,6.48,1858,3.569,1859,3.569,1860,3.569,1861,3.569,1862,3.569,1863,3.203,1864,3.569,1865,3.569,1866,3.569,1867,3.569,1868,3.569,1869,3.569,1870,5.383,1871,3.569,1872,3.569,1873,3.569,1874,2.961,1875,3.569,1876,3.569,1877,3.203,1878,3.569,1879,3.569,1880,3.569,1881,3.569,1882,3.569,1883,3.569,1884,3.569,1885,5.383,1886,5.383,1887,3.569,1888,3.977,1889,3.569,1890,3.569,1891,3.569,1892,3.569,1893,6.475,1894,3.569,1895,5.377,1896,3.569,1897,3.569,1898,3.569,1899,3.569,1900,3.569,1901,3.569,1902,3.569]],["title/components/CardDetailsComponent.html",[279,1,370,1.668]],["body/components/CardDetailsComponent.html",[0,0.267,3,0.025,4,0.025,5,0.03,11,1.727,32,0.171,33,0.667,34,0.185,35,0.399,39,0.213,42,0.276,44,0.332,45,0.005,46,0.558,47,0.332,51,0.115,52,0.431,60,0.03,64,1.349,121,1.367,132,1.385,137,2.02,146,0.668,162,0.002,163,0.003,164,0.002,186,1.554,187,3.998,188,1.982,193,2.143,194,2.17,205,1.599,210,1.767,212,1.767,216,4.885,265,1.443,266,1.999,279,1.539,280,1.663,281,2.237,282,1.714,284,1.74,285,1.74,287,2.809,288,1.639,289,3.588,292,2.374,294,1.773,296,1.579,297,3.13,312,1.559,313,1.919,315,0.876,347,1.504,348,2.411,349,2.374,350,1.569,351,2.986,352,1.74,353,1.74,354,1.663,355,1.74,356,1.663,357,2.39,358,2.411,359,1.663,360,2.411,361,1.663,362,1.74,363,1.639,364,1.74,365,1.663,366,1.74,367,2.986,368,1.663,369,1.74,370,2.771,371,2.411,372,1.663,373,1.639,374,1.615,375,1.714,376,1.74,377,1.663,378,2.374,379,1.74,380,1.688,381,1.592,382,2.411,383,1.663,384,1.74,385,2.986,386,1.615,387,1.74,388,1.663,389,1.663,390,1.714,391,1.639,392,1.74,393,1.663,394,1.663,395,1.74,396,1.639,397,1.74,398,1.663,399,1.74,400,1.688,401,1.663,402,1.74,403,1.663,404,1.423,405,1.74,406,1.663,407,2.374,408,1.663,409,2.766,410,1.74,411,1.663,412,1.74,413,1.663,414,1.74,415,1.615,416,1.663,417,1.639,418,1.663,419,1.663,420,1.844,421,1.663,422,1.74,423,1.663,424,1.663,425,1.663,426,1.231,427,1.639,428,1.639,429,1.74,430,1.639,431,1.74,432,1.639,433,1.714,434,1.74,496,2.896,531,1.853,550,6.014,556,1.714,585,1.349,586,1.385,587,3.588,599,1.349,607,5.241,618,2.257,719,5.651,722,2.786,1114,7.232,1560,3.163,1582,3.054,1671,3.424,1842,4.029,1845,4.357,1849,3.783,1850,4.029,1851,3.783,1852,4.357,1874,4.029,1903,9.281,1904,4.856,1905,6.036,1906,8.332,1907,5.182,1908,6.727,1909,4.856,1910,4.856,1911,4.856,1912,4.856,1913,4.856,1914,3.285,1915,4.357,1916,4.856,1917,4.856,1918,4.357,1919,6.727,1920,6.727,1921,4.856,1922,4.856,1923,4.357,1924,4.856,1925,4.856,1926,3.424,1927,4.029,1928,4.357,1929,4.357,1930,4.357]],["title/injectables/CardEffects.html",[806,4.162,892,1.393]],["body/injectables/CardEffects.html",[0,0.313,3,0.029,4,0.029,5,0.035,8,0.599,17,2.241,28,1.988,32,0.168,34,0.217,35,0.445,39,0.249,42,0.271,44,0.389,45,0.005,46,0.381,47,0.389,49,0.908,50,0.792,51,0.119,52,0.505,60,0.035,88,2.27,112,0.782,113,0.782,114,0.731,120,3.301,137,2.117,162,0.003,163,0.003,164,0.003,186,1.536,188,2.322,190,1.689,209,2.126,241,4.32,294,1.973,315,1.026,442,3.264,443,4.551,445,2.879,447,3.176,448,3.176,450,3.018,452,3.176,453,3.176,484,2.449,496,2.449,556,2.008,584,1.58,585,1.58,586,1.623,599,1.58,618,4.132,806,6.211,892,2.079,893,2.495,897,5.791,899,7.007,910,5.629,912,4.551,924,3.094,925,2.947,926,4.433,927,2.495,928,2.698,930,2.008,1433,2.592,1582,3.578,1583,4.203,1915,5.105,1931,5.689,1932,8.367,1933,8.367,1934,8.367,1935,5.689,1936,7.486,1937,5.689,1938,7.486,1939,6.27,1940,7.486,1941,7.978,1942,7.486,1943,6.27,1944,7.486,1945,5.689,1946,6.718,1947,7.486,1948,7.486,1949,7.486,1950,5.689,1951,4.72,1952,4.72,1953,4.72]],["title/interfaces/CardFeedState.html",[777,1.884,786,4.162]],["body/interfaces/CardFeedState.html",[3,0.03,4,0.03,5,0.035,7,2.247,11,2.447,24,3.135,28,1.214,32,0.176,34,0.221,35,0.45,45,0.005,51,0.107,55,3.31,60,0.06,100,0.974,146,1.277,162,0.004,163,0.004,164,0.003,173,2.408,186,1.172,190,1.807,205,1.801,209,1.972,210,2.108,211,2.594,219,1.898,426,2.14,479,3.123,480,1.794,481,1.769,483,2.639,509,3.321,518,2.988,526,3.895,531,2.891,624,6.107,724,5.321,777,2.175,778,3.073,786,7.003,879,3.918,880,3.772,881,3.526,882,3.643,917,5.282,1081,2.285,1537,5.902,1592,5.902,1954,5.792,1955,6.797,1956,8.337,1957,8.713,1958,8.033,1959,6.285,1960,7.575,1961,6.797,1962,6.797,1963,6.285,1964,6.797,1965,7.575,1966,7.575,1967,4.612,1968,7.575,1969,7.575,1970,5.792,1971,5.792,1972,9.291,1973,5.792,1974,5.792,1975,5.792,1976,5.792,1977,5.792,1978,5.792,1979,5.792,1980,5.792,1981,5.792,1982,5.792,1983,5.792,1984,5.792,1985,5.792,1986,5.792,1987,5.792,1988,5.792,1989,5.792,1990,5.197,1991,5.792,1992,5.792,1993,5.197]],["title/components/CardListComponent.html",[279,1,372,1.718]],["body/components/CardListComponent.html",[0,0.266,3,0.025,4,0.035,5,0.041,17,1.785,32,0.171,33,0.665,34,0.184,35,0.398,36,0.776,39,0.212,42,0.282,44,0.33,45,0.005,46,0.557,47,0.33,51,0.113,52,0.43,60,0.03,64,1.343,91,1.291,121,1.361,128,1.242,132,1.38,137,2.018,162,0.002,163,0.003,164,0.002,172,2.775,173,1.38,176,2.786,177,3.198,186,1.485,205,1.15,212,1.76,265,1.437,266,2.471,279,1.535,280,1.656,281,2.231,282,1.707,283,2.082,284,1.733,285,1.733,287,2.803,288,1.632,289,3.588,290,3.056,292,2.367,296,1.575,297,3.124,312,1.555,313,2.197,315,0.872,329,1.733,330,1.707,331,1.733,332,1.733,333,1.733,334,1.733,335,1.54,336,1.733,337,1.733,338,1.733,339,1.681,340,1.608,341,1.707,342,1.733,343,1.733,344,1.733,345,1.107,346,1.733,347,1.498,348,2.404,349,2.367,350,1.563,351,2.981,352,1.733,353,1.733,354,1.656,355,1.733,356,1.656,357,2.385,358,2.404,359,1.656,360,2.404,361,1.656,362,1.733,363,1.632,364,1.733,365,1.656,366,1.733,367,2.981,368,1.656,369,1.733,370,1.608,371,2.404,372,2.849,373,1.632,374,1.608,375,1.707,376,1.733,377,1.656,378,2.367,379,1.733,380,1.681,381,1.585,382,2.404,383,1.656,384,1.733,385,2.981,386,1.608,387,1.733,388,1.656,389,1.656,390,1.707,391,1.632,392,1.733,393,1.656,394,1.656,395,1.733,396,1.632,397,1.733,398,1.656,399,1.733,400,1.681,401,1.656,402,1.733,403,1.656,404,1.417,405,1.733,406,1.656,407,2.367,408,1.656,409,2.76,410,1.733,411,1.656,412,1.733,413,3.175,414,1.733,415,1.608,416,1.656,417,1.632,418,1.656,419,1.656,420,1.839,421,1.656,422,1.733,423,1.656,424,1.656,425,1.656,426,1.226,427,1.632,428,1.632,429,1.733,430,1.632,431,1.733,432,1.632,433,1.707,434,1.733,437,2.631,479,2.32,480,1.498,481,1.477,498,3.315,522,3.315,556,1.707,584,1.343,585,1.343,586,1.38,587,3.573,599,1.343,618,2.248,631,4.084,632,3.961,633,3.768,724,3.745,1021,4.34,1022,6.911,1023,6.019,1024,4.34,1030,3.768,1031,5.227,1032,3.768,1033,3.768,1034,4.013,1713,4.731,1714,6.001,1842,4.013,1843,4.34,1849,3.768,1850,4.013,1851,3.768,1967,4.084,1994,6.455,1995,7.84,1996,5.566,1997,6.001,1998,6.708,1999,5.21,2000,4.34,2001,4.836,2002,4.34,2003,4.34,2004,4.34,2005,4.013,2006,4.836,2007,4.836]],["title/classes/CardOperation.html",[0,0.276,2008,4.162]],["body/classes/CardOperation.html",[0,0.378,2,0.826,3,0.036,4,0.036,5,0.042,10,1.839,32,0.189,33,0.838,34,0.263,38,1.224,39,0.37,42,0.257,44,0.577,45,0.005,46,0.566,47,0.577,50,0.866,51,0.082,60,0.052,61,0.96,100,1.032,112,0.947,113,0.947,114,0.885,162,0.003,163,0.004,164,0.003,183,3.201,185,4.379,209,1.794,270,4.339,273,3.39,296,1.985,312,1.596,459,2.672,479,2.873,481,2.103,497,2.629,531,3.491,2008,7.914,2009,8.208,2010,6.18,2011,8.454,2012,6.887,2013,9.148,2014,7.914,2015,9.148,2016,6.887,2017,6.887,2018,6.887,2019,6.887,2020,6.887,2021,6.887,2022,6.887,2023,5.714]],["title/injectables/CardOperationEffects.html",[808,4.162,892,1.393]],["body/injectables/CardOperationEffects.html",[0,0.249,3,0.023,4,0.023,5,0.028,8,0.898,12,2.574,17,2.11,28,2.051,32,0.168,34,0.173,35,0.38,37,1.084,39,0.198,42,0.246,44,0.309,45,0.005,46,0.303,47,0.309,49,1.026,50,0.704,51,0.119,52,0.402,60,0.028,69,2.611,88,2.136,109,2.011,112,0.622,113,0.622,114,0.582,120,2.932,137,1.976,146,1.278,162,0.002,163,0.004,164,0.002,186,1.439,190,1.5,206,3.17,209,2.109,211,2.193,241,4.067,266,1.903,294,1.688,315,0.816,426,1.147,445,3.762,454,1.036,472,3.321,484,1.948,489,3.199,497,2.444,499,3.321,500,3.454,501,2.023,509,3.543,522,2.757,526,2.569,531,2.444,542,2.104,556,1.598,563,4.99,584,1.257,585,1.257,586,1.291,599,1.257,618,4.114,749,5.314,808,5.314,874,5.035,881,2.756,882,2.847,883,3.527,892,1.779,893,1.985,897,5.263,909,6.243,910,5.616,911,7.25,912,4.042,924,2.462,925,2.345,926,3.527,927,1.985,928,3.525,929,3.344,930,1.598,1081,2.526,1286,4.052,1379,4.674,1408,3.484,1409,4.09,1500,5.079,1534,5.97,1581,3.062,1582,2.847,1583,3.344,1592,4.99,1664,3.192,1959,5.314,2014,3.756,2024,8.526,2025,4.527,2026,7.432,2027,4.527,2028,5.314,2029,6.404,2030,6.404,2031,8.08,2032,6.404,2033,6.404,2034,6.404,2035,6.404,2036,6.404,2037,6.404,2038,5.747,2039,6.404,2040,6.404,2041,4.527,2042,7.25,2043,7.25,2044,4.99,2045,6.404,2046,6.404,2047,6.404,2048,8.08,2049,6.404,2050,6.404,2051,6.404,2052,6.404,2053,6.404,2054,6.404,2055,6.404,2056,6.404,2057,4.527,2058,6.404,2059,6.404,2060,6.404,2061,5.314,2062,6.404,2063,6.404,2064,6.404,2065,4.527,2066,3.344,2067,4.527,2068,4.527,2069,4.062,2070,4.062,2071,2.597,2072,3.344]],["title/injectables/CardService.html",[892,1.393,897,3.267]],["body/injectables/CardService.html",[0,0.256,3,0.024,4,0.034,5,0.028,17,2.298,28,1.873,32,0.18,34,0.178,35,0.388,36,0.76,38,1.23,39,0.204,42,0.3,44,0.61,45,0.005,46,0.599,47,0.61,49,0.505,50,0.619,51,0.118,55,2.416,60,0.028,74,2.043,100,1.006,101,2.165,127,1.869,146,1.125,162,0.002,163,0.003,164,0.002,183,2.165,186,0.721,188,1.901,190,1.524,205,1.946,209,2.047,211,2.238,238,1.151,246,3.08,273,2.971,294,2.156,296,1.534,312,2.127,313,1.329,315,0.84,317,2.751,335,2.404,445,3.308,450,3.467,479,1.403,480,1.443,481,1.423,531,1.778,559,4.569,584,1.294,599,1.294,664,2.471,744,2.93,802,2.413,803,2.471,892,1.815,893,2.043,897,4.256,917,2.534,937,2.93,950,5.418,969,2.836,1134,5.126,1138,5.771,1139,3.151,1158,4.609,1238,3.285,1355,4.421,1394,3.285,1473,5.881,1479,3.151,2008,3.865,2069,4.18,2070,4.18,2073,4.658,2074,7.549,2075,7.549,2076,7.549,2077,7.549,2078,6.535,2079,6.535,2080,8.183,2081,8.183,2082,6.535,2083,3.285,2084,6.471,2085,6.535,2086,6.535,2087,4.658,2088,6.535,2089,8.618,2090,4.658,2091,6.535,2092,4.658,2093,6.535,2094,4.658,2095,6.535,2096,4.658,2097,4.658,2098,6.535,2099,8.618,2100,4.658,2101,7.549,2102,4.658,2103,4.658,2104,4.658,2105,3.151,2106,3.865,2107,5.422,2108,3.865,2109,4.658,2110,6.535,2111,4.658,2112,4.658,2113,4.658,2114,4.658,2115,4.658,2116,4.658,2117,4.658,2118,4.658,2119,4.658,2120,6.789,2121,4.658,2122,4.658,2123,4.658,2124,4.658,2125,4.658,2126,4.658,2127,4.658,2128,4.18,2129,4.658,2130,4.658,2131,4.18,2132,4.658,2133,4.658,2134,4.658,2135,4.658,2136,4.658,2137,4.658,2138,4.658,2139,4.658,2140,4.658,2141,4.658,2142,4.658,2143,4.658,2144,3.865,2145,6.535,2146,4.658,2147,4.658,2148,4.658,2149,4.658,2150,4.658,2151,4.658,2152,4.658,2153,4.658,2154,4.658,2155,4.658,2156,4.658,2157,4.658,2158,4.18,2159,4.658,2160,4.658,2161,3.442,2162,4.658]],["title/interfaces/CardState.html",[777,1.884,784,4.162]],["body/interfaces/CardState.html",[3,0.038,4,0.038,5,0.046,32,0.185,34,0.284,35,0.527,45,0.005,51,0.089,60,0.054,100,1.038,146,1.376,162,0.003,163,0.004,164,0.003,173,2.7,186,1.516,188,3.041,205,1.772,210,3.227,219,2.443,509,4.388,624,6.293,777,2.799,778,3.954,784,7.853,1809,8.979,2163,7.453,2164,7.453]],["title/modules/CardsModule.html",[640,2.2,1098,3.538]],["body/modules/CardsModule.html",[0,0.316,3,0.03,4,0.039,5,0.046,36,0.58,42,0.175,45,0.005,51,0.122,60,0.035,76,2.478,91,1.537,128,1.478,162,0.003,163,0.003,164,0.003,209,1.222,270,3.579,280,3.259,296,1.352,312,1.334,315,1.038,317,3.4,318,3.505,319,3.908,329,2.063,330,2.032,331,2.063,332,2.063,333,2.063,334,2.063,335,1.834,336,2.063,337,2.063,338,2.063,339,2.001,340,1.914,341,2.032,342,2.063,343,2.063,344,2.063,345,1.318,346,2.063,347,1.783,368,3.486,370,3.385,373,3.47,386,3.385,388,3.486,640,2.524,642,2.914,643,3.303,644,5.124,645,5.275,646,4.465,654,6.437,655,4.456,656,3.505,658,4.104,660,4.578,665,4.745,668,3.4,673,5.879,680,5.574,681,2.982,682,2.982,1098,7.459,1114,4.486,1115,4.777,1907,4.212,2165,5.166,2166,5.166,2167,5.757,2168,5.166,2169,5.166,2170,7.03,2171,5.757,2172,7.545,2173,6.983,2174,5.757,2175,6.983,2176,5.757,2177,5.166,2178,5.757,2179,5.757,2180,5.166,2181,5.166,2182,5.166,2183,5.757,2184,5.757,2185,4.486,2186,5.166]],["title/classes/CheckAuthenticationStatus.html",[0,0.276,66,2.539]],["body/classes/CheckAuthenticationStatus.html",[0,0.531,1,3.366,2,0.482,3,0.021,4,0.021,5,0.047,6,2.131,7,1.558,8,1.065,9,4.268,10,1.072,11,1.963,12,3.29,13,3.53,14,3.782,15,2.08,16,3.353,17,1.97,18,3.879,19,4.027,20,3.196,21,2.242,22,2.185,23,3.12,24,2.345,25,3.78,26,3.879,27,2.937,28,1.456,29,3.196,30,3.686,31,3.281,32,0.189,33,0.958,34,0.153,35,0.349,36,0.819,37,1.294,38,1.218,39,0.176,41,2.846,42,0.122,45,0.005,49,0.436,50,0.38,51,0.091,52,0.357,53,3.166,54,1.83,55,2.569,56,1.83,57,2.242,58,2.677,59,2.242,60,0.06,61,0.56,62,2.08,63,3.229,64,1.116,65,2.152,66,3.87,67,2.677,68,3.78,69,3.091,70,4.776,71,4.057,72,3.517,73,2.185,74,2.577,75,3.785,76,3.291,77,4.118,78,3.517,79,1.397,80,3.517,81,2.185,82,3.229,83,3.554,84,3.599,85,1.867,86,2.185,87,1.584,88,0.943,89,2.242,90,2.846,91,1.072,92,2.185,93,2.185,94,1.945,95,3.229,96,2.185,97,2.185,98,1.467,99,1.867,100,0.832,101,1.867,102,1.795,103,1.905,104,1.584,105,2.242,106,2.242,107,3.879,108,3.78,109,2.182,110,3.78,111,2.242,112,1.238,113,1.238,114,1.157,115,2.242,116,3.196,117,1.988,118,2.242,119,1.988,120,1.584,121,1.131,122,2.185,123,2.991,124,3.281,125,3.166,126,3.044,127,1.611,128,1.031,129,2.185,130,2.131,131,4.057,132,1.146,133,2.242,134,2.08,135,2.185,136,2.974,137,1.311,138,2.242,139,2.242,140,4.269,141,2.185,142,2.242,143,3.196,144,2.242,145,3.196,146,0.552,147,2.242,148,2.185,149,2.242,150,2.185,151,2.242,152,2.731,153,3.196,154,1.508,155,2.242,156,2.242,157,2.242,158,2.787,159,2.242,160,2.242,161,2.131,162,0.002,163,0.003,164,0.002,2187,4.016]],["title/classes/CheckImplicitFlowAuthenticationStatus.html",[0,0.276,80,2.539]],["body/classes/CheckImplicitFlowAuthenticationStatus.html",[0,0.531,1,3.375,2,0.484,3,0.021,4,0.021,5,0.047,6,2.141,8,1.066,9,4.274,10,1.078,11,1.968,12,3.285,13,3.536,14,3.789,15,2.091,16,3.361,17,1.974,18,3.891,19,4.036,20,3.208,21,2.254,22,2.196,23,3.128,24,2.352,25,3.791,26,3.891,27,2.946,28,1.461,29,3.208,30,3.697,31,3.293,32,0.189,33,0.959,34,0.154,35,0.35,36,0.821,37,1.297,38,1.219,39,0.177,41,2.857,42,0.123,45,0.005,49,0.438,50,0.382,51,0.091,52,0.359,53,3.175,54,1.839,55,2.576,56,1.839,57,2.254,58,2.687,59,2.254,60,0.06,61,0.562,62,2.091,63,3.239,64,1.121,65,2.158,66,3.527,67,2.687,68,3.791,69,3.094,70,4.783,71,4.066,72,3.527,73,2.196,74,2.586,75,3.794,76,3.299,77,4.127,78,3.527,79,1.402,80,3.879,81,2.196,82,3.239,83,3.562,84,3.609,85,1.876,86,2.196,87,1.592,88,0.948,89,2.254,90,2.857,91,1.078,92,2.196,93,2.196,94,1.955,95,3.239,96,2.196,97,2.196,98,1.47,99,1.876,100,0.833,101,1.876,102,1.804,103,1.915,104,1.592,105,2.254,106,2.254,107,3.293,108,3.208,109,1.852,110,3.208,111,2.254,112,1.24,113,1.24,114,1.159,115,2.254,116,2.196,117,1.998,118,2.254,119,1.998,120,1.592,121,1.136,122,2.196,123,3,124,3.293,125,3.175,126,3.055,127,1.619,128,1.036,129,2.196,130,2.141,131,4.066,132,1.152,133,2.254,134,2.091,135,2.196,136,2.985,137,1.316,138,2.254,139,2.254,140,4.279,141,2.196,142,2.254,143,3.208,144,2.254,145,3.208,146,0.555,147,2.254,148,2.196,149,2.254,150,2.196,151,2.254,152,2.741,153,3.208,154,1.516,155,2.254,156,3.293,157,2.254,158,2.797,159,2.254,160,2.254,161,2.141,162,0.002,163,0.003,164,0.002,2188,4.036]],["title/classes/CheckTokenResponse.html",[0,0.276,1429,3.538]],["body/classes/CheckTokenResponse.html",[0,0.449,2,0.277,3,0.012,4,0.012,5,0.014,7,0.896,8,0.243,9,1.772,12,2.857,13,1.584,17,1.729,23,1.988,24,0.779,27,0.976,28,1.88,32,0.141,33,0.378,34,0.088,35,0.226,36,0.98,37,0.645,39,0.248,41,3.745,42,0.172,44,0.26,45,0.005,46,0.326,47,0.487,49,0.251,51,0.107,52,0.205,53,2.22,54,1.052,55,1.41,58,1.738,60,0.047,61,0.322,63,1.073,67,1.738,69,1.232,74,1.013,82,3.593,83,2.629,85,1.073,87,0.911,90,3.455,91,2.064,94,1.847,95,1.772,99,2.91,100,1.013,101,4.169,102,4.275,103,3.667,104,2.231,117,1.143,119,2.8,120,3.291,125,2.22,128,1.251,137,1.823,146,0.67,158,1.809,162,0.001,163,0.002,164,0.001,173,2.128,185,2.523,190,0.466,205,2.251,209,2.119,210,2.058,211,1.306,212,1.773,219,1.597,228,0.976,229,1.256,246,1.556,273,2.716,294,2.43,313,2.531,315,0.416,340,1.881,345,1.433,374,0.768,420,1.716,426,0.585,444,0.84,455,0.93,461,0.65,492,0.854,495,0.715,511,0.803,552,3.989,559,3.496,564,1.095,580,1.628,584,0.641,585,0.641,586,0.659,593,1.095,596,1.196,598,4.623,599,1.353,610,2.689,618,1.772,631,2.322,664,1.225,688,1.562,706,2.484,707,3.173,735,2.136,738,3.684,760,1.738,762,3.295,763,3.295,773,3.34,777,2.124,780,2.023,802,1.196,803,1.225,892,1.059,927,1.672,928,1.095,930,0.815,983,2.177,1027,1.289,1056,2.689,1081,0.911,1123,3.989,1124,1.628,1125,5.27,1126,2.818,1127,1.706,1134,3.245,1135,1.628,1136,1.562,1137,1.504,1138,3.557,1139,1.562,1140,1.706,1141,5.994,1142,1.628,1143,1.196,1144,1.289,1145,4.179,1146,2.818,1147,2.818,1148,2.818,1149,3.989,1150,2.818,1151,1.706,1152,1.706,1153,1.706,1154,1.706,1155,1.364,1156,1.628,1157,2.818,1158,1.628,1159,1.706,1160,1.706,1161,3.599,1162,1.706,1163,1.706,1164,1.706,1165,1.706,1166,1.706,1167,1.706,1168,1.706,1169,1.706,1170,1.706,1171,1.706,1172,5.452,1173,1.706,1174,5.031,1175,1.706,1176,1.628,1177,1.706,1178,1.706,1179,1.706,1180,1.706,1181,2.818,1182,1.706,1183,1.706,1184,4.626,1185,1.628,1186,1.706,1187,1.706,1188,1.706,1189,1.706,1190,1.706,1191,1.706,1192,1.706,1193,1.706,1194,3.173,1195,1.325,1196,1.706,1197,1.364,1198,1.706,1199,5.27,1200,5.51,1201,2.818,1202,4.626,1203,1.706,1204,3.599,1205,1.706,1206,2.818,1207,1.706,1208,4.179,1209,4.626,1210,1.706,1211,1.706,1212,1.706,1213,1.706,1214,1.706,1215,1.706,1216,2.818,1217,1.706,1218,4.981,1219,2.818,1220,1.706,1221,1.706,1222,2.689,1223,1.706,1224,2.818,1225,1.706,1226,1.706,1227,1.628,1228,3.173,1229,1.706,1230,1.562,1231,1.706,1232,1.706,1233,1.706,1234,2.818,1235,1.706,1236,3.599,1237,1.706,1238,5.259,1239,3.599,1240,3.599,1241,3.599,1242,3.599,1243,3.599,1244,3.436,1245,1.706,1246,1.706,1247,1.706,1248,1.706,1249,2.818,1250,2.689,1251,2.818,1252,1.628,1253,2.65,1254,2.818,1255,2.818,1256,2.074,1257,1.706,1258,3.599,1259,2.795,1260,2.818,1261,1.706,1262,2.818,1263,1.706,1264,2.689,1265,1.706,1266,2.818,1267,1.706,1268,1.706,1269,2.818,1270,2.818,1271,1.706,1272,1.706,1273,1.706,1274,1.706,1275,1.706,1276,1.706,1277,1.706,1278,2.818,1279,1.706,1280,1.706,1281,1.706,1282,1.706,1283,1.706,1284,1.706,1285,1.706,1286,0.976,1287,1.706,1288,1.706,1289,1.706,1290,1.706,1291,1.706,1292,1.706,1293,1.706,1294,4.626,1295,4.179,1296,1.706,1297,1.706,1298,3.989,1299,1.706,1300,1.628,1301,1.706,1302,1.706,1303,2.877,1304,1.706,1305,2.818,1306,1.706,1307,2.818,1308,1.706,1309,1.562,1310,1.706,1311,1.706,1312,1.706,1313,1.706,1314,1.706,1315,1.706,1316,1.562,1317,1.706,1318,2.399,1319,1.706,1320,1.706,1321,1.706,1322,1.706,1323,1.706,1324,1.706,1325,1.706,1326,1.706,1327,1.706,1328,1.706,1329,1.706,1330,1.706,1331,1.706,1332,1.706,1333,2.818,1334,1.706,1335,1.706,1336,3.599,1337,2.818,1338,1.706,1339,1.706,1340,2.818,1341,2.818,1342,1.706,1343,1.706,1344,1.706,1345,1.706,1346,1.706,1347,1.706,1348,1.706,1349,3.599,1350,2.818,1351,1.628,1352,1.706,1353,1.706,1354,1.706,1355,1.562,1356,1.706,1357,1.706,1358,1.706,1359,1.706,1360,1.706,1361,1.706,1362,2.689,1363,1.706,1364,1.706,1365,1.706,1366,2.818,1367,2.818,1368,1.706,1369,1.706,1370,1.706,1371,1.706,1372,1.706,1373,1.706,1374,1.706,1375,1.706,1376,1.706,1377,1.706,1378,1.706,1379,1.452,1380,1.706,1381,1.706,1382,1.706,1383,2.818,1384,1.706,1385,1.706,1386,1.706,1387,1.706,1388,1.706,1389,1.706,1390,1.706,1391,1.706,1392,1.706,1393,1.706,1394,1.628,1395,1.706,1396,1.706,1397,1.706,1398,1.706,1399,1.706,1400,1.706,1401,1.706,1402,1.706,1403,1.706,1404,1.706,1405,1.706,1406,1.706,1407,1.706,1408,1.256,1409,1.93,1410,3.599,1411,2.188,1412,1.706,1413,1.706,1414,1.706,1415,1.706,1416,1.225,1417,1.706,1418,1.706,1419,1.706,1420,4.179,1421,1.706,1422,3.989,1423,1.706,1424,1.706,1425,1.706,1426,3.826,1427,2.689,1428,2.818,1429,2.689,1430,1.706,1431,2.818,1432,2.689,1433,1.738,1434,1.706,1435,1.628,1436,1.706,1437,1.706,1438,2.689,1439,2.252,1440,1.706,1441,1.706,1442,1.628,1443,2.818,1444,1.706,1445,2.818,1446,1.706,1447,1.504,1448,1.706,1449,1.706,1450,1.706,1451,1.706,1452,1.706,1453,1.706,1454,1.706,1455,1.706,1456,2.818,1457,1.706,1458,1.706,1459,1.706,1460,1.706,1461,1.706,2189,2.309,2190,2.309,2191,2.309,2192,2.309,2193,2.309]],["title/classes/ClearCard.html",[0,0.276,443,2.729]],["body/classes/ClearCard.html",[0,0.54,2,0.651,3,0.028,4,0.028,5,0.033,8,1.055,32,0.191,33,0.985,34,0.207,35,0.431,37,1.644,38,1.253,42,0.165,45,0.005,49,0.589,50,0.514,51,0.087,52,0.482,60,0.061,61,0.757,79,1.726,88,1.275,98,1.751,100,0.836,112,1.352,113,1.352,114,1.264,146,1.314,162,0.003,163,0.003,164,0.003,186,1.615,188,2.217,211,2.486,238,1.342,437,4.448,438,3.208,441,3.416,442,3.117,443,4.748,444,1.977,445,4.139,446,2.743,447,4.566,448,4.566,449,2.099,450,4.338,451,4.236,452,4.566,453,4.566,454,1.872,455,1.325,456,1.377,457,1.55,458,1.55,459,2.107,460,3.208,461,1.529,462,1.682,463,4.566,464,3.416,465,3.416,466,3.416,467,3.416,468,3.416,469,3.416,470,3.416,471,3.307,2194,5.432]],["title/classes/ClearLightCardSelection.html",[0,0.276,496,2.159]],["body/classes/ClearLightCardSelection.html",[0,0.554,2,0.497,3,0.021,4,0.021,5,0.025,8,1.079,10,2.201,11,1.065,12,1.321,32,0.193,33,1.003,34,0.158,35,0.357,37,1.592,38,1.269,39,0.406,42,0.183,45,0.005,49,0.45,50,0.393,51,0.093,52,0.368,60,0.062,61,0.578,65,1.284,79,0.986,88,1.935,98,1.695,100,0.794,109,1.303,112,1.31,113,1.31,114,1.224,146,1.219,154,1.558,162,0.002,163,0.003,164,0.002,186,1.49,190,0.837,193,1.916,224,2.334,238,1.025,316,1.379,345,1.377,444,1.51,446,2.275,449,1.739,454,1.62,455,1.012,456,1.051,457,1.183,458,1.183,459,1.609,461,1.168,462,1.284,472,3.163,473,3.29,474,1.928,478,2.009,479,2.589,480,1.284,481,1.267,482,1.967,483,1.89,484,1.785,485,3.225,486,4.779,487,3.163,488,1.89,489,3.047,490,2.796,491,1.967,492,1.533,493,3.225,494,3.163,495,1.284,496,3.342,497,3.281,498,1.785,499,3.163,500,1.928,501,3.163,502,3.163,503,1.967,504,1.967,505,3.163,506,3.104,507,3.163,508,1.753,509,1.819,510,3.163,511,1.442,512,3.163,513,1.967,514,3.163,515,1.928,516,3.163,517,1.722,518,1.636,519,2.009,520,2.009,521,2.009,522,1.785,523,2.009,524,2.009,525,2.009,526,1.664,527,2.914,528,2.009,529,2.009,530,2.009,531,1.583,532,2.009,533,2.009,534,2.009,535,1.967,536,1.967,537,2.009,538,2.009,539,2.009,540,2.009,541,2.009,542,1.928,2195,6.016]],["title/injectables/ConfigEffects.html",[845,4.162,892,1.393]],["body/injectables/ConfigEffects.html",[0,0.32,3,0.03,4,0.03,5,0.036,8,0.613,17,2.157,28,1.88,32,0.16,34,0.222,35,0.451,39,0.255,42,0.258,44,0.397,45,0.005,46,0.39,47,0.397,49,0.631,50,0.551,51,0.12,52,0.517,55,2.809,60,0.036,88,2.282,112,0.8,113,0.8,114,0.748,120,3.67,137,2.13,162,0.003,163,0.004,164,0.003,190,1.175,209,1.904,241,4.158,273,2.814,294,2.23,315,1.049,426,1.475,446,2.629,556,2.054,584,1.617,585,1.617,586,1.66,591,5.321,592,4.829,596,3.014,599,1.617,618,3.531,780,4.031,844,5.222,845,6.304,892,2.111,893,2.552,910,5.146,912,4.133,924,3.166,925,3.014,927,2.552,928,2.76,929,4.3,930,2.054,1081,2.296,1195,4.36,1286,3.792,1433,2.652,1479,5.14,1500,5.146,1541,3.66,1578,3.937,1939,5.359,1943,5.359,1951,4.829,1952,4.829,1953,4.829,2196,5.82,2197,8.461,2198,8.461,2199,6.627,2200,8.461,2201,5.82,2202,7.599,2203,7.599,2204,7.599,2205,7.599,2206,7.599,2207,5.82,2208,8.048,2209,6.818,2210,5.82,2211,8.563,2212,6.818,2213,5.222,2214,5.222,2215,5.222,2216,3.79,2217,5.82,2218,5.222,2219,5.82,2220,5.82,2221,5.82,2222,7.599,2223,7.599,2224,7.599,2225,7.599,2226,5.82]],["title/injectables/ConfigService.html",[892,1.393,2199,3.706]],["body/injectables/ConfigService.html",[0,0.397,3,0.037,4,0.037,5,0.044,17,2.166,32,0.165,34,0.276,35,0.517,39,0.317,42,0.284,44,0.494,45,0.005,46,0.484,47,0.494,51,0.12,52,0.642,60,0.044,100,0.89,137,2.275,162,0.003,163,0.004,164,0.003,209,1.534,294,2.556,296,2.044,312,1.676,315,1.303,584,2.008,585,2.008,586,2.062,599,2.008,664,3.835,802,3.744,803,3.835,892,2.418,893,3.17,1134,5.784,2083,5.098,2199,6.432,2227,7.229,2228,9.343,2229,9.698,2230,8.706,2231,7.229,2232,7.229,2233,7.229,2234,7.229]],["title/interfaces/ConfigState.html",[777,1.884,785,4.162]],["body/interfaces/ConfigState.html",[3,0.038,4,0.038,5,0.045,32,0.189,34,0.281,35,0.523,45,0.005,60,0.058,100,0.963,146,1.371,162,0.003,163,0.004,164,0.003,173,2.888,205,2.093,210,2.679,219,2.885,273,3.131,614,5.889,624,6.272,777,2.765,778,3.905,780,5.176,785,7.812,1081,2.904,2211,8.949,2218,6.605,2235,7.361,2236,6.605,2237,7.361,2238,7.361]],["title/components/ConfirmModalComponent.html",[279,1,373,1.693]],["body/components/ConfirmModalComponent.html",[0,0.29,3,0.027,4,0.027,5,0.032,8,1.041,10,1.9,28,1.491,32,0.163,34,0.201,35,0.423,36,0.716,39,0.231,42,0.274,44,0.36,45,0.005,46,0.578,47,0.36,51,0.085,60,0.043,61,0.734,64,1.464,65,2.874,98,0.95,121,1.484,132,1.504,162,0.002,163,0.003,164,0.002,186,1.101,265,1.566,266,2.114,279,1.795,280,1.805,281,2.366,282,1.86,284,1.889,285,1.889,288,1.779,289,3.601,292,2.511,296,1.67,312,1.867,313,2.298,315,0.95,317,3.113,318,3.209,319,2.73,347,1.632,348,2.55,349,2.511,350,1.703,351,3.09,352,1.889,353,1.889,354,1.805,355,1.889,356,1.805,357,2.494,358,2.55,359,1.805,360,2.55,361,1.805,362,1.889,363,1.779,364,1.889,365,1.805,366,1.889,367,3.09,368,1.805,369,1.889,370,1.753,371,2.55,372,1.805,373,2.91,374,2.868,375,3.348,376,1.889,377,1.805,378,2.511,379,1.889,380,1.832,381,1.728,382,2.55,383,1.805,384,1.889,385,3.09,386,1.753,387,1.889,388,1.805,389,1.805,390,1.86,391,1.779,392,1.889,393,1.805,394,1.805,395,1.889,396,1.779,397,1.889,398,1.805,399,1.889,400,1.832,401,1.805,402,1.889,403,1.805,404,1.545,405,1.889,406,1.805,407,2.511,408,1.805,409,2.886,410,1.889,411,1.805,412,1.889,413,1.805,414,1.889,415,1.753,416,1.805,417,1.779,418,1.805,419,1.805,420,2.364,421,1.805,422,1.889,423,1.805,424,1.805,425,1.805,426,1.336,427,1.779,428,1.779,429,1.889,430,1.779,431,1.889,432,1.779,433,1.86,434,1.889,572,4.948,1316,4.813,1534,6.371,1761,6.385,1930,4.73,2185,7.23,2239,8.326,2240,4.73,2241,7.115,2242,7.738,2243,7.738,2244,5.271,2245,9.005,2246,5.271,2247,5.271,2248,5.271,2249,5.271,2250,5.271,2251,5.271,2252,5.271,2253,5.271,2254,5.271,2255,4.373,2256,5.271,2257,7.738,2258,7.115,2259,7.115,2260,7.115,2261,7.115]],["title/classes/CreateUserApplication.html",[0,0.276,2262,3.054]],["body/classes/CreateUserApplication.html",[0,0.524,2,0.694,3,0.03,4,0.03,5,0.035,8,1.037,27,3.566,32,0.195,33,0.963,34,0.221,35,0.449,36,0.762,37,1.685,38,1.231,39,0.253,40,1.505,42,0.257,44,0.395,45,0.005,46,0.388,47,0.395,49,0.628,50,0.548,51,0.09,52,0.514,60,0.06,61,0.806,69,3.392,79,1.375,98,1.718,112,1.31,113,1.31,114,1.225,146,1.335,162,0.003,163,0.004,164,0.003,454,1.931,455,1.411,456,1.466,457,1.65,458,1.65,475,2.223,564,4.405,1144,3.23,1256,4.117,2071,3.319,2262,5.448,2263,3.768,2264,7.569,2265,5.785,2266,5.338,2267,5.136,2268,5.136,2269,5.136,2270,5.136,2271,3.147,2272,3.768,2273,4.08,2274,4.08,2275,4.08,2276,4.08,2277,4.08,2278,3.768]],["title/classes/CreateUserApplicationOnFailure.html",[0,0.276,2270,3.054]],["body/classes/CreateUserApplicationOnFailure.html",[0,0.524,2,0.694,3,0.03,4,0.03,5,0.035,8,1.037,27,3.566,32,0.195,33,0.963,34,0.221,35,0.449,36,0.762,37,1.685,38,1.231,39,0.253,40,1.505,42,0.257,44,0.395,45,0.005,46,0.388,47,0.395,49,0.628,50,0.548,51,0.09,52,0.514,60,0.06,61,0.806,69,3.392,79,1.375,98,1.718,112,1.31,113,1.31,114,1.225,146,1.335,162,0.003,163,0.004,164,0.003,454,1.931,455,1.411,456,1.466,457,1.65,458,1.65,475,2.223,564,4.405,1144,3.23,1256,4.117,2071,3.319,2262,5.136,2263,3.768,2266,4.08,2267,5.136,2268,5.136,2269,5.136,2270,5.448,2271,3.147,2272,3.768,2273,4.08,2274,4.08,2275,4.08,2276,5.338,2277,4.08,2278,3.768,2279,7.569,2280,5.785]],["title/classes/CreateUserApplicationOnSuccess.html",[0,0.276,2269,3.054]],["body/classes/CreateUserApplicationOnSuccess.html",[0,0.524,2,0.694,3,0.03,4,0.03,5,0.035,8,1.037,27,3.566,32,0.195,33,0.963,34,0.221,35,0.449,36,0.762,37,1.685,38,1.231,39,0.253,40,1.505,42,0.257,44,0.395,45,0.005,46,0.388,47,0.395,49,0.628,50,0.548,51,0.09,52,0.514,60,0.06,61,0.806,69,3.392,79,1.375,98,1.718,112,1.31,113,1.31,114,1.225,146,1.335,162,0.003,163,0.004,164,0.003,454,1.931,455,1.411,456,1.466,457,1.65,458,1.65,475,2.223,564,4.405,1144,3.23,1256,4.117,2071,3.319,2262,5.136,2263,3.768,2266,4.08,2267,5.136,2268,5.136,2269,5.448,2270,5.136,2271,3.147,2272,3.768,2273,4.08,2274,4.08,2275,5.338,2276,4.08,2277,4.08,2278,3.768,2281,7.569,2282,5.785]],["title/components/CustomLogoComponent.html",[279,1,377,1.718]],["body/components/CustomLogoComponent.html",[0,0.242,3,0.023,4,0.032,5,0.038,32,0.184,33,0.623,34,0.168,35,0.373,36,0.884,39,0.193,42,0.299,44,0.301,45,0.005,46,0.535,47,0.301,49,0.682,50,0.418,51,0.075,60,0.027,64,1.225,91,1.178,98,0.795,100,0.643,121,1.241,128,1.132,132,1.258,162,0.002,163,0.003,164,0.002,173,1.794,176,2.611,177,3.506,186,0.973,209,0.936,265,1.31,266,1.868,273,3.239,279,1.46,280,1.51,281,2.091,282,1.557,283,1.898,284,1.58,285,1.58,287,2.666,288,1.488,289,3.57,290,2.864,292,2.219,294,1.931,296,1.476,297,3,312,1.698,313,1.794,315,0.795,329,1.58,330,1.557,331,1.58,332,1.58,333,1.58,334,1.58,335,1.405,336,1.58,337,1.58,338,1.58,339,1.533,340,1.467,341,1.557,342,1.58,343,1.58,344,1.58,345,1.009,346,1.58,347,1.366,348,2.253,349,2.219,350,1.425,351,2.862,352,1.58,353,1.58,354,1.51,355,1.58,356,1.51,357,2.269,358,2.253,359,1.51,360,2.253,361,1.51,362,1.58,363,1.488,364,1.58,365,1.51,366,1.58,367,2.862,368,1.51,369,1.58,370,1.467,371,2.253,372,1.51,373,1.488,374,1.467,375,1.557,376,1.58,377,2.735,378,3.364,379,1.58,380,1.533,381,1.446,382,2.253,383,1.51,384,1.58,385,2.862,386,1.467,387,1.58,388,1.51,389,1.51,390,1.557,391,1.488,392,1.58,393,1.51,394,1.51,395,1.58,396,1.488,397,1.58,398,1.51,399,1.58,400,1.533,401,1.51,402,1.58,403,1.51,404,1.293,405,1.58,406,1.51,407,2.219,408,1.51,409,2.625,410,1.58,411,1.51,412,1.58,413,1.51,414,1.58,415,1.467,416,1.51,417,1.488,418,1.51,419,1.51,420,1.723,421,1.51,422,1.58,423,1.51,424,1.51,425,1.51,426,1.118,427,1.488,428,1.488,429,1.58,430,1.488,431,1.58,432,1.488,433,1.557,434,1.58,582,3.11,583,2.983,614,2.604,632,4.326,703,8.88,751,3.436,884,2.531,948,3.11,983,1.971,1409,2.232,1888,5.413,2283,9.897,2284,4.41,2285,7.326,2286,7.326,2287,6.287,2288,7.326,2289,7.326,2290,7.986,2291,7.326,2292,7.326,2293,7.986,2294,7.986,2295,7.986,2296,6.574,2297,4.41,2298,7.005,2299,6.287,2300,4.41,2301,4.41,2302,4.41,2303,4.41,2304,4.41,2305,6.574,2306,4.41,2307,4.41,2308,4.41,2309,4.41,2310,4.41,2311,4.41,2312,6.287,2313,6.287,2314,6.287,2315,4.41,2316,7.326,2317,7.326,2318,4.41,2319,4.41,2320,4.41,2321,6.287,2322,5.9,2323,4.41,2324,4.41,2325,7.166,2326,7.166,2327,6.574,2328,4.41,2329,4.41,2330,4.41,2331,3.958,2332,4.41,2333,4.41]],["title/injectables/CustomRouterEffects.html",[833,3.054,892,1.393]],["body/injectables/CustomRouterEffects.html",[0,0.269,3,0.025,4,0.025,5,0.03,8,0.816,17,2.281,28,2.08,29,4.548,30,3.589,32,0.176,34,0.367,35,0.402,37,1.145,39,0.215,42,0.267,44,0.529,45,0.005,46,0.453,47,0.334,49,0.907,50,0.792,51,0.117,52,0.435,60,0.03,88,2.259,137,2.076,162,0.002,163,0.003,164,0.002,190,0.988,193,2.663,205,2.158,209,2.134,212,2.462,241,4.3,294,1.29,315,0.883,404,2.451,426,1.241,445,2.478,450,2.597,494,2.188,496,3.337,556,1.728,584,1.36,585,1.36,586,1.397,599,1.36,733,5.613,795,3.452,833,4.119,892,1.879,893,2.147,899,7.004,912,4.548,924,2.663,925,2.536,928,2.322,930,1.728,934,4.062,1068,2.98,1493,5.613,1572,4.255,1577,4.119,1581,3.312,1582,3.079,1583,3.617,1939,6.4,2038,6.07,2334,9.075,2335,4.895,2336,7.751,2337,7.751,2338,7.751,2339,5.446,2340,4.895,2341,6.765,2342,9.48,2343,7.751,2344,6.765,2345,6.765,2346,4.895,2347,9.075,2348,9.302,2349,6.765,2350,9.075,2351,9.075,2352,6.765,2353,9.48,2354,6.765,2355,4.895,2356,6.765,2357,6.765,2358,4.895,2359,6.765,2360,6.765,2361,6.765,2362,4.406,2363,6.765,2364,6.765,2365,4.895,2366,7.751,2367,6.765,2368,6.765,2369,4.406,2370,5.446,2371,3.881,2372,6.07,2373,4.448,2374,4.119,2375,4.406,2376,4.119,2377,4.895,2378,4.895,2379,3.617]],["title/classes/CustomRouterStateSerializer.html",[0,0.276,2380,3.908]],["body/classes/CustomRouterStateSerializer.html",[0,0.437,2,0.749,3,0.032,4,0.041,5,0.038,11,2.246,13,3.302,28,1.308,32,0.15,33,0.788,34,0.238,38,1.094,39,0.274,42,0.242,44,0.629,45,0.005,46,0.533,47,0.543,51,0.095,60,0.053,100,0.638,109,1.961,112,0.858,113,0.858,114,0.802,137,1.774,162,0.003,163,0.004,164,0.003,205,2.19,209,1.687,212,3.352,238,1.964,246,4.238,255,3.09,270,2.961,294,2.305,296,1.866,312,2.028,420,1.711,492,2.308,511,2.17,719,3.801,722,3.582,795,4.403,796,6.816,1066,3.926,1081,2.463,1253,3.396,1318,3.926,1409,3.16,2374,4.84,2380,6.195,2381,5.602,2382,7.641,2383,7.951,2384,7.951,2385,7.134,2386,8.264,2387,6.243,2388,7.134,2389,7.891,2390,6.243,2391,7.134,2392,5.602,2393,5.602,2394,8.264,2395,5.602,2396,5.18,2397,5.602,2398,7.258,2399,5.602,2400,5.602,2401,6.596,2402,5.602,2403,5.602,2404,5.602,2405,5.602,2406,5.602,2407,5.602,2408,5.602,2409,5.602,2410,5.602,2411,5.602,2412,5.602,2413,5.602]],["title/classes/DateTimeNgb.html",[0,0.276,964,4.162]],["body/classes/DateTimeNgb.html",[0,0.308,2,0.671,3,0.029,4,0.029,5,0.034,24,2.981,32,0.14,34,0.213,39,0.245,42,0.28,44,0.506,45,0.005,46,0.496,47,0.506,50,0.786,51,0.067,60,0.054,100,1.011,104,3.798,112,0.769,113,0.769,114,0.719,162,0.004,163,0.003,164,0.003,185,3.836,205,2.1,209,2.137,210,3.215,273,2.463,294,1.475,296,1.738,312,2.048,317,3.305,318,3.407,319,2.899,420,2.639,744,4.658,760,2.55,964,6.144,967,8.471,968,7.926,1081,3.274,1432,3.947,1967,4.509,2005,4.643,2161,4.135,2414,9.44,2415,5.596,2416,8.3,2417,7.329,2418,8.834,2419,8.834,2420,6.645,2421,5.596,2422,5.596,2423,5.596,2424,5.596,2425,5.596,2426,7.406,2427,5.596,2428,5.596,2429,7.406,2430,5.596,2431,5.596,2432,5.596,2433,5.596,2434,4.643,2435,5.596,2436,5.596,2437,5.596,2438,8.3,2439,8.3,2440,6.467,2441,8.3,2442,7.448,2443,6.886,2444,7.406,2445,7.406,2446,3.947,2447,5.596,2448,5.596,2449,5.596,2450,5.596,2451,5.596,2452,5.596,2453,5.596,2454,5.022,2455,5.596,2456,5.596,2457,5.596,2458,5.596,2459,5.596,2460,5.022,2461,5.022,2462,5.022,2463,5.596,2464,5.596]],["title/components/DatetimeFilterComponent.html",[279,1,383,1.718]],["body/components/DatetimeFilterComponent.html",[0,0.204,3,0.019,4,0.029,5,0.034,24,1.254,28,1.732,32,0.176,33,0.55,34,0.142,35,0.329,36,0.862,39,0.291,42,0.29,44,0.564,45,0.005,46,0.603,47,0.601,49,0.799,50,0.697,51,0.066,55,1.373,60,0.023,64,1.032,91,0.992,100,0.567,104,2.188,108,3.017,112,1.21,113,1.21,114,1.131,121,1.046,128,0.954,132,1.06,162,0.002,163,0.003,164,0.002,173,1.894,176,2.304,177,2.304,186,0.858,209,0.789,210,2.416,219,2.176,236,1.762,265,1.104,266,1.648,279,1.323,280,1.272,281,1.845,282,1.311,283,1.599,284,1.331,285,1.331,287,1.352,288,1.254,289,3.533,290,2.527,292,1.958,296,1.302,312,1.985,313,2.716,315,0.67,329,1.331,330,1.958,331,1.331,332,1.331,333,1.331,334,1.331,335,1.183,336,1.331,337,1.331,338,1.331,339,1.292,340,1.235,341,1.311,342,1.331,343,1.331,344,1.331,345,0.85,346,1.331,347,1.15,348,1.988,349,1.958,350,1.2,351,2.638,352,1.331,353,1.331,354,1.272,355,1.331,356,1.272,357,2.056,358,1.988,359,1.272,360,1.988,361,1.272,362,1.331,363,1.254,364,1.331,365,1.272,366,1.331,367,2.638,368,1.272,369,1.331,370,1.235,371,1.988,372,1.272,373,1.254,374,1.235,375,1.311,376,1.331,377,1.272,378,1.958,379,1.331,380,1.292,381,1.218,382,1.988,383,3.015,384,3.154,385,2.638,386,1.235,387,1.331,388,1.272,389,1.272,390,1.311,391,1.254,392,1.331,393,1.272,394,1.272,395,1.331,396,1.254,397,1.331,398,1.272,399,1.331,400,1.292,401,1.272,402,1.331,403,1.272,404,1.089,405,1.331,406,1.272,407,2.916,408,1.272,409,2.379,410,1.331,411,1.272,412,1.331,413,1.272,414,1.331,415,1.235,416,1.272,417,1.254,418,1.272,419,1.272,420,2.467,421,1.272,422,1.331,423,1.272,424,1.272,425,1.272,426,1.683,427,1.254,428,1.254,429,1.331,430,1.254,431,1.331,432,1.254,433,1.311,434,1.331,628,3.912,639,4.322,645,3.276,671,1.88,714,5.439,940,6.776,954,4.398,962,4.955,983,3.827,1012,3.334,1013,4.978,1014,4.978,1015,3.334,1081,3.26,1108,8.622,1109,8.622,1228,2.42,1230,2.513,2105,2.513,2460,3.334,2461,5.957,2462,5.957,2465,2.745,2466,6.638,2467,6.638,2468,6.638,2469,7.363,2470,7.878,2471,6.638,2472,5.957,2473,4.098,2474,7.363,2475,5.508,2476,6.638,2477,5.547,2478,6.108,2479,5.547,2480,5.547,2481,5.547,2482,5.547,2483,5.957,2484,3.715,2485,3.334,2486,5.547,2487,3.715,2488,3.715,2489,5.547,2490,3.715,2491,6.638,2492,5.547,2493,3.715,2494,3.715,2495,3.715,2496,5.547,2497,5.547,2498,6.606,2499,3.715,2500,6.638,2501,5.547,2502,3.334,2503,5.957,2504,3.715,2505,3.715,2506,3.334,2507,3.082,2508,2.745,2509,3.715,2510,3.715,2511,2.62,2512,3.715,2513,3.715,2514,3.715,2515,3.715,2516,3.715,2517,3.715,2518,3.715,2519,3.715,2520,3.715,2521,5.547,2522,3.715,2523,4.978,2524,3.715,2525,3.715,2526,3.334,2527,3.715,2528,3.715,2529,3.715,2530,3.715]],["title/classes/DelayedLightCardUpdate.html",[0,0.276,514,2.242]],["body/classes/DelayedLightCardUpdate.html",[0,0.552,2,0.489,3,0.021,4,0.021,5,0.025,8,1.077,10,2.185,11,1.046,12,1.298,32,0.195,33,1.001,34,0.155,35,0.353,36,0.598,37,1.64,38,1.267,39,0.396,40,1.06,42,0.213,44,0.278,45,0.005,46,0.273,47,0.278,49,0.442,50,0.386,51,0.092,52,0.362,60,0.062,61,0.568,65,1.262,79,0.969,88,1.921,98,1.688,100,0.787,109,1.279,112,1.305,113,1.305,114,1.22,146,1.213,154,1.53,162,0.002,163,0.003,164,0.002,186,1.485,190,0.822,193,1.891,224,2.304,238,1.006,316,1.355,345,1.359,444,1.483,446,2.256,449,1.717,454,1.604,455,0.994,456,1.033,457,1.162,458,1.162,459,1.581,461,1.147,462,1.262,472,3.131,473,3.578,474,1.893,475,1.846,478,1.973,479,2.573,480,1.262,481,1.244,482,1.932,483,1.856,484,1.754,485,3.192,486,4.768,487,3.131,488,1.856,489,3.016,490,2.76,491,1.932,492,1.506,493,3.192,494,3.131,495,1.262,496,3.016,497,3.261,498,1.754,499,3.131,500,1.893,501,3.131,502,3.131,503,1.932,504,1.932,505,3.131,506,3.072,507,3.131,508,1.722,509,1.786,510,3.131,511,1.416,512,3.131,513,1.932,514,3.44,515,1.893,516,3.131,517,1.692,518,1.607,519,1.973,520,1.973,521,1.973,522,1.754,523,1.973,524,1.973,525,1.973,526,1.634,527,1.973,528,1.973,529,1.973,530,1.973,531,1.555,532,1.973,533,1.973,534,1.973,535,1.932,536,1.932,537,1.973,538,1.973,539,1.973,540,2.876,541,1.973,542,1.893,2531,5.938,2532,4.074]],["title/classes/Detail.html",[0,0.276,187,2.598]],["body/classes/Detail.html",[0,0.457,2,0.803,3,0.035,4,0.035,5,0.041,11,1.719,32,0.127,38,1.33,39,0.396,42,0.204,44,0.457,45,0.005,46,0.449,47,0.457,51,0.099,60,0.055,61,0.933,100,1.078,112,1.142,113,1.142,114,1.068,162,0.003,163,0.004,164,0.003,171,3.659,186,1.036,187,4.679,189,3.112,206,3.314,211,2.293,216,3.738,273,3.141,283,3.888,480,2.073,481,2.045,492,2.475,554,6.389,635,4.722,1786,5.555,1788,3.954,1789,4.722,1790,4.946,1791,4.946,1792,4.946,1793,5.883,1794,5.216,1795,5.216,1796,4.946,1797,4.946,1799,5.216,1800,8.211,1801,5.216,1802,4.36,1803,8.105,1804,7.494,2533,6.695,2534,6.695]],["title/components/DetailComponent.html",[279,1,386,1.668]],["body/components/DetailComponent.html",[0,0.201,3,0.019,4,0.019,5,0.022,8,0.898,11,1.41,28,1.533,32,0.175,33,0.544,34,0.14,35,0.326,36,0.663,38,0.823,39,0.161,42,0.298,44,0.499,45,0.005,46,0.571,47,0.499,49,0.596,50,0.52,51,0.114,52,0.325,60,0.022,64,1.018,100,0.673,110,1.993,121,1.031,126,2.844,132,1.045,137,1.903,162,0.002,163,0.003,164,0.002,170,3.15,171,2.703,176,2.28,177,2.734,186,1.413,187,4.541,188,1.495,189,1.703,193,2.495,194,1.637,205,2.171,209,1.397,211,1.255,212,1.334,219,1.799,238,0.905,258,2.046,265,1.631,266,1.631,279,1.458,280,1.255,281,1.826,282,1.293,284,1.967,285,1.313,287,2.396,288,1.236,289,3.53,292,1.938,294,2.623,296,1.289,297,2.746,312,2.032,313,2.557,315,0.661,316,1.219,330,1.938,347,1.135,348,2.359,349,2.581,350,1.184,351,2.62,352,1.313,353,1.313,354,1.255,355,1.313,356,1.255,357,2.039,358,1.967,359,1.255,360,1.967,361,1.255,362,1.313,363,1.236,364,1.313,365,1.255,366,1.313,367,2.62,368,1.255,369,1.313,370,1.219,371,1.967,372,1.255,373,1.236,374,1.219,375,1.293,376,1.313,377,1.255,378,1.938,379,1.313,380,1.274,381,1.201,382,1.967,383,1.255,384,1.313,385,2.62,386,2.432,387,1.313,388,1.255,389,1.255,390,1.293,391,1.236,392,1.313,393,1.255,394,1.255,395,1.313,396,1.236,397,1.313,398,1.255,399,1.313,400,1.274,401,1.255,402,1.313,403,1.255,404,1.074,405,1.313,406,1.255,407,1.938,408,1.255,409,2.359,410,1.313,411,1.255,412,1.313,413,1.255,414,1.313,415,1.219,416,1.255,417,1.236,418,1.255,419,1.255,420,1.505,421,1.255,422,1.313,423,1.255,424,1.255,425,1.255,426,0.929,427,1.236,428,1.236,429,1.313,430,1.236,431,1.313,432,1.236,433,1.293,434,1.313,497,1.399,582,2.584,583,2.479,584,1.018,585,1.018,586,1.045,599,1.018,681,1.898,682,1.898,887,4.141,1081,1.445,1155,2.164,1379,2.305,1716,6.561,1788,2.164,1789,3.872,1817,3.453,1819,3.676,1820,4.762,1877,3.288,1907,4.082,1914,2.479,1918,3.288,1923,3.288,1928,3.288,1929,3.288,2105,3.714,2170,5.402,2181,3.288,2298,6.067,2322,2.707,2371,2.102,2478,5.462,2535,3.664,2536,5.49,2537,6.584,2538,6.584,2539,6.584,2540,6.642,2541,5.49,2542,5.49,2543,5.49,2544,7.312,2545,7.312,2546,6.561,2547,7.312,2548,6.584,2549,3.664,2550,5.13,2551,5.462,2552,5.908,2553,5.49,2554,3.664,2555,3.664,2556,5.49,2557,6.584,2558,8.222,2559,3.664,2560,3.664,2561,3.664,2562,5.49,2563,3.664,2564,3.664,2565,3.664,2566,3.664,2567,3.664,2568,3.664,2569,6.584,2570,3.664,2571,3.664,2572,3.664,2573,4.278,2574,3.664,2575,3.664,2576,3.664,2577,3.288,2578,3.664,2579,3.288,2580,2.855,2581,3.288,2582,4.555,2583,3.664,2584,3.288,2585,5.49,2586,5.49,2587,3.664,2588,3.664,2589,3.664,2590,3.664,2591,3.664,2592,3.664,2593,3.664,2594,3.664,2595,3.664,2596,3.664,2597,3.664,2598,3.664,2599,3.664,2600,3.664,2601,4.926,2602,5.49,2603,3.664,2604,3.664,2605,3.664,2606,3.664,2607,3.664,2608,3.664,2609,3.664,2610,3.664,2611,3.664,2612,3.664,2613,3.664,2614,3.664,2615,5.49,2616,3.664,2617,3.288,2618,3.664,2619,3.664,2620,3.664,2621,3.664,2622,3.664,2623,3.664,2624,3.664,2625,3.664,2626,5.49,2627,3.664,2628,5.49,2629,3.664,2630,5.49,2631,3.664,2632,3.664,2633,3.664,2634,3.664,2635,3.664,2636,3.664,2637,3.664,2638,3.288,2639,3.288,2640,3.04,2641,3.664,2642,3.664,2643,3.664,2644,3.664,2645,3.664,2646,3.664,2647,3.664,2648,3.664,2649,3.288,2650,3.288,2651,3.664,2652,3.664]],["title/classes/DetailContext.html",[0,0.276,2580,3.908]],["body/classes/DetailContext.html",[0,0.428,2,0.934,3,0.04,4,0.04,5,0.048,32,0.147,38,0.974,39,0.341,42,0.237,44,0.532,45,0.005,46,0.522,47,0.532,51,0.109,60,0.048,162,0.004,163,0.004,164,0.004,186,1.538,188,3.179,2434,6.464,2540,8.061,2580,7.092,2582,6.464,2584,6.991,2653,9.102,2654,6.991,2655,7.791,2656,7.791,2657,7.791]],["title/components/DetailsComponent.html",[279,1,388,1.718]],["body/components/DetailsComponent.html",[0,0.249,3,0.023,4,0.033,5,0.039,32,0.176,33,0.636,34,0.173,35,0.381,36,0.645,39,0.326,42,0.298,44,0.438,45,0.005,46,0.571,47,0.438,51,0.096,60,0.028,64,1.259,69,1.464,91,1.21,100,0.655,121,1.275,128,1.163,132,1.293,162,0.002,163,0.003,164,0.002,172,2.6,173,1.293,176,2.661,177,2.661,186,1.439,187,3.319,188,1.849,209,0.962,216,4.944,219,1.485,265,1.346,266,1.904,279,1.482,280,1.552,281,2.131,282,1.599,283,1.95,284,1.624,285,1.624,288,1.529,289,3.575,290,2.92,292,2.262,294,2.333,296,1.504,300,6.169,312,1.977,313,2.597,315,0.817,329,1.624,330,1.599,331,1.624,332,1.624,333,1.624,334,1.624,335,1.443,336,1.624,337,1.624,338,1.624,339,1.575,340,1.507,341,1.599,342,1.624,343,1.624,344,1.624,345,1.037,346,1.624,347,1.403,348,2.297,349,2.262,350,1.464,351,2.897,352,1.624,353,1.624,354,1.552,355,1.624,356,1.552,357,2.303,358,2.297,359,1.552,360,2.297,361,1.552,362,1.624,363,1.529,364,1.624,365,1.552,366,1.624,367,2.897,368,1.552,369,1.624,370,1.507,371,2.297,372,1.552,373,1.529,374,1.507,375,1.599,376,1.624,377,1.552,378,2.262,379,1.624,380,1.575,381,1.485,382,2.297,383,1.552,384,1.624,385,2.897,386,2.836,387,1.624,388,2.768,389,1.552,390,1.599,391,1.529,392,1.624,393,1.552,394,1.552,395,1.624,396,1.529,397,1.624,398,1.552,399,1.624,400,1.575,401,1.552,402,1.624,403,1.552,404,1.328,405,1.624,406,1.552,407,2.262,408,1.552,409,2.665,410,1.624,411,1.552,412,1.624,413,3.118,414,1.624,415,1.507,416,1.552,417,1.529,418,1.552,419,1.552,420,1.757,421,1.552,422,1.624,423,1.552,424,1.552,425,1.552,426,1.148,427,1.529,428,1.529,429,1.624,430,1.529,431,1.624,432,1.529,433,1.599,434,1.624,632,2.676,887,2.85,912,2.465,947,2.759,983,2.025,1030,3.53,1031,4.993,1032,3.53,1033,3.53,1034,3.759,1081,1.787,1577,2.759,1713,4.52,1714,5.794,1808,6.672,1817,4.031,1840,4.066,1847,5.751,1905,5.751,1967,3.902,1996,5.317,1997,7.093,1999,5.03,2000,4.066,2002,4.066,2003,4.066,2004,4.066,2005,3.759,2478,6.169,2546,5.751,2577,7.253,2617,4.066,2658,4.531,2659,6.169,2660,7.436,2661,6.409,2662,8.084,2663,6.409,2664,4.531,2665,4.531,2666,6.409,2667,4.531,2668,4.531,2669,6.409,2670,4.531,2671,4.531,2672,7.436,2673,6.409,2674,4.531,2675,4.531,2676,4.531,2677,4.531,2678,6.409,2679,4.531,2680,4.531,2681,4.531,2682,4.531,2683,5.751,2684,2.465,2685,6.409,2686,4.531,2687,4.531,2688,4.531,2689,4.531,2690,4.531,2691,6.409,2692,4.531,2693,4.531,2694,6.409]],["title/directives/DraggableDirective.html",[350,1.621,430,1.693]],["body/directives/DraggableDirective.html",[0,0.319,3,0.03,4,0.03,5,0.035,28,1.77,32,0.16,34,0.221,35,0.45,42,0.296,45,0.005,49,0.629,50,0.549,51,0.069,60,0.035,91,1.548,162,0.003,163,0.004,164,0.003,209,1.793,219,2.936,265,1.723,288,1.957,289,2.558,294,2.226,313,2.555,315,1.046,350,2.449,427,1.957,430,2.558,460,3.424,495,1.796,598,4.594,983,4.34,1197,4.477,1300,4.089,1422,5.346,1496,7.428,1713,5.346,1725,4.518,2023,4.811,2105,7.014,2601,5.203,2684,3.154,2695,7.676,2696,8.84,2697,5.799,2698,7.581,2699,8.446,2700,6.802,2701,8.446,2702,8.446,2703,8.446,2704,7.581,2705,7.581,2706,7.581,2707,8.715,2708,5.799,2709,5.799,2710,5.799,2711,7.007,2712,5.799,2713,9.534,2714,5.799,2715,10.19,2716,5.346,2717,5.799,2718,5.799,2719,5.799,2720,5.799,2721,5.799,2722,8.037,2723,5.799,2724,5.799,2725,9.534,2726,5.799,2727,5.799,2728,5.799,2729,5.799,2730,5.799,2731,5.799,2732,5.799,2733,5.799,2734,5.799,2735,5.799,2736,5.203,2737,6.802,2738,5.799,2739,5.799,2740,5.799,2741,5.799,2742,5.799]],["title/components/EmailSettingComponent.html",[279,1,389,1.718]],["body/components/EmailSettingComponent.html",[0,0.231,3,0.022,4,0.022,5,0.026,28,0.879,32,0.186,33,0.601,34,0.16,35,0.36,39,0.184,42,0.313,44,0.608,45,0.005,46,0.632,47,0.608,49,0.658,50,0.817,51,0.099,52,0.373,60,0.026,64,1.165,100,0.728,121,1.181,128,1.557,132,1.197,137,1.926,162,0.002,163,0.003,164,0.002,173,2.462,176,2.519,177,2.519,186,0.939,205,0.997,209,0.89,236,1.99,265,1.802,266,1.802,279,1.42,280,1.437,281,2.017,282,1.48,284,1.503,285,1.503,287,2.593,288,1.416,289,3.56,292,2.14,294,2.274,296,1.424,297,2.676,312,2.257,313,2.462,315,0.756,335,1.336,347,1.299,348,2.173,349,2.14,350,1.355,351,2.797,352,1.503,353,1.503,354,1.437,355,1.503,356,1.437,357,2.206,358,2.173,359,1.437,360,2.173,361,1.437,362,1.503,363,1.416,364,1.503,365,3.424,366,1.503,367,2.797,368,1.437,369,1.503,370,1.395,371,2.173,372,1.437,373,1.416,374,1.395,375,1.48,376,1.503,377,1.437,378,2.14,379,1.503,380,1.458,381,1.375,382,2.173,383,1.437,384,1.503,385,2.797,386,1.395,387,1.503,388,1.437,389,2.673,390,2.922,391,1.416,392,1.503,393,1.437,394,1.437,395,1.503,396,1.416,397,1.503,398,1.437,399,1.503,400,1.458,401,1.437,402,1.503,403,1.437,404,1.229,405,1.503,406,1.437,407,2.14,408,1.437,409,2.553,410,1.503,411,1.437,412,1.503,413,1.437,414,1.503,415,1.395,416,1.437,417,1.416,418,3.229,419,1.437,420,1.662,421,1.437,422,1.503,423,1.437,424,1.437,425,1.437,426,1.063,427,1.416,428,1.416,429,1.503,430,1.416,431,1.503,432,1.416,433,1.48,434,1.503,556,1.48,585,1.165,586,1.197,671,2.123,954,3.386,1303,3.582,1416,3.218,1619,3.268,1620,4.207,1621,5.504,1622,4.726,1623,4.277,1624,3.693,1625,6.796,1626,4.277,1627,6.086,1628,5.504,1629,4.207,1630,5.024,1631,5.504,1632,4.277,1633,4.277,1634,4.277,1638,3.764,1639,2.958,1641,2.958,1644,4.277,1645,4.909,1647,4.277,1651,4.277,1666,2.958,1967,3.693,1999,6.899,2475,6.869,2508,5.263,2743,7.805,2744,7.003,2745,7.985,2746,5.442,2747,6.065,2748,4.195,2749,4.195,2750,3.099,2751,3.099,2752,3.099,2753,4.195,2754,4.195,2755,4.195,2756,4.195,2757,3.099,2758,3.099,2759,3.099,2760,3.099,2761,3.099,2762,3.099,2763,3.099,2764,3.099,2765,3.099,2766,3.099,2767,3.099,2768,3.099,2769,3.099,2770,3.48,2771,3.099,2772,3.099,2773,4.195,2774,4.195,2775,4.195,2776,4.726,2777,5.032,2778,5.032]],["title/classes/EmptyLightCards.html",[0,0.276,487,2.242]],["body/classes/EmptyLightCards.html",[0,0.554,2,0.5,3,0.021,4,0.021,5,0.025,8,1.08,10,2.205,11,1.07,12,1.327,32,0.193,33,1.004,34,0.159,35,0.358,37,1.593,38,1.27,39,0.389,42,0.127,45,0.005,49,0.452,50,0.394,51,0.093,52,0.37,60,0.062,61,0.58,65,1.29,79,0.99,88,1.938,98,1.697,100,0.795,109,1.308,112,1.311,113,1.311,114,1.225,146,1.221,154,1.565,162,0.002,163,0.003,164,0.002,186,1.491,190,0.841,193,1.922,224,2.341,238,1.029,316,1.385,345,1.381,444,1.516,446,2.28,449,1.745,454,1.624,455,1.016,456,1.056,457,1.188,458,1.188,459,1.616,461,1.173,462,1.29,472,3.171,473,2.805,474,1.936,478,2.018,479,2.593,480,1.29,481,1.272,482,1.976,483,1.898,484,1.793,485,3.233,486,4.781,487,3.476,488,1.898,489,3.054,490,2.805,491,1.976,492,1.54,493,3.233,494,3.171,495,1.29,496,3.054,497,3.286,498,1.793,499,3.171,500,1.936,501,3.171,502,3.171,503,1.976,504,1.976,505,3.171,506,3.111,507,3.171,508,1.761,509,1.827,510,3.171,511,1.448,512,3.171,513,1.976,514,3.171,515,1.936,516,3.171,517,1.73,518,1.643,519,2.018,520,2.923,521,2.018,522,1.793,523,2.018,524,2.018,525,2.018,526,1.671,527,2.018,528,2.018,529,2.018,530,2.018,531,1.59,532,2.018,533,2.018,534,2.018,535,1.976,536,1.976,537,2.018,538,2.018,539,2.018,540,2.018,541,2.018,542,1.936,2779,4.166]],["title/classes/FailToUpdateTimeReference.html",[0,0.276,2780,3.267]],["body/classes/FailToUpdateTimeReference.html",[0,0.504,2,0.742,3,0.032,4,0.032,5,0.038,7,2.4,8,1.022,10,2.326,16,2.713,32,0.191,33,0.91,34,0.236,35,0.469,36,0.877,37,1.605,38,1.186,39,0.271,40,1.609,42,0.265,44,0.422,45,0.005,46,0.414,47,0.422,49,0.671,50,0.586,51,0.109,52,0.55,55,2.922,56,2.819,60,0.059,61,0.862,74,2.713,98,1.655,104,2.44,109,2.482,136,4.001,146,1.198,162,0.003,163,0.004,164,0.003,273,2.057,281,2.057,420,2.659,449,1.789,475,2.296,511,2.151,564,3.749,571,5.84,884,3.55,1416,3.282,1433,3.601,1480,4.185,1560,5.148,1926,5.575,2780,5.674,2781,4.363,2782,5.575,2783,6.159,2784,7.152,2785,5.84,2786,6.159,2787,7.905,2788,6.187,2789,6.159,2790,4.029,2791,4.363,2792,3.767,2793,4.363,2794,4.82,2795,5.421,2796,4.82,2797,5.575,2798,4.82,2799,6.436,2800,6.436,2801,4.82,2802,4.82,2803,6.159,2804,4.571,2805,4.185,2806,4.82,2807,4.82,2808,4.571,2809,4.82,2810,4.185,2811,4.571,2812,5.148,2813,4.82,2814,4.82,2815,4.571]],["title/components/FeedComponent.html",[279,1,391,1.693]],["body/components/FeedComponent.html",[0,0.268,3,0.025,4,0.035,5,0.041,17,2.032,32,0.172,33,0.669,34,0.186,35,0.401,36,0.491,39,0.214,42,0.276,44,0.333,45,0.005,46,0.559,47,0.333,51,0.116,52,0.433,60,0.03,64,1.356,91,1.303,121,1.374,128,1.253,132,1.392,137,2.023,162,0.002,163,0.003,164,0.002,173,1.926,186,1.045,265,1.45,266,2.006,279,1.543,280,1.671,281,2.245,282,1.722,283,2.101,284,1.749,285,1.749,287,2.816,288,1.647,289,3.589,290,3.076,292,2.382,294,1.286,296,1.585,297,3.136,312,1.565,313,1.926,315,0.88,329,1.749,330,1.722,331,1.749,332,1.749,333,1.749,334,1.749,335,1.554,336,1.749,337,1.749,338,1.749,339,2.69,340,1.623,341,1.722,342,1.749,343,1.749,344,1.749,345,1.117,346,1.749,347,1.511,348,2.419,349,2.382,350,1.577,351,2.992,352,1.749,353,1.749,354,1.671,355,1.749,356,1.671,357,2.397,358,2.419,359,1.671,360,2.419,361,1.671,362,1.749,363,1.647,364,1.749,365,1.671,366,1.749,367,2.992,368,1.671,369,1.749,370,1.623,371,2.419,372,1.671,373,1.647,374,1.623,375,1.722,376,1.749,377,1.671,378,2.382,379,1.749,380,1.697,381,1.6,382,2.419,383,1.671,384,1.749,385,2.992,386,1.623,387,1.749,388,1.671,389,1.671,390,1.722,391,2.818,392,1.749,393,1.671,394,1.671,395,1.749,396,1.647,397,1.749,398,1.671,399,1.749,400,1.697,401,1.671,402,1.749,403,1.671,404,1.43,405,1.749,406,1.671,407,2.382,408,1.671,409,2.773,410,1.749,411,1.671,412,1.749,413,1.671,414,1.749,415,1.623,416,1.671,417,1.647,418,1.671,419,1.671,420,1.85,421,1.671,422,1.749,423,1.671,424,1.671,425,1.671,426,1.237,427,1.647,428,1.647,429,1.749,430,1.647,431,1.749,432,1.647,433,1.722,434,1.749,479,1.47,480,1.511,481,1.49,495,1.511,498,3.331,522,3.331,531,2.577,556,1.722,584,1.356,585,1.356,586,1.392,593,2.315,596,2.528,599,1.356,760,3.076,927,2.14,930,1.722,947,4.11,1051,4.049,1053,3.442,1089,4.049,1091,4.379,1433,3.076,1997,6.506,2084,6.555,2108,4.049,2440,3.803,2443,4.049,2659,6.421,2816,4.881,2817,7.739,2818,6.751,2819,7.739,2820,6.751,2821,4.881,2822,4.881,2823,4.881,2824,4.881,2825,4.379,2826,3.301,2827,4.881,2828,4.881,2829,4.881,2830,4.881,2831,4.881,2832,6.944,2833,4.881,2834,6.057,2835,4.881,2836,4.881,2837,4.881,2838,4.881,2839,4.881,2840,4.881,2841,4.881,2842,6.751,2843,4.881]],["title/injectables/FeedFiltersEffects.html",[841,4.162,892,1.393]],["body/injectables/FeedFiltersEffects.html",[0,0.227,3,0.021,4,0.021,5,0.025,8,0.933,9,1.921,12,1.911,17,2.053,28,1.625,32,0.163,34,0.158,35,0.356,39,0.181,42,0.27,44,0.282,45,0.005,46,0.473,47,0.282,49,0.984,50,0.813,51,0.116,52,0.367,60,0.025,65,1.858,69,1.939,88,2.08,112,0.568,113,0.568,114,0.531,120,2.787,137,1.916,162,0.002,163,0.003,164,0.002,186,0.929,190,1.426,205,2.041,209,2.078,210,3.419,219,1.967,241,4.055,273,1.995,275,3.35,279,0.824,294,2.508,315,0.745,339,3.345,420,2.354,426,2.086,488,2.734,556,1.459,569,3.221,584,1.148,585,1.148,586,1.179,593,1.961,596,2.141,599,1.148,635,2.915,780,3.184,841,4.979,874,4.172,881,2.517,882,2.6,887,4.875,888,2.915,892,1.667,893,1.813,912,3.842,924,2.248,925,2.141,929,3.054,930,1.459,983,3.157,1032,3.221,1081,3.057,1197,5.359,1286,3.629,1496,4.675,1500,4.926,1534,4.433,1658,3.43,2042,5.384,2043,5.384,2044,4.675,2061,4.979,2066,3.054,2071,2.372,2072,3.054,2573,6.039,2684,2.248,2716,6.786,2782,4.232,2793,2.915,2795,4.172,2804,5.219,2811,5.727,2826,2.796,2844,9.075,2845,4.134,2846,7.064,2847,5.861,2848,7.064,2849,7.064,2850,7.064,2851,7.751,2852,5.727,2853,6.001,2854,4.134,2855,4.134,2856,9.396,2857,6.001,2858,6.001,2859,6.001,2860,6.001,2861,6.001,2862,6.001,2863,6.001,2864,7.751,2865,6.001,2866,7.751,2867,6.001,2868,6.001,2869,4.979,2870,6.001,2871,6.001,2872,4.134,2873,6.001,2874,4.433,2875,6.001,2876,4.134,2877,6.001,2878,6.001,2879,7.064,2880,6.001,2881,9.075,2882,6.001,2883,6.001,2884,7.751,2885,8.586,2886,6.001,2887,6.001,2888,6.001,2889,6.001,2890,6.001,2891,6.001,2892,7.751,2893,6.001,2894,8.586,2895,8.586,2896,6.001,2897,6.001,2898,6.001,2899,4.134,2900,2.372,2901,2.517,2902,3.709,2903,3.221,2904,4.134,2905,4.134,2906,3.43,2907,2.796,2908,4.134,2909,4.134,2910,4.134,2911,4.134,2912,4.134]],["title/modules/FeedModule.html",[640,2.2,2913,3.908]],["body/modules/FeedModule.html",[0,0.285,3,0.027,4,0.036,5,0.043,32,0.098,36,0.523,45,0.005,51,0.125,60,0.032,76,2.235,91,1.386,128,1.333,162,0.002,163,0.003,164,0.002,315,0.936,317,3.066,318,3.161,319,3.648,329,1.86,330,1.832,331,1.86,332,1.86,333,1.86,334,1.86,335,1.654,336,1.86,337,1.86,338,1.86,339,1.805,340,1.726,341,1.832,342,1.86,343,1.86,344,1.86,345,1.188,346,1.86,347,1.608,372,3.164,380,3.211,381,2.308,391,3.381,393,3.164,400,3.211,411,3.164,416,3.164,419,3.164,421,3.164,424,1.778,425,3.164,430,3.117,432,3.117,640,2.276,642,2.628,643,2.979,644,4.866,645,4.159,646,4.24,654,6.249,655,4.159,656,3.161,658,3.83,660,3.83,665,4.429,668,3.066,669,5.487,670,5.487,671,2.628,673,4.045,675,3.512,680,5.203,681,3.648,682,2.689,685,6.319,686,4.307,687,4.307,688,3.512,689,4.307,690,5.487,691,4.307,694,4.307,695,4.307,696,4.307,714,3.835,715,4.045,724,2.898,950,4.719,969,3.161,1098,6.515,1103,4.658,1107,7.171,1110,4.658,1995,4.658,2177,8.039,2182,4.658,2417,4.307,2696,4.658,2795,3.066,2913,8.279,2914,4.658,2915,4.658,2916,4.658,2917,4.658,2918,7.198,2919,6.825,2920,5.191,2921,4.658,2922,5.191,2923,4.658,2924,5.191,2925,9.238,2926,4.658,2927,5.191,2928,5.191,2929,4.658,2930,4.658,2931,4.658,2932,4.658,2933,5.191,2934,7.042,2935,7.042,2936,4.658,2937,4.658,2938,5.191,2939,5.191,2940,7.042,2941,4.658,2942,4.658,2943,4.658,2944,5.191,2945,4.658,2946,5.191,2947,5.191,2948,5.191,2949,5.191,2950,4.658,2951,4.658,2952,6.319,2953,5.191,2954,5.191]],["title/modules/FeedRoutingModule.html",[640,2.2,2919,3.706]],["body/modules/FeedRoutingModule.html",[0,0.375,3,0.035,4,0.043,5,0.051,36,0.687,45,0.005,51,0.119,60,0.042,91,1.82,128,1.751,162,0.003,163,0.004,164,0.003,205,1.621,279,1.895,315,1.229,329,2.443,330,2.406,331,2.443,332,2.443,333,2.443,334,2.443,335,2.172,336,2.443,337,2.443,338,2.443,339,2.37,340,2.267,341,2.406,342,2.443,343,2.443,344,2.443,345,1.561,346,2.443,370,3.028,386,2.794,391,2.835,531,3.207,642,3.451,646,3.617,658,3.709,660,4.57,717,5.038,720,6.208,721,5.931,722,3.912,727,7.345,730,5.313,731,6.546,737,5.657,1112,6.118,1113,6.118,1114,5.313,1115,5.657,1116,6.118,1117,8.172,1118,6.118,1119,6.118,1120,6.118,1121,6.118,1122,5.313,2919,6.208,2921,6.118,2955,6.819]],["title/classes/Filter.html",[0,0.276,426,1.271]],["body/classes/Filter.html",[0,0.275,2,0.601,3,0.026,4,0.026,5,0.031,7,1.943,11,2.168,24,2.647,28,1.05,30,4.479,32,0.173,34,0.191,35,0.408,36,0.92,38,0.626,39,0.37,42,0.285,44,0.576,45,0.005,46,0.566,47,0.576,51,0.06,60,0.031,65,3.106,76,2.958,109,2.158,112,0.689,113,0.689,114,1.257,137,1.534,162,0.002,163,0.003,164,0.002,173,2.524,186,1.599,209,1.939,219,2.571,230,3.942,270,3.721,279,1.37,296,1.613,312,2.118,313,1.429,341,2.425,426,2.668,479,2.913,480,1.551,481,1.529,598,4.812,724,3.836,773,4.058,874,4.058,887,5.309,917,4.592,983,3.505,1081,2.71,1264,4.846,1438,4.846,1439,4.058,1537,6.578,2212,6.166,2396,5.701,2711,5.701,2869,5.701,2906,5.701,2956,9.531,2957,5.008,2958,6.871,2959,6.166,2960,6.871,2961,6.871,2962,9.531,2963,6.166,2964,6.871,2965,6.871,2966,6.871,2967,6.871,2968,6.871,2969,6.871,2970,6.871,2971,6.166,2972,8.442,2973,7.844,2974,5.008,2975,5.008,2976,5.008,2977,5.008,2978,5.008,2979,6.871,2980,5.008,2981,6.871,2982,8.442,2983,5.008,2984,8.442,2985,6.871,2986,6.871,2987,6.871,2988,5.008,2989,6.871,2990,6.871,2991,5.008,2992,5.008,2993,5.008,2994,5.008,2995,5.008,2996,5.008,2997,5.008,2998,5.008,2999,5.008,3000,5.008,3001,5.008,3002,5.008,3003,6.871,3004,5.008]],["title/injectables/FilterService.html",[892,1.393,2852,3.706]],["body/injectables/FilterService.html",[0,0.323,3,0.03,4,0.03,5,0.036,8,0.895,13,3.528,28,2.005,34,0.224,35,0.454,36,0.855,39,0.372,42,0.297,45,0.005,49,0.637,50,0.556,51,0.107,60,0.047,61,0.818,65,2.631,162,0.004,163,0.004,164,0.003,186,1.182,190,1.931,205,2.274,209,2.067,219,1.924,228,2.481,294,2.716,296,1.794,312,2.163,315,1.058,417,1.981,426,2.281,479,1.768,480,1.818,481,1.793,546,4.573,879,3.971,880,3.823,881,3.574,888,5.991,892,2.122,893,2.574,917,4.156,983,4.169,1081,2.315,1143,3.04,1793,3.823,2852,5.645,3005,5.267,3006,8.496,3007,8.999,3008,8.999,3009,8.999,3010,8.999,3011,7.641,3012,5.87,3013,5.87,3014,5.87,3015,5.87,3016,5.87,3017,5.267,3018,7.641,3019,5.87,3020,6.277,3021,4.87,3022,4.87,3023,6.277,3024,4.87,3025,4.87,3026,5.87,3027,8.999,3028,5.87,3029,5.87,3030,5.87,3031,5.87,3032,5.87,3033,5.87,3034,5.87,3035,5.87,3036,5.87,3037,5.87,3038,5.87,3039,5.87,3040,5.87,3041,5.87,3042,5.87,3043,5.267,3044,5.267,3045,5.267,3046,5.267,3047,5.267]],["title/components/FiltersComponent.html",[279,1,393,1.718]],["body/components/FiltersComponent.html",[0,0.31,3,0.029,4,0.029,5,0.034,17,1.931,32,0.168,33,0.738,34,0.215,35,0.442,39,0.247,42,0.254,44,0.385,45,0.005,46,0.593,47,0.385,51,0.11,52,0.501,60,0.034,64,1.565,121,1.586,132,1.608,137,2.111,162,0.003,163,0.003,164,0.003,186,1.151,265,1.674,266,2.21,279,1.66,280,1.93,281,2.474,282,1.989,284,2.02,285,2.02,287,3.031,288,1.902,289,3.614,292,2.626,296,1.747,297,3.327,312,1.306,313,1.608,315,1.016,347,1.745,348,2.666,349,2.626,350,1.821,351,3.174,352,2.02,353,2.02,354,1.93,355,2.02,356,1.93,357,2.579,358,2.666,359,1.93,360,2.666,361,1.93,362,2.02,363,1.902,364,2.02,365,1.93,366,2.02,367,3.174,368,1.93,369,2.02,370,1.874,371,2.666,372,1.93,373,1.902,374,1.874,375,1.989,376,2.02,377,1.93,378,2.626,379,2.02,380,1.959,381,1.847,382,2.666,383,1.93,384,2.02,385,3.174,386,1.874,387,2.02,388,1.93,389,1.93,390,1.989,391,1.902,392,2.02,393,3.034,394,1.93,395,2.02,396,1.902,397,2.02,398,1.93,399,2.02,400,1.959,401,1.93,402,2.02,403,1.93,404,1.652,405,2.02,406,1.93,407,2.626,408,1.93,409,2.985,410,2.02,411,1.93,412,2.02,413,1.93,414,2.02,415,1.874,416,1.93,417,1.902,418,1.93,419,1.93,420,2.039,421,1.93,422,2.02,423,1.93,424,1.93,425,1.93,426,1.428,427,1.902,428,1.902,429,2.02,430,1.902,431,2.02,432,1.902,433,1.989,434,2.02,556,1.989,584,1.565,585,1.565,586,1.608,593,2.673,599,1.565,917,4.047,944,6.676,1049,4.164,1994,6.544,3048,5.636,3049,6.91,3050,7.44,3051,5.636,3052,4.676,3053,4.676]],["title/classes/GuidService.html",[0,0.276,1138,3.155]],["body/classes/GuidService.html",[0,0.402,2,0.877,3,0.038,4,0.038,5,0.045,32,0.138,34,0.279,35,0.521,38,1.174,39,0.412,42,0.296,45,0.005,51,0.105,53,4.726,54,3.333,60,0.045,100,0.897,162,0.003,163,0.004,164,0.003,209,1.861,294,2.475,296,2.059,312,2.033,315,1.319,546,5.701,1138,5.516,2213,7.869,3017,6.565,3054,7.317,3055,9.737,3056,9.737,3057,8.77,3058,7.317,3059,7.317,3060,8.77,3061,7.317,3062,7.317]],["title/classes/HandleUnexpectedError.html",[0,0.276,454,1.148]],["body/classes/HandleUnexpectedError.html",[0,0.525,2,0.701,3,0.03,4,0.03,5,0.036,8,1.039,10,2.034,32,0.195,33,0.965,34,0.223,35,0.452,36,0.767,37,1.688,38,1.234,39,0.256,40,1.519,42,0.258,44,0.399,45,0.005,46,0.391,47,0.399,49,0.634,50,0.553,51,0.101,52,0.519,60,0.06,61,0.814,98,1.722,100,0.597,112,1.338,113,1.338,114,1.25,127,3.603,146,1.165,162,0.004,163,0.004,164,0.003,186,1.179,190,1.538,246,2.384,273,1.942,345,1.337,357,2.958,426,1.481,451,3.945,454,2.056,455,1.425,456,1.481,457,1.666,458,1.666,475,2.234,479,1.759,480,1.809,481,1.784,495,1.809,497,2.229,526,2.343,572,3.351,902,5.005,917,3.177,931,3.804,932,5.16,933,5.005,937,3.674,938,5.16,1062,3.804,1065,4.119,1066,5.331,1067,3.804,1068,5.16,1069,4.119,1070,4.119,1071,5.372,1072,3.951,1073,4.119,1074,4.119,1075,3.951,3063,7.617,3064,5.841]],["title/classes/HandleUnexpectedError-1.html",[0,0.229,454,0.955,760,1.901]],["body/classes/HandleUnexpectedError-1.html",[0,0.538,2,0.634,3,0.027,4,0.027,5,0.032,8,1.051,32,0.195,33,0.98,34,0.202,35,0.423,36,0.718,37,1.688,38,1.247,39,0.232,40,1.376,42,0.246,44,0.361,45,0.005,46,0.354,47,0.361,49,0.574,50,0.501,51,0.085,52,0.47,60,0.061,61,0.737,79,1.695,88,1.242,98,1.741,100,0.825,112,1.345,113,1.345,114,1.257,146,1.305,162,0.002,163,0.003,164,0.002,186,1.611,188,2.158,211,2.442,238,1.306,437,4.388,438,3.123,441,3.326,442,3.034,443,4.388,444,1.925,445,4.083,446,2.722,447,4.504,448,4.504,449,2.062,450,4.28,451,4.179,452,4.504,453,4.504,454,1.976,455,1.29,456,1.34,457,1.509,458,1.509,459,2.052,460,3.123,461,1.489,462,1.638,463,3.326,464,3.326,465,3.326,466,3.326,467,3.326,468,3.326,469,3.326,470,4.485,471,3.22,475,2.126,3065,7.131,3066,5.289]],["title/classes/HandleUnexpectedError-2.html",[0,0.229,454,0.955,744,2.625]],["body/classes/HandleUnexpectedError-2.html",[0,0.51,2,0.763,3,0.033,4,0.033,5,0.039,8,1.029,32,0.195,33,0.949,34,0.243,35,0.478,36,0.81,37,1.654,38,1.222,39,0.279,40,1.654,42,0.269,44,0.434,45,0.005,46,0.426,47,0.434,49,0.69,50,0.602,51,0.076,52,0.565,60,0.06,61,0.886,79,1.512,98,1.591,112,1.275,113,1.275,114,1.192,146,1.315,162,0.003,163,0.004,164,0.003,238,1.571,446,2.586,449,1.839,454,2.122,455,1.551,456,1.612,457,1.814,458,1.814,461,1.79,462,1.969,475,2.325,591,5.549,780,5.326,1195,3.648,1541,5.549,1578,4.301,2216,5.746,3067,4.484,3068,8.044,3069,6.359,3070,6.267,3071,4.954,3072,4.954,3073,4.954,3074,4.698]],["title/classes/HandleUnexpectedError-3.html",[0,0.229,454,0.955,2446,2.943]],["body/classes/HandleUnexpectedError-3.html",[0,0.552,2,0.489,3,0.021,4,0.021,5,0.025,8,1.077,10,2.185,11,1.046,12,1.298,32,0.195,33,1.001,34,0.155,35,0.353,36,0.598,37,1.64,38,1.267,39,0.396,40,1.06,42,0.213,44,0.278,45,0.005,46,0.273,47,0.278,49,0.442,50,0.386,51,0.092,52,0.362,60,0.062,61,0.568,65,1.262,79,0.969,88,1.921,98,1.688,100,0.787,109,1.279,112,1.305,113,1.305,114,1.22,146,1.213,154,1.53,162,0.002,163,0.003,164,0.002,186,1.485,190,0.822,193,1.891,224,2.304,238,1.006,316,1.355,345,1.359,444,1.483,446,2.256,449,1.717,454,1.762,455,0.994,456,1.033,457,1.162,458,1.162,459,1.581,461,1.147,462,1.262,472,3.131,473,3.578,474,1.893,475,1.846,478,1.973,479,2.573,480,1.262,481,1.244,482,1.932,483,1.856,484,1.754,485,3.192,486,4.768,487,3.131,488,1.856,489,3.016,490,2.76,491,1.932,492,1.506,493,3.192,494,3.131,495,1.262,496,3.016,497,3.261,498,1.754,499,3.131,500,1.893,501,3.131,502,3.131,503,1.932,504,1.932,505,3.131,506,3.072,507,3.131,508,1.722,509,1.786,510,3.131,511,1.416,512,3.131,513,1.932,514,3.131,515,1.893,516,3.131,517,1.692,518,1.607,519,1.973,520,1.973,521,1.973,522,1.754,523,1.973,524,1.973,525,1.973,526,1.634,527,1.973,528,1.973,529,2.876,530,1.973,531,1.555,532,1.973,533,1.973,534,1.973,535,1.932,536,1.932,537,1.973,538,1.973,539,1.973,540,1.973,541,1.973,542,1.893,3075,5.938,3076,4.074]],["title/classes/HandleUnexpectedError-4.html",[0,0.229,454,0.955,3077,3.462]],["body/classes/HandleUnexpectedError-4.html",[0,0.519,2,0.621,3,0.027,4,0.027,5,0.032,8,1.055,14,2.405,16,2.269,17,1.199,32,0.193,33,0.953,34,0.197,35,0.417,36,0.708,37,1.695,38,1.218,39,0.308,40,1.346,42,0.243,44,0.584,45,0.005,46,0.347,47,0.353,49,0.561,50,0.49,51,0.084,52,0.46,60,0.06,61,0.721,79,1.671,98,1.664,100,0.875,112,1.298,113,1.298,114,1.213,146,1.321,152,2.405,162,0.002,163,0.003,164,0.002,193,1.648,194,2.312,211,2.406,212,2.557,213,3.025,238,1.278,316,1.721,404,3.046,446,2.338,449,1.496,454,1.959,455,1.262,456,1.312,461,1.457,462,1.602,475,2.103,495,2.471,511,2.774,833,3.15,1253,3.822,1259,2.969,1572,3.255,1577,3.15,2271,2.815,2339,3.37,2362,5.196,2369,5.196,2370,3.37,2371,5.134,2373,4.578,2374,3.15,2375,3.37,2376,4.858,3078,3.255,3079,7.027,3080,5.175,3081,4.753,3082,3.056,3083,4.578,3084,4.454,3085,4.712,3086,4.712,3087,4.712,3088,3.5,3089,3.5,3090,3.5,3091,3.5,3092,3.5,3093,3.37,3094,3.37,3095,5.397,3096,5.397,3097,4.753,3098,3.5,3099,3.5,3100,3.5,3101,3.5,3102,3.37]],["title/classes/HandleUnexpectedError-5.html",[0,0.229,454,0.955,2236,3.745]],["body/classes/HandleUnexpectedError-5.html",[0,0.532,2,0.686,3,0.029,4,0.029,5,0.035,8,1.046,32,0.195,33,0.974,34,0.218,35,0.446,36,0.756,37,1.681,38,1.242,39,0.25,40,1.487,42,0.255,44,0.39,45,0.005,46,0.383,47,0.39,49,0.62,50,0.541,51,0.068,52,0.508,60,0.061,61,0.796,69,1.847,79,1.785,98,1.712,112,1.306,113,1.306,114,1.22,146,1.331,162,0.003,163,0.003,164,0.003,238,1.412,446,2.458,449,2.171,454,2.039,455,1.394,456,1.449,457,1.631,458,1.631,461,1.609,462,1.77,475,2.21,735,4.539,1657,4.812,2900,4.812,2901,3.48,3103,3.595,3104,7.51,3105,5.716,3106,5.08,3107,4.953,3108,4.953,3109,5.462,3110,4.953,3111,4.953,3112,3.867,3113,3.867,3114,3.867,3115,3.867,3116,3.723,3117,3.867,3118,3.867,3119,3.723]],["title/classes/HandleUnexpectedError-6.html",[0,0.229,454,0.955,2834,3.745]],["body/classes/HandleUnexpectedError-6.html",[0,0.524,2,0.694,3,0.03,4,0.03,5,0.035,8,1.037,27,3.566,32,0.195,33,0.963,34,0.221,35,0.449,36,0.762,37,1.685,38,1.231,39,0.253,40,1.505,42,0.257,44,0.395,45,0.005,46,0.388,47,0.395,49,0.628,50,0.548,51,0.09,52,0.514,60,0.06,61,0.806,69,3.392,79,1.375,98,1.718,112,1.31,113,1.31,114,1.225,146,1.335,162,0.003,163,0.004,164,0.003,454,2.048,455,1.411,456,1.466,457,1.65,458,1.65,475,2.223,564,4.405,1144,3.23,1256,4.117,2071,3.319,2262,5.136,2263,3.768,2266,4.08,2267,5.136,2268,5.136,2269,5.136,2270,5.136,2271,3.147,2272,3.768,2273,4.08,2274,4.08,2275,4.08,2276,4.08,2277,5.338,2278,3.768,3120,7.569,3121,5.785]],["title/injectables/HandlebarsService.html",[892,1.393,2170,3.706]],["body/injectables/HandlebarsService.html",[0,0.195,3,0.018,4,0.018,5,0.022,17,1.496,24,3.146,28,1.507,32,0.154,34,0.322,35,0.318,36,0.818,39,0.155,42,0.303,44,0.491,45,0.005,46,0.565,47,0.491,49,0.581,50,0.769,51,0.115,52,0.315,53,2.44,54,1.615,60,0.022,87,1.398,100,0.982,120,1.398,137,1.882,162,0.004,163,0.002,164,0.002,171,1.311,183,1.648,186,0.549,188,1.447,190,1.559,192,1.648,194,2.393,205,1.836,209,2.167,258,1.979,273,1.781,282,1.251,294,2.778,296,1.257,312,2.273,313,2.762,315,0.639,420,1.468,584,0.985,585,0.985,586,1.011,599,0.985,681,1.836,682,1.836,760,2.44,892,1.488,893,1.555,930,1.251,950,4.247,969,2.158,981,3.777,983,1.584,1027,1.979,1081,3.203,1408,1.928,1409,4.773,1411,4.43,1433,2.44,1744,3.181,1788,2.094,1804,2.941,1819,3.603,1820,4.684,1907,4.015,2170,3.957,2180,3.181,2446,3.777,2550,5.029,2551,2.941,2580,5.029,2581,3.181,2582,2.941,3077,2.941,3122,3.545,3123,5.791,3124,5.356,3125,4.806,3126,5.356,3127,5.356,3128,7.192,3129,7.192,3130,7.192,3131,7.192,3132,7.192,3133,6.454,3134,7.192,3135,7.192,3136,7.192,3137,7.192,3138,7.192,3139,7.192,3140,7.192,3141,7.192,3142,6.454,3143,3.545,3144,5.356,3145,3.181,3146,3.545,3147,4.552,3148,5.356,3149,6.454,3150,3.545,3151,3.545,3152,3.545,3153,3.545,3154,3.545,3155,3.545,3156,3.545,3157,3.545,3158,3.545,3159,3.545,3160,3.545,3161,3.545,3162,3.545,3163,3.545,3164,3.545,3165,3.545,3166,3.545,3167,3.545,3168,3.545,3169,3.545,3170,2.941,3171,2.941,3172,3.545,3173,3.545,3174,3.545,3175,3.545,3176,3.545,3177,3.545,3178,3.545,3179,3.545,3180,3.545,3181,3.545,3182,3.545,3183,3.545,3184,3.545,3185,3.545,3186,3.545,3187,3.545,3188,3.545,3189,3.181,3190,3.181,3191,3.545,3192,5.356,3193,3.181,3194,5.791,3195,3.181,3196,3.181,3197,3.181,3198,3.545,3199,3.545,3200,3.545,3201,3.545,3202,2.941,3203,3.545,3204,3.545,3205,3.545,3206,3.545,3207,3.545,3208,3.545,3209,3.545,3210,3.545,3211,3.545,3212,2.762,3213,3.545,3214,3.545,3215,8.884,3216,6.454,3217,8.884,3218,8.884,3219,3.545,3220,3.545,3221,3.545,3222,7.721,3223,5.356,3224,3.545,3225,3.545,3226,3.545,3227,3.545,3228,8.12,3229,3.545,3230,7.721,3231,3.545,3232,3.545,3233,3.545,3234,3.545,3235,5.356,3236,3.545,3237,3.545,3238,3.545,3239,3.545,3240,3.545,3241,3.545,3242,2.941,3243,3.545,3244,3.545,3245,3.545,3246,3.545,3247,3.545,3248,3.545,3249,3.545,3250,3.545,3251,3.545,3252,3.545,3253,3.545,3254,3.545,3255,3.545,3256,3.545,3257,3.545,3258,3.545,3259,3.545,3260,5.356,3261,6.454,3262,6.454,3263,3.545]],["title/classes/I18n.html",[0,0.276,171,1.854]],["body/classes/I18n.html",[0,0.425,2,0.927,3,0.04,4,0.04,5,0.047,32,0.146,38,1.133,39,0.397,42,0.235,44,0.677,45,0.005,46,0.518,47,0.528,51,0.092,60,0.047,100,0.982,112,1.063,113,1.063,114,0.993,162,0.004,163,0.004,164,0.004,171,3.349,183,4.21,185,4.003,190,2.001,192,3.592,3264,7.728,3265,7.728,3266,7.728]],["title/injectables/I18nService.html",[557,3.706,892,1.393]],["body/injectables/I18nService.html",[0,0.357,3,0.034,4,0.034,5,0.04,32,0.177,34,0.248,35,0.484,36,0.969,39,0.285,42,0.299,44,0.557,45,0.005,46,0.546,47,0.557,51,0.119,52,0.577,60,0.04,100,1.019,137,2.225,162,0.003,163,0.004,164,0.003,209,1.73,294,2.589,296,1.914,312,1.506,313,1.853,315,1.171,557,6.023,584,1.804,585,1.804,586,1.853,599,1.804,681,3.365,682,3.365,892,2.265,893,2.848,961,6.352,1433,3.714,1817,5.128,1819,4.552,1820,5.803,2792,6.236,3123,7.316,3125,7.316,3145,5.829,3147,6.788,3170,5.39,3171,5.39,3189,5.829,3190,5.829,3193,5.829,3194,7.995,3195,5.829,3196,5.829,3197,5.829,3267,6.496,3268,8.153,3269,6.496,3270,8.153,3271,6.496,3272,6.496,3273,6.496,3274,6.496,3275,6.496,3276,6.496,3277,6.496,3278,6.496,3279,6.496,3280,5.829,3281,5.829,3282,6.496,3283,6.496,3284,8.153,3285,6.496,3286,6.496]],["title/components/IconComponent.html",[279,1,394,1.718]],["body/components/IconComponent.html",[0,0.264,3,0.025,4,0.034,5,0.041,32,0.181,33,0.662,34,0.183,35,0.396,36,0.484,39,0.21,42,0.295,44,0.328,45,0.005,46,0.556,47,0.328,49,0.521,50,0.455,51,0.092,60,0.029,64,1.334,69,1.552,91,1.282,100,0.922,121,1.352,128,1.233,132,1.37,162,0.002,163,0.003,164,0.002,176,2.772,177,3.444,186,1.033,265,1.427,266,1.983,279,1.53,280,1.645,281,2.22,282,1.695,283,2.067,284,1.721,285,1.721,287,2.793,288,1.621,289,3.586,290,3.041,292,1.695,294,2.377,296,1.567,297,3.115,312,1.779,313,2.189,315,0.866,329,1.721,330,1.695,331,1.721,332,1.721,333,1.721,334,1.721,335,1.53,336,1.721,337,1.721,338,1.721,339,1.669,340,1.597,341,1.695,342,1.721,343,1.721,344,1.721,345,1.099,346,1.721,347,1.487,348,2.392,349,2.356,350,1.552,351,2.972,352,1.721,353,1.721,354,1.645,355,1.721,356,1.645,357,2.376,358,2.392,359,1.645,360,2.392,361,1.645,362,1.721,363,1.621,364,1.721,365,1.645,366,1.721,367,2.972,368,1.645,369,1.721,370,1.597,371,2.392,372,1.645,373,1.621,374,1.597,375,1.695,376,1.721,377,1.645,378,2.356,379,1.721,380,1.669,381,1.574,382,2.392,383,1.645,384,1.721,385,2.972,386,1.597,387,1.721,388,1.645,389,1.645,390,1.695,391,1.621,392,1.721,393,1.645,394,2.84,395,1.721,396,1.621,397,1.721,398,1.645,399,1.721,400,1.669,401,1.645,402,1.721,403,1.645,404,1.408,405,1.721,406,1.645,407,2.356,408,1.645,409,2.75,410,1.721,411,1.645,412,1.721,413,1.645,414,1.721,415,1.597,416,1.645,417,1.621,418,1.645,419,1.645,420,1.83,421,1.645,422,1.721,423,1.645,424,1.645,425,1.645,426,1.217,427,1.621,428,1.621,429,1.721,430,1.621,431,1.721,432,1.621,433,1.695,434,1.721,497,2.929,668,2.836,948,4.708,992,6.88,1408,2.612,1409,3.884,1411,4.403,1560,3.128,1895,3.985,2322,3.548,2640,6.366,2684,2.612,3287,4.803,3288,7.441,3289,7.673,3290,4.803,3291,6.676,3292,6.676,3293,8.293,3294,8.293,3295,6.676,3296,6.676,3297,6.676,3298,8.715,3299,6.676,3300,4.803,3301,4.803,3302,4.803,3303,4.803,3304,4.803,3305,4.803,3306,4.803,3307,4.803,3308,4.803,3309,4.803,3310,4.803,3311,4.803,3312,4.803,3313,4.803,3314,4.803,3315,4.803,3316,4.803,3317,4.803,3318,4.803,3319,4.803,3320,4.803,3321,4.803,3322,4.803,3323,4.803,3324,4.803,3325,6.676,3326,4.803,3327,7.673,3328,4.803,3329,4.803,3330,4.803,3331,4.309,3332,5.99]],["title/components/IframeDisplayComponent.html",[279,1,396,1.693]],["body/components/IframeDisplayComponent.html",[0,0.287,3,0.027,4,0.037,5,0.043,32,0.163,33,0.701,34,0.199,35,0.42,36,0.526,39,0.229,42,0.262,44,0.357,45,0.005,46,0.576,47,0.357,51,0.107,52,0.464,60,0.032,64,1.451,91,1.395,121,1.471,128,1.342,132,1.491,137,2.066,162,0.002,163,0.003,164,0.002,186,1.095,209,1.109,265,1.552,266,2.102,279,1.598,280,1.79,281,2.352,282,1.844,283,2.249,284,1.872,285,1.872,287,2.918,288,1.763,289,3.601,290,3.223,292,2.496,294,2.264,296,1.66,297,3.227,312,1.211,313,1.491,315,0.942,329,1.872,330,1.844,331,1.872,332,1.872,333,1.872,334,1.872,335,1.664,336,1.872,337,1.872,338,1.872,339,1.816,340,1.738,341,1.844,342,1.872,343,1.872,344,1.872,345,1.196,346,1.872,347,1.618,348,2.535,349,2.496,350,1.688,351,3.079,352,1.872,353,1.872,354,1.79,355,1.872,356,1.79,357,2.483,358,2.535,359,1.79,360,2.535,361,1.79,362,1.872,363,1.763,364,1.872,365,1.79,366,1.872,367,3.079,368,1.79,369,1.872,370,1.738,371,2.535,372,1.79,373,1.763,374,1.738,375,1.844,376,1.872,377,1.79,378,2.496,379,1.872,380,1.816,381,1.713,382,2.535,383,1.79,384,1.872,385,3.079,386,1.738,387,1.872,388,1.79,389,1.79,390,1.844,391,1.763,392,1.872,393,1.79,394,1.79,395,1.872,396,2.9,397,1.872,398,1.79,399,1.872,400,1.816,401,1.79,402,1.872,403,1.79,404,1.531,405,1.872,406,1.79,407,2.496,408,1.79,409,2.873,410,1.872,411,1.79,412,1.872,413,1.79,414,1.872,415,1.738,416,1.79,417,1.763,418,1.79,419,1.79,420,1.939,421,1.79,422,1.872,423,1.79,424,1.79,425,1.79,426,1.324,427,1.763,428,1.763,429,1.872,430,1.763,431,1.872,432,1.763,433,1.844,434,1.872,508,2.209,556,1.844,582,3.685,583,3.535,585,1.451,586,1.491,599,1.451,632,3.086,633,5.511,1018,5.511,1802,3.403,1817,4.449,1888,3.86,2298,7.129,2305,7.71,2552,7.195,3332,4.689,3333,5.225,3334,7.073,3335,8.019,3336,7.073,3337,8.019,3338,8.019,3339,7.073,3340,5.225,3341,5.225,3342,5.225,3343,5.225,3344,4.689,3345,5.225,3346,5.225,3347,7.073,3348,5.225]],["title/classes/ImplicitAuthenticationHandler.html",[0,0.276,1222,3.538]],["body/classes/ImplicitAuthenticationHandler.html",[0,0.447,2,0.274,3,0.012,4,0.012,5,0.014,7,0.887,8,0.241,9,1.757,12,2.88,13,1.57,17,1.721,23,1.973,24,1.276,27,0.966,28,1.876,32,0.134,33,0.48,34,0.087,36,0.962,37,0.64,39,0.246,41,3.73,42,0.19,44,0.384,45,0.005,46,0.417,47,0.33,49,0.248,51,0.107,52,0.203,53,2.203,54,1.041,55,1.398,58,1.722,60,0.047,61,0.318,63,1.062,67,1.722,69,1.221,74,1.002,82,3.688,83,2.612,85,1.062,87,0.901,90,3.439,91,2.056,94,1.831,95,1.757,99,2.893,100,1.004,101,3.938,102,4.224,103,3.653,104,2.217,117,1.131,119,2.782,120,3.211,125,2.203,128,1.242,137,1.95,146,0.665,158,1.793,162,0.001,163,0.002,164,0.001,173,2.197,190,0.461,205,2.247,209,2.117,210,2.045,211,1.295,212,1.76,219,1.585,228,0.966,229,1.243,246,1.543,273,2.47,294,2.425,296,0.888,312,1.303,313,2.625,315,0.412,340,2.07,345,1.286,374,0.76,420,1.706,426,0.579,444,0.832,455,0.922,461,0.643,492,0.845,495,0.708,511,0.794,552,4.39,559,4.146,564,1.084,580,1.611,584,0.635,585,0.635,586,0.652,593,1.084,596,1.184,598,4.609,599,1.343,610,2.666,618,1.757,631,2.302,664,1.212,688,2.557,706,2.462,707,3.66,735,2.12,738,4.055,760,1.722,762,3.271,763,3.271,773,3.319,777,2.338,780,2.006,802,1.184,803,1.212,892,1.05,927,1.658,928,1.084,930,0.806,983,2.161,1027,1.276,1056,2.666,1081,0.901,1123,3.963,1124,1.611,1125,4.956,1126,2.793,1127,1.688,1134,3.224,1135,1.611,1136,1.546,1137,1.488,1138,3.535,1139,1.546,1140,1.688,1141,5.866,1142,1.611,1143,1.184,1144,1.276,1145,4.152,1146,2.793,1147,2.793,1148,2.793,1149,3.963,1150,2.793,1151,1.688,1152,1.688,1153,1.688,1154,1.688,1155,1.349,1156,1.611,1157,2.793,1158,1.611,1159,1.688,1160,1.688,1161,3.573,1162,1.688,1163,1.688,1164,1.688,1165,1.688,1166,1.688,1167,1.688,1168,1.688,1169,1.688,1170,1.688,1171,1.688,1172,5.597,1173,1.688,1174,5.431,1175,1.688,1176,1.611,1177,1.688,1178,1.688,1179,1.688,1180,1.688,1181,2.793,1182,1.688,1183,1.688,1184,4.956,1185,1.611,1186,1.688,1187,1.688,1188,1.688,1189,1.688,1190,1.688,1191,1.688,1192,1.688,1193,1.688,1194,3.149,1195,1.311,1196,1.688,1197,1.349,1198,1.688,1199,5.246,1200,5.487,1201,2.793,1202,4.6,1203,1.688,1204,3.573,1205,1.688,1206,2.793,1207,1.688,1208,4.152,1209,2.793,1210,1.688,1211,1.688,1212,1.688,1213,1.688,1214,1.688,1215,1.688,1216,2.793,1217,1.688,1218,2.793,1219,2.793,1220,1.688,1221,1.688,1222,3.41,1223,1.688,1224,2.793,1225,1.688,1226,1.688,1227,1.611,1228,2.462,1229,1.688,1230,1.546,1231,1.688,1232,1.688,1233,1.688,1234,2.793,1235,1.688,1236,3.573,1237,1.688,1238,5.237,1239,3.573,1240,3.573,1241,3.573,1242,3.573,1243,3.573,1244,3.41,1245,1.688,1246,1.688,1247,1.688,1248,1.688,1249,2.793,1250,2.666,1251,2.793,1252,1.611,1253,2.63,1254,2.793,1255,2.793,1256,2.056,1257,1.688,1258,3.573,1259,2.775,1260,2.793,1261,1.688,1262,2.793,1263,1.688,1264,2.666,1265,1.688,1266,2.793,1267,1.688,1268,1.688,1269,2.793,1270,2.793,1271,1.688,1272,1.688,1273,1.688,1274,1.688,1275,1.688,1276,1.688,1277,1.688,1278,2.793,1279,1.688,1280,1.688,1281,1.688,1282,1.688,1283,1.688,1284,1.688,1285,1.688,1286,0.966,1287,1.688,1288,1.688,1289,1.688,1290,1.688,1291,1.688,1292,1.688,1293,1.688,1294,4.6,1295,5.246,1296,1.688,1297,1.688,1298,3.963,1299,1.688,1300,1.611,1301,1.688,1302,1.688,1303,2.856,1304,1.688,1305,2.793,1306,1.688,1307,2.793,1308,1.688,1309,1.546,1310,1.688,1311,1.688,1312,1.688,1313,1.688,1314,1.688,1315,1.688,1316,1.546,1317,1.688,1318,2.378,1319,1.688,1320,1.688,1321,1.688,1322,1.688,1323,1.688,1324,1.688,1325,1.688,1326,1.688,1327,1.688,1328,1.688,1329,1.688,1330,1.688,1331,1.688,1332,1.688,1333,2.793,1334,1.688,1335,1.688,1336,3.573,1337,2.793,1338,1.688,1339,1.688,1340,2.793,1341,2.793,1342,1.688,1343,1.688,1344,1.688,1345,1.688,1346,1.688,1347,1.688,1348,1.688,1349,3.573,1350,2.793,1351,1.611,1352,1.688,1353,1.688,1354,1.688,1355,1.546,1356,1.688,1357,1.688,1358,1.688,1359,1.688,1360,1.688,1361,1.688,1362,2.666,1363,1.688,1364,1.688,1365,1.688,1366,2.793,1367,2.793,1368,1.688,1369,1.688,1370,1.688,1371,1.688,1372,1.688,1373,1.688,1374,1.688,1375,1.688,1376,1.688,1377,1.688,1378,1.688,1379,1.437,1380,1.688,1381,1.688,1382,1.688,1383,2.793,1384,1.688,1385,1.688,1386,1.688,1387,1.688,1388,1.688,1389,1.688,1390,1.688,1391,1.688,1392,1.688,1393,1.688,1394,1.611,1395,1.688,1396,1.688,1397,1.688,1398,1.688,1399,1.688,1400,1.688,1401,1.688,1402,1.688,1403,1.688,1404,1.688,1405,1.688,1406,1.688,1407,1.688,1408,1.243,1409,1.913,1410,3.573,1411,2.169,1412,1.688,1413,1.688,1414,1.688,1415,1.688,1416,1.212,1417,1.688,1418,3.573,1419,1.688,1420,4.6,1421,1.688,1422,5.007,1423,1.688,1424,1.688,1425,1.688,1426,3.271,1427,1.611,1428,1.688,1429,1.611,1430,1.688,1431,2.793,1432,2.666,1433,1.722,1434,1.688,1435,1.611,1436,1.688,1437,1.688,1438,3.41,1439,2.856,1440,1.688,1441,1.688,1442,1.611,1443,3.573,1444,1.688,1445,2.793,1446,1.688,1447,1.488,1448,1.688,1449,1.688,1450,1.688,1451,1.688,1452,1.688,1453,1.688,1454,1.688,1455,2.793,1456,4.956,1457,1.688,1458,1.688,1459,1.688,1460,1.688,1461,1.688,1610,3.137,1615,1.896,3349,2.05,3350,2.285,3351,2.285,3352,2.285,3353,2.05,3354,2.285,3355,2.285]],["title/classes/ImplicitlyAuthenticated.html",[0,0.276,158,2.379]],["body/classes/ImplicitlyAuthenticated.html",[0,0.531,1,3.375,2,0.484,3,0.021,4,0.021,5,0.047,6,2.141,8,1.066,9,4.274,10,1.078,11,1.968,12,3.285,13,3.536,14,3.789,15,2.091,16,3.361,17,1.974,18,3.891,19,4.036,20,3.208,21,2.254,22,2.196,23,3.128,24,2.352,25,3.791,26,3.891,27,2.946,28,1.461,29,3.208,30,3.697,31,3.293,32,0.189,33,0.959,34,0.154,35,0.35,36,0.821,37,1.297,38,1.219,39,0.177,41,2.857,42,0.123,45,0.005,49,0.438,50,0.382,51,0.091,52,0.359,53,3.175,54,1.839,55,2.576,56,1.839,57,2.254,58,2.687,59,2.254,60,0.06,61,0.562,62,2.091,63,3.239,64,1.121,65,2.158,66,3.527,67,2.687,68,3.791,69,3.094,70,4.783,71,4.066,72,3.527,73,2.196,74,2.586,75,3.794,76,3.299,77,4.127,78,3.527,79,1.402,80,3.527,81,2.196,82,3.239,83,3.562,84,3.609,85,1.876,86,2.196,87,1.592,88,0.948,89,2.254,90,2.857,91,1.078,92,2.196,93,2.196,94,1.955,95,3.239,96,2.196,97,2.196,98,1.47,99,1.876,100,0.833,101,1.876,102,1.804,103,1.915,104,1.592,105,2.254,106,2.254,107,3.293,108,3.208,109,1.852,110,3.208,111,2.254,112,1.24,113,1.24,114,1.159,115,2.254,116,2.196,117,1.998,118,2.254,119,1.998,120,1.592,121,1.136,122,2.196,123,3,124,3.293,125,3.175,126,3.055,127,1.619,128,1.036,129,2.196,130,2.141,131,4.066,132,1.152,133,2.254,134,2.091,135,2.196,136,2.985,137,1.316,138,2.254,139,2.254,140,4.279,141,2.196,142,2.254,143,3.208,144,2.254,145,3.208,146,0.555,147,2.254,148,2.196,149,2.254,150,2.196,151,2.254,152,2.741,153,3.208,154,1.516,155,2.254,156,2.254,157,2.254,158,3.305,159,3.293,160,2.254,161,2.141,162,0.002,163,0.003,164,0.002,3356,4.036]],["title/components/InfoComponent.html",[279,1,398,1.718]],["body/components/InfoComponent.html",[0,0.262,3,0.043,4,0.034,5,0.041,7,3.209,17,2.141,32,0.17,33,0.659,34,0.182,35,0.395,36,0.481,39,0.209,42,0.287,44,0.326,45,0.005,46,0.554,47,0.326,51,0.117,52,0.424,60,0.029,64,1.326,69,1.542,91,1.275,121,1.344,128,1.226,130,4.058,132,1.362,134,2.473,137,2.01,162,0.002,163,0.003,164,0.002,186,1.029,190,0.964,209,1.623,265,1.418,266,1.975,279,1.525,280,1.635,281,2.211,282,1.685,283,2.055,284,1.711,285,1.711,287,2.784,288,1.611,289,3.585,290,3.029,292,2.346,294,2.554,296,1.561,297,3.107,312,1.107,313,1.362,315,0.861,329,1.711,330,1.685,331,1.711,332,1.711,333,1.711,334,1.711,335,1.521,336,1.711,337,1.711,338,1.711,339,1.66,340,1.588,341,1.685,342,1.711,343,1.711,344,1.711,345,1.093,346,1.711,347,1.478,348,2.382,349,2.346,350,1.542,351,2.964,352,1.711,353,1.711,354,1.635,355,1.711,356,1.635,357,2.369,358,2.382,359,1.635,360,2.382,361,1.635,362,1.711,363,1.611,364,1.711,365,1.635,366,1.711,367,2.964,368,1.635,369,1.711,370,1.588,371,2.382,372,1.635,373,1.611,374,1.588,375,1.685,376,1.711,377,1.635,378,2.346,379,1.711,380,1.66,381,1.565,382,2.382,383,1.635,384,1.711,385,2.964,386,1.588,387,1.711,388,1.635,389,1.635,390,1.685,391,1.611,392,1.711,393,1.635,394,1.635,395,1.711,396,1.611,397,1.711,398,2.833,399,1.711,400,1.66,401,1.635,402,1.711,403,1.635,404,1.399,405,1.711,406,1.635,407,2.346,408,1.635,409,2.741,410,1.711,411,1.635,412,1.711,413,1.635,414,1.711,415,1.588,416,1.635,417,1.611,418,1.635,419,1.635,420,2.468,421,1.635,422,1.711,423,1.635,424,1.635,425,1.635,426,1.21,427,1.611,428,1.611,429,1.711,430,1.611,431,1.711,432,1.611,433,1.685,434,1.711,556,1.685,584,1.326,585,1.326,586,1.362,599,1.326,632,2.819,930,1.685,948,4.688,950,5.455,961,5.18,969,2.906,1155,2.819,1286,2.018,1433,3.029,1538,3.002,1659,4.284,1660,4.284,1817,4.181,1893,5.965,1895,5.516,2736,5.965,3170,3.961,3171,3.961,3280,4.284,3281,4.284,3357,4.774,3358,7.649,3359,6.648,3360,7.649,3361,7.649,3362,7.649,3363,6.648,3364,4.774,3365,4.774,3366,4.774,3367,4.774,3368,4.774,3369,4.774,3370,4.774,3371,4.774,3372,4.774,3373,4.774,3374,4.774,3375,4.284,3376,6.648,3377,4.774,3378,6.648,3379,4.774,3380,6.648,3381,4.774,3382,4.774,3383,4.774,3384,6.648,3385,6.648,3386,6.648,3387,4.774,3388,3.367,3389,4.774]],["title/classes/InitAuthStatus.html",[0,0.276,63,2.331]],["body/classes/InitAuthStatus.html",[0,0.529,1,3.327,2,0.472,3,0.02,4,0.02,5,0.046,6,2.089,7,1.528,8,1.063,9,4.246,10,1.051,11,1.945,12,3.284,13,3.505,14,3.751,15,2.039,16,3.321,17,1.956,18,3.835,19,3.995,20,3.15,21,2.198,22,2.142,23,3.091,24,2.318,25,3.736,26,3.835,27,2.904,28,1.44,29,3.15,30,3.644,31,3.233,32,0.192,33,0.955,34,0.15,35,0.344,36,0.879,37,1.477,38,1.214,39,0.254,40,1.024,41,2.805,42,0.209,44,0.269,45,0.005,46,0.264,47,0.269,49,0.427,50,0.373,51,0.09,52,0.35,53,3.13,54,1.794,55,2.539,56,1.794,57,2.198,58,2.638,59,2.198,60,0.06,61,0.549,62,2.039,63,3.52,64,1.094,65,2.127,66,3.477,67,2.638,68,3.736,69,3.079,70,4.746,71,4.018,72,3.477,73,2.142,74,2.539,75,3.749,76,3.26,77,4.085,78,3.477,79,1.377,80,3.477,81,2.142,82,3.192,83,3.52,84,3.558,85,1.83,86,2.142,87,1.553,88,0.924,89,2.198,90,2.805,91,1.051,92,2.142,93,2.142,94,1.907,95,3.192,96,2.142,97,2.142,98,1.455,99,1.83,100,0.825,101,1.83,102,1.759,103,1.868,104,1.553,105,2.198,106,2.198,107,3.835,108,3.736,109,2.157,110,3.736,111,3.233,112,1.231,113,1.231,114,1.151,115,2.198,116,2.142,117,1.949,118,2.198,119,1.949,120,1.553,121,1.108,122,2.142,123,2.957,124,3.233,125,3.13,126,3,127,1.579,128,1.011,129,2.142,130,2.089,131,4.018,132,1.123,133,2.198,134,2.039,135,2.142,136,2.931,137,1.292,138,2.198,139,2.198,140,4.229,141,2.142,142,2.198,143,3.15,144,2.198,145,3.15,146,0.541,147,2.198,148,2.142,149,2.198,150,2.142,151,2.198,152,2.691,153,3.15,154,1.479,155,2.198,156,2.198,157,2.198,158,2.747,159,2.198,160,2.198,161,2.089,162,0.002,163,0.003,164,0.002,475,1.81,3390,5.791,3391,3.937]],["title/classes/InitFilters.html",[0,0.276,888,3.538]],["body/classes/InitFilters.html",[0,0.465,2,0.828,3,0.036,4,0.036,5,0.042,8,1.006,32,0.196,33,0.908,34,0.263,35,0.503,36,0.853,37,1.55,38,1.194,39,0.303,40,1.797,42,0.279,44,0.472,45,0.005,46,0.463,47,0.472,49,0.749,50,0.654,51,0.109,52,0.613,60,0.058,61,0.962,64,1.918,65,2.623,98,1.527,112,1.164,113,1.164,114,1.088,162,0.003,163,0.004,164,0.003,173,1.97,190,1.394,426,2.322,475,2.414,724,4.728,874,5.409,875,5.381,878,6.197,879,4.672,880,4.498,881,5.156,882,4.344,883,5.381,884,3.963,885,5.73,886,6.197,887,4.344,888,6.459,889,7.599,890,6.197,891,5.73,3392,8.469,3393,6.907]],["title/classes/InitTimeline.html",[0,0.276,3394,3.538]],["body/classes/InitTimeline.html",[0,0.475,2,0.855,3,0.037,4,0.037,5,0.044,8,1.017,32,0.197,33,0.921,34,0.272,35,0.513,36,0.87,37,1.572,38,1.207,39,0.313,40,1.855,42,0.283,44,0.487,45,0.005,46,0.478,47,0.487,49,0.774,50,0.675,51,0.085,52,0.633,60,0.059,61,0.994,64,1.981,98,1.557,162,0.003,163,0.004,164,0.003,186,1.104,381,3.044,475,2.448,492,2.637,2684,3.879,3394,6.808,3395,5.557,3396,8.636,3397,7.132,3398,7.749,3399,5.917,3400,6.551,3401,6.4,3402,6.4,3403,6.4,3404,5.917]],["title/classes/Input.html",[0,0.276,177,2.083]],["body/classes/Input.html",[0,0.513,2,0.516,3,0.022,4,0.022,5,0.026,8,0.453,11,1.585,23,1.755,24,1.451,28,1.824,32,0.158,36,0.433,38,1.33,39,0.415,42,0.131,44,0.294,45,0.005,46,0.56,47,0.294,50,0.747,51,0.086,60,0.06,61,0.86,87,1.696,88,1.009,100,1.064,112,1.261,113,1.261,114,1.179,123,1.851,162,0.003,163,0.003,164,0.002,167,2.539,168,3.858,169,3.759,170,5.563,171,3.504,172,3.542,173,2.862,174,3.883,175,3.883,176,2.564,177,3.278,178,3.883,179,3.883,180,3.883,181,3.883,182,3.883,183,1.998,186,0.955,187,3.198,188,1.755,189,1.998,190,0.868,191,4.965,192,1.998,193,1.37,194,2.759,195,2.704,196,2.704,197,2.704,198,2.401,199,2.704,200,4.145,201,2.618,202,2.704,203,2.539,204,3.883,205,2.069,206,3.056,207,2.539,208,3.883,209,1.533,210,2.247,211,2.114,212,2.629,213,1.851,214,2.618,215,2.704,216,2.401,217,3.759,218,3.759,219,3.206,220,2.704,221,2.704,222,2.618,223,2.618,224,2.802,225,2.704,226,2.704,227,2.704,228,1.818,229,2.339,230,2.467,231,2.704,232,2.704,233,2.704,234,2.704,235,2.539,236,2.928,237,2.704,238,1.062,239,2.467,240,2.618,241,1.922,242,2.618,243,2.339,244,2.704,245,2.704,246,2.948,247,2.704,248,2.704,249,2.704,250,3.883,251,2.704,252,2.704,253,2.704,254,2.704,255,2.128,256,2.704,257,2.704,258,2.401,259,2.704,260,2.704,261,2.704,262,2.704,263,2.704,264,4.806,265,1.278,266,1.278,267,2.618,268,2.618,269,2.618,270,2.04,271,4.543,272,4.543,273,2.894,274,4.543,275,4.033,276,4.806,277,4.543,278,4.543,3405,4.3]],["title/classes/LightCard.html",[0,0.276,479,1.511]],["body/classes/LightCard.html",[0,0.415,2,0.692,3,0.03,4,0.03,5,0.035,8,0.888,11,2.164,13,3.499,24,1.947,32,0.109,38,1.312,39,0.369,42,0.176,44,0.394,45,0.005,46,0.387,47,0.394,51,0.09,60,0.058,61,1.174,88,1.774,100,1.083,112,0.793,113,0.793,114,0.742,162,0.004,163,0.004,164,0.003,171,3.586,185,5.155,189,2.682,190,1.525,206,4.171,209,1.225,211,2.886,273,3.42,316,1.919,417,2.843,479,2.276,554,5.7,744,3.63,760,2.629,1081,2.276,1197,3.408,1408,3.139,1409,4.525,1411,5.13,1538,4.753,1787,5.178,1788,4.976,1789,5.942,1790,6.225,1791,6.225,1792,6.225,1793,6.482,1794,6.565,1795,6.565,1796,6.225,1797,6.225,1799,5.888,2446,4.07,2716,4.07,2805,6.048,3020,5.583,3021,4.788,3022,4.788,3023,6.225,3024,4.788,3025,4.788,3388,4.07,3406,6.27,3407,4.788,3408,7.561,3409,5.771,3410,5.178,3411,5.178,3412,4.788,3413,4.788,3414,5.178]],["title/classes/LightCardAlreadyUpdated.html",[0,0.276,516,2.242]],["body/classes/LightCardAlreadyUpdated.html",[0,0.554,2,0.497,3,0.021,4,0.021,5,0.025,8,1.079,10,2.201,11,1.065,12,1.321,32,0.193,33,1.003,34,0.158,35,0.357,37,1.592,38,1.269,39,0.406,42,0.183,45,0.005,49,0.45,50,0.393,51,0.093,52,0.368,60,0.062,61,0.578,65,1.284,79,0.986,88,1.935,98,1.695,100,0.794,109,1.303,112,1.31,113,1.31,114,1.224,146,1.219,154,1.558,162,0.002,163,0.003,164,0.002,186,1.49,190,0.837,193,1.916,224,2.334,238,1.025,316,1.379,345,1.377,444,1.51,446,2.275,449,1.739,454,1.62,455,1.012,456,1.051,457,1.183,458,1.183,459,1.609,461,1.168,462,1.284,472,3.163,473,3.29,474,1.928,478,2.009,479,2.589,480,1.284,481,1.267,482,1.967,483,1.89,484,1.785,485,3.225,486,4.779,487,3.163,488,1.89,489,3.047,490,2.796,491,1.967,492,1.533,493,3.225,494,3.163,495,1.284,496,3.047,497,3.281,498,1.785,499,3.163,500,1.928,501,3.163,502,3.163,503,1.967,504,1.967,505,3.163,506,3.104,507,3.163,508,1.753,509,1.819,510,3.163,511,1.442,512,3.163,513,1.967,514,3.163,515,1.928,516,3.469,517,1.722,518,1.636,519,2.009,520,2.009,521,2.009,522,1.785,523,2.009,524,2.009,525,2.009,526,1.664,527,2.009,528,2.009,529,2.009,530,2.009,531,1.583,532,2.009,533,2.009,534,2.009,535,1.967,536,1.967,537,2.009,538,2.009,539,2.009,540,2.009,541,2.914,542,1.928,3415,6.016]],["title/injectables/LightCardEffects.html",[239,2.878,892,1.393]],["body/injectables/LightCardEffects.html",[0,0.228,3,0.021,4,0.021,5,0.025,8,0.817,17,2.145,28,2.053,32,0.156,34,0.158,35,0.357,39,0.181,42,0.251,44,0.283,45,0.005,46,0.277,47,0.283,49,0.842,50,0.734,51,0.116,52,0.368,60,0.025,88,2.365,112,0.569,113,0.569,114,0.532,137,1.917,162,0.002,163,0.003,164,0.002,186,1.2,190,1.427,205,2.421,209,2.185,224,2.743,228,1.75,239,3.447,240,4.305,241,4.135,294,1.583,301,6.436,315,0.747,316,1.377,442,2.376,445,2.096,479,2.787,480,1.282,481,1.265,482,1.964,484,1.782,502,3.16,505,1.85,506,3.101,507,3.16,508,2.54,510,3.16,512,3.16,514,3.16,516,3.16,556,1.461,584,1.15,585,1.15,586,1.181,599,1.15,892,1.669,893,1.816,901,6.044,909,4.237,910,4.451,912,4.22,924,2.252,925,2.145,927,1.816,928,1.964,930,1.461,1143,2.145,1286,3.838,1500,5.209,1522,4.064,1581,2.801,1582,4.447,1583,3.059,1863,5.391,1907,4.331,1914,2.801,1939,4.237,1941,5.391,1946,5.391,2214,3.716,2826,2.801,2874,4.439,3416,8.591,3417,4.141,3418,7.071,3419,7.071,3420,7.071,3421,5.867,3422,4.141,3423,6.008,3424,7.757,3425,8.591,3426,6.008,3427,6.008,3428,6.008,3429,8.591,3430,6.008,3431,4.141,3432,6.008,3433,6.008,3434,6.008,3435,6.008,3436,7.757,3437,6.008,3438,6.008,3439,8.591,3440,7.757,3441,6.008,3442,7.757,3443,6.008,3444,6.008,3445,7.757,3446,6.008,3447,9.079,3448,7.757,3449,4.141,3450,6.008,3451,6.008,3452,4.141,3453,6.008,3454,6.008,3455,6.008,3456,6.008,3457,6.008,3458,6.008,3459,6.008,3460,7.757,3461,6.008,3462,5.391,3463,4.141,3464,4.141,3465,3.716]],["title/components/ListSettingComponent.html",[279,1,401,1.718]],["body/components/ListSettingComponent.html",[0,0.206,3,0.019,4,0.019,5,0.023,17,1.293,28,1.397,32,0.184,33,0.553,34,0.143,35,0.331,39,0.164,42,0.309,44,0.586,45,0.005,46,0.615,47,0.586,49,0.605,50,0.853,51,0.105,52,0.332,60,0.023,64,1.039,100,0.922,121,1.053,123,1.61,128,1.432,132,1.067,137,1.849,162,0.002,163,0.003,164,0.002,170,4.534,171,2.061,173,2.254,176,2.316,177,2.316,186,0.863,189,1.739,209,1.568,219,1.226,236,1.775,265,1.112,266,2.462,275,3.722,279,1.329,280,1.281,281,1.854,282,1.32,284,1.341,285,1.341,287,2.426,288,1.262,289,3.535,292,1.968,294,2.418,296,1.309,297,3.224,312,2.23,313,2.449,315,0.675,335,1.192,339,2.317,347,1.159,348,1.998,349,1.968,350,1.209,351,2.647,352,1.341,353,1.341,354,1.281,355,1.341,356,1.281,357,2.064,358,1.998,359,1.281,360,1.998,361,1.281,362,1.341,363,1.262,364,1.341,365,3.419,366,1.998,367,2.647,368,1.281,369,1.341,370,1.244,371,1.998,372,1.281,373,1.262,374,1.244,375,1.32,376,1.341,377,1.281,378,1.968,379,1.341,380,1.301,381,1.226,382,1.998,383,1.281,384,1.341,385,2.647,386,1.244,387,1.341,388,1.281,389,1.281,390,1.32,391,1.262,392,1.341,393,1.281,394,1.281,395,1.341,396,1.262,397,1.341,398,1.281,399,1.341,400,1.301,401,2.53,402,1.341,403,1.281,404,1.096,405,1.341,406,1.281,407,1.968,408,1.281,409,2.389,410,1.341,411,1.281,412,1.341,413,1.281,414,1.341,415,1.244,416,1.281,417,1.262,418,1.281,419,1.281,420,1.528,421,1.281,422,1.341,423,1.281,424,1.281,425,1.281,426,0.948,427,1.262,428,1.262,429,1.341,430,1.262,431,1.341,432,1.262,433,1.32,434,1.341,475,1.469,556,1.32,584,1.039,585,1.039,586,1.067,671,1.894,681,1.938,682,1.938,884,2.147,954,4.125,962,3.507,981,3.932,1228,2.437,1303,3.293,1416,2.958,1618,2.764,1619,2.915,1620,3.936,1621,5.572,1622,4.345,1623,3.932,1624,3.395,1625,6.753,1626,3.932,1627,6.053,1628,5.21,1629,3.936,1630,4.701,1631,5.21,1632,3.932,1633,3.932,1634,3.932,1639,2.638,1641,2.638,1644,4.701,1645,4.969,1647,3.932,1651,4.701,1656,3.357,1666,2.638,1820,5.59,1967,3.395,1999,6.608,2498,5.004,2508,5.838,2511,2.638,2750,2.764,2751,2.764,2752,2.764,2757,2.764,2758,2.764,2759,2.764,2760,2.764,2761,2.764,2762,2.764,2763,2.764,2764,2.764,2765,2.764,2766,2.764,2767,2.764,2768,2.764,2769,2.764,2771,2.764,2772,2.764,2776,4.345,2777,4.626,2778,4.626,3466,9.177,3467,8.235,3468,5.981,3469,7.388,3470,7.388,3471,5.576,3472,3.741,3473,3.741,3474,3.741,3475,3.741,3476,3.741,3477,3.741,3478,5.576,3479,3.741,3480,3.357,3481,5.004,3482,5.004,3483,3.357,3484,3.357,3485,5.004,3486,3.357,3487,3.357,3488,3.357,3489,3.357,3490,3.741,3491,3.741,3492,3.741,3493,2.764,3494,3.104,3495,3.104,3496,3.741,3497,3.741,3498,3.357,3499,3.357,3500,3.741,3501,3.741,3502,5.004]],["title/classes/LoadArchivedCard.html",[0,0.276,450,2.661]],["body/classes/LoadArchivedCard.html",[0,0.538,2,0.634,3,0.027,4,0.027,5,0.032,8,1.051,32,0.195,33,0.98,34,0.202,35,0.423,36,0.718,37,1.688,38,1.247,39,0.232,40,1.376,42,0.246,44,0.361,45,0.005,46,0.354,47,0.361,49,0.574,50,0.501,51,0.085,52,0.47,60,0.061,61,0.737,79,1.695,88,1.242,98,1.741,100,0.825,112,1.345,113,1.345,114,1.257,146,1.305,162,0.002,163,0.003,164,0.002,186,1.611,188,2.158,211,2.442,238,1.306,437,4.388,438,3.123,441,3.326,442,3.034,443,4.388,444,1.925,445,4.083,446,2.722,447,4.504,448,4.504,449,2.062,450,4.581,451,4.179,452,4.504,453,4.504,454,1.847,455,1.29,456,1.34,457,1.509,458,1.509,459,2.052,460,3.123,461,1.489,462,1.638,463,3.326,464,3.326,465,3.326,466,3.326,467,4.485,468,3.326,469,3.326,470,3.326,471,3.22,475,2.126,3503,7.131,3504,5.289]],["title/classes/LoadArchivedCardFailure.html",[0,0.276,453,2.801]],["body/classes/LoadArchivedCardFailure.html",[0,0.538,2,0.634,3,0.027,4,0.027,5,0.032,8,1.051,32,0.195,33,0.98,34,0.202,35,0.423,36,0.718,37,1.688,38,1.247,39,0.232,40,1.376,42,0.246,44,0.361,45,0.005,46,0.354,47,0.361,49,0.574,50,0.501,51,0.085,52,0.47,60,0.061,61,0.737,79,1.695,88,1.242,98,1.741,100,0.825,112,1.345,113,1.345,114,1.257,146,1.305,162,0.002,163,0.003,164,0.002,186,1.611,188,2.158,211,2.442,238,1.306,437,4.388,438,3.123,441,3.326,442,3.034,443,4.388,444,1.925,445,4.083,446,2.722,447,4.504,448,4.504,449,2.062,450,4.28,451,4.179,452,4.504,453,4.821,454,1.847,455,1.29,456,1.34,457,1.509,458,1.509,459,2.052,460,3.123,461,1.489,462,1.638,463,3.326,464,3.326,465,3.326,466,3.326,467,3.326,468,4.485,469,3.326,470,3.326,471,3.22,475,2.126,3505,7.131,3506,5.289]],["title/classes/LoadArchivedCardSuccess.html",[0,0.276,452,2.801]],["body/classes/LoadArchivedCardSuccess.html",[0,0.538,2,0.634,3,0.027,4,0.027,5,0.032,8,1.051,32,0.195,33,0.98,34,0.202,35,0.423,36,0.718,37,1.688,38,1.247,39,0.232,40,1.376,42,0.246,44,0.361,45,0.005,46,0.354,47,0.361,49,0.574,50,0.501,51,0.085,52,0.47,60,0.061,61,0.737,79,1.695,88,1.242,98,1.741,100,0.825,112,1.345,113,1.345,114,1.257,146,1.305,162,0.002,163,0.003,164,0.002,186,1.611,188,2.158,211,2.442,238,1.306,437,4.388,438,3.123,441,3.326,442,3.034,443,4.388,444,1.925,445,4.083,446,2.722,447,4.504,448,4.504,449,2.062,450,4.28,451,4.179,452,4.821,453,4.504,454,1.847,455,1.29,456,1.34,457,1.509,458,1.509,459,2.052,460,3.123,461,1.489,462,1.638,463,3.326,464,3.326,465,3.326,466,3.326,467,3.326,468,3.326,469,4.485,470,3.326,471,3.22,475,2.126,3507,7.131,3508,5.289]],["title/classes/LoadCard.html",[0,0.276,445,2.539]],["body/classes/LoadCard.html",[0,0.538,2,0.634,3,0.027,4,0.027,5,0.032,8,1.051,32,0.195,33,0.98,34,0.202,35,0.423,36,0.718,37,1.688,38,1.247,39,0.232,40,1.376,42,0.246,44,0.361,45,0.005,46,0.354,47,0.361,49,0.574,50,0.501,51,0.085,52,0.47,60,0.061,61,0.737,79,1.695,88,1.242,98,1.741,100,0.825,112,1.345,113,1.345,114,1.257,146,1.305,162,0.002,163,0.003,164,0.002,186,1.611,188,2.158,211,2.442,238,1.306,437,4.388,438,3.123,441,3.326,442,3.034,443,4.388,444,1.925,445,4.371,446,2.722,447,4.504,448,4.504,449,2.062,450,4.28,451,4.179,452,4.504,453,4.504,454,1.847,455,1.29,456,1.34,457,1.509,458,1.509,459,2.052,460,3.123,461,1.489,462,1.638,463,3.326,464,4.485,465,3.326,466,3.326,467,3.326,468,3.326,469,3.326,470,3.326,471,3.22,475,2.126,3509,7.131,3510,5.289]],["title/classes/LoadCardFailure.html",[0,0.276,448,2.801]],["body/classes/LoadCardFailure.html",[0,0.538,2,0.634,3,0.027,4,0.027,5,0.032,8,1.051,32,0.195,33,0.98,34,0.202,35,0.423,36,0.718,37,1.688,38,1.247,39,0.232,40,1.376,42,0.246,44,0.361,45,0.005,46,0.354,47,0.361,49,0.574,50,0.501,51,0.085,52,0.47,60,0.061,61,0.737,79,1.695,88,1.242,98,1.741,100,0.825,112,1.345,113,1.345,114,1.257,146,1.305,162,0.002,163,0.003,164,0.002,186,1.611,188,2.158,211,2.442,238,1.306,437,4.388,438,3.123,441,3.326,442,3.034,443,4.388,444,1.925,445,4.083,446,2.722,447,4.504,448,4.821,449,2.062,450,4.28,451,4.179,452,4.504,453,4.504,454,1.847,455,1.29,456,1.34,457,1.509,458,1.509,459,2.052,460,3.123,461,1.489,462,1.638,463,3.326,464,3.326,465,4.485,466,3.326,467,3.326,468,3.326,469,3.326,470,3.326,471,3.22,475,2.126,3511,7.131,3512,5.289]],["title/classes/LoadCardSuccess.html",[0,0.276,447,2.801]],["body/classes/LoadCardSuccess.html",[0,0.538,2,0.634,3,0.027,4,0.027,5,0.032,8,1.051,32,0.195,33,0.98,34,0.202,35,0.423,36,0.718,37,1.688,38,1.247,39,0.232,40,1.376,42,0.246,44,0.361,45,0.005,46,0.354,47,0.361,49,0.574,50,0.501,51,0.085,52,0.47,60,0.061,61,0.737,79,1.695,88,1.242,98,1.741,100,0.825,112,1.345,113,1.345,114,1.257,146,1.305,162,0.002,163,0.003,164,0.002,186,1.611,188,2.158,211,2.442,238,1.306,437,4.388,438,3.123,441,3.326,442,3.034,443,4.388,444,1.925,445,4.083,446,2.722,447,4.821,448,4.504,449,2.062,450,4.28,451,4.179,452,4.504,453,4.504,454,1.847,455,1.29,456,1.34,457,1.509,458,1.509,459,2.052,460,3.123,461,1.489,462,1.638,463,3.326,464,3.326,465,3.326,466,4.485,467,3.326,468,3.326,469,3.326,470,3.326,471,3.22,475,2.126,3513,7.131,3514,5.289]],["title/classes/LoadConfig.html",[0,0.276,591,3.155]],["body/classes/LoadConfig.html",[0,0.516,2,0.788,3,0.034,4,0.034,5,0.04,8,1.037,32,0.189,33,0.958,34,0.25,35,0.487,37,1.516,38,1.232,42,0.2,45,0.005,49,0.712,50,0.622,51,0.078,52,0.583,60,0.06,61,0.915,79,1.561,98,1.615,112,1.29,113,1.29,114,1.206,146,1.328,162,0.003,163,0.004,164,0.003,238,1.622,446,2.624,449,1.899,454,2.05,455,1.602,456,1.665,457,1.873,458,1.873,461,1.849,462,2.034,591,5.9,780,5.359,1195,3.768,1541,5.632,1578,4.442,2216,5.832,3067,4.631,3070,5.117,3071,6.396,3072,5.117,3073,5.117,3074,4.852,3515,6.567]],["title/classes/LoadConfigFailure.html",[0,0.276,2216,3.267]],["body/classes/LoadConfigFailure.html",[0,0.51,2,0.763,3,0.033,4,0.033,5,0.039,8,1.029,32,0.195,33,0.949,34,0.243,35,0.478,36,0.81,37,1.654,38,1.222,39,0.279,40,1.654,42,0.269,44,0.434,45,0.005,46,0.426,47,0.434,49,0.69,50,0.602,51,0.076,52,0.565,60,0.06,61,0.886,79,1.512,98,1.591,112,1.275,113,1.275,114,1.192,146,1.315,162,0.003,163,0.004,164,0.003,238,1.571,446,2.586,449,1.839,454,2.019,455,1.551,456,1.612,457,1.814,458,1.814,461,1.79,462,1.969,475,2.325,591,5.549,780,5.326,1195,3.648,1541,5.549,1578,4.301,2216,6.039,3067,4.484,3070,4.954,3071,4.954,3072,6.267,3073,4.954,3074,4.698,3516,8.044,3517,6.359]],["title/classes/LoadConfigSuccess.html",[0,0.276,1541,3.155]],["body/classes/LoadConfigSuccess.html",[0,0.51,2,0.763,3,0.033,4,0.033,5,0.039,8,1.029,32,0.195,33,0.949,34,0.243,35,0.478,36,0.81,37,1.654,38,1.222,39,0.279,40,1.654,42,0.269,44,0.434,45,0.005,46,0.426,47,0.434,49,0.69,50,0.602,51,0.076,52,0.565,60,0.06,61,0.886,79,1.512,98,1.591,112,1.275,113,1.275,114,1.192,146,1.315,162,0.003,163,0.004,164,0.003,238,1.571,446,2.586,449,1.839,454,2.019,455,1.551,456,1.612,457,1.814,458,1.814,461,1.79,462,1.969,475,2.325,591,5.549,780,5.326,1195,3.648,1541,5.832,1578,4.301,2216,5.746,3067,4.484,3070,4.954,3071,4.954,3072,4.954,3073,6.267,3074,4.698,3518,8.044,3519,6.359]],["title/classes/LoadLightCards.html",[0,0.276,485,2.285]],["body/classes/LoadLightCards.html",[0,0.554,2,0.5,3,0.021,4,0.021,5,0.025,8,1.08,10,2.205,11,1.07,12,1.327,32,0.193,33,1.004,34,0.159,35,0.358,37,1.593,38,1.27,39,0.389,42,0.127,45,0.005,49,0.452,50,0.394,51,0.093,52,0.37,60,0.062,61,0.58,65,1.29,79,0.99,88,1.938,98,1.697,100,0.795,109,1.308,112,1.311,113,1.311,114,1.225,146,1.221,154,1.565,162,0.002,163,0.003,164,0.002,186,1.491,190,0.841,193,1.922,224,2.341,238,1.029,316,1.385,345,1.381,444,1.516,446,2.28,449,1.745,454,1.624,455,1.016,456,1.056,457,1.188,458,1.188,459,1.616,461,1.173,462,1.29,472,3.171,473,2.805,474,1.936,478,2.018,479,2.593,480,1.29,481,1.272,482,1.976,483,1.898,484,1.793,485,3.544,486,4.781,487,3.171,488,1.898,489,3.054,490,2.805,491,1.976,492,1.54,493,3.233,494,3.171,495,1.29,496,3.054,497,3.286,498,1.793,499,3.171,500,1.936,501,3.171,502,3.171,503,1.976,504,1.976,505,3.171,506,3.111,507,3.171,508,1.761,509,1.827,510,3.171,511,1.448,512,3.171,513,1.976,514,3.171,515,1.936,516,3.171,517,1.73,518,1.643,519,2.923,520,2.018,521,2.018,522,1.793,523,2.018,524,2.018,525,2.018,526,1.671,527,2.018,528,2.018,529,2.018,530,2.018,531,1.59,532,2.018,533,2.018,534,2.018,535,1.976,536,1.976,537,2.018,538,2.018,539,2.018,540,2.018,541,2.018,542,1.936,3520,4.166]],["title/classes/LoadLightCardsExtendedData.html",[0,0.276,490,2.331]],["body/classes/LoadLightCardsExtendedData.html",[0,0.554,2,0.497,3,0.021,4,0.021,5,0.025,8,1.079,10,2.201,11,1.065,12,1.321,32,0.193,33,1.003,34,0.158,35,0.357,37,1.592,38,1.269,39,0.406,42,0.183,45,0.005,49,0.45,50,0.393,51,0.093,52,0.368,60,0.062,61,0.578,65,1.284,79,0.986,88,1.935,98,1.695,100,0.794,109,1.303,112,1.31,113,1.31,114,1.224,146,1.219,154,1.558,162,0.002,163,0.003,164,0.002,186,1.49,190,0.837,193,1.916,224,2.334,238,1.025,316,1.379,345,1.377,444,1.51,446,2.275,449,1.739,454,1.62,455,1.012,456,1.051,457,1.183,458,1.183,459,1.609,461,1.168,462,1.284,472,3.163,473,3.29,474,1.928,478,2.009,479,2.589,480,1.284,481,1.267,482,1.967,483,1.89,484,1.785,485,3.225,486,4.779,487,3.163,488,1.89,489,3.047,490,3.29,491,1.967,492,1.533,493,3.225,494,3.163,495,1.284,496,3.047,497,3.281,498,1.785,499,3.163,500,1.928,501,3.163,502,3.163,503,1.967,504,1.967,505,3.163,506,3.104,507,3.163,508,1.753,509,1.819,510,3.163,511,1.442,512,3.163,513,1.967,514,3.163,515,1.928,516,3.163,517,1.722,518,1.636,519,2.009,520,2.009,521,2.009,522,1.785,523,2.914,524,2.009,525,2.009,526,1.664,527,2.009,528,2.009,529,2.009,530,2.009,531,1.583,532,2.009,533,2.009,534,2.009,535,1.967,536,1.967,537,2.009,538,2.009,539,2.009,540,2.009,541,2.009,542,1.928,3521,6.016]],["title/classes/LoadLightCardsFailure.html",[0,0.276,493,2.285]],["body/classes/LoadLightCardsFailure.html",[0,0.552,2,0.489,3,0.021,4,0.021,5,0.025,8,1.077,10,2.185,11,1.046,12,1.298,32,0.195,33,1.001,34,0.155,35,0.353,36,0.598,37,1.64,38,1.267,39,0.396,40,1.06,42,0.213,44,0.278,45,0.005,46,0.273,47,0.278,49,0.442,50,0.386,51,0.092,52,0.362,60,0.062,61,0.568,65,1.262,79,0.969,88,1.921,98,1.688,100,0.787,109,1.279,112,1.305,113,1.305,114,1.22,146,1.213,154,1.53,162,0.002,163,0.003,164,0.002,186,1.485,190,0.822,193,1.891,224,2.304,238,1.006,316,1.355,345,1.359,444,1.483,446,2.256,449,1.717,454,1.604,455,0.994,456,1.033,457,1.162,458,1.162,459,1.581,461,1.147,462,1.262,472,3.131,473,3.578,474,1.893,475,1.846,478,1.973,479,2.573,480,1.262,481,1.244,482,1.932,483,1.856,484,1.754,485,3.192,486,4.768,487,3.131,488,1.856,489,3.016,490,2.76,491,1.932,492,1.506,493,3.507,494,3.131,495,1.262,496,3.016,497,3.261,498,1.754,499,3.131,500,1.893,501,3.131,502,3.131,503,1.932,504,1.932,505,3.131,506,3.072,507,3.131,508,1.722,509,1.786,510,3.131,511,1.416,512,3.131,513,1.932,514,3.131,515,1.893,516,3.131,517,1.692,518,1.607,519,1.973,520,1.973,521,1.973,522,1.754,523,1.973,524,2.876,525,1.973,526,1.634,527,1.973,528,1.973,529,1.973,530,1.973,531,1.555,532,1.973,533,1.973,534,1.973,535,1.932,536,1.932,537,1.973,538,1.973,539,1.973,540,1.973,541,1.973,542,1.893,3522,5.938,3523,4.074]],["title/classes/LoadLightCardsSuccess.html",[0,0.276,489,2.159]],["body/classes/LoadLightCardsSuccess.html",[0,0.552,2,0.489,3,0.021,4,0.021,5,0.025,8,1.077,10,2.185,11,1.046,12,1.298,32,0.195,33,1.001,34,0.155,35,0.353,36,0.598,37,1.64,38,1.267,39,0.396,40,1.06,42,0.213,44,0.278,45,0.005,46,0.273,47,0.278,49,0.442,50,0.386,51,0.092,52,0.362,60,0.062,61,0.568,65,1.262,79,0.969,88,1.921,98,1.688,100,0.787,109,1.279,112,1.305,113,1.305,114,1.22,146,1.213,154,1.53,162,0.002,163,0.003,164,0.002,186,1.485,190,0.822,193,1.891,224,2.304,238,1.006,316,1.355,345,1.359,444,1.483,446,2.256,449,1.717,454,1.604,455,0.994,456,1.033,457,1.162,458,1.162,459,1.581,461,1.147,462,1.262,472,3.131,473,3.578,474,1.893,475,1.846,478,1.973,479,2.573,480,1.262,481,1.244,482,1.932,483,1.856,484,1.754,485,3.192,486,4.768,487,3.131,488,1.856,489,3.314,490,2.76,491,1.932,492,1.506,493,3.192,494,3.131,495,1.262,496,3.016,497,3.261,498,1.754,499,3.131,500,1.893,501,3.131,502,3.131,503,1.932,504,1.932,505,3.131,506,3.072,507,3.131,508,1.722,509,1.786,510,3.131,511,1.416,512,3.131,513,1.932,514,3.131,515,1.893,516,3.131,517,1.692,518,1.607,519,1.973,520,1.973,521,2.876,522,1.754,523,1.973,524,1.973,525,1.973,526,1.634,527,1.973,528,1.973,529,1.973,530,1.973,531,1.555,532,1.973,533,1.973,534,1.973,535,1.932,536,1.932,537,1.973,538,1.973,539,1.973,540,1.973,541,1.973,542,1.893,3524,5.938,3525,4.074]],["title/classes/LoadMenu.html",[0,0.276,3083,2.878]],["body/classes/LoadMenu.html",[0,0.522,2,0.634,3,0.027,4,0.027,5,0.032,8,1.058,14,2.458,16,2.319,17,1.226,32,0.187,33,0.957,34,0.202,35,0.423,37,1.656,38,1.223,39,0.354,42,0.217,44,0.551,45,0.005,49,0.574,50,0.501,51,0.085,52,0.47,60,0.06,61,0.737,79,1.695,98,1.675,100,0.883,112,1.305,113,1.305,114,1.22,146,1.327,152,2.458,162,0.002,163,0.003,164,0.002,193,1.684,194,2.363,211,2.442,212,2.595,213,3.07,238,1.306,316,1.759,404,3.052,446,2.365,449,1.529,454,1.847,455,1.29,456,1.34,461,1.489,462,1.638,495,2.498,511,2.805,833,3.22,1253,3.879,1259,3.034,1572,3.326,1577,3.22,2271,2.877,2339,3.444,2362,5.255,2369,5.255,2370,3.444,2371,5.173,2373,4.629,2374,3.22,2375,3.444,2376,4.912,3078,3.326,3081,3.577,3082,3.123,3083,4.955,3084,4.504,3085,4.764,3086,4.764,3087,4.764,3088,4.824,3089,3.577,3090,3.577,3091,3.577,3092,3.577,3093,3.444,3094,3.444,3095,5.458,3096,5.458,3097,4.824,3098,3.577,3099,3.577,3100,3.577,3101,3.577,3102,3.444,3526,7.131]],["title/classes/LoadMenuFailure.html",[0,0.276,3085,2.962]],["body/classes/LoadMenuFailure.html",[0,0.519,2,0.621,3,0.027,4,0.027,5,0.032,8,1.055,14,2.405,16,2.269,17,1.199,32,0.193,33,0.953,34,0.197,35,0.417,36,0.708,37,1.695,38,1.218,39,0.308,40,1.346,42,0.243,44,0.584,45,0.005,46,0.347,47,0.353,49,0.561,50,0.49,51,0.084,52,0.46,60,0.06,61,0.721,79,1.671,98,1.664,100,0.875,112,1.298,113,1.298,114,1.213,146,1.321,152,2.405,162,0.002,163,0.003,164,0.002,193,1.648,194,2.312,211,2.406,212,2.557,213,3.025,238,1.278,316,1.721,404,3.046,446,2.338,449,1.496,454,1.826,455,1.262,456,1.312,461,1.457,462,1.602,475,2.103,495,2.471,511,2.774,833,3.15,1253,3.822,1259,2.969,1572,3.255,1577,3.15,2271,2.815,2339,3.37,2362,5.196,2369,5.196,2370,3.37,2371,5.134,2373,4.578,2374,3.15,2375,3.37,2376,4.858,3078,3.255,3081,3.5,3082,3.056,3083,4.578,3084,4.454,3085,5.054,3086,4.712,3087,4.712,3088,3.5,3089,4.753,3090,3.5,3091,3.5,3092,3.5,3093,3.37,3094,3.37,3095,5.397,3096,5.397,3097,4.753,3098,3.5,3099,3.5,3100,3.5,3101,3.5,3102,3.37,3527,7.027,3528,5.175]],["title/classes/LoadMenuSuccess.html",[0,0.276,3084,2.801]],["body/classes/LoadMenuSuccess.html",[0,0.519,2,0.621,3,0.027,4,0.027,5,0.032,8,1.055,14,2.405,16,2.269,17,1.199,32,0.193,33,0.953,34,0.197,35,0.417,36,0.708,37,1.695,38,1.218,39,0.308,40,1.346,42,0.243,44,0.584,45,0.005,46,0.347,47,0.353,49,0.561,50,0.49,51,0.084,52,0.46,60,0.06,61,0.721,79,1.671,98,1.664,100,0.875,112,1.298,113,1.298,114,1.213,146,1.321,152,2.405,162,0.002,163,0.003,164,0.002,193,1.648,194,2.312,211,2.406,212,2.557,213,3.025,238,1.278,316,1.721,404,3.046,446,2.338,449,1.496,454,1.826,455,1.262,456,1.312,461,1.457,462,1.602,475,2.103,495,2.471,511,2.774,833,3.15,1253,3.822,1259,2.969,1572,3.255,1577,3.15,2271,2.815,2339,3.37,2362,5.196,2369,5.196,2370,3.37,2371,5.134,2373,4.578,2374,3.15,2375,3.37,2376,4.858,3078,3.255,3081,3.5,3082,3.056,3083,4.578,3084,4.778,3085,4.712,3086,4.712,3087,4.712,3088,3.5,3089,3.5,3090,4.753,3091,3.5,3092,3.5,3093,3.37,3094,3.37,3095,5.397,3096,5.397,3097,4.753,3098,3.5,3099,3.5,3100,3.5,3101,3.5,3102,3.37,3529,7.027,3530,5.175]],["title/classes/LoadSettings.html",[0,0.276,3107,2.962]],["body/classes/LoadSettings.html",[0,0.536,2,0.706,3,0.03,4,0.03,5,0.036,8,1.052,32,0.191,33,0.98,34,0.224,35,0.454,37,1.62,38,1.249,42,0.179,45,0.005,49,0.638,50,0.557,51,0.07,52,0.523,60,0.061,61,0.82,69,1.901,79,1.82,98,1.726,112,1.316,113,1.316,114,1.23,146,1.34,162,0.003,163,0.004,164,0.003,238,1.454,446,2.493,449,2.213,454,1.947,455,1.435,456,1.491,457,1.679,458,1.679,461,1.656,462,1.822,735,4.554,1657,4.88,2900,4.88,2901,3.582,3103,3.701,3106,3.98,3107,5.319,3108,5.023,3109,5.54,3110,5.023,3111,5.023,3112,5.177,3113,3.98,3114,3.98,3115,3.98,3116,3.832,3117,3.98,3118,3.98,3119,3.832,3531,5.884]],["title/classes/LoadSettingsFailure.html",[0,0.276,3108,2.962]],["body/classes/LoadSettingsFailure.html",[0,0.532,2,0.686,3,0.029,4,0.029,5,0.035,8,1.046,32,0.195,33,0.974,34,0.218,35,0.446,36,0.756,37,1.681,38,1.242,39,0.25,40,1.487,42,0.255,44,0.39,45,0.005,46,0.383,47,0.39,49,0.62,50,0.541,51,0.068,52,0.508,60,0.061,61,0.796,69,1.847,79,1.785,98,1.712,112,1.306,113,1.306,114,1.22,146,1.331,162,0.003,163,0.003,164,0.003,238,1.412,446,2.458,449,2.171,454,1.92,455,1.394,456,1.449,457,1.631,458,1.631,461,1.609,462,1.77,475,2.21,735,4.539,1657,4.812,2900,4.812,2901,3.48,3103,3.595,3106,3.867,3107,4.953,3108,5.26,3109,5.462,3110,4.953,3111,4.953,3112,3.867,3113,5.08,3114,3.867,3115,3.867,3116,3.723,3117,3.867,3118,3.867,3119,3.723,3532,7.51,3533,5.716]],["title/classes/LoadSettingsSuccess.html",[0,0.276,2900,2.878]],["body/classes/LoadSettingsSuccess.html",[0,0.532,2,0.686,3,0.029,4,0.029,5,0.035,8,1.046,32,0.195,33,0.974,34,0.218,35,0.446,36,0.756,37,1.681,38,1.242,39,0.25,40,1.487,42,0.255,44,0.39,45,0.005,46,0.383,47,0.39,49,0.62,50,0.541,51,0.068,52,0.508,60,0.061,61,0.796,69,1.847,79,1.785,98,1.712,112,1.306,113,1.306,114,1.22,146,1.331,162,0.003,163,0.003,164,0.003,238,1.412,446,2.458,449,2.171,454,1.92,455,1.394,456,1.449,457,1.631,458,1.631,461,1.609,462,1.77,475,2.21,735,4.539,1657,4.812,2900,5.111,2901,3.48,3103,3.595,3106,3.867,3107,4.953,3108,4.953,3109,5.462,3110,4.953,3111,4.953,3112,3.867,3113,3.867,3114,5.08,3115,3.867,3116,3.723,3117,3.867,3118,3.867,3119,3.723,3534,7.51,3535,5.716]],["title/components/LoginComponent.html",[121,1.412,279,1]],["body/components/LoginComponent.html",[0,0.256,3,0.024,4,0.024,5,0.028,17,1.079,19,2.303,28,1.581,32,0.177,33,0.648,34,0.177,35,0.388,39,0.204,42,0.294,44,0.318,45,0.005,46,0.577,47,0.318,51,0.117,52,0.413,55,2.789,56,2.12,58,2.12,60,0.028,64,1.293,90,3.962,99,2.163,112,0.64,113,0.64,114,0.598,120,2.976,121,2.302,122,4.449,125,2.975,130,3.465,132,1.328,137,1.993,162,0.002,163,0.003,164,0.002,173,2.334,186,1.011,190,0.939,205,1.553,210,1.694,265,1.383,266,1.94,279,1.504,280,1.594,281,2.172,282,1.642,283,3.248,284,1.668,285,1.668,287,2.746,288,1.57,289,3.58,292,2.305,294,1.226,296,1.533,297,3.072,312,1.896,313,2.617,315,0.839,347,1.441,348,2.34,349,2.305,350,1.504,351,2.931,352,1.668,353,1.668,354,1.594,355,1.668,356,1.594,357,2.336,358,2.34,359,1.594,360,2.34,361,1.594,362,1.668,363,1.57,364,1.668,365,1.594,366,1.668,367,2.931,368,1.594,369,1.668,370,1.548,371,2.34,372,1.594,373,1.57,374,1.548,375,1.642,376,1.668,377,1.594,378,2.305,379,1.668,380,1.618,381,1.525,382,2.34,383,1.594,384,1.668,385,2.931,386,1.548,387,1.668,388,1.594,389,1.594,390,1.642,391,1.57,392,1.668,393,1.594,394,1.594,395,1.668,396,1.57,397,1.668,398,1.594,399,1.668,400,1.618,401,1.594,402,1.668,403,1.594,404,1.364,405,1.668,406,1.594,407,2.305,408,1.594,409,2.704,410,1.668,411,1.594,412,1.668,413,1.594,414,1.668,415,1.548,416,1.594,417,1.57,418,1.594,419,1.594,420,1.79,421,1.594,422,1.668,423,1.594,424,1.594,425,1.594,426,1.655,427,1.57,428,1.57,429,1.668,430,1.57,431,1.668,432,1.57,433,1.642,434,1.668,556,1.642,559,4.567,584,1.293,585,1.293,586,1.328,590,3.626,593,2.207,596,2.41,599,1.293,618,2.163,628,5.321,629,5.878,630,6.77,671,2.355,706,3.031,707,3.031,930,1.642,954,4.567,962,4.745,983,2.08,1137,3.031,1149,3.282,1155,2.748,1514,3.861,1580,3.438,3242,5.418,3536,4.654,3537,7.545,3538,7.545,3539,6.53,3540,7.545,3541,7.545,3542,7.545,3543,7.545,3544,7.545,3545,8.18,3546,8.18,3547,6.53,3548,4.654,3549,4.654,3550,4.654,3551,4.654,3552,4.654,3553,4.654,3554,4.654,3555,4.654,3556,4.654,3557,4.654,3558,4.654,3559,4.654,3560,4.654,3561,4.654,3562,4.654,3563,4.654,3564,4.654,3565,4.654,3566,4.654,3567,4.654,3568,4.654,3569,4.654,3570,4.654,3571,4.654,3572,4.654,3573,4.654,3574,4.654,3575,6.53,3576,6.53,3577,6.53,3578,6.53,3579,6.53,3580,6.53]],["title/classes/Map.html",[0,0.276,190,1.013]],["body/classes/Map.html",[0,0.442,2,0.966,3,0.042,4,0.042,5,0.049,42,0.245,45,0.005,60,0.049,100,0.948,162,0.004,163,0.004,164,0.004,183,4.312,190,1.873,3581,8.052,3582,8.052,3583,7.229,3584,8.052]],["title/injectables/MenuEffects.html",[837,4.162,892,1.393]],["body/injectables/MenuEffects.html",[0,0.303,3,0.028,4,0.028,5,0.034,8,0.963,17,2.224,28,1.841,32,0.173,34,0.349,35,0.436,37,1.487,39,0.242,42,0.251,44,0.377,45,0.005,46,0.492,47,0.377,49,0.796,50,0.695,51,0.118,52,0.49,60,0.034,88,2.253,112,0.759,113,0.759,114,0.709,120,3.252,127,3.524,137,2.099,146,1.208,162,0.004,163,0.003,164,0.003,190,1.114,209,1.865,212,2.67,241,4.087,294,2.172,315,0.995,404,2.575,446,2.416,556,1.948,584,1.533,585,1.533,586,1.574,599,1.533,618,3.41,719,5.842,722,3.167,745,6.088,763,4.964,837,6.088,892,2.038,893,2.42,910,5.041,912,3.991,924,3.002,925,2.859,927,2.42,928,2.618,930,1.948,1053,5.175,1067,4.779,1286,3.714,1426,4.964,1493,6.088,1500,5.041,1522,4.964,1526,7.883,1874,6.088,1907,5.25,1914,3.734,1939,6.196,1943,5.175,2371,4.21,2372,7.883,2373,3.167,2379,4.078,2579,4.952,3082,3.259,3083,3.167,3084,3.081,3085,3.259,3086,4.868,3087,4.868,3094,4.779,3585,5.519,3586,8.785,3587,5.519,3588,7.338,3589,7.338,3590,7.338,3591,7.338,3592,7.338,3593,5.519,3594,7.338,3595,7.338,3596,7.338,3597,7.338,3598,7.338,3599,7.338,3600,7.338,3601,5.519,3602,7.338,3603,7.338]],["title/components/MenuLinkComponent.html",[279,1,403,1.718]],["body/components/MenuLinkComponent.html",[0,0.262,3,0.025,4,0.034,5,0.041,32,0.178,33,0.659,34,0.182,35,0.395,36,0.77,39,0.209,42,0.281,44,0.326,45,0.005,46,0.554,47,0.326,49,0.518,50,0.452,51,0.104,52,0.424,60,0.029,64,1.326,91,1.275,121,1.344,128,1.226,132,1.362,137,2.01,162,0.002,163,0.003,164,0.002,173,2.569,176,2.761,177,3.176,186,1.029,200,4.389,213,3.292,265,2.457,266,1.975,279,1.525,280,1.635,281,2.211,282,1.685,283,2.055,284,1.711,285,1.711,287,2.784,288,1.611,289,3.585,290,3.029,292,2.346,296,1.561,297,3.107,312,1.107,313,1.362,315,0.861,316,1.588,329,1.711,330,1.685,331,1.711,332,1.711,333,1.711,334,1.711,335,1.521,336,1.711,337,1.711,338,1.711,339,2.875,340,1.588,341,1.685,342,1.711,343,1.711,344,1.711,345,1.093,346,1.711,347,1.478,348,2.382,349,2.346,350,1.542,351,2.964,352,1.711,353,1.711,354,1.635,355,1.711,356,1.635,357,2.369,358,2.382,359,1.635,360,2.382,361,1.635,362,1.711,363,1.611,364,1.711,365,1.635,366,1.711,367,2.964,368,1.635,369,1.711,370,1.588,371,2.382,372,1.635,373,1.611,374,1.588,375,1.685,376,1.711,377,1.635,378,2.346,379,1.711,380,1.66,381,1.565,382,2.382,383,1.635,384,1.711,385,2.964,386,1.588,387,1.711,388,1.635,389,1.635,390,1.685,391,1.611,392,1.711,393,1.635,394,1.635,395,1.711,396,1.611,397,1.711,398,1.635,399,1.711,400,1.66,401,1.635,402,1.711,403,2.833,404,2.87,405,1.711,406,1.635,407,2.346,408,1.635,409,2.741,410,1.711,411,1.635,412,1.711,413,1.635,414,1.711,415,1.588,416,1.635,417,1.611,418,1.635,419,1.635,420,1.822,421,1.635,422,1.711,423,1.635,424,1.635,425,1.635,426,1.21,427,1.611,428,1.611,429,1.711,430,1.611,431,1.711,432,1.611,433,1.685,434,1.711,456,1.21,556,1.685,585,1.326,586,1.362,593,2.264,596,2.473,599,1.326,639,3.72,700,8.454,983,3.418,1802,4.33,2371,4.746,2526,4.284,2683,4.284,2906,3.961,2959,6.863,3288,4.284,3604,9.422,3605,4.774,3606,7.649,3607,6.648,3608,7.649,3609,7.649,3610,7.649,3611,7.649,3612,6.648,3613,4.774,3614,4.774,3615,4.774,3616,4.774,3617,4.774,3618,4.774,3619,4.774,3620,4.774,3621,4.774,3622,4.774,3623,4.774,3624,4.774,3625,4.774,3626,4.774,3627,4.774,3628,9.004,3629,5.965,3630,6.648,3631,6.648,3632,4.774]],["title/interfaces/MenuState.html",[777,1.884,787,4.162]],["body/interfaces/MenuState.html",[3,0.039,4,0.039,5,0.046,32,0.186,34,0.286,35,0.528,45,0.005,51,0.089,60,0.054,100,1.025,146,1.305,162,0.003,163,0.004,164,0.003,173,2.707,205,1.783,210,2.729,213,4.225,219,2.458,316,2.494,404,2.938,624,6.304,777,2.817,778,3.978,787,7.874,3633,7.499,3634,10.023,3635,6.729,3636,7.499,3637,6.729]],["title/classes/Message.html",[0,0.276,55,1.854]],["body/classes/Message.html",[0,0.416,2,0.908,3,0.046,4,0.039,5,0.046,32,0.143,38,1.191,39,0.392,42,0.23,44,0.517,45,0.005,46,0.507,47,0.517,51,0.09,55,3.64,60,0.055,61,1.055,100,0.974,112,1.041,113,1.041,114,0.973,146,1.041,162,0.004,163,0.004,164,0.004,171,3.804,185,3.921,189,3.518,1580,5.593,3638,6.793,3639,7.57,3640,8.55,3641,7.57,3642,7.57,3643,6.793]],["title/directives/MouseWheelDirective.html",[350,1.621,432,1.693]],["body/directives/MouseWheelDirective.html",[0,0.345,3,0.032,4,0.032,5,0.038,7,2.438,28,1.673,32,0.166,34,0.24,42,0.297,44,0.429,45,0.005,46,0.421,47,0.429,51,0.075,60,0.049,162,0.003,163,0.004,164,0.003,288,2.12,289,2.694,296,1.874,312,1.457,313,2.719,315,1.133,350,2.983,427,2.12,432,2.694,433,2.818,598,3.418,635,5.63,760,2.863,1081,3.149,1496,6.22,1713,5.63,1725,4.896,1801,6.22,2105,6.935,2695,7.71,2700,7.164,2707,8.552,2711,7.28,2722,7.874,2945,8.879,3093,4.093,3644,6.284,3645,9.232,3646,7.984,3647,7.984,3648,7.984,3649,8.775,3650,8.775,3651,7.984,3652,7.984,3653,6.284,3654,6.284,3655,6.284,3656,6.284,3657,6.284,3658,6.284,3659,6.284,3660,6.284,3661,7.984,3662,6.284,3663,7.984,3664,7.984,3665,6.284,3666,6.284,3667,8.775,3668,6.284,3669,6.284,3670,6.284,3671,6.284,3672,7.984,3673,9.232,3674,6.284,3675,6.284,3676,6.284,3677,6.284,3678,6.284]],["title/components/MultiFilterComponent.html",[279,1,406,1.718]],["body/components/MultiFilterComponent.html",[0,0.26,3,0.024,4,0.034,5,0.04,17,1.531,28,1.385,32,0.181,33,0.655,34,0.18,35,0.392,36,0.476,39,0.207,42,0.273,44,0.323,45,0.005,46,0.552,47,0.323,50,0.721,51,0.103,60,0.029,64,1.314,91,1.263,100,0.976,121,1.332,128,1.215,132,1.35,162,0.002,163,0.003,164,0.002,170,4.973,171,2.442,176,2.744,177,3.422,186,1.022,189,2.199,205,1.125,265,1.406,266,1.963,275,4.25,279,1.518,280,1.62,281,2.197,282,1.67,283,2.037,284,1.696,285,1.696,287,2.77,288,1.597,289,3.583,290,3.01,292,2.332,296,1.551,297,3.095,312,1.097,313,1.35,315,0.853,329,1.696,330,1.67,331,1.696,332,1.696,333,1.696,334,1.696,335,1.507,336,1.696,337,1.696,338,1.696,339,2.864,340,1.573,341,1.67,342,1.696,343,1.696,344,1.696,345,1.083,346,1.696,347,1.465,348,2.368,349,2.332,350,1.529,351,2.953,352,1.696,353,1.696,354,1.62,355,1.696,356,1.62,357,2.357,358,2.368,359,1.62,360,2.368,361,1.62,362,1.696,363,1.597,364,1.696,365,1.62,366,1.696,367,2.953,368,1.62,369,1.696,370,1.573,371,2.368,372,1.62,373,1.597,374,1.573,375,1.67,376,1.696,377,1.62,378,2.332,379,1.696,380,1.645,381,1.551,382,2.368,383,1.62,384,1.696,385,2.953,386,1.573,387,1.696,388,1.62,389,1.62,390,1.67,391,1.597,392,1.696,393,1.62,394,1.62,395,1.696,396,1.597,397,1.696,398,1.62,399,1.696,400,1.645,401,1.62,402,1.696,403,1.62,404,1.387,405,1.696,406,2.822,407,3.371,408,1.62,409,2.728,410,1.696,411,1.62,412,1.696,413,1.62,414,1.696,415,1.573,416,1.62,417,1.597,418,1.62,419,1.62,420,1.811,421,1.62,422,1.696,423,1.62,424,1.62,425,1.62,426,1.929,427,1.597,428,1.597,429,1.696,430,1.597,431,1.696,432,1.597,433,1.67,434,1.696,475,1.741,584,1.314,599,1.314,671,2.395,681,2.451,682,2.451,940,6.499,954,4.6,962,4.155,981,4.659,1105,8.269,1106,8.269,1820,5.848,2465,3.496,2472,6.831,2473,4.881,2483,6.831,2523,5.928,3468,6.831,3480,4.246,3481,5.928,3482,5.928,3483,4.246,3484,4.246,3485,5.928,3486,4.246,3487,4.246,3488,4.246,3489,4.246,3502,5.928,3679,7.612,3680,4.732,3681,6.607,3682,4.732,3683,4.732,3684,4.732,3685,4.732,3686,4.732,3687,4.732]],["title/components/MultiSettingsComponent.html",[279,1,408,1.718]],["body/components/MultiSettingsComponent.html",[0,0.239,3,0.022,4,0.022,5,0.027,28,1.524,32,0.182,33,0.617,34,0.166,35,0.37,39,0.191,42,0.31,44,0.597,45,0.005,46,0.627,47,0.597,49,0.675,50,0.827,51,0.1,52,0.386,60,0.027,64,1.208,100,0.636,121,1.225,128,1.599,132,1.241,137,1.95,162,0.002,163,0.003,164,0.002,173,1.776,176,2.585,186,0.963,209,1.321,236,2.064,265,1.293,266,1.85,279,1.449,280,1.49,281,2.07,282,1.535,284,1.559,285,1.559,287,2.646,288,1.468,289,3.567,292,2.197,294,2.302,296,1.462,297,2.731,312,2.23,313,2.492,315,0.784,335,1.386,347,1.347,348,2.231,349,2.197,350,1.406,351,2.844,352,1.559,353,1.559,354,1.49,355,1.559,356,1.49,357,2.252,358,2.231,359,1.49,360,2.231,361,1.49,362,1.559,363,1.468,364,1.559,365,3.484,366,2.231,367,2.844,368,1.49,369,1.559,370,1.447,371,2.231,372,1.49,373,1.468,374,1.447,375,1.535,376,1.559,377,1.49,378,2.197,379,1.559,380,1.512,381,1.426,382,2.231,383,1.49,384,1.559,385,2.844,386,1.447,387,1.559,388,1.49,389,1.49,390,1.535,391,1.468,392,1.559,393,1.49,394,1.49,395,1.559,396,1.468,397,1.559,398,1.49,399,1.559,400,1.512,401,1.49,402,1.559,403,1.49,404,1.275,405,1.559,406,1.49,407,3.247,408,2.718,409,2.606,410,1.559,411,1.49,412,1.559,413,1.49,414,1.559,415,1.447,416,1.49,417,1.468,418,1.49,419,1.49,420,1.707,421,1.49,422,1.559,423,1.49,424,1.49,425,1.49,426,1.103,427,1.468,428,1.468,429,1.559,430,1.468,431,1.559,432,1.468,433,1.535,434,1.559,556,1.535,585,1.208,586,1.241,671,2.202,735,3.48,884,2.496,954,4.431,962,2.736,1303,3.677,1416,3.303,1618,3.214,1620,4.294,1621,5.128,1623,4.391,1624,3.791,1625,6.797,1626,4.391,1627,6.344,1628,4.391,1629,4.294,1630,5.128,1631,5.597,1632,4.391,1633,4.391,1634,4.391,1639,3.068,1641,3.068,1644,3.068,1645,3.916,1647,3.068,1651,5.128,1666,3.068,1705,4.851,1967,3.791,1999,6.762,2508,5.864,2750,3.214,2751,3.214,2752,3.214,2757,3.214,2758,3.214,2759,3.214,2760,3.214,2761,3.214,2762,3.214,2763,3.214,2764,3.214,2765,3.214,2766,3.214,2767,3.214,2768,3.214,2769,3.214,2771,3.214,2772,3.214,3493,3.214,3494,3.61,3495,3.61,3688,8.398,3689,6.968,3690,3.904,3691,4.851,3692,7.122,3693,3.904,3694,4.351,3695,4.351,3696,4.351,3697,4.351,3698,4.351,3699,4.351]],["title/components/NavbarComponent.html",[132,1.431,279,1]],["body/components/NavbarComponent.html",[0,0.232,3,0.022,4,0.031,5,0.037,17,1.658,32,0.181,33,0.605,34,0.232,35,0.362,36,0.425,39,0.185,42,0.303,44,0.416,45,0.005,46,0.556,47,0.416,49,0.849,50,0.786,51,0.116,52,0.375,60,0.026,64,1.173,75,3.017,85,1.963,91,1.128,100,0.8,121,1.189,128,1.085,131,4.154,132,2.234,134,3.157,137,1.931,162,0.002,163,0.003,164,0.002,173,2.369,186,0.943,209,0.897,213,1.818,219,1.385,228,1.786,265,1.255,266,1.811,273,2.877,279,1.426,280,1.447,281,2.027,282,1.491,283,1.818,284,1.514,285,1.514,287,2.603,288,1.426,289,3.561,290,2.777,292,2.151,294,1.885,296,1.431,297,2.941,312,1.815,313,2.234,315,0.762,316,1.405,329,1.514,330,1.491,331,1.514,332,1.514,333,1.514,334,1.514,335,1.346,336,1.514,337,1.514,338,1.514,339,1.469,340,1.405,341,1.491,342,1.514,343,1.514,344,1.514,345,0.967,346,1.514,347,1.308,348,2.184,349,2.151,350,1.365,351,2.806,352,1.514,353,1.514,354,1.447,355,1.514,356,1.447,357,2.215,358,2.184,359,1.447,360,2.184,361,1.447,362,1.514,363,1.426,364,1.514,365,1.447,366,1.514,367,2.806,368,1.447,369,1.514,370,1.405,371,2.184,372,1.447,373,1.426,374,1.405,375,1.491,376,1.514,377,1.447,378,2.151,379,1.514,380,1.469,381,1.385,382,2.184,383,1.447,384,1.514,385,2.806,386,1.405,387,1.514,388,1.447,389,1.447,390,1.491,391,1.426,392,1.514,393,1.447,394,1.447,395,1.514,396,1.426,397,1.514,398,1.447,399,1.514,400,1.469,401,1.447,402,1.514,403,1.447,404,1.238,405,1.514,406,1.447,407,2.151,408,1.447,409,2.563,410,1.514,411,1.447,412,1.514,413,1.447,414,1.514,415,1.405,416,1.447,417,1.426,418,1.447,419,1.447,420,1.671,421,1.447,422,1.514,423,1.447,424,1.447,425,1.447,426,1.071,427,1.426,428,1.426,429,1.514,430,1.426,431,1.514,432,1.426,433,1.491,434,1.514,492,2.253,550,5.572,556,1.491,567,3.291,584,1.173,585,1.173,586,1.205,587,3.121,589,3.791,593,2.004,599,1.173,607,3.291,618,2.833,632,5.108,675,2.858,742,7.762,760,3.941,930,1.491,983,2.724,1027,2.358,1049,3.121,1137,2.751,1143,2.188,1817,3.834,1819,3.403,1849,3.291,1851,3.291,1888,6.391,2296,7.026,2322,3.121,2325,3.791,2326,3.791,2327,3.791,2331,6.417,2379,3.121,2684,2.298,3083,3.498,3344,3.791,3700,4.224,3701,7.152,3702,6.096,3703,7.152,3704,6.096,3705,6.096,3706,7.152,3707,6.096,3708,7.83,3709,7.152,3710,6.096,3711,4.224,3712,4.224,3713,4.224,3714,4.224,3715,4.224,3716,4.224,3717,4.224,3718,4.224,3719,4.224,3720,4.224,3721,4.224,3722,4.224,3723,4.224,3724,4.224,3725,4.224,3726,4.224,3727,4.224,3728,4.224,3729,4.224,3730,4.224,3731,4.224,3732,4.224,3733,4.224,3734,4.224,3735,4.224,3736,4.224,3737,4.224,3738,4.224,3739,4.224,3740,4.224,3741,4.224,3742,4.224,3743,4.224,3744,4.224,3745,4.224,3746,4.224,3747,4.224,3748,4.224,3749,4.224,3750,4.224,3751,4.224,3752,4.224,3753,4.224,3754,4.224,3755,4.224,3756,6.096,3757,6.096,3758,6.096,3759,6.096,3760,6.096,3761,6.096,3762,4.224,3763,4.224,3764,4.224]],["title/components/NoSelectionComponent.html",[279,1,411,1.718]],["body/components/NoSelectionComponent.html",[0,0.325,3,0.03,4,0.03,5,0.036,32,0.145,33,0.761,34,0.225,39,0.373,42,0.234,45,0.005,46,0.571,51,0.07,60,0.036,64,1.64,121,1.662,132,1.685,162,0.003,163,0.004,164,0.003,186,1.187,265,1.755,266,2.279,279,1.699,280,2.023,281,2.551,282,2.084,284,2.116,285,2.116,287,3.101,288,1.993,289,3.621,292,2.707,296,1.801,297,3.388,312,1.369,313,1.685,315,1.065,347,1.829,348,2.749,349,2.707,350,1.908,351,3.232,352,2.116,353,2.116,354,2.023,355,2.116,356,2.023,357,2.639,358,2.749,359,2.023,360,2.749,361,2.023,362,2.116,363,1.993,364,2.116,365,2.023,366,2.116,367,3.232,368,2.023,369,2.116,370,1.964,371,2.749,372,2.023,373,1.993,374,1.964,375,2.084,376,2.116,377,2.023,378,2.707,379,2.116,380,2.053,381,1.936,382,2.749,383,2.023,384,2.116,385,3.232,386,1.964,387,2.116,388,2.023,389,2.023,390,2.084,391,1.993,392,2.116,393,2.023,394,2.023,395,2.116,396,1.993,397,2.116,398,2.023,399,2.116,400,2.053,401,2.023,402,2.116,403,2.023,404,1.731,405,2.116,406,2.023,407,2.707,408,2.023,409,3.053,410,2.116,411,3.089,412,2.116,413,2.023,414,2.116,415,1.964,416,2.023,417,1.993,418,2.023,419,2.023,420,2.103,421,2.023,422,2.116,423,2.023,424,2.023,425,2.023,426,1.497,427,1.993,428,1.993,429,2.116,430,1.993,431,2.116,432,1.993,433,2.084,434,2.116,498,3.883,1705,5.977,2923,7.646,3765,8.521,3766,5.906,3767,7.671,3768,5.906,3769,5.906]],["title/injectables/NotifyService.html",[892,1.393,2084,3.538]],["body/injectables/NotifyService.html",[0,0.386,3,0.036,4,0.036,5,0.043,28,1.473,32,0.162,34,0.268,35,0.508,39,0.404,42,0.3,44,0.585,45,0.005,46,0.573,47,0.585,51,0.084,60,0.043,65,2.176,100,1.007,162,0.003,163,0.004,164,0.003,173,2.442,209,1.817,296,2.009,312,2.139,313,2.442,315,1.267,554,4.754,892,2.377,893,3.082,1778,7.101,2084,6.036,3770,7.028,3771,9.23,3772,8.559,3773,8.559,3774,9.606,3775,8.559,3776,8.559,3777,7.028,3778,8.559,3779,7.028,3780,7.028,3781,7.028,3782,8.559,3783,7.028,3784,8.559,3785,7.028,3786,7.028]],["title/classes/Page.html",[0,0.276,127,2.012]],["body/classes/Page.html",[0,0.417,2,0.911,3,0.039,4,0.039,5,0.046,32,0.144,38,1.193,39,0.393,42,0.231,44,0.519,45,0.005,46,0.509,47,0.519,51,0.107,60,0.046,112,1.044,113,1.044,114,0.976,127,3.597,162,0.004,163,0.004,164,0.004,171,2.807,189,3.529,273,3.39,480,2.352,481,2.319,631,5.809,1793,4.946,3583,7.434,3787,7.594,3788,7.594,3789,9.541,3790,7.594,3791,8.966]],["title/classes/ParameterListItem.html",[0,0.276,276,3.054]],["body/classes/ParameterListItem.html",[0,0.517,2,0.531,3,0.023,4,0.023,5,0.027,8,0.466,11,1.619,23,1.806,24,1.494,28,1.842,32,0.151,36,0.446,38,1.331,39,0.418,42,0.135,44,0.302,45,0.005,46,0.492,47,0.302,50,0.757,51,0.088,60,0.061,61,0.878,87,1.746,88,1.039,100,1.054,112,1.271,113,1.271,114,1.188,123,1.905,162,0.003,163,0.003,164,0.002,167,2.614,169,3.838,170,5.538,171,3.526,172,3.617,173,2.843,174,3.965,175,3.965,176,2.618,177,3.049,178,3.965,179,3.965,180,3.965,181,3.965,182,3.965,183,2.057,186,0.975,187,3.265,188,1.806,189,2.057,190,0.894,191,5.031,192,2.057,193,1.41,194,2.817,195,2.784,196,2.784,197,2.784,198,2.471,199,2.784,200,4.212,201,2.695,202,2.784,203,2.614,204,3.965,205,2.089,206,3.12,207,2.614,208,3.965,209,1.558,210,2.294,211,2.159,212,2.672,213,1.905,214,2.695,215,2.784,216,2.471,217,3.838,218,3.838,219,3.222,220,2.784,221,2.784,222,2.695,223,2.695,224,2.848,225,2.784,226,2.784,227,2.784,228,1.871,229,2.408,230,2.54,231,2.784,232,2.784,233,2.784,234,2.784,235,2.614,236,2.99,237,2.784,238,1.094,239,2.54,240,2.695,241,1.978,242,2.695,243,2.408,244,2.784,245,2.784,246,2.996,247,2.784,248,2.784,249,2.784,250,3.965,251,2.784,252,2.784,253,2.784,254,2.784,255,2.191,256,2.784,257,2.784,258,2.471,259,2.784,260,2.784,261,2.784,262,2.784,263,2.784,264,3.838,265,1.315,266,1.315,267,2.695,268,2.695,269,2.695,270,2.1,271,2.784,272,2.784,273,2.096,274,2.784,275,2.471,276,4.469,277,2.784,278,2.784,435,3.972,3792,4.427]],["title/classes/PasswordOrCodeAuthenticationHandler.html",[0,0.276,1442,3.538]],["body/classes/PasswordOrCodeAuthenticationHandler.html",[0,0.447,2,0.274,3,0.012,4,0.012,5,0.014,7,0.887,8,0.241,9,1.758,12,2.88,13,1.571,17,1.722,23,1.974,24,1.276,27,0.966,28,1.876,32,0.134,33,0.48,34,0.087,36,0.962,37,0.64,39,0.246,41,3.731,42,0.19,44,0.384,45,0.005,46,0.417,47,0.33,49,0.248,51,0.107,52,0.203,53,2.204,54,1.042,55,1.398,58,1.723,60,0.047,61,0.319,63,1.062,67,1.723,69,1.222,74,1.002,82,3.58,83,2.894,85,1.062,87,0.902,90,3.598,91,2.174,94,1.832,95,1.758,99,2.894,100,1.004,101,3.939,102,4.224,103,3.653,104,2.217,117,1.132,119,2.782,120,3.211,125,2.204,128,1.242,137,1.95,146,0.665,158,1.794,162,0.001,163,0.002,164,0.001,173,2.197,190,0.461,205,2.247,209,2.117,210,2.046,211,1.295,212,1.76,219,1.585,228,0.966,229,1.243,246,1.543,273,2.47,294,2.425,296,0.888,312,1.303,313,2.625,315,0.412,340,2.071,345,1.287,374,0.76,420,1.707,426,0.579,444,0.832,455,0.922,461,0.643,492,0.845,495,0.708,511,0.795,552,4.392,559,4.147,564,1.084,580,2.667,584,0.635,585,0.635,586,0.652,593,1.084,596,1.184,598,4.61,599,1.344,610,2.667,618,1.758,631,2.303,664,1.213,688,1.546,706,2.463,707,3.151,735,2.121,738,4.056,760,1.723,762,3.272,763,3.272,773,3.32,777,2.339,780,2.007,802,1.184,803,1.213,892,1.051,927,1.658,928,1.084,930,0.807,983,2.162,1027,1.276,1056,2.667,1081,0.902,1123,3.964,1124,1.612,1125,4.957,1126,2.794,1127,1.689,1134,3.225,1135,1.612,1136,1.546,1137,1.489,1138,3.536,1139,1.546,1140,1.689,1141,5.866,1142,1.612,1143,1.184,1144,1.276,1145,4.153,1146,2.794,1147,2.794,1148,2.794,1149,3.964,1150,2.794,1151,1.689,1152,1.689,1153,1.689,1154,1.689,1155,1.35,1156,1.612,1157,2.794,1158,1.612,1159,1.689,1160,1.689,1161,3.574,1162,1.689,1163,1.689,1164,1.689,1165,1.689,1166,1.689,1167,1.689,1168,1.689,1169,1.689,1170,1.689,1171,1.689,1172,5.598,1173,1.689,1174,5.432,1175,1.689,1176,1.612,1177,1.689,1178,1.689,1179,1.689,1180,1.689,1181,2.794,1182,1.689,1183,1.689,1184,4.957,1185,1.612,1186,1.689,1187,1.689,1188,1.689,1189,1.689,1190,1.689,1191,1.689,1192,1.689,1193,1.689,1194,3.151,1195,1.312,1196,1.689,1197,1.35,1198,1.689,1199,5.247,1200,5.488,1201,2.794,1202,4.601,1203,1.689,1204,3.574,1205,1.689,1206,2.794,1207,1.689,1208,4.153,1209,2.794,1210,1.689,1211,1.689,1212,1.689,1213,1.689,1214,1.689,1215,1.689,1216,2.794,1217,1.689,1218,2.794,1219,2.794,1220,1.689,1221,1.689,1222,2.667,1223,1.689,1224,2.794,1225,1.689,1226,1.689,1227,1.612,1228,2.463,1229,1.689,1230,1.546,1231,1.689,1232,1.689,1233,1.689,1234,2.794,1235,1.689,1236,3.574,1237,1.689,1238,5.238,1239,3.574,1240,3.574,1241,3.574,1242,3.574,1243,3.574,1244,3.411,1245,1.689,1246,1.689,1247,1.689,1248,1.689,1249,2.794,1250,2.667,1251,2.794,1252,1.612,1253,2.631,1254,2.794,1255,2.794,1256,2.057,1257,1.689,1258,3.574,1259,2.775,1260,2.794,1261,1.689,1262,2.794,1263,1.689,1264,2.667,1265,1.689,1266,2.794,1267,1.689,1268,1.689,1269,2.794,1270,2.794,1271,1.689,1272,1.689,1273,1.689,1274,1.689,1275,1.689,1276,1.689,1277,1.689,1278,2.794,1279,1.689,1280,1.689,1281,1.689,1282,1.689,1283,1.689,1284,1.689,1285,1.689,1286,0.966,1287,1.689,1288,1.689,1289,1.689,1290,1.689,1291,1.689,1292,1.689,1293,1.689,1294,4.601,1295,5.247,1296,1.689,1297,1.689,1298,3.964,1299,1.689,1300,1.612,1301,1.689,1302,1.689,1303,2.857,1304,1.689,1305,2.794,1306,1.689,1307,2.794,1308,1.689,1309,1.546,1310,1.689,1311,1.689,1312,1.689,1313,1.689,1314,1.689,1315,1.689,1316,1.546,1317,1.689,1318,2.379,1319,1.689,1320,1.689,1321,1.689,1322,1.689,1323,1.689,1324,1.689,1325,1.689,1326,1.689,1327,1.689,1328,1.689,1329,1.689,1330,1.689,1331,1.689,1332,1.689,1333,2.794,1334,1.689,1335,1.689,1336,3.574,1337,2.794,1338,1.689,1339,1.689,1340,2.794,1341,2.794,1342,1.689,1343,1.689,1344,1.689,1345,1.689,1346,1.689,1347,1.689,1348,1.689,1349,3.574,1350,2.794,1351,1.612,1352,1.689,1353,1.689,1354,1.689,1355,1.546,1356,1.689,1357,1.689,1358,1.689,1359,1.689,1360,1.689,1361,1.689,1362,2.667,1363,1.689,1364,1.689,1365,1.689,1366,2.794,1367,2.794,1368,1.689,1369,1.689,1370,1.689,1371,1.689,1372,1.689,1373,1.689,1374,1.689,1375,1.689,1376,1.689,1377,1.689,1378,1.689,1379,1.438,1380,1.689,1381,1.689,1382,1.689,1383,2.794,1384,1.689,1385,1.689,1386,1.689,1387,1.689,1388,1.689,1389,1.689,1390,1.689,1391,1.689,1392,1.689,1393,1.689,1394,1.612,1395,1.689,1396,1.689,1397,1.689,1398,1.689,1399,1.689,1400,1.689,1401,1.689,1402,1.689,1403,1.689,1404,1.689,1405,1.689,1406,1.689,1407,1.689,1408,1.243,1409,1.914,1410,3.574,1411,2.17,1412,1.689,1413,1.689,1414,1.689,1415,1.689,1416,1.213,1417,1.689,1418,3.574,1419,1.689,1420,4.601,1421,1.689,1422,5.008,1423,1.689,1424,1.689,1425,1.689,1426,3.272,1427,1.612,1428,1.689,1429,1.612,1430,1.689,1431,2.794,1432,2.667,1433,1.723,1434,1.689,1435,1.612,1436,1.689,1437,1.689,1438,3.411,1439,2.857,1440,2.794,1441,2.794,1442,2.667,1443,3.574,1444,1.689,1445,2.794,1446,1.689,1447,1.489,1448,1.689,1449,1.689,1450,1.689,1451,1.689,1452,1.689,1453,1.689,1454,1.689,1455,1.689,1456,2.794,1457,1.689,1458,1.689,1459,1.689,1460,1.689,1461,1.689,1610,3.138,1615,1.897,3349,2.051,3353,2.051,3793,2.286,3794,2.286,3795,2.286,3796,2.286,3797,2.286]],["title/classes/PatchSettings.html",[0,0.276,1657,2.878]],["body/classes/PatchSettings.html",[0,0.532,2,0.686,3,0.029,4,0.029,5,0.035,8,1.046,32,0.195,33,0.974,34,0.218,35,0.446,36,0.756,37,1.681,38,1.242,39,0.25,40,1.487,42,0.255,44,0.39,45,0.005,46,0.383,47,0.39,49,0.62,50,0.541,51,0.068,52,0.508,60,0.061,61,0.796,69,1.847,79,1.785,98,1.712,112,1.306,113,1.306,114,1.22,146,1.331,162,0.003,163,0.003,164,0.003,238,1.412,446,2.458,449,2.171,454,1.92,455,1.394,456,1.449,457,1.631,458,1.631,461,1.609,462,1.77,475,2.21,735,4.539,1657,5.111,2900,4.812,2901,3.48,3103,3.595,3106,3.867,3107,4.953,3108,4.953,3109,5.462,3110,4.953,3111,4.953,3112,3.867,3113,3.867,3114,3.867,3115,5.08,3116,3.723,3117,3.867,3118,3.867,3119,3.723,3798,7.51,3799,5.716]],["title/classes/PatchSettingsFailure.html",[0,0.276,3111,2.962]],["body/classes/PatchSettingsFailure.html",[0,0.532,2,0.686,3,0.029,4,0.029,5,0.035,8,1.046,32,0.195,33,0.974,34,0.218,35,0.446,36,0.756,37,1.681,38,1.242,39,0.25,40,1.487,42,0.255,44,0.39,45,0.005,46,0.383,47,0.39,49,0.62,50,0.541,51,0.068,52,0.508,60,0.061,61,0.796,69,1.847,79,1.785,98,1.712,112,1.306,113,1.306,114,1.22,146,1.331,162,0.003,163,0.003,164,0.003,238,1.412,446,2.458,449,2.171,454,1.92,455,1.394,456,1.449,457,1.631,458,1.631,461,1.609,462,1.77,475,2.21,735,4.539,1657,4.812,2900,4.812,2901,3.48,3103,3.595,3106,3.867,3107,4.953,3108,4.953,3109,5.462,3110,4.953,3111,5.26,3112,3.867,3113,3.867,3114,3.867,3115,3.867,3116,3.723,3117,5.08,3118,3.867,3119,3.723,3800,7.51,3801,5.716]],["title/classes/PatchSettingsSuccess.html",[0,0.276,3110,2.962]],["body/classes/PatchSettingsSuccess.html",[0,0.532,2,0.686,3,0.029,4,0.029,5,0.035,8,1.046,32,0.195,33,0.974,34,0.218,35,0.446,36,0.756,37,1.681,38,1.242,39,0.25,40,1.487,42,0.255,44,0.39,45,0.005,46,0.383,47,0.39,49,0.62,50,0.541,51,0.068,52,0.508,60,0.061,61,0.796,69,1.847,79,1.785,98,1.712,112,1.306,113,1.306,114,1.22,146,1.331,162,0.003,163,0.003,164,0.003,238,1.412,446,2.458,449,2.171,454,1.92,455,1.394,456,1.449,457,1.631,458,1.631,461,1.609,462,1.77,475,2.21,735,4.539,1657,4.812,2900,4.812,2901,3.48,3103,3.595,3106,3.867,3107,4.953,3108,4.953,3109,5.462,3110,5.26,3111,4.953,3112,3.867,3113,3.867,3114,3.867,3115,3.867,3116,3.723,3117,3.867,3118,5.08,3119,3.723,3802,7.51,3803,5.716]],["title/classes/PayloadForSuccessfulAuthentication.html",[0,0.276,41,2.43]],["body/classes/PayloadForSuccessfulAuthentication.html",[0,0.525,1,3.244,2,0.452,3,0.019,4,0.019,5,0.045,6,2,7,1.463,8,1.053,9,4.199,10,1.007,11,1.904,12,3.271,13,3.451,14,3.684,15,1.953,16,3.252,17,1.926,18,3.739,19,3.924,20,3.051,21,2.105,22,2.051,23,3.027,24,2.26,25,3.643,26,3.739,27,2.831,28,1.404,29,3.051,30,3.553,31,3.131,32,0.191,33,0.937,34,0.144,35,0.333,36,0.991,37,1.342,38,1.181,39,0.246,41,3.244,42,0.262,44,0.257,45,0.005,46,0.253,47,0.541,51,0.088,52,0.335,53,3.786,54,1.718,55,2.476,56,1.718,57,2.105,58,2.555,59,2.105,60,0.059,61,0.525,62,1.953,63,3.112,64,1.047,65,2.074,66,3.39,67,2.555,68,3.643,69,3.052,70,4.681,71,3.935,72,3.39,73,2.051,74,2.459,75,3.671,76,3.192,77,4.012,78,3.39,79,1.592,80,3.39,81,2.051,82,3.112,83,3.447,84,3.469,85,1.752,86,2.051,87,1.487,88,0.885,89,2.105,90,2.717,91,1.007,92,2.051,93,2.051,94,1.826,95,3.112,96,2.051,97,2.051,98,1.429,99,3.447,100,1.006,101,3.684,102,3.543,103,3.76,104,2.925,105,2.105,106,2.105,107,3.131,108,3.051,109,1.761,110,3.051,111,2.105,112,1.216,113,1.216,114,1.136,115,2.105,116,2.051,117,1.866,118,2.105,119,1.866,120,1.487,121,1.061,122,2.051,123,2.883,124,3.131,125,3.051,126,2.905,127,1.513,128,0.968,129,2.051,130,2,131,3.935,132,1.076,133,2.105,134,1.953,135,2.051,136,2.839,137,1.252,138,2.105,139,2.105,140,4.141,141,2.051,142,2.105,143,3.051,144,2.105,145,3.051,146,0.518,147,2.105,148,2.051,149,2.105,150,2.051,151,2.105,152,2.607,153,3.051,154,1.416,155,2.105,156,2.105,157,2.105,158,2.66,159,2.105,160,2.105,161,2,162,0.002,163,0.003,164,0.002,185,2.905,1463,5.779,1465,5.779,3804,3.771,3805,3.771,3806,3.771,3807,3.771,3808,3.771,3809,3.771,3810,3.771,3811,3.771]],["title/classes/Process.html",[0,0.276,206,2.483]],["body/classes/Process.html",[0,0.517,2,0.532,3,0.023,4,0.023,5,0.027,8,0.468,11,1.622,23,1.811,24,1.498,28,1.843,32,0.152,36,0.447,38,1.332,39,0.418,42,0.135,44,0.303,45,0.005,46,0.493,47,0.303,50,0.598,51,0.088,60,0.061,61,0.88,87,1.751,88,1.042,100,1.049,112,1.272,113,1.272,114,1.189,123,1.911,162,0.003,163,0.003,164,0.002,167,2.621,169,3.845,170,5.477,171,3.419,172,3.624,173,2.844,174,3.972,175,3.972,176,2.623,177,3.053,178,3.972,179,3.972,180,3.972,181,3.972,182,3.972,183,2.063,185,2.299,186,0.977,187,3.271,188,1.811,189,2.063,190,0.896,191,5.532,192,2.063,193,1.414,194,2.822,195,2.792,196,2.792,197,2.792,198,2.478,199,2.792,200,4.219,201,2.703,202,2.792,203,2.621,204,3.972,205,2.091,206,3.639,207,2.621,208,3.972,209,1.56,210,2.299,211,2.163,212,2.676,213,1.911,214,2.703,215,3.972,216,2.478,217,3.845,218,3.845,219,3.224,220,2.792,221,2.792,222,2.703,223,2.703,224,2.852,225,2.792,226,2.792,227,2.792,228,1.876,229,2.414,230,2.547,231,2.792,232,2.792,233,2.792,234,2.792,235,2.621,236,2.996,237,2.792,238,1.097,239,2.547,240,2.703,241,1.984,242,2.703,243,2.414,244,2.792,245,2.792,246,3,247,2.792,248,2.792,249,2.792,250,3.972,251,2.792,252,2.792,253,2.792,254,2.792,255,2.197,256,2.792,257,2.792,258,2.478,259,2.792,260,2.792,261,2.792,262,2.792,263,2.792,264,3.845,265,1.319,266,1.319,267,2.703,268,2.703,269,2.703,270,2.105,271,2.792,272,2.792,273,2.1,274,2.792,275,2.478,276,3.845,277,2.792,278,2.792,3812,4.439,3813,4.439]],["title/classes/RefreshTranslation.html",[0,0.276,3814,3.054]],["body/classes/RefreshTranslation.html",[0,0.531,2,0.789,3,0.034,4,0.034,5,0.04,8,1.053,10,2.193,32,0.191,33,0.977,34,0.251,35,0.488,37,1.517,38,1.25,42,0.2,45,0.005,49,0.713,50,0.623,51,0.098,52,0.584,60,0.061,61,0.916,98,1.616,100,0.672,146,1.13,162,0.003,163,0.004,164,0.003,171,3.571,190,1.658,192,3.056,255,3.255,517,2.731,518,2.594,614,3.883,781,5.903,1819,3.671,2907,4.448,3814,5.714,3815,4.448,3816,6.07,3817,6.576,3818,4.283,3819,5.455,3820,5.455,3821,4.638,3822,5.455,3823,4.638,3824,5.455,3825,4.638,3826,4.638,3827,4.858,3828,4.448,3829,4.858,3830,4.858,3831,4.448,3832,4.858,3833,4.283]],["title/classes/RejectLogIn.html",[0,0.276,72,2.539]],["body/classes/RejectLogIn.html",[0,0.526,1,3.279,2,0.461,3,0.02,4,0.02,5,0.049,6,2.037,7,1.49,8,1.063,9,4.354,10,1.025,11,2.051,12,3.283,13,3.595,14,3.712,15,1.989,16,3.503,17,2.06,18,4.178,19,4.14,20,3.682,21,2.144,22,2.089,23,3.26,24,2.525,25,4.07,26,4.178,27,3.163,28,1.568,29,3.682,30,3.97,31,3.174,32,0.192,33,0.95,34,0.146,35,0.338,36,0.872,37,1.465,38,1.209,39,0.249,40,0.999,41,2.754,42,0.206,44,0.262,45,0.005,46,0.257,47,0.262,49,0.417,50,0.364,51,0.089,52,0.341,53,3.084,54,1.749,55,2.766,56,1.749,57,2.144,58,2.59,59,2.144,60,0.06,61,0.535,62,1.989,63,3.146,64,1.067,65,2.096,66,3.426,67,2.59,68,3.682,69,3.063,70,4.708,71,3.97,72,3.787,73,2.089,74,2.493,75,3.704,76,3.221,77,4.043,78,3.426,79,1.352,80,3.426,81,2.089,82,3.146,83,3.478,84,3.506,85,1.785,86,2.089,87,1.515,88,0.901,89,2.144,90,2.754,91,1.025,92,2.089,93,2.089,94,1.86,95,3.146,96,2.089,97,2.089,98,1.44,99,1.785,100,0.817,101,1.785,102,1.716,103,1.821,104,1.515,105,2.144,106,2.144,107,3.174,108,3.092,109,1.785,110,3.092,111,2.144,112,1.222,113,1.222,114,1.142,115,2.144,116,2.089,117,1.901,118,2.144,119,1.901,120,1.515,121,1.081,122,2.089,123,3.221,124,3.174,125,3.409,126,2.945,127,1.54,128,0.986,129,2.089,130,2.037,131,3.97,132,1.095,133,2.144,134,1.989,135,2.089,136,3.426,137,1.511,138,3.174,139,3.174,140,4.46,141,3.092,142,3.174,143,3.682,144,3.174,145,4.07,146,0.528,147,2.144,148,2.089,149,2.144,150,2.089,151,2.144,152,2.642,153,3.092,154,1.442,155,2.144,156,2.144,157,2.144,158,2.696,159,2.144,160,2.144,161,2.037,162,0.002,163,0.003,164,0.002,475,1.784,3834,5.685,3835,3.84]],["title/classes/RemoveLightCard.html",[0,0.276,501,2.242]],["body/classes/RemoveLightCard.html",[0,0.552,2,0.489,3,0.021,4,0.021,5,0.025,8,1.077,10,2.185,11,1.046,12,1.298,32,0.195,33,1.001,34,0.155,35,0.353,36,0.598,37,1.64,38,1.267,39,0.396,40,1.06,42,0.213,44,0.278,45,0.005,46,0.273,47,0.278,49,0.442,50,0.386,51,0.092,52,0.362,60,0.062,61,0.568,65,1.262,79,0.969,88,1.921,98,1.688,100,0.787,109,1.279,112,1.305,113,1.305,114,1.22,146,1.213,154,1.53,162,0.002,163,0.003,164,0.002,186,1.485,190,0.822,193,1.891,224,2.304,238,1.006,316,1.355,345,1.359,444,1.483,446,2.256,449,1.717,454,1.604,455,0.994,456,1.033,457,1.162,458,1.162,459,1.581,461,1.147,462,1.262,472,3.131,473,3.578,474,1.893,475,1.846,478,1.973,479,2.573,480,1.262,481,1.244,482,1.932,483,1.856,484,1.754,485,3.192,486,4.768,487,3.131,488,1.856,489,3.016,490,2.76,491,1.932,492,1.506,493,3.192,494,3.131,495,1.262,496,3.016,497,3.261,498,1.754,499,3.131,500,1.893,501,3.44,502,3.131,503,1.932,504,1.932,505,3.131,506,3.072,507,3.131,508,1.722,509,1.786,510,3.131,511,1.416,512,3.131,513,1.932,514,3.131,515,1.893,516,3.131,517,1.692,518,1.607,519,1.973,520,1.973,521,1.973,522,1.754,523,1.973,524,1.973,525,1.973,526,1.634,527,1.973,528,1.973,529,1.973,530,2.876,531,1.555,532,1.973,533,1.973,534,1.973,535,1.932,536,1.932,537,1.973,538,1.973,539,1.973,540,1.973,541,1.973,542,1.893,3836,5.938,3837,4.074]],["title/components/ResizableComponent.html",[279,1,413,1.718]],["body/components/ResizableComponent.html",[0,0.288,3,0.027,4,0.037,5,0.043,24,1.767,32,0.152,33,0.702,34,0.2,35,0.421,36,0.527,39,0.352,42,0.262,45,0.005,46,0.538,51,0.062,60,0.032,64,1.455,91,1.398,121,1.474,128,1.345,132,1.494,162,0.002,163,0.003,164,0.002,173,2.021,186,1.096,205,1.245,219,1.716,265,1.556,266,2.105,279,1.6,280,1.793,281,2.356,282,1.848,283,2.254,284,1.877,285,1.877,288,1.767,289,3.602,290,3.227,292,2.5,296,1.663,312,1.214,313,1.494,315,0.944,329,1.877,330,1.848,331,1.877,332,1.877,333,1.877,334,1.877,335,1.668,336,1.877,337,1.877,338,1.877,339,1.82,340,1.741,341,1.848,342,1.877,343,1.877,344,1.877,345,1.199,346,1.877,347,1.622,348,2.538,349,2.5,350,1.692,351,3.082,352,1.877,353,1.877,354,1.793,355,1.877,356,1.793,357,2.486,358,2.538,359,1.793,360,2.538,361,1.793,362,1.877,363,1.767,364,1.877,365,1.793,366,1.877,367,3.082,368,1.793,369,1.877,370,1.741,371,2.538,372,1.793,373,1.767,374,1.741,375,1.848,376,1.877,377,1.793,378,2.5,379,1.877,380,1.82,381,1.716,382,2.538,383,1.793,384,1.877,385,3.082,386,1.741,387,1.877,388,1.793,389,1.793,390,1.848,391,1.767,392,1.877,393,1.793,394,1.793,395,1.877,396,1.767,397,1.877,398,1.793,399,1.877,400,1.82,401,1.793,402,1.877,403,1.793,404,1.535,405,1.877,406,1.793,407,2.5,408,1.793,409,2.877,410,1.877,411,1.793,412,1.877,413,2.945,414,1.877,415,1.741,416,1.793,417,1.767,418,1.793,419,1.793,420,1.942,421,1.793,422,1.877,423,1.793,424,1.793,425,1.793,426,1.327,427,1.767,428,1.767,429,1.877,430,1.767,431,1.877,432,1.767,433,1.848,434,1.877,508,2.214,563,4.08,569,4.08,632,4.183,983,3.165,1081,2.066,1705,5.519,1713,4.996,1714,6.255,1725,4.08,1734,4.699,1735,4.699,1737,4.699,1755,4.699,1778,4.345,1996,6.66,1997,6.701,2105,3.542,2639,4.699,2659,6.66,3838,5.237,3839,8.6,3840,8.028,3841,7.084,3842,7.084,3843,5.237,3844,5.237,3845,5.237,3846,5.237,3847,5.237,3848,4.345,3849,4.345,3850,5.237,3851,5.237,3852,7.084,3853,8.028,3854,5.237,3855,5.237,3856,5.237,3857,5.237,3858,5.237,3859,5.237,3860,5.237,3861,5.237,3862,5.237,3863,5.237,3864,5.237]],["title/classes/RouterStateUrl.html",[0,0.276,796,3.908]],["body/classes/RouterStateUrl.html",[0,0.429,2,0.728,3,0.031,4,0.045,5,0.037,7,2.355,11,2.217,13,3.785,28,1.272,32,0.115,33,0.602,38,1.079,39,0.342,42,0.185,44,0.644,45,0.005,46,0.407,47,0.414,51,0.093,60,0.053,100,0.883,109,2.452,112,0.835,113,0.835,114,0.78,137,1.927,162,0.003,163,0.004,164,0.003,205,2.167,209,1.657,212,3.513,238,2.251,246,4.285,255,3.865,270,3.704,294,1.599,312,1.81,420,2.14,492,2.887,511,2.714,719,4.754,722,3.483,795,4.28,796,6.726,1066,4.911,1081,2.394,1253,4.247,1318,4.911,1409,3.952,2374,5.549,2380,4.729,2381,5.446,2382,7.562,2385,5.446,2386,7.007,2388,5.446,2389,7.562,2391,5.446,2392,5.446,2393,5.446,2394,8.661,2395,5.446,2396,6.478,2397,7.007,2398,8.008,2399,7.007,2400,7.007,2401,7.562,2402,7.007,2403,7.007,2404,7.007,2405,7.007,2406,7.007,2407,5.446,2408,5.446,2409,5.446,2410,5.446,2411,5.446,2412,5.446,2413,5.446,3865,6.07,3866,6.07]],["title/classes/SelectArchivedLightCard.html",[0,0.276,1068,3.054]],["body/classes/SelectArchivedLightCard.html",[0,0.525,2,0.701,3,0.03,4,0.03,5,0.036,8,1.039,10,2.034,32,0.195,33,0.965,34,0.223,35,0.452,36,0.767,37,1.688,38,1.234,39,0.256,40,1.519,42,0.258,44,0.399,45,0.005,46,0.391,47,0.399,49,0.634,50,0.553,51,0.101,52,0.519,60,0.06,61,0.814,98,1.722,100,0.597,112,1.338,113,1.338,114,1.25,127,3.603,146,1.165,162,0.004,163,0.004,164,0.003,186,1.179,190,1.538,246,2.384,273,1.942,345,1.337,357,2.958,426,1.481,451,3.945,454,1.94,455,1.425,456,1.481,457,1.666,458,1.666,475,2.234,479,1.759,480,1.809,481,1.784,495,1.809,497,2.229,526,2.343,572,3.351,902,5.005,917,3.177,931,3.804,932,5.16,933,5.005,937,3.674,938,5.16,1062,3.804,1065,4.119,1066,5.331,1067,3.804,1068,5.468,1069,4.119,1070,4.119,1071,4.119,1072,3.951,1073,4.119,1074,5.372,1075,3.951,3867,7.617,3868,5.841]],["title/classes/SelectLightCard.html",[0,0.276,494,2.242]],["body/classes/SelectLightCard.html",[0,0.552,2,0.489,3,0.021,4,0.021,5,0.025,8,1.077,10,2.185,11,1.046,12,1.298,32,0.195,33,1.001,34,0.155,35,0.353,36,0.598,37,1.64,38,1.267,39,0.396,40,1.06,42,0.213,44,0.278,45,0.005,46,0.273,47,0.278,49,0.442,50,0.386,51,0.092,52,0.362,60,0.062,61,0.568,65,1.262,79,0.969,88,1.921,98,1.688,100,0.787,109,1.279,112,1.305,113,1.305,114,1.22,146,1.213,154,1.53,162,0.002,163,0.003,164,0.002,186,1.485,190,0.822,193,1.891,224,2.304,238,1.006,316,1.355,345,1.359,444,1.483,446,2.256,449,1.717,454,1.604,455,0.994,456,1.033,457,1.162,458,1.162,459,1.581,461,1.147,462,1.262,472,3.131,473,3.578,474,1.893,475,1.846,478,1.973,479,2.573,480,1.262,481,1.244,482,1.932,483,1.856,484,1.754,485,3.192,486,4.768,487,3.131,488,1.856,489,3.016,490,2.76,491,1.932,492,1.506,493,3.192,494,3.44,495,1.262,496,3.016,497,3.261,498,1.754,499,3.131,500,1.893,501,3.131,502,3.131,503,1.932,504,1.932,505,3.131,506,3.072,507,3.131,508,1.722,509,1.786,510,3.131,511,1.416,512,3.131,513,1.932,514,3.131,515,1.893,516,3.131,517,1.692,518,1.607,519,1.973,520,1.973,521,1.973,522,1.754,523,1.973,524,1.973,525,2.876,526,1.634,527,1.973,528,1.973,529,1.973,530,1.973,531,1.555,532,1.973,533,1.973,534,1.973,535,1.932,536,1.932,537,1.973,538,1.973,539,1.973,540,1.973,541,1.973,542,1.893,3869,5.938,3870,4.074]],["title/classes/SelectMenuLink.html",[0,0.276,2373,2.878]],["body/classes/SelectMenuLink.html",[0,0.514,2,0.6,3,0.026,4,0.026,5,0.031,7,1.941,8,1.056,14,3.191,16,3.011,17,1.592,32,0.192,33,0.945,34,0.191,35,0.408,36,0.691,37,1.697,38,1.209,39,0.301,40,1.301,42,0.239,44,0.604,45,0.005,46,0.335,47,0.342,49,0.543,50,0.474,51,0.082,52,0.444,60,0.059,61,0.697,79,1.632,98,1.647,100,0.863,112,1.286,113,1.286,114,1.202,146,1.31,152,3.191,162,0.002,163,0.003,164,0.002,193,2.187,194,3.068,211,2.89,212,2.499,213,2.956,238,1.236,316,1.664,404,3.067,446,2.298,449,1.446,454,1.794,455,1.22,456,1.268,461,1.408,462,1.549,475,2.066,495,2.428,511,2.933,833,4.18,1253,3.735,1259,2.87,1572,4.318,1577,4.18,2271,2.721,2339,4.472,2362,5.106,2369,5.496,2370,4.472,2371,5.242,2373,4.842,2374,4.18,2375,4.472,2376,5.384,3078,3.146,3081,3.384,3082,2.954,3083,4.498,3084,4.377,3085,4.63,3086,4.63,3087,4.63,3088,3.384,3089,3.384,3090,3.384,3091,4.645,3092,4.645,3093,4.472,3094,4.472,3095,5.303,3096,5.303,3097,4.645,3098,3.384,3099,3.384,3100,3.384,3101,3.384,3102,3.258,3871,6.866,3872,5.002]],["title/classes/SelectMenuLinkFailure.html",[0,0.276,3087,2.962]],["body/classes/SelectMenuLinkFailure.html",[0,0.517,2,0.611,3,0.026,4,0.026,5,0.031,7,1.978,8,1.059,14,2.369,16,2.235,17,1.182,32,0.192,33,0.949,34,0.194,35,0.413,36,0.7,37,1.702,38,1.214,39,0.305,40,1.326,42,0.241,44,0.608,45,0.005,46,0.342,47,0.348,49,0.553,50,0.483,51,0.083,52,0.453,60,0.059,61,0.71,79,1.654,98,1.657,100,0.869,112,1.293,113,1.293,114,1.209,146,1.335,152,2.369,162,0.002,163,0.003,164,0.002,193,1.624,194,2.278,211,2.382,212,2.531,213,2.994,238,1.259,316,1.695,404,3.049,446,2.32,449,1.474,454,1.812,455,1.243,456,1.292,461,1.435,462,1.579,475,2.086,495,2.452,511,2.957,833,3.104,1253,4.307,1259,2.925,1572,3.206,1577,3.104,2271,2.773,2339,3.32,2362,5.54,2369,5.54,2370,3.32,2371,5.108,2373,4.543,2374,3.104,2375,3.32,2376,5.178,3078,3.206,3081,3.448,3082,3.01,3083,4.543,3084,4.42,3085,4.675,3086,4.675,3087,5.023,3088,3.448,3089,3.448,3090,3.448,3091,3.448,3092,3.448,3093,3.32,3094,3.32,3095,5.754,3096,5.754,3097,4.705,3098,3.448,3099,3.448,3100,4.705,3101,4.705,3102,3.32,3873,6.956,3874,5.098]],["title/classes/SelectMenuLinkSuccess.html",[0,0.276,3086,2.962]],["body/classes/SelectMenuLinkSuccess.html",[0,0.516,2,0.609,3,0.026,4,0.026,5,0.031,7,1.972,8,1.059,14,2.362,16,2.228,17,1.178,32,0.192,33,0.949,34,0.194,35,0.412,36,0.699,37,1.701,38,1.213,39,0.304,40,1.322,42,0.241,44,0.607,45,0.005,46,0.34,47,0.347,49,0.551,50,0.481,51,0.083,52,0.451,60,0.059,61,0.708,79,1.65,98,1.655,100,0.868,112,1.292,113,1.292,114,1.208,146,1.315,152,2.362,162,0.002,163,0.003,164,0.002,193,1.619,194,2.271,211,2.377,212,3.091,213,2.988,238,1.255,316,1.69,404,3.048,446,2.317,449,1.469,454,1.809,455,1.239,456,1.288,461,1.43,462,1.574,475,2.083,495,2.448,511,2.953,833,3.094,1253,4.299,1259,3.982,1572,3.196,1577,3.094,2271,2.764,2339,3.31,2362,5.532,2369,5.532,2370,3.31,2371,5.267,2373,4.535,2374,3.094,2375,3.31,2376,4.812,3078,3.196,3081,3.438,3082,3.001,3083,4.535,3084,4.413,3085,4.668,3086,5.016,3087,4.668,3088,3.438,3089,3.438,3090,3.438,3091,3.438,3092,3.438,3093,3.31,3094,3.31,3095,5.746,3096,5.746,3097,5.746,3098,4.695,3099,3.438,3100,3.438,3101,3.438,3102,3.31,3875,6.941,3876,5.082]],["title/classes/SendArchiveQuery.html",[0,0.276,902,2.962]],["body/classes/SendArchiveQuery.html",[0,0.525,2,0.701,3,0.03,4,0.03,5,0.036,8,1.039,10,2.034,32,0.195,33,0.965,34,0.223,35,0.452,36,0.767,37,1.688,38,1.234,39,0.256,40,1.519,42,0.258,44,0.399,45,0.005,46,0.391,47,0.399,49,0.634,50,0.553,51,0.101,52,0.519,60,0.06,61,0.814,98,1.722,100,0.597,112,1.338,113,1.338,114,1.25,127,3.603,146,1.165,162,0.004,163,0.004,164,0.003,186,1.179,190,1.538,246,2.384,273,1.942,345,1.337,357,2.958,426,1.481,451,3.945,454,1.94,455,1.425,456,1.481,457,1.666,458,1.666,475,2.234,479,1.759,480,1.809,481,1.784,495,1.809,497,2.229,526,2.343,572,3.351,902,5.304,917,3.177,931,3.804,932,5.16,933,5.005,937,3.674,938,5.16,1062,3.804,1065,4.119,1066,5.331,1067,3.804,1068,5.16,1069,4.119,1070,5.372,1071,4.119,1072,3.951,1073,4.119,1074,4.119,1075,3.951,3877,7.617,3878,5.841]],["title/modules/ServicesModule.html",[640,2.2,652,3.706]],["body/modules/ServicesModule.html",[0,0.314,3,0.029,4,0.039,5,0.046,28,1.197,36,0.575,39,0.25,42,0.174,45,0.005,47,0.512,51,0.124,60,0.035,76,2.458,91,1.524,128,1.466,146,0.785,162,0.003,163,0.003,164,0.003,209,1.212,243,5.164,270,3.559,296,1.34,312,1.323,315,1.029,319,2.957,320,5.123,321,5.123,329,2.046,330,2.015,331,2.046,332,2.046,333,2.046,334,2.046,335,1.818,336,2.046,337,2.046,338,2.046,339,1.985,340,1.899,341,2.015,342,2.046,343,2.046,344,2.046,345,1.307,346,2.046,347,1.768,407,2.015,517,2.371,557,7.014,559,5.3,597,5.123,614,3.371,640,2.503,641,4.218,642,2.89,643,3.276,644,3.476,645,4.95,646,3.029,652,7.853,655,4.431,656,3.476,658,3.105,660,4.559,664,3.029,665,4.719,668,3.371,714,4.218,715,4.448,882,3.591,897,6.183,950,5.606,969,3.476,983,2.551,1138,4.719,1139,3.862,1670,5.123,1907,5.3,1914,3.862,2084,6.695,2106,4.737,2108,4.737,2173,6.954,2175,6.954,2199,7.014,2215,5.123,2852,7.014,3879,5.123,3880,5.123,3881,7.014,3882,7.397,3883,7.014,3884,5.709,3885,5.709,3886,7.504,3887,7.504,3888,5.709,3889,5.709,3890,5.123,3891,5.709,3892,7.504]],["title/classes/SetCardDataTimeline.html",[0,0.276,3400,3.538]],["body/classes/SetCardDataTimeline.html",[0,0.475,2,0.855,3,0.037,4,0.037,5,0.044,8,1.017,32,0.197,33,0.921,34,0.272,35,0.513,36,0.87,37,1.572,38,1.207,39,0.313,40,1.855,42,0.283,44,0.487,45,0.005,46,0.478,47,0.487,49,0.774,50,0.675,51,0.085,52,0.633,60,0.059,61,0.994,64,1.981,98,1.557,162,0.003,163,0.004,164,0.003,186,1.104,381,3.044,475,2.448,492,2.637,2684,3.879,3394,6.551,3395,5.557,3398,6.4,3399,5.917,3400,6.808,3401,6.4,3402,7.749,3403,6.4,3404,5.917,3893,8.636,3894,7.132]],["title/components/SettingsComponent.html",[279,1,415,1.668]],["body/components/SettingsComponent.html",[0,0.289,3,0.027,4,0.027,5,0.032,7,2.038,17,2.264,32,0.182,33,0.704,34,0.2,35,0.422,39,0.23,42,0.289,44,0.359,45,0.005,46,0.577,47,0.359,51,0.107,52,0.467,60,0.032,64,1.459,121,1.479,132,1.499,137,2.069,162,0.002,163,0.003,164,0.002,173,2.75,186,1.099,198,4.489,265,1.561,266,2.109,279,1.603,280,1.799,281,2.361,282,1.854,284,1.883,285,1.883,287,2.926,288,1.773,289,3.602,292,2.505,296,1.667,297,3.235,312,1.218,313,1.499,315,0.947,347,1.627,348,2.544,349,2.505,350,1.697,351,3.086,352,1.883,353,1.883,354,1.799,355,1.883,356,1.799,357,2.49,358,2.544,359,1.799,360,2.544,361,1.799,362,1.883,363,1.773,364,1.883,365,1.799,366,1.883,367,3.086,368,1.799,369,1.883,370,1.747,371,2.544,372,1.799,373,1.773,374,1.747,375,1.854,376,1.883,377,1.799,378,2.505,379,1.883,380,1.826,381,1.722,382,2.544,383,1.799,384,1.883,385,3.086,386,1.747,387,1.883,388,1.799,389,1.799,390,2.505,391,1.773,392,1.883,393,1.799,394,1.799,395,1.883,396,1.773,397,1.883,398,1.799,399,1.883,400,1.826,401,1.799,402,1.883,403,1.799,404,1.54,405,1.883,406,1.799,407,2.505,408,1.799,409,2.881,410,1.883,411,1.799,412,1.883,413,1.799,414,1.883,415,2.864,416,1.799,417,2.396,418,1.799,419,1.799,420,1.946,421,1.799,422,1.883,423,1.799,424,1.799,425,1.799,426,1.332,427,1.773,428,1.773,429,1.883,430,1.773,431,1.883,432,1.773,433,1.854,434,1.883,556,1.854,584,1.459,585,1.459,586,1.499,593,2.492,596,2.721,599,1.459,735,3.113,777,1.973,2792,3.199,3049,6.671,3052,4.359,3053,4.359,3691,5.531,3831,3.554,3895,4.714,3896,7.215,3897,7.215,3898,7.215,3899,7.099,3900,5.254,3901,5.254,3902,7.145,3903,5.254,3904,5.254,3905,5.254,3906,4.714,3907,4.714,3908,4.714,3909,4.714,3910,4.714,3911,4.714,3912,4.714,3913,4.714,3914,4.714,3915,4.359,3916,4.714,3917,4.714,3918,4.714]],["title/injectables/SettingsEffects.html",[849,4.162,892,1.393]],["body/injectables/SettingsEffects.html",[0,0.32,1,2.819,3,0.03,4,0.03,5,0.036,8,0.613,17,2.253,28,1.88,32,0.17,34,0.222,35,0.451,39,0.255,42,0.273,44,0.397,45,0.005,46,0.39,47,0.397,49,0.918,50,0.801,51,0.12,52,0.517,60,0.036,88,2.282,112,0.8,113,0.8,114,0.748,120,3.67,137,2.13,162,0.003,163,0.004,164,0.003,190,1.175,209,1.613,241,4.344,294,2.002,315,1.049,446,2.227,556,2.054,584,1.617,585,1.617,586,1.66,599,1.617,735,3.933,849,6.304,892,2.111,893,2.552,899,6.627,910,5.146,912,4.602,924,3.166,925,3.014,927,2.552,928,2.76,930,2.054,1286,3.212,1433,2.652,1479,5.14,1500,4.36,1522,6.067,1657,5.146,1658,4.829,1939,5.359,1943,6.326,1951,4.829,1952,4.829,1953,4.829,2044,5.921,2071,3.339,2072,4.3,2208,6.818,2209,6.818,2900,3.339,2901,3.543,3107,5.636,3108,3.437,3110,3.437,3111,3.437,3881,6.627,3890,5.222,3919,5.82,3920,8.461,3921,5.82,3922,7.599,3923,7.599,3924,7.599,3925,7.599,3926,7.599,3927,5.82,3928,7.599,3929,5.82,3930,7.599,3931,7.599,3932,7.599,3933,7.599,3934,7.599,3935,5.82,3936,5.222]],["title/interfaces/SettingsInputs.html",[777,1.884,3902,4.162]],["body/interfaces/SettingsInputs.html",[0,0.362,3,0.034,4,0.034,5,0.04,7,3.643,17,2.24,32,0.191,33,0.653,34,0.251,35,0.488,45,0.005,51,0.115,52,0.585,60,0.04,137,2.001,162,0.003,163,0.004,164,0.003,173,3.038,198,3.676,279,1.639,287,2.992,289,2.222,292,2.324,297,2.473,315,1.187,390,3.314,415,2.19,417,3.169,584,1.829,585,1.829,586,1.879,593,3.123,596,3.411,599,1.829,735,2.887,777,2.473,778,3.494,2792,5.717,3049,5.463,3052,5.463,3053,5.463,3691,5.131,3831,6.352,3895,5.909,3896,5.909,3897,5.909,3898,5.909,3902,7.791,3906,5.909,3907,5.909,3908,5.909,3909,5.909,3910,5.909,3911,5.909,3912,5.909,3913,5.909,3914,5.909,3915,5.463,3916,8.426,3917,8.426,3918,8.426]],["title/modules/SettingsModule.html",[640,2.2,3937,3.908]],["body/modules/SettingsModule.html",[0,0.344,3,0.032,4,0.041,5,0.049,32,0.118,36,0.63,45,0.005,51,0.123,60,0.038,76,2.694,91,1.671,128,1.607,162,0.003,163,0.004,164,0.003,315,1.129,319,3.242,329,2.243,330,2.209,331,2.243,332,2.243,333,2.243,334,2.243,335,1.994,336,2.243,337,2.243,338,2.243,339,2.176,340,2.081,341,2.209,342,2.243,343,2.243,344,2.243,345,1.433,346,2.243,347,1.938,365,3.332,389,3.332,401,3.332,408,3.332,415,3.236,418,3.332,423,3.332,424,3,640,2.745,642,3.168,643,3.591,644,5.332,645,3.696,646,3.321,655,4.703,656,3.811,658,4.332,660,4.332,665,5.009,668,3.696,669,6.205,670,6.205,671,3.168,675,4.234,680,5.884,681,4.125,682,3.242,735,2.745,1618,4.624,2744,5.617,2770,5.193,2771,6.811,2952,7.146,3467,5.617,3689,5.193,3937,8.219,3938,5.617,3939,5.617,3940,5.617,3941,7.189,3942,6.259,3943,5.617,3944,6.259,3945,6.259,3946,6.259,3947,6.259,3948,6.259,3949,7.146,3950,6.259,3951,5.617]],["title/modules/SettingsRoutingModule.html",[640,2.2,3941,3.706]],["body/modules/SettingsRoutingModule.html",[0,0.407,3,0.038,4,0.046,5,0.054,36,0.746,45,0.005,51,0.113,60,0.045,91,1.978,128,1.902,162,0.003,163,0.004,164,0.003,205,1.761,279,1.477,315,1.335,329,2.654,330,2.614,331,2.654,332,2.654,333,2.654,334,2.654,335,2.359,336,2.654,337,2.654,338,2.654,339,2.575,340,2.463,341,2.614,342,2.654,343,2.654,344,2.654,345,1.695,346,2.654,415,2.938,642,3.749,646,3.929,658,4.029,660,4.805,717,5.472,720,6.527,721,6.149,722,4.25,727,5.472,730,5.771,731,5.771,1122,5.771,3941,6.527,3943,6.646,3952,7.407]],["title/injectables/SettingsService.html",[892,1.393,3881,3.706]],["body/injectables/SettingsService.html",[0,0.376,3,0.035,4,0.035,5,0.042,17,2.266,32,0.18,34,0.261,35,0.5,39,0.3,42,0.298,44,0.575,45,0.005,46,0.564,47,0.575,51,0.12,52,0.608,60,0.042,100,0.973,137,2.25,162,0.003,163,0.004,164,0.003,209,1.788,294,2.657,296,1.978,312,1.953,315,1.235,584,1.902,585,1.902,586,1.953,599,1.902,664,3.633,735,3.694,802,3.547,803,3.633,892,2.34,893,3.003,1134,5.71,1155,4.044,1665,6.144,2083,4.829,3881,6.224,3953,6.848,3954,9.124,3955,9.124,3956,9.52,3957,8.424,3958,8.424,3959,6.848,3960,6.848,3961,6.848,3962,6.848,3963,6.848,3964,6.144,3965,6.848,3966,6.848,3967,6.848,3968,6.848]],["title/interfaces/SettingsState.html",[777,1.884,789,4.162]],["body/interfaces/SettingsState.html",[3,0.039,4,0.039,5,0.046,32,0.186,34,0.288,35,0.53,45,0.005,60,0.055,100,0.973,146,1.38,162,0.003,163,0.004,164,0.003,173,2.904,205,1.794,210,2.746,219,2.928,614,5.929,624,6.314,735,4.313,777,2.834,778,4.003,789,7.895,3116,4.915,3969,7.546,3970,7.546]],["title/classes/State.html",[0,0.276,11,1.288]],["body/classes/State.html",[0,0.517,2,0.53,3,0.023,4,0.023,5,0.027,8,0.465,11,1.883,23,1.803,24,1.491,28,1.841,32,0.151,36,0.445,38,1.331,39,0.418,42,0.135,44,0.302,45,0.005,46,0.491,47,0.302,50,0.596,51,0.087,60,0.061,61,0.877,87,1.743,88,1.722,100,1.048,112,1.27,113,1.27,114,1.187,123,1.902,162,0.003,163,0.003,164,0.002,167,2.609,169,3.833,170,5.471,171,3.415,172,3.612,173,2.842,174,3.959,175,3.959,176,2.614,177,3.045,178,3.959,179,3.959,180,3.959,181,3.959,182,3.959,183,2.054,185,3.261,186,0.974,187,4.14,188,1.803,189,2.054,190,0.892,191,5.523,192,2.054,193,1.407,194,2.813,195,2.779,196,2.779,197,2.779,198,2.467,199,2.779,200,4.208,201,2.69,202,2.779,203,2.609,204,3.959,205,2.088,206,3.116,207,2.609,208,3.959,209,1.556,210,2.291,211,2.156,212,2.669,213,1.902,214,2.69,215,2.779,216,3.515,217,3.833,218,3.833,219,3.221,220,2.779,221,2.779,222,2.69,223,2.69,224,2.845,225,2.779,226,2.779,227,2.779,228,1.868,229,2.403,230,2.535,231,2.779,232,2.779,233,2.779,234,2.779,235,2.609,236,2.986,237,2.779,238,1.092,239,2.535,240,2.69,241,1.974,242,2.69,243,2.403,244,2.779,245,2.779,246,2.993,247,2.779,248,2.779,249,2.779,250,3.959,251,2.779,252,2.779,253,2.779,254,2.779,255,2.187,256,2.779,257,2.779,258,2.467,259,2.779,260,2.779,261,2.779,262,2.779,263,2.779,264,3.833,265,1.313,266,1.313,267,2.69,268,2.69,269,2.69,270,2.096,271,2.779,272,2.779,273,2.093,274,2.779,275,2.467,276,3.833,277,2.779,278,2.779,3971,4.419,3972,4.419]],["title/modules/StateModule.html",[640,2.2,653,3.706]],["body/modules/StateModule.html",[0,0.354,3,0.033,4,0.042,5,0.05,9,2.991,34,0.245,36,0.648,42,0.196,45,0.005,51,0.121,52,0.72,60,0.039,76,2.77,91,1.718,128,1.652,137,1.809,162,0.003,163,0.004,164,0.003,209,1.366,270,3.844,296,1.511,312,1.492,315,1.16,319,3.333,329,2.306,330,2.271,331,2.306,332,2.306,333,2.306,334,2.306,335,2.05,336,2.306,337,2.306,338,2.306,339,2.237,340,2.14,341,2.271,342,2.306,343,2.306,344,2.306,345,1.473,346,2.306,347,1.993,378,2.271,640,2.822,642,3.257,643,3.692,644,4.934,645,4.786,646,3.414,653,7.35,655,4.786,656,3.918,658,4.408,660,4.826,665,5.097,668,3.8,714,4.754,715,5.014,719,3.918,795,5.716,797,5.774,802,4.972,803,3.414,867,5.774,868,5.774,871,5.774,872,7.272,925,3.333,1740,7.272,2173,7.361,2175,7.361,2380,6.912,2382,7.361,2389,6.724,2398,5.339,2401,5.339,2420,5.774,3973,5.774,3974,5.774,3975,6.435,3976,6.435,3977,6.435,3978,6.435,3979,6.435,3980,5.774,3981,8.105,3982,6.435,3983,6.435,3984,6.435,3985,6.435,3986,6.435,3987,6.435,3988,6.435,3989,6.435,3990,6.435,3991,6.435,3992,6.435,3993,6.435,3994,6.435]],["title/components/TagsFilterComponent.html",[279,1,416,1.718]],["body/components/TagsFilterComponent.html",[0,0.249,3,0.023,4,0.033,5,0.039,17,1.724,28,1.558,32,0.161,33,0.636,34,0.173,35,0.381,36,0.456,39,0.199,42,0.277,44,0.309,45,0.005,46,0.571,47,0.309,49,0.492,50,0.429,51,0.116,52,0.402,60,0.028,64,1.259,65,1.403,91,1.21,114,0.582,121,1.275,128,1.646,132,1.293,137,2.032,162,0.002,163,0.003,164,0.002,186,0.992,209,1.36,219,2.1,228,1.915,265,1.346,266,1.904,279,1.482,280,1.552,281,2.131,282,1.599,283,1.95,284,1.624,285,1.624,287,2.706,288,1.529,289,3.575,290,2.92,292,2.262,294,2.492,296,1.504,297,3.036,312,1.724,313,1.828,315,0.817,329,1.624,330,1.599,331,1.624,332,1.624,333,1.624,334,1.624,335,2.575,336,1.624,337,1.624,338,1.624,339,1.575,340,1.507,341,1.599,342,1.624,343,1.624,344,1.624,345,1.037,346,1.624,347,1.403,348,2.297,349,2.262,350,1.464,351,2.897,352,1.624,353,1.624,354,1.552,355,1.624,356,1.552,357,2.303,358,2.297,359,1.552,360,2.297,361,1.552,362,1.624,363,1.529,364,1.624,365,1.552,366,1.624,367,2.897,368,1.552,369,1.624,370,1.507,371,2.297,372,1.552,373,1.529,374,1.507,375,1.599,376,1.624,377,1.552,378,2.262,379,1.624,380,1.575,381,1.485,382,2.297,383,1.552,384,1.624,385,2.897,386,1.507,387,1.624,388,1.552,389,1.552,390,1.599,391,1.529,392,1.624,393,1.552,394,1.552,395,1.624,396,1.529,397,1.624,398,1.552,399,1.624,400,1.575,401,1.552,402,1.624,403,1.552,404,1.328,405,1.624,406,1.552,407,2.262,408,1.552,409,2.665,410,1.624,411,1.552,412,1.624,413,1.552,414,1.624,415,1.507,416,2.768,417,3.235,418,1.552,419,1.552,420,1.757,421,1.552,422,1.624,423,1.552,424,1.552,425,1.552,426,2.162,427,1.529,428,1.529,429,1.624,430,1.529,431,1.624,432,1.529,433,1.599,434,1.624,584,1.259,585,1.259,586,1.293,599,1.259,671,2.293,874,3.784,879,3.065,880,2.951,881,2.759,882,2.85,887,2.85,930,1.599,947,2.759,954,4.151,1143,2.347,1286,1.915,1447,2.951,1538,2.85,1620,4.391,1624,4.527,1629,4.774,1645,2.85,1661,3.53,1662,4.993,1663,3.348,1664,3.195,1680,3.53,1682,3.53,1684,3.53,1692,3.53,1693,3.53,1802,2.951,1994,6.87,2066,3.348,2465,3.348,2473,4.735,2485,4.066,2511,4.52,2826,3.065,2903,3.53,2950,8.344,2951,8.344,3995,6.672,3996,6.169,3997,7.436,3998,6.707,3999,4.531,4000,8.529,4001,6.409,4002,4.531,4003,4.531,4004,3.759,4005,3.759,4006,4.531,4007,6.409,4008,3.759,4009,3.759,4010,4.531,4011,3.759,4012,4.531,4013,4.531,4014,4.066,4015,3.759,4016,4.531,4017,4.531,4018,3.759,4019,4.531,4020,4.531,4021,4.531,4022,4.066,4023,3.759,4024,4.066,4025,4.066]],["title/components/TextSettingComponent.html",[279,1,418,1.718]],["body/components/TextSettingComponent.html",[0,0.225,3,0.021,4,0.021,5,0.025,28,1.472,32,0.184,33,0.591,34,0.156,35,0.354,39,0.179,42,0.311,44,0.603,45,0.005,46,0.628,47,0.603,49,0.646,50,0.81,51,0.098,52,0.363,60,0.025,64,1.136,100,0.789,121,1.152,123,1.761,128,1.529,132,1.167,137,1.909,162,0.002,163,0.003,164,0.002,173,2.441,176,2.473,177,2.916,186,0.922,205,1.416,209,1.491,219,1.341,236,1.941,265,2.436,266,1.77,279,1.4,280,1.401,281,1.981,282,1.444,284,1.466,285,1.466,287,2.556,288,1.381,289,3.554,292,2.102,294,2.255,296,1.398,297,2.638,298,3.395,312,2.226,313,2.441,315,0.738,335,1.303,347,1.267,348,2.134,349,2.102,350,1.322,351,2.764,352,1.466,353,1.466,354,1.401,355,1.466,356,1.401,357,2.175,358,2.134,359,1.401,360,2.134,361,1.401,362,1.466,363,1.381,364,1.466,365,3.458,366,2.134,367,2.764,368,1.401,369,1.466,370,1.361,371,2.134,372,1.401,373,1.381,374,1.361,375,1.444,376,1.466,377,1.401,378,2.102,379,1.466,380,1.422,381,1.341,382,2.134,383,1.401,384,1.466,385,2.764,386,1.361,387,1.466,388,1.401,389,1.401,390,1.444,391,1.381,392,1.466,393,1.401,394,1.401,395,1.466,396,1.381,397,1.466,398,1.401,399,1.466,400,1.422,401,1.401,402,1.466,403,1.401,404,1.199,405,1.466,406,1.401,407,2.102,408,1.401,409,2.517,410,1.466,411,1.401,412,1.466,413,1.401,414,1.466,415,1.361,416,1.401,417,1.381,418,2.642,419,1.401,420,1.633,421,1.401,422,1.466,423,1.401,424,1.401,425,1.401,426,1.037,427,1.381,428,1.381,429,1.466,430,1.381,431,1.466,432,1.381,433,1.444,434,1.466,556,1.444,585,1.136,586,1.167,671,2.071,954,4.307,962,2.573,1303,3.517,1416,3.16,1618,3.023,1619,3.188,1620,4.147,1621,5.781,1622,4.641,1623,4.2,1624,3.626,1625,6.831,1626,4.2,1627,6.228,1628,5.44,1629,4.147,1630,4.953,1631,5.44,1632,4.2,1633,4.2,1634,4.2,1637,3.671,1639,2.885,1641,2.885,1644,4.953,1645,5.156,1647,4.2,1651,4.953,1666,2.885,1967,3.626,1999,6.702,2475,5.827,2508,6.057,2511,2.885,2745,6.922,2746,6.302,2750,3.023,2751,3.023,2752,3.023,2757,3.023,2758,3.023,2759,3.023,2760,3.023,2761,3.023,2762,3.023,2763,3.023,2764,3.023,2765,3.023,2766,3.023,2767,3.023,2768,3.023,2769,3.023,2770,7.508,2771,3.023,2772,3.023,2776,4.641,2777,4.942,2778,4.942,3493,3.023,3494,3.395,3495,3.395,3498,3.671,3499,3.671,4026,9.049,4027,5.956,4028,4.091,4029,4.091,4030,4.091,4031,4.091,4032,4.091,4033,4.091,4034,4.091,4035,4.091,4036,4.091,4037,4.091]],["title/classes/Third.html",[0,0.276,193,1.598]],["body/classes/Third.html",[0,0.511,2,0.508,3,0.022,4,0.022,5,0.026,8,0.446,11,1.838,23,1.727,24,1.428,28,1.814,32,0.157,34,0.161,36,0.721,38,1.329,39,0.414,42,0.186,44,0.417,45,0.005,46,0.557,47,0.417,50,0.578,51,0.085,60,0.06,61,0.85,87,1.669,88,0.993,100,1.069,112,1.256,113,1.256,114,1.174,123,1.822,162,0.003,163,0.003,164,0.002,167,2.499,169,3.716,170,5.42,171,3.376,172,3.502,173,2.823,174,3.839,175,3.839,176,2.535,177,2.973,178,3.839,179,3.839,180,3.839,181,3.839,182,3.839,183,1.967,185,4.303,186,1.286,187,3.161,188,1.727,189,1.967,190,0.854,191,5.444,192,1.967,193,1.944,194,3.502,195,4.503,196,4.503,197,4.503,198,3.997,199,4.503,200,4.767,201,4.359,202,3.839,203,2.499,204,3.839,205,2.058,206,3.021,207,2.499,208,3.839,209,1.519,210,2.221,211,2.09,212,2.605,213,1.822,214,2.576,215,2.662,216,2.363,217,3.716,218,3.716,219,3.197,220,2.662,221,2.662,222,2.576,223,2.576,224,2.777,225,2.662,226,2.662,227,2.662,228,1.789,229,2.302,230,2.428,231,2.662,232,2.662,233,2.662,234,2.662,235,2.499,236,2.895,237,2.662,238,1.045,239,2.428,240,2.576,241,1.891,242,2.576,243,2.302,244,2.662,245,2.662,246,2.921,247,2.662,248,2.662,249,2.662,250,3.839,251,2.662,252,2.662,253,2.662,254,2.662,255,2.095,256,2.662,257,2.662,258,2.363,259,2.662,260,2.662,261,2.662,262,2.662,263,2.662,264,3.716,265,1.257,266,1.257,267,2.576,268,2.576,269,2.576,270,2.007,271,2.662,272,2.662,273,2.03,274,2.662,275,2.363,276,3.716,277,2.662,278,2.662,296,1.433,312,0.981,4038,6.104,4039,4.232,4040,4.232,4041,4.232]],["title/classes/ThirdActionAlreadyLoaded.html",[0,0.276,510,2.242]],["body/classes/ThirdActionAlreadyLoaded.html",[0,0.554,2,0.497,3,0.021,4,0.021,5,0.025,8,1.079,10,2.201,11,1.065,12,1.321,32,0.193,33,1.003,34,0.158,35,0.357,37,1.592,38,1.269,39,0.406,42,0.183,45,0.005,49,0.45,50,0.393,51,0.093,52,0.368,60,0.062,61,0.578,65,1.284,79,0.986,88,1.935,98,1.695,100,0.794,109,1.303,112,1.31,113,1.31,114,1.224,146,1.219,154,1.558,162,0.002,163,0.003,164,0.002,186,1.49,190,0.837,193,1.916,224,2.334,238,1.025,316,1.379,345,1.377,444,1.51,446,2.275,449,1.739,454,1.62,455,1.012,456,1.051,457,1.183,458,1.183,459,1.609,461,1.168,462,1.284,472,3.163,473,3.29,474,1.928,478,2.009,479,2.589,480,1.284,481,1.267,482,1.967,483,1.89,484,1.785,485,3.225,486,4.779,487,3.163,488,1.89,489,3.047,490,2.796,491,1.967,492,1.533,493,3.225,494,3.163,495,1.284,496,3.047,497,3.281,498,1.785,499,3.163,500,1.928,501,3.163,502,3.163,503,1.967,504,1.967,505,3.163,506,3.104,507,3.163,508,1.753,509,1.819,510,3.469,511,1.442,512,3.163,513,1.967,514,3.163,515,1.928,516,3.163,517,1.722,518,1.636,519,2.009,520,2.009,521,2.009,522,1.785,523,2.009,524,2.009,525,2.009,526,1.664,527,2.009,528,2.009,529,2.009,530,2.009,531,1.583,532,2.009,533,2.009,534,2.009,535,1.967,536,1.967,537,2.009,538,2.914,539,2.009,540,2.009,541,2.009,542,1.928,4042,6.016]],["title/classes/ThirdActionAlreadyUpdated.html",[0,0.276,512,2.242]],["body/classes/ThirdActionAlreadyUpdated.html",[0,0.554,2,0.497,3,0.021,4,0.021,5,0.025,8,1.079,10,2.201,11,1.065,12,1.321,32,0.193,33,1.003,34,0.158,35,0.357,37,1.592,38,1.269,39,0.406,42,0.183,45,0.005,49,0.45,50,0.393,51,0.093,52,0.368,60,0.062,61,0.578,65,1.284,79,0.986,88,1.935,98,1.695,100,0.794,109,1.303,112,1.31,113,1.31,114,1.224,146,1.219,154,1.558,162,0.002,163,0.003,164,0.002,186,1.49,190,0.837,193,1.916,224,2.334,238,1.025,316,1.379,345,1.377,444,1.51,446,2.275,449,1.739,454,1.62,455,1.012,456,1.051,457,1.183,458,1.183,459,1.609,461,1.168,462,1.284,472,3.163,473,3.29,474,1.928,478,2.009,479,2.589,480,1.284,481,1.267,482,1.967,483,1.89,484,1.785,485,3.225,486,4.779,487,3.163,488,1.89,489,3.047,490,2.796,491,1.967,492,1.533,493,3.225,494,3.163,495,1.284,496,3.047,497,3.281,498,1.785,499,3.163,500,1.928,501,3.163,502,3.163,503,1.967,504,1.967,505,3.163,506,3.104,507,3.163,508,1.753,509,1.819,510,3.163,511,1.442,512,3.469,513,1.967,514,3.163,515,1.928,516,3.163,517,1.722,518,1.636,519,2.009,520,2.009,521,2.009,522,1.785,523,2.009,524,2.009,525,2.009,526,1.664,527,2.009,528,2.009,529,2.009,530,2.009,531,1.583,532,2.009,533,2.009,534,2.009,535,1.967,536,1.967,537,2.009,538,2.009,539,2.914,540,2.009,541,2.009,542,1.928,4043,6.016]],["title/injectables/ThirdActionService.html",[243,2.729,892,1.393]],["body/injectables/ThirdActionService.html",[0,0.257,3,0.024,4,0.024,5,0.029,8,1.069,10,1.251,17,2.13,28,1.587,32,0.178,34,0.179,35,0.39,38,0.947,39,0.205,42,0.286,44,0.628,45,0.005,46,0.616,47,0.628,49,0.508,51,0.117,52,0.416,60,0.029,65,2.772,100,1.049,112,0.644,113,0.644,114,0.602,137,2.051,146,1.041,162,0.003,163,0.003,164,0.002,173,1.872,190,0.946,205,2.128,209,1.741,224,3.565,228,1.981,242,3.995,243,3.569,294,1.235,295,8.246,296,1.54,298,5.444,301,7.166,303,8.663,312,2.075,313,2.16,315,0.845,316,1.558,317,2.767,318,2.853,319,2.427,373,1.581,375,1.654,506,4.179,535,3.112,536,4.246,584,1.301,585,1.301,586,1.337,599,1.301,664,2.486,802,2.427,803,2.486,892,1.823,893,2.055,930,1.654,1134,5.136,1143,2.427,1316,3.17,1379,2.947,1408,2.549,1409,3.321,1411,3.765,1581,3.17,1582,2.947,2083,3.304,2185,3.651,2186,4.204,2255,3.887,2785,4.848,3465,4.204,4044,9.53,4045,4.686,4046,7.572,4047,6.562,4048,6.562,4049,6.562,4050,6.562,4051,6.562,4052,6.562,4053,9.53,4054,8.951,4055,4.686,4056,9.53,4057,6.562,4058,4.686,4059,6.562,4060,4.686,4061,4.686,4062,6.562,4063,4.686,4064,6.562,4065,4.686,4066,6.562,4067,4.686,4068,4.686,4069,4.686,4070,4.686,4071,4.686,4072,4.686,4073,6.562,4074,4.686,4075,8.204,4076,4.686,4077,8.637,4078,4.686,4079,4.686,4080,6.562,4081,6.562,4082,4.686,4083,6.562,4084,4.686,4085,4.686,4086,7.572,4087,4.686,4088,4.686,4089,4.686,4090,4.686,4091,4.686,4092,4.686,4093,4.686,4094,4.686,4095,4.686,4096,4.686,4097,4.686,4098,4.686,4099,4.686,4100,4.686,4101,4.686,4102,4.686]],["title/classes/ThirdMenu.html",[0,0.276,213,2.159]],["body/classes/ThirdMenu.html",[0,0.516,2,0.527,3,0.023,4,0.023,5,0.027,8,0.463,11,1.61,23,1.793,24,1.483,28,1.837,32,0.151,36,0.442,38,1.331,39,0.417,42,0.134,44,0.3,45,0.005,46,0.49,47,0.3,50,0.594,51,0.087,60,0.06,61,0.874,87,1.733,88,1.032,100,1.062,112,1.268,113,1.268,114,1.186,123,1.892,162,0.003,163,0.003,164,0.002,167,2.595,169,3.818,170,5.585,171,3.41,172,3.598,173,2.84,174,3.944,175,3.944,176,2.604,177,3.036,178,3.944,179,3.944,180,3.944,181,3.944,182,3.944,183,2.042,186,0.97,187,3.248,188,1.793,189,2.042,190,0.887,191,5.014,192,2.042,193,1.4,194,3.563,195,2.764,196,2.764,197,2.764,198,2.453,199,2.764,200,4.837,201,2.675,202,2.764,203,2.595,204,3.944,205,2.084,206,3.104,207,2.595,208,3.944,209,1.552,210,2.282,211,2.504,212,2.661,213,2.699,214,4.451,215,2.764,216,2.453,217,3.818,218,3.818,219,3.218,220,2.764,221,2.764,222,2.675,223,2.675,224,2.837,225,2.764,226,2.764,227,2.764,228,1.858,229,2.39,230,2.521,231,2.764,232,2.764,233,2.764,234,2.764,235,2.595,236,2.974,237,2.764,238,1.086,239,2.521,240,2.675,241,1.964,242,2.675,243,2.39,244,2.764,245,2.764,246,2.984,247,2.764,248,2.764,249,2.764,250,3.944,251,2.764,252,2.764,253,2.764,254,2.764,255,2.175,256,2.764,257,2.764,258,2.453,259,2.764,260,2.764,261,2.764,262,2.764,263,2.764,264,3.818,265,1.306,266,1.306,267,2.675,268,2.675,269,2.675,270,2.084,271,2.764,272,2.764,273,2.085,274,2.764,275,2.453,276,3.818,277,2.764,278,2.764,4103,3.943,4104,4.394]],["title/classes/ThirdMenuEntry.html",[0,0.276,200,2.878]],["body/classes/ThirdMenuEntry.html",[0,0.516,2,0.529,3,0.023,4,0.023,5,0.027,8,0.465,11,1.614,23,1.8,24,1.488,28,1.84,32,0.151,36,0.444,38,1.331,39,0.418,42,0.134,44,0.301,45,0.005,46,0.491,47,0.301,50,0.595,51,0.087,60,0.061,61,0.876,87,1.74,88,1.035,100,1.063,112,1.27,113,1.27,114,1.187,123,1.898,162,0.003,163,0.003,164,0.002,167,2.604,169,3.828,170,5.589,171,3.414,172,3.607,173,2.841,174,3.954,175,3.954,176,2.611,177,3.042,178,3.954,179,3.954,180,3.954,181,3.954,182,3.954,183,2.05,186,0.973,187,3.256,188,1.8,189,2.05,190,0.89,191,5.023,192,2.05,193,1.405,194,2.809,195,2.774,196,2.774,197,2.774,198,2.462,199,2.774,200,4.582,201,2.685,202,2.774,203,2.604,204,3.954,205,2.087,206,3.112,207,2.604,208,3.954,209,1.555,210,2.288,211,2.509,212,3.073,213,1.898,214,2.685,215,2.774,216,2.462,217,3.828,218,3.828,219,3.22,220,2.774,221,2.774,222,2.685,223,2.685,224,2.842,225,2.774,226,2.774,227,2.774,228,1.864,229,2.399,230,2.531,231,2.774,232,2.774,233,2.774,234,2.774,235,2.604,236,2.982,237,2.774,238,1.09,239,2.531,240,2.685,241,1.971,242,2.685,243,2.399,244,2.774,245,2.774,246,2.99,247,2.774,248,2.774,249,2.774,250,3.954,251,2.774,252,2.774,253,2.774,254,2.774,255,2.183,256,2.774,257,2.774,258,2.462,259,2.774,260,2.774,261,2.774,262,2.774,263,2.774,264,3.828,265,1.31,266,1.31,267,2.685,268,2.685,269,2.685,270,2.092,271,2.774,272,2.774,273,2.091,274,2.774,275,2.462,276,3.828,277,2.774,278,2.774,4103,3.958,4105,4.41]],["title/modules/ThirdpartyModule.html",[640,2.2,4106,3.908]],["body/modules/ThirdpartyModule.html",[0,0.394,3,0.037,4,0.045,5,0.053,36,0.721,45,0.005,51,0.115,60,0.044,76,3.084,91,1.913,128,1.839,162,0.003,163,0.004,164,0.003,315,1.292,319,3.711,329,2.567,330,2.528,331,2.567,332,2.567,333,2.567,334,2.567,335,2.282,336,2.567,337,2.567,338,2.567,339,2.49,340,2.382,341,2.528,342,2.567,343,2.567,344,2.567,345,1.64,346,2.567,347,2.218,396,3.394,640,3.141,642,3.626,643,4.11,644,5.666,645,4.231,646,3.801,655,5.114,656,4.362,658,4.71,660,4.71,665,5.446,668,4.231,675,4.846,733,5.944,4106,7.999,4107,6.428,4108,6.428,4109,6.428,4110,7.432,4111,7.164,4112,6.428]],["title/modules/ThirdpartyRoutingModule.html",[640,2.2,4110,3.706]],["body/modules/ThirdpartyRoutingModule.html",[0,0.409,3,0.038,4,0.046,5,0.054,36,0.749,45,0.005,51,0.113,60,0.045,91,1.987,128,1.911,162,0.003,163,0.004,164,0.003,205,1.769,279,1.483,315,1.342,329,2.667,330,2.626,331,2.667,332,2.667,333,2.667,334,2.667,335,2.37,336,2.667,337,2.667,338,2.667,339,2.587,340,2.474,341,2.626,342,2.667,343,2.667,344,2.667,345,1.703,346,2.667,396,2.989,642,3.766,646,3.948,658,4.047,660,4.819,717,5.498,720,6.545,721,6.161,722,4.269,727,5.498,1122,5.798,4110,6.545,4112,6.677,4113,7.441,4114,7.441]],["title/classes/ThirdsI18nLoader.html",[0,0.276,4115,4.162]],["body/classes/ThirdsI18nLoader.html",[0,0.356,2,0.552,3,0.024,4,0.024,5,0.028,8,0.485,11,1.182,17,2.23,24,1.554,28,2.039,32,0.123,33,0.643,34,0.176,38,0.576,39,0.202,42,0.197,44,0.443,45,0.005,46,0.503,47,0.443,51,0.113,60,0.046,100,1.066,146,0.633,162,0.002,163,0.003,164,0.002,171,1.702,183,2.14,186,1.003,188,1.879,190,1.308,193,2.593,194,4.422,203,2.719,205,2.22,206,2.279,207,2.719,209,2.18,212,1.676,213,3.229,236,3.075,238,1.138,246,3.969,265,1.926,294,2.146,296,1.522,312,1.067,315,0.83,316,1.531,404,1.9,426,1.167,479,1.952,480,1.426,481,1.406,584,1.279,599,1.279,664,2.443,681,2.385,682,2.385,738,2.999,760,2.098,773,2.719,802,2.385,803,2.443,892,1.8,910,2.642,927,2.019,928,2.184,930,1.625,1027,2.571,1134,4.304,1136,3.115,1286,2.74,1318,2.896,1439,2.719,1479,3.115,1533,3.82,1671,3.247,1788,4.43,1907,4.97,1927,3.82,1943,3.247,2107,7.385,2144,3.82,2376,4.567,2684,2.505,3147,6.449,3212,3.588,3583,5.845,4115,5.378,4116,4.132,4117,7.306,4118,6.482,4119,5.816,4120,4.605,4121,5.816,4122,4.605,4123,4.605,4124,6.731,4125,4.132,4126,4.132,4127,4.132,4128,4.132,4129,4.132,4130,4.132,4131,4.132,4132,4.132,4133,4.132,4134,5.816,4135,4.132,4136,4.132,4137,4.132,4138,4.132,4139,4.132,4140,5.816,4141,4.132,4142,4.132,4143,4.132,4144,4.132,4145,5.816,4146,4.132,4147,4.132,4148,4.132,4149,5.816,4150,4.132,4151,4.132,4152,4.132,4153,4.132,4154,4.132,4155,4.132,4156,4.132,4157,4.132,4158,4.132,4159,4.132,4160,4.132,4161,4.132,4162,4.132,4163,4.132,4164,4.132,4165,5.816,4166,4.132,4167,4.132,4168,4.132,4169,4.132,4170,4.132,4171,4.132,4172,4.132,4173,4.132,4174,4.132,4175,4.132,4176,5.816,4177,4.132,4178,4.132,4179,4.132,4180,4.132,4181,4.132,4182,4.132,4183,4.132,4184,4.132,4185,4.132,4186,4.132,4187,4.132,4188,4.132,4189,4.132,4190,3.402,4191,4.132,4192,3.82,4193,4.132,4194,4.132,4195,4.132,4196,4.132,4197,5.816,4198,4.132,4199,4.132,4200,4.132,4201,4.132,4202,4.132,4203,4.132,4204,3.82,4205,4.132,4206,4.132,4207,4.132,4208,6.731,4209,4.132,4210,4.132,4211,4.132,4212,4.132,4213,4.132,4214,4.132,4215,4.132]],["title/injectables/ThirdsService.html",[892,1.393,1907,2.801]],["body/injectables/ThirdsService.html",[0,0.305,3,0.019,4,0.019,5,0.023,8,0.392,11,1.705,17,2.262,24,1.255,28,1.974,32,0.18,33,0.369,34,0.142,35,0.33,38,0.83,39,0.163,42,0.295,44,0.635,45,0.005,46,0.644,47,0.635,49,0.403,50,0.352,51,0.107,60,0.041,100,1.09,146,0.511,162,0.002,163,0.003,164,0.002,171,1.374,183,1.728,185,2.875,186,1.279,188,1.517,190,1.341,193,2.346,194,4.538,203,2.196,205,2.093,206,3.287,207,2.196,209,2.126,212,1.353,213,2.859,236,2.633,238,0.918,246,3.795,265,1.649,294,2.482,296,1.303,312,2.156,315,0.67,316,1.236,404,1.627,426,0.942,479,2.218,480,1.151,481,1.135,584,1.033,599,1.033,664,1.973,681,1.926,682,1.926,738,2.422,760,1.694,773,2.196,802,1.926,803,1.973,892,1.542,893,1.63,910,2.133,927,1.63,928,1.764,930,1.312,1027,2.076,1134,4.743,1136,2.515,1286,2.346,1318,2.338,1439,2.196,1479,2.515,1533,3.085,1671,2.622,1788,5.411,1907,4.112,1927,3.085,1943,2.622,2083,2.622,2107,6.858,2144,3.085,2376,4.043,2684,2.022,3147,6.642,3212,2.897,3583,5.175,4115,3.085,4116,3.336,4117,5.959,4119,3.336,4121,3.336,4124,6.609,4125,3.336,4126,5.959,4127,5.959,4128,5.959,4129,3.336,4130,3.336,4131,3.336,4132,4.98,4133,3.336,4134,4.98,4135,4.98,4136,3.336,4137,3.336,4138,3.336,4139,3.336,4140,4.98,4141,3.336,4142,3.336,4143,3.336,4144,4.98,4145,4.98,4146,3.336,4147,4.98,4148,5.959,4149,6.609,4150,3.336,4151,3.336,4152,3.336,4153,3.336,4154,3.336,4155,3.336,4156,3.336,4157,3.336,4158,3.336,4159,3.336,4160,3.336,4161,3.336,4162,4.98,4163,3.336,4164,3.336,4165,4.98,4166,4.98,4167,5.959,4168,3.336,4169,3.336,4170,3.336,4171,3.336,4172,3.336,4173,3.336,4174,3.336,4175,4.98,4176,5.959,4177,3.336,4178,3.336,4179,4.98,4180,3.336,4181,3.336,4182,3.336,4183,3.336,4184,3.336,4185,3.336,4186,3.336,4187,3.336,4188,3.336,4189,3.336,4190,2.747,4191,3.336,4192,6.111,4193,3.336,4194,3.336,4195,3.336,4196,3.336,4197,4.98,4198,3.336,4199,3.336,4200,3.336,4201,3.336,4202,3.336,4203,3.336,4204,3.085,4205,4.98,4206,3.336,4207,4.98,4208,7.071,4209,3.336,4210,3.336,4211,3.336,4212,3.336,4213,3.336,4214,3.336,4215,3.336,4216,5.55,4217,5.55,4218,5.55,4219,5.55,4220,5.55,4221,5.55,4222,5.55,4223,5.55,4224,5.55,4225,5.55,4226,5.55,4227,3.718,4228,3.718,4229,3.718,4230,3.718,4231,3.718,4232,3.718,4233,3.718,4234,3.718,4235,3.718,4236,3.718,4237,3.718,4238,3.718,4239,3.718,4240,3.718,4241,3.718]],["title/classes/ThirdsServiceMock.html",[0,0.276,4242,4.501]],["body/classes/ThirdsServiceMock.html",[0,0.411,2,0.897,3,0.039,4,0.039,5,0.046,17,2.197,28,2.055,34,0.285,42,0.27,45,0.005,51,0.106,60,0.046,162,0.003,163,0.004,164,0.003,200,4.289,209,1.587,213,3.218,296,2.085,312,2.059,316,2.486,584,2.076,760,4.047,4192,8.136,4242,7.971,4243,7.476,4244,9.478,4245,7.476,4246,7.476,4247,7.476,4248,7.476,4249,7.476,4250,7.476,4251,7.476,4252,7.476,4253,7.476,4254,7.476,4255,7.476,4256,7.476,4257,7.476,4258,7.476,4259,7.476,4260,7.476,4261,7.476,4262,7.476]],["title/classes/Tick.html",[0,0.276,2795,2.962]],["body/classes/Tick.html",[0,0.503,2,0.737,3,0.032,4,0.032,5,0.038,7,2.385,8,1.02,10,2.319,16,3.452,32,0.183,33,0.908,34,0.234,35,0.467,36,0.875,37,1.602,38,1.184,39,0.269,40,1.599,42,0.264,44,0.42,45,0.005,46,0.412,47,0.42,49,0.667,50,0.582,51,0.109,52,0.546,55,2.91,56,2.801,60,0.059,61,0.857,74,2.695,98,1.651,104,3.105,109,2.727,136,3.111,146,1.082,162,0.003,163,0.004,164,0.003,273,2.044,281,2.618,420,2.655,449,1.777,511,2.737,564,4.119,571,4.542,884,4.517,1416,3.261,1433,3.587,1480,5.325,1560,4.004,1926,4.335,2780,5.127,2781,4.335,2782,4.335,2783,4.79,2784,7.135,2785,4.542,2786,4.79,2789,4.79,2790,4.004,2791,4.335,2792,3.743,2793,4.335,2794,4.79,2795,5.59,2796,4.79,2797,5.552,2798,4.79,2799,6.994,2800,6.994,2801,6.134,2802,6.134,2803,6.767,2804,5.816,2805,5.325,2806,4.79,2807,4.79,2808,6.766,2809,4.79,2810,4.158,2811,4.542,2812,5.127,2813,4.79,2814,4.79,2815,4.542,4263,7.872,4264,6.147,4265,6.147]],["title/classes/TickPayload.html",[0,0.276,2808,3.706]],["body/classes/TickPayload.html",[0,0.506,2,0.75,3,0.032,4,0.032,5,0.038,7,2.425,8,1.002,10,2.337,16,2.741,32,0.18,33,0.868,34,0.238,35,0.473,36,0.958,37,1.482,38,1.095,39,0.274,42,0.267,44,0.427,45,0.005,46,0.419,47,0.427,51,0.11,52,0.555,55,2.942,56,2.848,60,0.059,61,0.871,74,2.741,98,1.661,104,2.466,109,2.499,136,3.164,146,1.094,162,0.003,163,0.004,164,0.003,273,3.064,281,2.079,420,2.608,449,1.807,511,2.173,564,3.774,571,4.618,884,3.587,1416,3.316,1433,3.625,1480,4.229,1560,4.071,1926,4.408,2780,5.182,2781,4.408,2782,4.408,2783,4.871,2784,6.82,2785,4.618,2786,4.871,2789,4.871,2790,4.071,2791,4.408,2792,3.806,2793,4.408,2794,4.871,2795,5.619,2796,4.871,2797,5.612,2798,4.871,2799,6.808,2800,6.808,2801,4.871,2802,4.871,2803,6.82,2804,4.618,2805,4.229,2806,4.871,2807,4.871,2808,5.879,2809,7.179,2810,6.233,2811,7.03,2812,5.182,2813,4.871,2814,4.871,2815,4.618,4266,6.251,4267,6.251,4268,6.251,4269,6.251]],["title/injectables/TimeEffects.html",[852,4.162,892,1.393]],["body/injectables/TimeEffects.html",[0,0.297,3,0.028,4,0.028,5,0.033,8,0.57,10,2.326,17,2.278,28,2.081,32,0.165,34,0.206,35,0.43,39,0.237,42,0.265,44,0.369,45,0.005,46,0.362,47,0.369,49,0.785,50,0.685,51,0.122,52,0.48,55,3.016,56,2.464,60,0.033,88,2.241,120,3.583,137,2.086,146,1.198,162,0.003,163,0.003,164,0.003,171,1.999,189,2.513,190,1.759,192,2.513,205,1.721,209,1.849,241,4.059,294,2.394,315,0.975,420,2.562,556,1.908,564,4.133,572,4.153,584,1.502,585,1.502,586,1.543,599,1.502,852,6.005,892,2.011,893,2.371,912,3.937,924,2.941,925,2.801,927,2.371,928,4.309,930,1.908,950,5.146,969,3.292,1250,5.105,1286,3.683,1426,4.896,1500,5,1514,6.005,1522,4.896,1560,4.714,1580,3.995,1926,5.105,1963,6.005,2044,6.789,2071,3.103,2072,3.995,2780,5.314,2782,5.105,2790,5.314,2791,3.813,2795,4.818,2797,5.105,2799,5.348,2800,5.348,2812,3.522,2902,4.852,3375,4.852,4190,5.348,4270,5.407,4271,8.159,4272,8.159,4273,8.159,4274,7.238,4275,7.238,4276,7.238,4277,7.238,4278,5.407,4279,7.238,4280,7.238,4281,7.238,4282,8.713,4283,8.713,4284,7.238,4285,7.238,4286,5.407,4287,7.238,4288,7.238,4289,5.407,4290,5.407,4291,5.407]],["title/components/TimeFilterComponent.html",[279,1,419,1.718]],["body/components/TimeFilterComponent.html",[0,0.237,3,0.022,4,0.022,5,0.026,8,0.455,10,1.654,11,1.109,17,1.834,28,1.827,32,0.159,33,0.614,34,0.165,35,0.368,39,0.189,42,0.28,44,0.295,45,0.005,46,0.561,47,0.295,49,0.469,50,0.409,51,0.117,52,0.384,60,0.026,64,1.2,65,1.338,114,0.555,121,1.216,128,1.109,132,1.232,137,1.945,162,0.002,163,0.003,164,0.002,186,0.958,209,1.537,210,2.254,219,2.745,228,1.826,265,1.283,266,1.84,275,2.411,279,1.444,280,1.479,281,2.06,282,1.524,284,1.548,285,1.548,287,2.635,288,1.458,289,3.566,292,2.186,294,2.5,296,1.454,297,2.971,312,1.679,313,1.767,315,0.779,335,2.307,347,1.338,348,2.22,349,2.186,350,1.395,351,2.835,352,1.548,353,1.548,354,1.479,355,1.548,356,1.479,357,2.243,358,2.22,359,1.479,360,2.22,361,1.479,362,1.548,363,1.458,364,1.548,365,1.479,366,1.548,367,2.835,368,1.479,369,1.548,370,1.436,371,2.22,372,1.479,373,1.458,374,1.436,375,1.524,376,1.548,377,1.479,378,2.186,379,1.548,380,1.502,381,2.03,382,2.22,383,1.479,384,1.548,385,2.835,386,1.436,387,1.548,388,1.479,389,1.479,390,1.524,391,1.458,392,1.548,393,1.479,394,1.479,395,1.548,396,1.458,397,1.548,398,1.479,399,1.548,400,1.502,401,1.479,402,1.548,403,1.479,404,1.266,405,1.548,406,1.479,407,2.186,408,1.479,409,2.595,410,1.548,411,1.479,412,1.548,413,1.479,414,1.548,415,1.436,416,1.479,417,1.458,418,1.479,419,2.709,420,2.389,421,1.479,422,1.548,423,1.479,424,1.479,425,1.479,426,2.405,427,1.458,428,1.458,429,1.548,430,1.458,431,1.548,432,1.458,433,1.524,434,1.548,556,1.524,563,3.365,584,1.2,585,1.2,586,1.232,599,1.2,671,2.186,874,4.276,879,2.922,880,2.813,881,2.63,882,2.717,884,2.478,887,2.717,930,1.524,947,2.63,950,5.301,954,4.416,962,4.555,969,2.63,1143,2.237,1197,3.658,1286,1.826,1433,2.822,1447,2.813,1620,4.276,1624,4.409,1629,4.671,1645,3.896,1661,3.365,1662,4.826,1663,3.191,1664,3.046,1680,3.365,1682,3.365,1684,3.365,1692,3.365,1693,3.365,1703,3.876,1817,3.896,1994,6.908,2061,3.584,2066,3.191,2257,3.876,2465,3.191,2473,4.576,2502,3.876,2507,5.139,2511,5.906,2716,4.368,2826,2.922,2847,3.584,2903,3.365,2931,8.39,2932,8.39,3493,3.191,3996,6.008,3998,6.563,4004,3.584,4005,3.584,4008,3.584,4009,5.139,4011,3.584,4015,5.139,4018,3.584,4292,7.242,4293,4.319,4294,4.319,4295,3.876,4296,3.876,4297,6.194,4298,4.319,4299,4.319,4300,4.319,4301,6.194,4302,4.319,4303,4.319,4304,4.319,4305,4.319,4306,4.319,4307,4.319,4308,6.194,4309,4.319,4310,4.319,4311,4.319,4312,4.319,4313,6.194,4314,4.319,4315,4.319,4316,4.319,4317,4.319,4318,6.194,4319,6.194,4320,4.319,4321,4.319,4322,6.194,4323,6.194,4324,6.194]],["title/components/TimeLineComponent.html",[279,1,421,1.718]],["body/components/TimeLineComponent.html",[0,0.15,3,0.014,4,0.014,5,0.017,11,1.602,17,1.265,24,1.473,28,0.571,32,0.159,33,0.433,34,0.104,35,0.259,36,0.825,39,0.119,42,0.256,44,0.373,45,0.005,46,0.488,47,0.373,49,0.296,50,0.258,51,0.102,52,0.242,60,0.017,64,1.212,85,1.267,104,2.693,121,0.767,132,0.777,137,1.626,162,0.001,163,0.002,164,0.001,173,1.557,183,2.536,185,2.26,186,0.966,205,2.396,209,1.324,210,2.484,219,2.912,228,1.152,235,2.577,236,2.07,265,0.81,266,1.854,279,1.088,280,0.933,281,1.451,282,0.962,284,0.977,285,0.977,287,1.986,288,0.92,289,3.451,292,1.54,296,1.024,297,2.344,312,1.446,313,1.245,315,0.491,347,0.844,348,1.564,349,1.54,350,0.881,351,2.236,352,0.977,353,0.977,354,0.933,355,0.977,356,0.933,357,1.69,358,1.564,359,0.933,360,1.564,361,0.933,362,0.977,363,0.92,364,0.977,365,0.933,366,0.977,367,2.236,368,0.933,369,0.977,370,0.906,371,1.564,372,0.933,373,0.92,374,0.906,375,0.962,376,0.977,377,0.933,378,1.54,379,0.977,380,0.947,381,2.045,382,1.564,383,0.933,384,0.977,385,2.236,386,0.906,387,0.977,388,0.933,389,0.933,390,0.962,391,0.92,392,0.977,393,0.933,394,0.933,395,0.977,396,0.92,397,0.977,398,0.933,399,0.977,400,0.947,401,0.933,402,0.977,403,0.933,404,0.799,405,0.977,406,0.933,407,1.54,408,0.933,409,1.956,410,0.977,411,0.933,412,0.977,413,0.933,414,0.977,415,0.906,416,0.933,417,0.92,418,0.933,419,0.933,420,2.305,421,2.137,422,0.977,423,0.933,424,0.933,425,0.933,426,0.691,427,0.92,428,0.92,429,0.977,430,0.92,431,0.977,432,0.92,433,0.962,434,0.977,459,2.117,479,0.821,480,0.844,481,0.832,492,1.613,495,1.351,522,2.349,556,0.962,570,6.535,584,0.757,585,0.757,586,0.777,593,1.293,598,2.374,599,0.757,618,2.536,724,3.047,744,2.745,746,2.261,760,3.831,927,1.914,930,0.962,983,4.364,1033,3.4,1049,2.014,1053,1.922,1081,4.192,1089,2.261,1143,1.412,1197,4.517,1244,1.922,1433,3.735,1435,5.781,1439,2.577,1620,3.223,1629,3.685,1663,2.014,1726,2.446,1788,2.577,1789,3.078,1790,3.224,1791,3.224,1792,3.224,1793,2.842,1797,3.224,2158,3.916,2440,2.123,2442,2.446,2443,2.261,2503,2.446,2573,6.387,2695,6.692,2716,4.814,2737,2.446,2810,2.952,2825,2.446,2826,1.844,2832,2.446,2847,5.177,2869,2.261,2926,7.707,2963,2.446,2971,3.916,3077,2.261,3212,3.4,3242,3.621,3388,3.078,3394,3.078,3400,1.922,3915,2.261,4325,2.725,4326,4.364,4327,7.948,4328,5.458,4329,6.24,4330,4.364,4331,4.364,4332,4.364,4333,4.364,4334,7.948,4335,2.725,4336,2.725,4337,2.725,4338,2.725,4339,4.364,4340,2.725,4341,4.364,4342,4.364,4343,6.24,4344,4.364,4345,5.458,4346,4.364,4347,4.364,4348,2.725,4349,2.725,4350,2.725,4351,2.725,4352,2.725,4353,2.725,4354,9.208,4355,2.725,4356,2.725,4357,2.725,4358,5.458,4359,2.725,4360,2.725,4361,2.725,4362,2.725,4363,2.725,4364,2.725,4365,2.725,4366,2.725,4367,2.725,4368,2.725,4369,2.725,4370,2.725,4371,2.725,4372,2.725,4373,2.725,4374,2.725,4375,2.725,4376,2.725,4377,2.725,4378,2.725,4379,2.725,4380,2.725,4381,2.725,4382,2.725,4383,2.725,4384,2.725,4385,2.725,4386,4.364,4387,2.725,4388,2.725,4389,2.725,4390,2.725,4391,2.725,4392,2.725,4393,2.725,4394,2.725,4395,4.364,4396,4.364,4397,5.458,4398,6.24,4399,5.458,4400,5.458,4401,4.364,4402,4.364,4403,2.725,4404,4.364,4405,2.725,4406,4.364,4407,2.446,4408,2.725,4409,2.725,4410,2.725,4411,2.725,4412,2.725,4413,2.725,4414,2.725,4415,2.725,4416,4.364,4417,7.283,4418,2.725,4419,7.283,4420,2.725,4421,7.283,4422,7.283,4423,7.283,4424,7.283,4425,5.458,4426,7.283,4427,4.364,4428,2.725,4429,4.364,4430,2.725,4431,2.725,4432,4.364,4433,2.725,4434,2.725,4435,6.24,4436,6.24,4437,4.364,4438,2.725,4439,2.725,4440,2.725,4441,2.725,4442,2.446,4443,2.725,4444,2.725,4445,2.725,4446,2.725,4447,2.725,4448,2.725,4449,2.725,4450,2.725,4451,2.725,4452,2.725,4453,2.725,4454,4.364,4455,2.725,4456,2.725,4457,2.725,4458,2.725,4459,4.364,4460,2.725,4461,2.725,4462,2.725,4463,2.725,4464,4.364,4465,5.458,4466,7.283,4467,2.725,4468,5.458,4469,4.364,4470,4.364,4471,4.364,4472,2.725,4473,4.364,4474,5.458,4475,2.725,4476,2.725,4477,2.725,4478,2.725,4479,2.725,4480,2.725,4481,2.725,4482,2.725,4483,2.725,4484,2.725,4485,2.725,4486,2.725,4487,2.725,4488,2.725,4489,2.725,4490,2.725,4491,2.725,4492,2.725,4493,2.725,4494,2.725,4495,2.725,4496,2.725,4497,2.725,4498,4.364,4499,2.725,4500,2.725,4501,2.725,4502,2.725,4503,2.725,4504,2.725,4505,2.725,4506,2.725]],["title/classes/TimeReference.html",[0,0.276,2790,3.267]],["body/classes/TimeReference.html",[0,0.303,2,0.662,3,0.028,4,0.028,5,0.034,32,0.178,34,0.21,38,1.031,39,0.242,42,0.292,44,0.642,45,0.005,46,0.63,47,0.642,50,0.832,51,0.088,60,0.05,61,0.769,100,0.961,162,0.004,163,0.003,164,0.003,173,1.574,183,3.41,205,2.236,209,2.037,210,3,270,3.91,273,3.383,294,2.478,296,1.723,312,2.18,420,1.513,744,3.471,760,2.515,981,5.175,1433,3.756,2120,4.579,2161,4.078,2322,5.421,2434,4.579,2649,4.952,2650,4.952,2790,4.779,2792,3.36,2810,6.74,4507,4.952,4508,9.403,4509,7.338,4510,7.338,4511,8.785,4512,5.519,4513,8.785,4514,8.243,4515,9.146,4516,7.883,4517,5.519,4518,8.243,4519,5.519,4520,5.519,4521,5.519,4522,5.519,4523,5.519,4524,5.519,4525,5.519,4526,5.519,4527,5.519,4528,7.338,4529,5.519,4530,8.785,4531,7.338,4532,5.519,4533,5.519,4534,5.519,4535,5.519,4536,5.519,4537,5.519,4538,5.519,4539,5.519,4540,5.519,4541,5.519,4542,5.519,4543,5.519,4544,5.519,4545,5.519,4546,7.338,4547,5.519,4548,5.519,4549,5.519,4550,5.519,4551,5.519,4552,5.519,4553,5.519,4554,5.519,4555,5.519,4556,5.519,4557,5.519,4558,5.519,4559,5.519,4560,5.519,4561,5.519,4562,5.519,4563,7.338,4564,4.952,4565,4.952,4566,4.952,4567,4.952,4568,4.952,4569,4.952,4570,4.952,4571,4.952,4572,5.519,4573,5.519]],["title/classes/TimeSpan.html",[0,0.276,2805,3.393]],["body/classes/TimeSpan.html",[0,0.439,2,0.756,3,0.033,4,0.033,5,0.039,8,0.925,11,1.618,13,3.648,24,2.126,32,0.119,38,1.322,39,0.385,42,0.192,44,0.43,45,0.005,46,0.422,47,0.43,51,0.095,60,0.06,61,1.224,100,1.034,112,0.866,113,0.866,114,0.81,162,0.005,163,0.004,164,0.003,171,3.248,185,3.263,189,2.928,206,3.118,209,1.337,211,2.158,273,3.389,316,2.095,417,2.126,479,1.898,554,4.262,744,3.962,760,2.87,1081,2.485,1197,5.188,1408,3.427,1409,4.677,1411,5.302,1538,5.812,1788,3.721,1789,4.443,1790,4.655,1791,4.655,1792,4.655,1793,6.212,1794,4.909,1795,4.909,1796,4.655,1797,4.655,1799,4.909,2446,4.443,2716,5.64,2805,5.943,3020,5.908,3021,5.227,3022,5.227,3023,6.491,3024,5.227,3025,5.227,3388,4.443,3406,6.635,3407,5.227,3408,5.653,3410,5.653,3411,5.653,3412,5.227,3413,5.227,3414,5.653,4574,6.3,4575,6.3]],["title/interfaces/TimeState.html",[777,1.884,790,4.162]],["body/interfaces/TimeState.html",[3,0.039,4,0.039,5,0.046,32,0.18,34,0.286,35,0.528,45,0.005,51,0.113,55,3.627,56,3.411,60,0.054,146,1.378,162,0.003,163,0.004,164,0.003,205,1.78,210,2.725,777,2.812,778,3.972,790,7.869,1433,4.321,2790,6.739,2791,5.28,2792,4.559,2810,6.416,4576,7.487,4577,10.019,4578,7.487,4579,7.487,4580,7.487]],["title/interfaces/TimelineState.html",[777,1.884,791,4.162]],["body/interfaces/TimelineState.html",[3,0.032,4,0.032,5,0.038,7,2.428,11,2.498,13,3.307,32,0.18,34,0.239,35,0.473,45,0.005,51,0.104,55,2.944,60,0.049,100,0.995,146,1.389,162,0.003,163,0.004,164,0.003,173,2.499,186,1.506,205,1.488,210,2.278,211,2.727,219,2.052,273,2.648,381,2.61,479,3.014,480,1.938,481,1.912,483,2.852,492,3.735,509,3.492,518,3.141,526,3.966,531,3.04,624,6.218,724,4.446,777,2.351,778,3.321,791,7.267,813,5.617,1439,4.703,1538,5.009,1592,6.205,1955,7.146,1956,8.541,1957,8.871,1958,8.272,1959,6.607,1961,7.146,1962,7.146,1963,6.607,1964,7.146,1967,4.848,1990,5.617,1993,5.617,2573,6.205,4581,6.259,4582,7.964,4583,7.964,4584,7.964,4585,7.964,4586,7.964,4587,6.259]],["title/interceptors/TokenInjector.html",[2128,4.501,3882,3.908]],["body/interceptors/TokenInjector.html",[0,0.372,3,0.035,4,0.035,5,0.041,10,1.808,17,2.104,32,0.172,33,0.671,34,0.258,39,0.297,42,0.276,44,0.62,45,0.005,46,0.608,47,0.62,51,0.113,60,0.041,112,0.931,113,0.931,114,1.219,162,0.003,163,0.004,164,0.003,205,2.255,209,1.775,212,2.464,296,1.964,312,1.939,315,1.221,559,5.294,584,1.881,599,1.881,664,3.592,892,2.324,1473,6.518,1479,6.415,2106,5.617,2131,6.075,3882,6.518,4588,6.771,4589,6.771,4590,8.366,4591,8.366,4592,6.771,4593,6.771,4594,8.366,4595,10.242,4596,6.771,4597,8.366,4598,9.483,4599,6.771,4600,6.771,4601,8.366,4602,6.771,4603,6.771,4604,8.366,4605,6.771,4606,6.771,4607,6.771,4608,8.366,4609,6.771,4610,6.771]],["title/classes/TransitionalThirdWithItSVersion.html",[0,0.276,4611,4.162]],["body/classes/TransitionalThirdWithItSVersion.html",[0,0.339,2,0.514,3,0.022,4,0.022,5,0.026,8,0.452,10,1.145,17,2.076,28,1.986,32,0.137,34,0.164,35,0.366,36,0.841,39,0.188,42,0.22,44,0.293,45,0.005,46,0.287,47,0.293,51,0.119,52,0.381,60,0.026,88,1.693,98,0.773,100,0.954,137,1.61,146,0.847,162,0.003,163,0.003,164,0.002,171,1.585,190,2.002,192,1.993,193,2.511,194,3.885,198,2.394,205,2.358,209,2.176,210,1.561,213,1.846,228,1.813,241,3.732,270,3.961,294,2.201,315,0.773,316,1.426,479,2.173,480,1.328,481,1.31,484,1.846,489,2.652,518,1.692,531,1.637,572,2.461,584,1.191,585,1.191,586,1.223,599,1.191,681,2.221,682,2.221,751,3.341,781,2.697,864,3.341,892,1.712,909,3.024,910,3.536,924,2.333,925,2.221,927,1.88,928,2.034,930,1.513,983,2.754,1081,2.845,1143,2.221,1194,4.698,1286,3.333,1309,4.879,1480,2.901,1500,4.524,1522,2.901,1581,2.901,1582,2.697,1671,3.024,1788,2.532,1819,2.394,1820,4.013,1907,3.44,1914,2.901,2028,3.558,2379,3.168,2550,4.801,2684,2.333,2874,3.168,3082,2.532,3084,2.394,3147,3.024,3202,3.558,3421,3.558,3814,3.752,3818,2.793,3819,3.752,3820,3.752,3822,2.611,3824,3.752,3828,5.334,3833,4.013,3848,3.558,3849,3.558,4190,3.168,4611,5.984,4612,3.848,4613,4.288,4614,4.288,4615,6.162,4616,3.848,4617,5.529,4618,3.848,4619,3.848,4620,3.848,4621,3.848,4622,3.848,4623,3.848,4624,3.848,4625,3.848,4626,3.848,4627,3.848,4628,3.848,4629,3.848,4630,3.848,4631,3.848,4632,3.848,4633,6.472,4634,3.848,4635,3.848,4636,3.848,4637,3.848,4638,3.848,4639,7.075,4640,5.529,4641,3.848,4642,3.848,4643,3.848,4644,3.848,4645,3.848,4646,3.848,4647,3.848,4648,3.848,4649,3.848,4650,3.848,4651,3.848,4652,3.848,4653,3.848,4654,3.848,4655,3.848,4656,3.848,4657,3.848,4658,3.848,4659,3.848,4660,3.848,4661,3.848,4662,5.529,4663,3.848,4664,3.848,4665,3.848,4666,3.848,4667,3.848,4668,3.848,4669,3.848,4670,3.848,4671,3.848,4672,3.848,4673,3.848,4674,3.848,4675,3.848,4676,3.848,4677,3.848,4678,5.529,4679,3.848,4680,3.848,4681,3.848,4682,3.848,4683,3.848,4684,3.848,4685,3.848,4686,3.848,4687,3.848,4688,3.848,4689,3.848,4690,3.848,4691,5.529,4692,3.848,4693,3.848,4694,3.848,4695,3.848,4696,6.472,4697,3.848,4698,5.529,4699,3.848,4700,5.529,4701,3.848,4702,5.529,4703,3.848,4704,5.529,4705,3.848,4706,3.848,4707,5.529,4708,3.848,4709,3.848,4710,3.848,4711,3.848,4712,3.848,4713,3.848,4714,3.848,4715,5.529,4716,3.848,4717,3.848,4718,3.848,4719,3.848,4720,3.848,4721,5.529,4722,3.848,4723,3.848,4724,5.529,4725,3.848,4726,3.848]],["title/injectables/TranslateEffects.html",[864,3.908,892,1.393]],["body/injectables/TranslateEffects.html",[0,0.279,3,0.017,4,0.017,5,0.02,8,0.535,10,1.357,17,2.178,28,1.924,32,0.178,34,0.126,35,0.302,36,0.333,39,0.145,42,0.286,44,0.607,45,0.005,46,0.596,47,0.607,49,0.753,50,0.657,51,0.114,52,0.294,60,0.02,88,1.932,98,0.597,100,0.89,137,1.764,146,0.954,162,0.003,163,0.002,164,0.002,171,1.223,190,2.061,192,1.538,193,1.054,194,2.764,198,1.847,205,2.274,209,2.151,210,1.204,213,2.663,228,1.399,241,3.892,270,4.499,294,2.295,296,1.193,312,2.019,315,0.597,316,1.1,479,2.381,480,1.025,481,1.01,484,1.424,489,2.663,518,2.004,531,2.361,556,1.168,572,2.915,584,0.919,585,0.919,586,0.944,599,0.919,681,1.714,682,1.714,751,2.578,781,3.196,864,3.959,892,1.411,893,1.451,909,3.583,910,3.982,912,3.775,924,1.8,925,1.714,927,1.451,928,1.569,930,1.168,983,2.271,1081,2.44,1143,1.714,1194,5.148,1286,3.59,1309,4.184,1480,3.437,1500,4.873,1522,3.437,1581,2.238,1582,2.081,1671,3.583,1788,3.653,1819,3.453,1820,4.52,1907,3.875,1914,2.238,2028,4.216,2379,2.444,2550,3.959,2684,3.365,2874,3.754,3082,1.954,3084,1.847,3147,4.362,3202,2.745,3421,5.132,3814,3.766,3818,2.155,3819,3.766,3820,3.766,3822,2.014,3824,3.094,3828,5.568,3833,4.029,3848,2.745,3849,2.745,4190,3.754,4204,2.745,4611,5.758,4612,2.969,4616,2.969,4617,5.551,4618,2.969,4619,2.969,4620,2.969,4621,2.969,4622,5.551,4623,4.559,4624,4.559,4625,4.559,4626,4.559,4627,4.559,4628,4.559,4629,4.559,4630,4.559,4631,4.559,4632,4.559,4633,5.551,4634,2.969,4635,4.559,4636,2.969,4637,2.969,4638,2.969,4639,7.092,4640,4.559,4641,4.559,4642,5.551,4643,2.969,4644,2.969,4645,2.969,4646,2.969,4647,4.559,4648,2.969,4649,2.969,4650,2.969,4651,2.969,4652,5.551,4653,4.559,4654,4.559,4655,5.551,4656,4.559,4657,4.559,4658,4.559,4659,4.559,4660,4.559,4661,4.559,4662,6.227,4663,4.559,4664,4.559,4665,4.559,4666,4.559,4667,2.969,4668,2.969,4669,2.969,4670,2.969,4671,4.559,4672,2.969,4673,2.969,4674,2.969,4675,2.969,4676,2.969,4677,2.969,4678,4.559,4679,2.969,4680,4.559,4681,4.559,4682,4.559,4683,4.559,4684,4.559,4685,4.559,4686,2.969,4687,2.969,4688,2.969,4689,2.969,4690,2.969,4691,4.559,4692,2.969,4693,2.969,4694,4.559,4695,5.551,4696,5.551,4697,2.969,4698,4.559,4699,2.969,4700,4.559,4701,2.969,4702,4.559,4703,2.969,4704,4.559,4705,2.969,4706,2.969,4707,4.559,4708,2.969,4709,2.969,4710,2.969,4711,2.969,4712,2.969,4713,2.969,4714,2.969,4715,4.559,4716,2.969,4717,2.969,4718,2.969,4719,2.969,4720,2.969,4721,4.559,4722,2.969,4723,4.559,4724,5.551,4725,2.969,4726,2.969,4727,5.081,4728,5.081,4729,5.081,4730,5.081,4731,5.081,4732,5.081,4733,5.081,4734,5.081,4735,5.081,4736,5.081,4737,3.309,4738,3.309,4739,3.309,4740,3.309,4741,3.309,4742,3.309,4743,3.309,4744,3.309,4745,3.309,4746,3.309,4747,3.309,4748,3.309,4749,3.309,4750,3.309,4751,3.309,4752,3.309]],["title/interfaces/TranslationState.html",[777,1.884,792,4.162]],["body/interfaces/TranslationState.html",[3,0.039,4,0.039,5,0.047,32,0.181,34,0.291,35,0.534,45,0.005,51,0.091,60,0.055,100,0.919,146,1.314,162,0.004,163,0.004,164,0.004,173,2.565,190,2.033,192,3.546,205,1.814,624,6.013,777,2.866,778,4.048,792,7.931,3635,6.847,3637,6.847,4753,7.63,4754,9.872,4755,7.63,4756,7.63,4757,7.63,4758,7.63]],["title/classes/TranslationUpToDate.html",[0,0.276,3824,3.054]],["body/classes/TranslationUpToDate.html",[0,0.531,2,0.789,3,0.034,4,0.034,5,0.04,8,1.053,10,2.193,32,0.191,33,0.977,34,0.251,35,0.488,37,1.517,38,1.25,42,0.2,45,0.005,49,0.713,50,0.623,51,0.098,52,0.584,60,0.061,61,0.916,98,1.616,100,0.672,146,1.13,162,0.003,163,0.004,164,0.003,171,3.571,190,1.658,192,3.056,255,3.255,517,2.731,518,2.594,614,3.883,781,5.903,1819,3.671,2907,4.448,3814,5.455,3815,4.448,3816,4.858,3818,4.283,3819,5.455,3820,5.455,3821,4.638,3822,5.455,3823,4.638,3824,5.714,3825,4.638,3826,4.638,3827,4.858,3828,4.448,3829,6.07,3830,4.858,3831,4.448,3832,4.858,3833,4.283,4759,6.576]],["title/classes/TryToLogIn.html",[0,0.276,19,2.483]],["body/classes/TryToLogIn.html",[0,0.528,1,3.305,2,0.467,3,0.02,4,0.02,5,0.046,6,2.065,7,1.51,8,1.065,9,4.306,10,1.039,11,1.934,12,3.281,13,3.491,14,3.907,15,2.016,16,3.303,17,1.948,18,3.81,19,4.161,20,3.124,21,2.173,22,2.117,23,3.278,24,2.303,25,3.712,26,3.81,27,2.884,28,1.43,29,3.124,30,3.62,31,3.206,32,0.192,33,0.953,34,0.148,35,0.341,36,0.875,37,1.471,38,1.212,39,0.252,40,1.013,41,2.782,42,0.208,44,0.266,45,0.005,46,0.261,47,0.266,49,0.422,50,0.369,51,0.09,52,0.346,53,3.109,54,1.774,55,2.523,56,1.774,57,2.173,58,2.616,59,2.173,60,0.06,61,0.542,62,2.016,63,3.171,64,1.081,65,2.113,66,3.454,67,2.616,68,3.712,69,3.103,70,4.729,71,3.996,72,3.454,73,2.117,74,2.518,75,3.728,76,3.242,77,4.066,78,3.454,79,1.365,80,3.454,81,2.117,82,3.171,83,3.501,84,3.534,85,1.809,86,2.117,87,1.535,88,0.914,89,2.173,90,2.782,91,1.039,92,2.117,93,2.117,94,1.886,95,3.171,96,2.117,97,2.117,98,1.448,99,1.809,100,0.821,101,1.809,102,1.739,103,1.846,104,1.535,105,2.173,106,2.173,107,3.206,108,3.124,109,1.803,110,3.124,111,2.173,112,1.227,113,1.227,114,1.147,115,2.173,116,2.117,117,2.842,118,3.206,119,2.842,120,2.265,121,1.616,122,3.124,123,3.242,124,3.81,125,3.66,126,3.534,127,2.304,128,1.475,129,3.124,130,2.065,131,3.996,132,1.11,133,2.173,134,2.016,135,2.117,136,2.907,137,1.282,138,2.173,139,2.173,140,4.205,141,2.117,142,2.173,143,3.124,144,2.173,145,3.124,146,0.535,147,2.173,148,2.117,149,2.173,150,2.117,151,2.173,152,2.669,153,3.124,154,1.462,155,2.173,156,2.173,157,2.173,158,2.724,159,2.173,160,2.173,161,2.065,162,0.002,163,0.003,164,0.002,475,1.798,4760,5.743,4761,3.893]],["title/classes/TryToLogOut.html",[0,0.276,75,2.483]],["body/classes/TryToLogOut.html",[0,0.53,1,3.35,2,0.478,3,0.021,4,0.021,5,0.047,6,2.113,7,1.545,8,1.068,9,4.329,10,1.063,11,1.956,12,3.281,13,3.519,14,3.939,15,2.063,16,3.34,17,1.965,18,3.861,19,4.014,20,3.177,21,2.224,22,2.166,23,3.309,24,2.334,25,3.761,26,3.861,27,2.923,28,1.449,29,3.177,30,3.669,31,3.261,32,0.189,33,0.957,34,0.152,35,0.347,36,0.817,37,1.289,38,1.217,39,0.175,41,2.829,42,0.121,45,0.005,49,0.432,50,0.377,51,0.091,52,0.354,53,3.151,54,1.815,55,2.556,56,1.815,57,2.224,58,2.661,59,2.224,60,0.06,61,0.555,62,2.063,63,3.214,64,1.106,65,2.141,66,3.5,67,2.661,68,3.761,69,3.143,70,4.763,71,4.041,72,3.5,73,2.166,74,2.561,75,4.014,76,3.278,77,4.104,78,3.5,79,1.389,80,3.5,81,2.166,82,3.214,83,3.54,84,3.582,85,1.851,86,2.166,87,1.571,88,0.935,89,2.224,90,2.829,91,1.063,92,2.166,93,2.166,94,1.929,95,3.214,96,2.166,97,2.166,98,1.462,99,1.851,100,0.829,101,1.851,102,1.78,103,1.889,104,1.571,105,2.224,106,2.224,107,3.261,108,3.177,109,1.834,110,3.177,111,2.224,112,1.235,113,1.235,114,1.154,115,2.224,116,2.166,117,1.971,118,2.224,119,1.971,120,1.571,121,1.121,122,2.166,123,3.278,124,3.861,125,3.151,126,3.582,127,1.598,128,1.023,129,2.166,130,2.113,131,4.646,132,1.666,133,3.261,134,3.025,135,3.177,136,2.956,137,1.303,138,2.224,139,2.224,140,4.252,141,2.166,142,2.224,143,3.177,144,2.224,145,3.177,146,0.548,147,2.224,148,2.166,149,2.224,150,2.166,151,2.224,152,2.714,153,3.177,154,1.496,155,2.224,156,2.224,157,2.224,158,2.77,159,2.224,160,2.224,161,2.113,162,0.002,163,0.003,164,0.002,4762,3.983]],["title/components/TypeAheadSettingsComponent.html",[279,1,423,1.718]],["body/components/TypeAheadSettingsComponent.html",[0,0.199,3,0.019,4,0.028,5,0.033,28,1.142,32,0.192,33,0.54,34,0.138,35,0.324,36,0.365,39,0.159,42,0.316,44,0.622,45,0.005,46,0.635,47,0.622,49,0.789,50,0.876,51,0.087,52,0.322,60,0.022,64,1.008,91,0.969,100,0.744,121,1.021,128,2.002,132,1.035,137,1.828,162,0.002,163,0.003,164,0.002,173,2.076,176,2.263,186,0.843,236,2.585,265,1.078,266,1.619,279,1.305,280,1.243,281,1.812,282,1.28,283,1.562,284,1.3,285,1.3,287,2.382,288,1.224,289,3.528,290,2.483,292,1.923,294,2.469,296,1.279,297,3.077,312,2.293,313,2.638,315,0.654,329,1.3,330,1.28,331,1.3,332,1.3,333,1.3,334,1.3,335,2.085,336,1.3,337,1.3,338,1.3,339,1.261,340,1.207,341,1.28,342,1.3,343,1.3,344,1.3,345,0.83,346,1.3,347,1.124,348,1.953,349,1.923,350,1.172,351,2.607,352,1.3,353,1.3,354,1.243,355,1.3,356,1.243,357,2.027,358,1.953,359,1.243,360,1.953,361,1.243,362,1.3,363,1.224,364,1.3,365,3.351,366,1.3,367,2.607,368,1.243,369,1.3,370,1.207,371,1.953,372,1.243,373,1.224,374,1.207,375,1.28,376,1.3,377,1.243,378,1.923,379,1.3,380,1.261,381,1.189,382,1.953,383,1.243,384,1.3,385,2.607,386,1.207,387,1.3,388,1.243,389,1.243,390,1.28,391,1.224,392,1.3,393,1.243,394,1.243,395,1.3,396,1.224,397,1.3,398,1.243,399,1.3,400,1.261,401,1.243,402,1.3,403,1.243,404,1.063,405,1.3,406,1.243,407,2.31,408,3.446,409,2.345,410,1.3,411,1.243,412,1.3,413,1.243,414,1.3,415,1.207,416,1.243,417,1.839,418,1.243,419,1.243,420,1.494,421,1.243,422,1.3,423,2.492,424,3.209,425,1.243,426,0.92,427,1.224,428,1.224,429,1.3,430,1.224,431,1.3,432,1.224,433,1.28,434,1.3,556,1.28,585,1.008,586,1.035,735,2.39,954,4.062,1303,4.297,1416,3.86,1538,2.282,1620,3.865,1621,5.131,1623,5.131,1624,4.43,1625,6.937,1626,5.131,1627,6.305,1628,5.131,1629,4.837,1630,5.777,1631,5.777,1632,5.131,1633,5.131,1634,5.131,1639,3.843,1641,3.843,1644,3.843,1645,4.576,1647,3.843,1651,4.616,1666,2.559,1802,2.363,1967,3.318,1999,7,2750,2.681,2751,2.681,2752,2.681,2757,2.681,2758,2.681,2759,2.681,2760,2.681,2761,2.681,2762,2.681,2763,2.681,2764,2.681,2765,2.681,2766,2.681,2767,2.681,2768,2.681,2769,2.681,2772,2.681,2776,4.246,3689,3.01,3690,3.256,3691,4.246,3692,5.873,3693,3.256,3949,3.256,3951,4.89,4022,3.256,4023,3.01,4024,3.256,4025,3.256,4763,5.45,4764,6.545,4765,3.628,4766,3.628,4767,3.628,4768,5.45,4769,3.628,4770,3.628,4771,3.628,4772,3.628,4773,3.628,4774,3.628,4775,3.628,4776,3.628,4777,3.628,4778,3.628,4779,3.628,4780,3.628,4781,3.628,4782,3.628]],["title/components/TypeFilterComponent.html",[279,1,425,1.718]],["body/components/TypeFilterComponent.html",[0,0.223,3,0.021,4,0.031,5,0.036,8,0.427,13,1.682,17,1.892,28,1.891,32,0.186,33,0.586,34,0.154,35,0.351,36,0.408,39,0.177,42,0.275,44,0.277,45,0.005,46,0.547,47,0.277,49,0.439,50,0.383,51,0.114,52,0.36,60,0.025,64,1.125,65,1.254,91,1.081,114,0.521,121,1.14,128,1.518,132,1.155,137,1.903,162,0.002,163,0.003,164,0.002,186,0.915,209,1.482,219,2.958,228,1.712,265,1.203,266,1.757,279,1.392,280,1.387,281,1.966,282,1.429,283,1.743,284,1.451,285,1.451,287,2.541,288,1.367,289,3.552,290,2.694,292,2.086,294,2.425,296,1.388,297,2.883,312,1.618,313,1.687,315,0.73,329,1.451,330,1.429,331,1.451,332,1.451,333,1.451,334,1.451,335,2.445,336,1.451,337,1.451,338,1.451,339,1.408,340,1.347,341,1.429,342,1.451,343,1.451,344,1.451,345,0.927,346,1.451,347,1.254,348,2.119,349,2.086,350,1.308,351,2.751,352,1.451,353,1.451,354,1.387,355,1.451,356,1.387,357,2.162,358,2.119,359,1.387,360,2.119,361,1.387,362,1.451,363,1.367,364,1.451,365,1.387,366,1.451,367,2.751,368,1.387,369,1.451,370,1.347,371,2.119,372,1.387,373,1.367,374,1.347,375,1.429,376,1.451,377,1.387,378,2.086,379,1.451,380,1.408,381,1.327,382,2.119,383,1.387,384,1.451,385,2.751,386,1.347,387,1.451,388,1.387,389,1.387,390,1.429,391,1.367,392,1.451,393,1.387,394,1.387,395,1.451,396,1.367,397,1.451,398,1.387,399,1.451,400,1.408,401,1.387,402,1.451,403,1.387,404,1.187,405,1.451,406,1.387,407,2.086,408,1.387,409,2.502,410,1.451,411,1.387,412,1.451,413,1.387,414,1.451,415,1.347,416,1.387,417,1.367,418,1.387,419,1.387,420,1.621,421,1.387,422,1.451,423,1.387,424,1.387,425,2.629,426,2.333,427,1.367,428,1.367,429,1.451,430,1.367,431,1.451,432,1.367,433,1.429,434,1.451,497,2.257,556,1.429,584,1.125,585,1.125,586,1.155,599,1.125,628,2.856,629,4.606,632,2.392,637,3.634,671,2.05,874,3.491,879,2.74,880,2.638,881,2.466,882,2.547,884,2.324,887,2.547,930,1.429,947,2.466,954,4.286,962,5.135,1018,3.156,1143,2.098,1286,1.712,1355,2.74,1447,2.638,1538,4.391,1620,4.123,1624,4.251,1629,4.533,1645,2.547,1661,3.156,1662,4.606,1663,2.992,1664,2.856,1680,3.156,1682,3.156,1684,3.156,1692,3.156,1693,3.156,1817,3.718,1888,5.672,1994,6.799,2066,2.992,2161,2.992,2465,2.992,2473,4.368,2506,3.634,2507,3.36,2511,5.414,2638,3.634,2640,5.793,2684,2.203,2826,2.74,2903,3.156,2929,8.258,2930,8.258,3020,2.992,3023,2.992,3331,3.634,3493,2.992,3629,7.326,3995,6.265,3996,5.793,3998,6.369,4004,3.36,4005,3.36,4008,3.36,4009,5.793,4011,3.36,4014,3.634,4015,3.36,4018,3.36,4023,3.36,4295,3.634,4296,3.634,4783,6.982,4784,4.05,4785,4.05,4786,4.05,4787,4.05,4788,5.912,4789,4.05,4790,4.05,4791,4.05,4792,4.05,4793,4.05,4794,4.05,4795,4.05,4796,4.05,4797,4.05,4798,4.05,4799,4.05,4800,4.05,4801,4.05,4802,4.05,4803,4.05,4804,4.05,4805,4.05,4806,4.05,4807,4.05,4808,5.912,4809,5.912,4810,5.912,4811,5.912,4812,5.912,4813,8.164,4814,4.05,4815,6.982,4816,5.912,4817,4.05,4818,4.05,4819,5.912,4820,6.982,4821,5.912,4822,4.05]],["title/classes/UnAuthenticationFromImplicitFlow.html",[0,0.276,95,2.331]],["body/classes/UnAuthenticationFromImplicitFlow.html",[0,0.531,1,3.375,2,0.484,3,0.021,4,0.021,5,0.047,6,2.141,8,1.066,9,4.274,10,1.078,11,1.968,12,3.285,13,3.536,14,3.789,15,2.091,16,3.361,17,1.974,18,3.891,19,4.036,20,3.208,21,2.254,22,2.196,23,3.128,24,2.352,25,3.791,26,3.891,27,2.946,28,1.461,29,3.208,30,3.697,31,3.293,32,0.189,33,0.959,34,0.154,35,0.35,36,0.821,37,1.297,38,1.219,39,0.177,41,2.857,42,0.123,45,0.005,49,0.438,50,0.382,51,0.091,52,0.359,53,3.175,54,1.839,55,2.576,56,1.839,57,2.254,58,2.687,59,2.254,60,0.06,61,0.562,62,2.091,63,3.239,64,1.121,65,2.158,66,3.527,67,2.687,68,3.791,69,3.094,70,4.783,71,4.066,72,3.527,73,2.196,74,2.586,75,3.794,76,3.299,77,4.127,78,3.527,79,1.402,80,3.527,81,2.196,82,3.239,83,3.562,84,3.609,85,1.876,86,2.196,87,1.592,88,0.948,89,2.254,90,2.857,91,1.078,92,2.196,93,2.196,94,1.955,95,3.562,96,2.196,97,2.196,98,1.47,99,1.876,100,0.833,101,1.876,102,1.804,103,1.915,104,1.592,105,2.254,106,2.254,107,3.293,108,3.208,109,1.852,110,3.208,111,2.254,112,1.24,113,1.24,114,1.159,115,2.254,116,2.196,117,1.998,118,2.254,119,1.998,120,1.592,121,1.136,122,2.196,123,3,124,3.293,125,3.175,126,3.055,127,1.619,128,1.036,129,2.196,130,2.141,131,4.066,132,1.152,133,2.254,134,2.091,135,2.196,136,2.985,137,1.316,138,2.254,139,2.254,140,4.279,141,2.196,142,2.254,143,3.208,144,2.254,145,3.208,146,0.555,147,2.254,148,2.196,149,2.254,150,2.196,151,2.254,152,2.741,153,3.208,154,1.516,155,2.254,156,2.254,157,2.254,158,2.797,159,2.254,160,3.293,161,2.141,162,0.002,163,0.003,164,0.002,4823,4.036]],["title/classes/UpdateALightCard.html",[0,0.276,505,2.242]],["body/classes/UpdateALightCard.html",[0,0.552,2,0.489,3,0.021,4,0.021,5,0.025,8,1.077,10,2.185,11,1.046,12,1.298,32,0.195,33,1.001,34,0.155,35,0.353,36,0.598,37,1.64,38,1.267,39,0.396,40,1.06,42,0.213,44,0.278,45,0.005,46,0.273,47,0.278,49,0.442,50,0.386,51,0.092,52,0.362,60,0.062,61,0.568,65,1.262,79,0.969,88,1.921,98,1.688,100,0.787,109,1.279,112,1.305,113,1.305,114,1.22,146,1.213,154,1.53,162,0.002,163,0.003,164,0.002,186,1.485,190,0.822,193,1.891,224,2.304,238,1.006,316,1.355,345,1.359,444,1.483,446,2.256,449,1.717,454,1.604,455,0.994,456,1.033,457,1.162,458,1.162,459,1.581,461,1.147,462,1.262,472,3.131,473,3.578,474,1.893,475,1.846,478,1.973,479,2.573,480,1.262,481,1.244,482,1.932,483,1.856,484,1.754,485,3.192,486,4.768,487,3.131,488,1.856,489,3.016,490,2.76,491,1.932,492,1.506,493,3.192,494,3.131,495,1.262,496,3.016,497,3.261,498,1.754,499,3.131,500,1.893,501,3.131,502,3.131,503,1.932,504,1.932,505,3.44,506,3.072,507,3.131,508,1.722,509,1.786,510,3.131,511,1.416,512,3.131,513,1.932,514,3.131,515,1.893,516,3.131,517,1.692,518,1.607,519,1.973,520,1.973,521,1.973,522,1.754,523,1.973,524,1.973,525,1.973,526,1.634,527,1.973,528,1.973,529,1.973,530,1.973,531,1.555,532,1.973,533,2.876,534,1.973,535,1.932,536,1.932,537,1.973,538,1.973,539,1.973,540,1.973,541,1.973,542,1.893,4824,5.938,4825,4.074]],["title/classes/UpdateAnAction.html",[0,0.276,506,2.2]],["body/classes/UpdateAnAction.html",[0,0.552,2,0.489,3,0.021,4,0.021,5,0.025,8,1.077,10,2.185,11,1.046,12,1.298,32,0.195,33,1.001,34,0.155,35,0.353,36,0.598,37,1.64,38,1.267,39,0.396,40,1.06,42,0.213,44,0.278,45,0.005,46,0.273,47,0.278,49,0.442,50,0.386,51,0.092,52,0.362,60,0.062,61,0.568,65,1.262,79,0.969,88,1.921,98,1.688,100,0.787,109,1.279,112,1.305,113,1.305,114,1.22,146,1.213,154,1.53,162,0.002,163,0.003,164,0.002,186,1.485,190,0.822,193,1.891,224,2.304,238,1.006,316,1.355,345,1.359,444,1.483,446,2.256,449,1.717,454,1.604,455,0.994,456,1.033,457,1.162,458,1.162,459,1.581,461,1.147,462,1.262,472,3.131,473,3.578,474,1.893,475,1.846,478,1.973,479,2.573,480,1.262,481,1.244,482,1.932,483,1.856,484,1.754,485,3.192,486,4.768,487,3.131,488,1.856,489,3.016,490,2.76,491,1.932,492,1.506,493,3.192,494,3.131,495,1.262,496,3.016,497,3.261,498,1.754,499,3.131,500,1.893,501,3.131,502,3.131,503,1.932,504,1.932,505,3.131,506,3.376,507,3.131,508,1.722,509,1.786,510,3.131,511,1.416,512,3.131,513,1.932,514,3.131,515,1.893,516,3.131,517,1.692,518,1.607,519,1.973,520,1.973,521,1.973,522,1.754,523,1.973,524,1.973,525,1.973,526,1.634,527,1.973,528,1.973,529,1.973,530,1.973,531,1.555,532,1.973,533,1.973,534,2.876,535,1.932,536,1.932,537,1.973,538,1.973,539,1.973,540,1.973,541,1.973,542,1.893,4826,5.938,4827,4.074]],["title/classes/UpdateAnActionFailure.html",[0,0.276,507,2.242]],["body/classes/UpdateAnActionFailure.html",[0,0.554,2,0.497,3,0.021,4,0.021,5,0.025,8,1.079,10,2.201,11,1.065,12,1.321,32,0.193,33,1.003,34,0.158,35,0.357,37,1.592,38,1.269,39,0.406,42,0.183,45,0.005,49,0.45,50,0.393,51,0.093,52,0.368,60,0.062,61,0.578,65,1.284,79,0.986,88,1.935,98,1.695,100,0.794,109,1.303,112,1.31,113,1.31,114,1.224,146,1.219,154,1.558,162,0.002,163,0.003,164,0.002,186,1.49,190,0.837,193,1.916,224,2.334,238,1.025,316,1.379,345,1.377,444,1.51,446,2.275,449,1.739,454,1.62,455,1.012,456,1.051,457,1.183,458,1.183,459,1.609,461,1.168,462,1.284,472,3.163,473,3.29,474,1.928,478,2.009,479,2.589,480,1.284,481,1.267,482,1.967,483,1.89,484,1.785,485,3.225,486,4.779,487,3.163,488,1.89,489,3.047,490,2.796,491,1.967,492,1.533,493,3.225,494,3.163,495,1.284,496,3.047,497,3.281,498,1.785,499,3.163,500,1.928,501,3.163,502,3.163,503,1.967,504,1.967,505,3.163,506,3.104,507,3.469,508,1.753,509,1.819,510,3.163,511,1.442,512,3.163,513,1.967,514,3.163,515,1.928,516,3.163,517,1.722,518,1.636,519,2.009,520,2.009,521,2.009,522,1.785,523,2.009,524,2.009,525,2.009,526,1.664,527,2.009,528,2.009,529,2.009,530,2.009,531,1.583,532,2.009,533,2.009,534,2.009,535,1.967,536,1.967,537,2.914,538,2.009,539,2.009,540,2.009,541,2.009,542,1.928,4828,6.016]],["title/classes/UpdateArchiveFilter.html",[0,0.276,938,3.054]],["body/classes/UpdateArchiveFilter.html",[0,0.525,2,0.701,3,0.03,4,0.03,5,0.036,8,1.039,10,2.034,32,0.195,33,0.965,34,0.223,35,0.452,36,0.767,37,1.688,38,1.234,39,0.256,40,1.519,42,0.258,44,0.399,45,0.005,46,0.391,47,0.399,49,0.634,50,0.553,51,0.101,52,0.519,60,0.06,61,0.814,98,1.722,100,0.597,112,1.338,113,1.338,114,1.25,127,3.603,146,1.165,162,0.004,163,0.004,164,0.003,186,1.179,190,1.538,246,2.384,273,1.942,345,1.337,357,2.958,426,1.481,451,3.945,454,1.94,455,1.425,456,1.481,457,1.666,458,1.666,475,2.234,479,1.759,480,1.809,481,1.784,495,1.809,497,2.229,526,2.343,572,3.351,902,5.005,917,3.177,931,3.804,932,5.16,933,5.005,937,3.674,938,5.468,1062,3.804,1065,4.119,1066,5.331,1067,3.804,1068,5.16,1069,5.372,1070,4.119,1071,4.119,1072,3.951,1073,4.119,1074,4.119,1075,3.951,4829,7.617,4830,5.841]],["title/classes/UpdateArchivePage.html",[0,0.276,933,2.962]],["body/classes/UpdateArchivePage.html",[0,0.525,2,0.701,3,0.03,4,0.03,5,0.036,8,1.039,10,2.034,32,0.195,33,0.965,34,0.223,35,0.452,36,0.767,37,1.688,38,1.234,39,0.256,40,1.519,42,0.258,44,0.399,45,0.005,46,0.391,47,0.399,49,0.634,50,0.553,51,0.101,52,0.519,60,0.06,61,0.814,98,1.722,100,0.597,112,1.338,113,1.338,114,1.25,127,3.603,146,1.165,162,0.004,163,0.004,164,0.003,186,1.179,190,1.538,246,2.384,273,1.942,345,1.337,357,2.958,426,1.481,451,3.945,454,1.94,455,1.425,456,1.481,457,1.666,458,1.666,475,2.234,479,1.759,480,1.809,481,1.784,495,1.809,497,2.229,526,2.343,572,3.351,902,5.005,917,3.177,931,3.804,932,5.16,933,5.304,937,3.674,938,5.16,1062,3.804,1065,4.119,1066,5.331,1067,3.804,1068,5.16,1069,4.119,1070,4.119,1071,4.119,1072,3.951,1073,5.372,1074,4.119,1075,3.951,4831,7.617,4832,5.841]],["title/classes/UpdateTimeReference.html",[0,0.276,2812,3.267]],["body/classes/UpdateTimeReference.html",[0,0.505,2,0.746,3,0.032,4,0.032,5,0.038,7,2.413,8,1.04,10,2.455,16,2.727,32,0.191,33,0.912,34,0.237,35,0.471,36,0.879,37,1.608,38,1.188,39,0.272,40,1.618,42,0.266,44,0.425,45,0.005,46,0.417,47,0.425,49,0.675,50,0.589,51,0.11,52,0.552,55,2.932,56,2.833,60,0.059,61,0.867,74,2.727,98,1.658,104,2.453,109,2.742,136,3.148,146,1.09,162,0.003,163,0.004,164,0.003,273,2.068,281,2.068,420,2.663,449,1.798,475,2.301,511,2.162,564,4.142,571,4.594,884,3.568,1416,4.208,1433,3.613,1480,4.207,1560,4.05,1926,4.386,2780,5.165,2781,4.386,2782,4.386,2783,4.845,2784,7.166,2785,4.594,2786,4.845,2789,4.845,2790,4.05,2791,4.386,2792,3.786,2793,4.386,2794,4.845,2795,5.431,2796,4.845,2797,5.593,2798,4.845,2799,6.451,2800,6.451,2801,4.845,2802,4.845,2803,6.179,2804,4.594,2805,4.207,2806,4.845,2807,4.845,2808,4.594,2809,4.845,2810,4.207,2811,4.594,2812,5.687,2813,4.845,2814,4.845,2815,4.594,4833,7.931,4834,6.219,4835,6.219]],["title/classes/UpdateTranslation.html",[0,0.276,3819,3.054]],["body/classes/UpdateTranslation.html",[0,0.526,2,0.764,3,0.033,4,0.033,5,0.039,8,1.045,10,2.149,32,0.196,33,0.969,34,0.243,35,0.478,36,0.811,37,1.654,38,1.241,39,0.279,40,1.656,42,0.269,44,0.435,45,0.005,46,0.427,47,0.435,49,0.691,50,0.603,51,0.096,52,0.566,60,0.061,61,0.887,98,1.592,100,0.651,146,1.107,162,0.003,163,0.004,164,0.003,171,3.537,190,1.625,192,2.959,255,3.151,475,2.326,517,2.644,518,2.511,614,3.76,781,5.834,1819,3.555,2907,4.307,3814,5.375,3815,4.307,3816,4.704,3818,4.147,3819,5.648,3820,5.375,3821,4.49,3822,5.375,3823,4.49,3824,5.375,3825,4.49,3826,4.49,3827,5.948,3828,4.307,3829,4.704,3830,4.704,3831,4.307,3832,4.704,3833,4.147,4836,8.05,4837,6.367]],["title/classes/UpdateTranslationFailed.html",[0,0.276,3822,3.054]],["body/classes/UpdateTranslationFailed.html",[0,0.526,2,0.764,3,0.033,4,0.033,5,0.039,8,1.045,10,2.149,32,0.196,33,0.969,34,0.243,35,0.478,36,0.811,37,1.654,38,1.241,39,0.279,40,1.656,42,0.269,44,0.435,45,0.005,46,0.427,47,0.435,49,0.691,50,0.603,51,0.096,52,0.566,60,0.061,61,0.887,98,1.592,100,0.651,146,1.107,162,0.003,163,0.004,164,0.003,171,3.537,190,1.625,192,2.959,255,3.151,475,2.326,517,2.644,518,2.511,614,3.76,781,5.834,1819,3.555,2907,4.307,3814,5.375,3815,4.307,3816,4.704,3818,4.147,3819,5.375,3820,5.375,3821,4.49,3822,5.648,3823,4.49,3824,5.375,3825,4.49,3826,4.49,3827,4.704,3828,4.307,3829,4.704,3830,4.704,3831,4.307,3832,5.948,3833,4.147,4838,8.05,4839,6.367]],["title/classes/UpdateTranslationSuccessful.html",[0,0.276,3820,3.054]],["body/classes/UpdateTranslationSuccessful.html",[0,0.526,2,0.764,3,0.033,4,0.033,5,0.039,8,1.045,10,2.149,32,0.196,33,0.969,34,0.243,35,0.478,36,0.811,37,1.654,38,1.241,39,0.279,40,1.656,42,0.269,44,0.435,45,0.005,46,0.427,47,0.435,49,0.691,50,0.603,51,0.096,52,0.566,60,0.061,61,0.887,98,1.592,100,0.651,146,1.107,162,0.003,163,0.004,164,0.003,171,3.537,190,1.625,192,2.959,255,3.151,475,2.326,517,2.644,518,2.511,614,3.76,781,5.834,1819,3.555,2907,4.307,3814,5.375,3815,4.307,3816,4.704,3818,4.147,3819,5.375,3820,5.648,3821,4.49,3822,5.375,3823,4.49,3824,5.375,3825,4.49,3826,4.49,3827,4.704,3828,4.307,3829,4.704,3830,5.948,3831,4.307,3832,4.704,3833,4.147,4840,8.05,4841,6.367]],["title/classes/UpdatedSubscription.html",[0,0.276,499,2.242]],["body/classes/UpdatedSubscription.html",[0,0.554,2,0.497,3,0.021,4,0.021,5,0.025,8,1.079,10,2.201,11,1.065,12,1.321,32,0.193,33,1.003,34,0.158,35,0.357,37,1.592,38,1.269,39,0.406,42,0.183,45,0.005,49,0.45,50,0.393,51,0.093,52,0.368,60,0.062,61,0.578,65,1.284,79,0.986,88,1.935,98,1.695,100,0.794,109,1.303,112,1.31,113,1.31,114,1.224,146,1.219,154,1.558,162,0.002,163,0.003,164,0.002,186,1.49,190,0.837,193,1.916,224,2.334,238,1.025,316,1.379,345,1.377,444,1.51,446,2.275,449,1.739,454,1.62,455,1.012,456,1.051,457,1.183,458,1.183,459,1.609,461,1.168,462,1.284,472,3.163,473,3.29,474,1.928,478,2.009,479,2.589,480,1.284,481,1.267,482,1.967,483,1.89,484,1.785,485,3.225,486,4.779,487,3.163,488,1.89,489,3.047,490,2.796,491,1.967,492,1.533,493,3.225,494,3.163,495,1.284,496,3.047,497,3.281,498,1.785,499,3.469,500,1.928,501,3.163,502,3.163,503,1.967,504,1.967,505,3.163,506,3.104,507,3.163,508,1.753,509,1.819,510,3.163,511,1.442,512,3.163,513,1.967,514,3.163,515,1.928,516,3.163,517,1.722,518,1.636,519,2.009,520,2.009,521,2.009,522,1.785,523,2.009,524,2.009,525,2.009,526,1.664,527,2.009,528,2.914,529,2.009,530,2.009,531,1.583,532,2.009,533,2.009,534,2.009,535,1.967,536,1.967,537,2.009,538,2.009,539,2.009,540,2.009,541,2.009,542,1.928,4842,6.016]],["title/classes/UselessAuthAction.html",[0,0.276,84,2.598]],["body/classes/UselessAuthAction.html",[0,0.531,1,3.375,2,0.484,3,0.021,4,0.021,5,0.047,6,2.141,8,1.066,9,4.274,10,1.078,11,1.968,12,3.285,13,3.536,14,3.789,15,2.091,16,3.361,17,1.974,18,3.891,19,4.036,20,3.208,21,2.254,22,2.196,23,3.128,24,2.352,25,3.791,26,3.891,27,2.946,28,1.461,29,3.208,30,3.697,31,3.293,32,0.189,33,0.959,34,0.154,35,0.35,36,0.821,37,1.297,38,1.219,39,0.177,41,2.857,42,0.123,45,0.005,49,0.438,50,0.382,51,0.091,52,0.359,53,3.175,54,1.839,55,2.576,56,1.839,57,2.254,58,2.687,59,2.254,60,0.06,61,0.562,62,2.091,63,3.239,64,1.121,65,2.158,66,3.527,67,2.687,68,3.791,69,3.094,70,4.783,71,4.066,72,3.527,73,2.196,74,2.586,75,3.794,76,3.299,77,4.127,78,3.527,79,1.402,80,3.527,81,2.196,82,3.239,83,3.562,84,3.97,85,1.876,86,2.196,87,1.592,88,0.948,89,2.254,90,2.857,91,1.078,92,2.196,93,2.196,94,1.955,95,3.239,96,2.196,97,2.196,98,1.47,99,1.876,100,0.833,101,1.876,102,1.804,103,1.915,104,1.592,105,2.254,106,2.254,107,3.293,108,3.208,109,1.852,110,3.208,111,2.254,112,1.24,113,1.24,114,1.159,115,2.254,116,2.196,117,1.998,118,2.254,119,1.998,120,1.592,121,1.136,122,2.196,123,3,124,3.293,125,3.175,126,3.055,127,1.619,128,1.036,129,2.196,130,2.141,131,4.066,132,1.152,133,2.254,134,2.091,135,2.196,136,2.985,137,1.316,138,2.254,139,2.254,140,4.279,141,2.196,142,2.254,143,3.208,144,2.254,145,3.208,146,0.555,147,2.254,148,2.196,149,2.254,150,2.196,151,2.254,152,2.741,153,3.208,154,1.516,155,2.254,156,2.254,157,3.293,158,2.797,159,2.254,160,2.254,161,2.141,162,0.002,163,0.003,164,0.002,4843,4.036]],["title/classes/User.html",[0,0.276,69,1.621]],["body/classes/User.html",[0,0.427,2,0.933,3,0.04,4,0.04,5,0.048,32,0.147,36,0.916,38,1.205,39,0.398,42,0.237,44,0.531,45,0.005,46,0.521,47,0.531,60,0.048,69,2.938,100,1.048,125,3.544,162,0.004,163,0.004,164,0.004,1463,7.085,1465,7.085,4844,7.778,4845,6.979,4846,7.778,4847,6.979,4848,6.979,4849,6.979]],["title/classes/UserApplicationNotRegistered.html",[0,0.276,2268,3.054]],["body/classes/UserApplicationNotRegistered.html",[0,0.524,2,0.694,3,0.03,4,0.03,5,0.035,8,1.037,27,3.566,32,0.195,33,0.963,34,0.221,35,0.449,36,0.762,37,1.685,38,1.231,39,0.253,40,1.505,42,0.257,44,0.395,45,0.005,46,0.388,47,0.395,49,0.628,50,0.548,51,0.09,52,0.514,60,0.06,61,0.806,69,3.392,79,1.375,98,1.718,112,1.31,113,1.31,114,1.225,146,1.335,162,0.003,163,0.004,164,0.003,454,1.931,455,1.411,456,1.466,457,1.65,458,1.65,475,2.223,564,4.405,1144,3.23,1256,4.117,2071,3.319,2262,5.136,2263,3.768,2266,4.08,2267,5.136,2268,5.448,2269,5.136,2270,5.136,2271,3.147,2272,3.768,2273,4.08,2274,5.338,2275,4.08,2276,4.08,2277,4.08,2278,3.768,4850,7.569,4851,5.785]],["title/classes/UserApplicationRegistered.html",[0,0.276,2267,3.054]],["body/classes/UserApplicationRegistered.html",[0,0.524,2,0.694,3,0.03,4,0.03,5,0.035,8,1.037,27,3.566,32,0.195,33,0.963,34,0.221,35,0.449,36,0.762,37,1.685,38,1.231,39,0.253,40,1.505,42,0.257,44,0.395,45,0.005,46,0.388,47,0.395,49,0.628,50,0.548,51,0.09,52,0.514,60,0.06,61,0.806,69,3.392,79,1.375,98,1.718,112,1.31,113,1.31,114,1.225,146,1.335,162,0.003,163,0.004,164,0.003,454,1.931,455,1.411,456,1.466,457,1.65,458,1.65,475,2.223,564,4.405,1144,3.23,1256,4.117,2071,3.319,2262,5.136,2263,3.768,2266,4.08,2267,5.448,2268,5.136,2269,5.136,2270,5.136,2271,3.147,2272,3.768,2273,5.338,2274,4.08,2275,4.08,2276,4.08,2277,4.08,2278,3.768,4852,7.569,4853,5.785]],["title/classes/UserContext.html",[0,0.276,2540,3.908]],["body/classes/UserContext.html",[0,0.424,2,0.925,3,0.04,4,0.04,5,0.047,32,0.146,38,1.239,39,0.397,42,0.235,44,0.527,45,0.005,46,0.517,47,0.527,60,0.047,100,1.063,102,4.044,125,3.515,162,0.004,163,0.004,164,0.004,1463,7.052,1465,7.052,2540,7.052,2654,6.923,4845,6.923,4847,6.923,4848,6.923,4849,6.923,4854,9.051,4855,7.716,4856,7.716]],["title/injectables/UserEffects.html",[860,4.162,892,1.393]],["body/injectables/UserEffects.html",[0,0.239,1,3.524,3,0.022,4,0.022,5,0.027,8,1.001,17,2.172,27,2.634,28,1.992,32,0.159,34,0.166,35,0.37,39,0.191,42,0.256,44,0.297,45,0.005,46,0.292,47,0.297,49,0.861,50,0.752,51,0.115,52,0.387,60,0.027,62,2.255,69,3.334,88,2.112,102,2.784,137,1.951,146,1.202,162,0.002,163,0.003,164,0.002,190,0.879,205,2.26,209,2.096,241,4.186,294,1.917,315,0.785,420,1.708,517,2.587,556,1.537,559,4.433,564,4.509,584,1.21,585,1.21,586,1.242,590,3.393,599,1.21,618,3.69,860,5.169,892,1.73,893,1.909,901,6.186,903,5.169,909,5.6,910,5.454,912,4.319,924,2.369,925,2.255,927,1.909,928,2.065,930,1.537,947,3.793,1144,2.431,1185,5.6,1256,3.389,1286,4.108,1473,5.668,1500,5.28,1558,5.59,2071,2.498,2072,3.217,2262,5.321,2267,5.115,2268,4.429,2269,5.478,2270,4.429,2272,5.994,2278,2.836,2684,3.389,2874,5.866,3462,5.59,3883,6.648,3936,3.907,4857,4.355,4858,7.275,4859,7.275,4860,7.275,4861,4.355,4862,6.23,4863,7.94,4864,6.23,4865,6.23,4866,7.94,4867,7.125,4868,6.23,4869,6.23,4870,6.23,4871,6.23,4872,4.355,4873,6.23,4874,6.23,4875,6.23,4876,7.94,4877,6.23,4878,8.74,4879,6.23,4880,6.23,4881,6.23,4882,6.23,4883,6.23,4884,6.23,4885,6.23,4886,4.355,4887,6.23,4888,9.505,4889,6.23,4890,6.23,4891,4.355,4892,7.94,4893,6.23,4894,4.355,4895,4.355]],["title/injectables/UserService.html",[892,1.393,3883,3.706]],["body/injectables/UserService.html",[0,0.361,3,0.034,4,0.034,5,0.04,7,2.551,17,2.239,32,0.178,34,0.251,35,0.488,38,1.12,39,0.36,42,0.286,44,0.612,45,0.005,46,0.6,47,0.612,51,0.115,58,3.743,60,0.04,69,3.183,100,0.988,120,3.241,162,0.003,163,0.004,164,0.003,209,1.744,296,1.929,312,1.904,315,1.186,584,1.827,598,3.577,599,1.827,664,3.489,802,3.406,803,3.489,892,2.282,893,2.884,1134,5.735,1135,4.638,1144,3.671,1176,5.794,2083,4.638,3883,6.07,3964,5.901,4867,7.372,4896,6.576,4897,8.96,4898,8.96,4899,8.96,4900,8.215,4901,8.215,4902,6.576,4903,8.215,4904,6.576,4905,6.576,4906,8.215,4907,6.576,4908,6.576,4909,6.576]],["title/interfaces/UserState.html",[777,1.884,793,4.162]],["body/interfaces/UserState.html",[3,0.04,4,0.04,5,0.047,32,0.171,34,0.293,35,0.536,45,0.005,60,0.055,100,0.981,162,0.004,163,0.004,164,0.004,173,2.736,205,1.829,210,2.799,219,2.521,777,2.889,778,4.08,793,7.958,1256,5.488,4910,7.691,4911,10.09,4912,7.691]],["title/modules/UtilitiesModule.html",[640,2.2,654,3.393]],["body/modules/UtilitiesModule.html",[0,0.375,3,0.035,4,0.043,5,0.051,36,0.688,45,0.005,51,0.113,60,0.042,76,3.62,87,2.693,91,1.823,128,1.753,162,0.003,163,0.004,164,0.003,315,1.231,319,3.537,329,2.447,330,2.41,331,2.447,332,2.447,333,2.447,334,2.447,335,2.175,336,2.447,337,2.447,338,2.447,339,2.374,340,2.271,341,2.41,342,2.447,343,2.447,344,2.447,345,1.563,346,2.447,347,2.115,350,2.206,413,3.569,428,3.516,640,2.994,642,3.456,643,3.918,644,5.548,645,4.032,646,4.835,654,6.982,655,4.966,656,4.157,658,3.714,660,4.574,665,5.289,668,4.032,1030,5.32,1351,4.815,4913,6.127,4914,6.127,4915,6.127,4916,6.828,4917,6.828,4918,6.828,4919,6.828,4920,6.828]],["title/pipes/XAxisTickFormatPipe.html",[1286,2.12,2918,3.908]],["body/pipes/XAxisTickFormatPipe.html",[0,0.24,3,0.022,4,0.022,5,0.027,9,2.897,24,2.104,32,0.138,33,0.432,42,0.222,44,0.497,45,0.005,46,0.563,47,0.497,49,0.676,50,0.947,51,0.087,60,0.027,100,1.059,104,3.133,162,0.002,163,0.003,164,0.002,205,1.889,209,2.24,288,1.471,296,1.023,312,1.687,315,0.786,345,1.427,488,3.619,598,4.755,599,1.211,950,4.298,969,2.654,981,4.396,1081,3.448,1286,2.635,1408,3.391,1409,5.11,1433,2.84,2417,7.253,2440,4.857,2454,3.911,2695,6.189,2795,4.691,2918,4.857,2941,7.128,2942,7.128,2943,7.128,3388,4.396,3640,7.845,4442,3.911,4921,4.358,4922,4.358,4923,6.234,4924,6.234,4925,10.209,4926,4.358,4927,8.742,4928,7.943,4929,8.742,4930,4.358,4931,6.234,4932,4.358,4933,6.234,4934,6.234,4935,6.234,4936,6.234,4937,6.234,4938,4.358,4939,6.234,4940,4.358,4941,6.234,4942,7.278,4943,7.278,4944,7.278,4945,10.296,4946,6.234,4947,8.404,4948,7.278,4949,7.278,4950,6.234,4951,6.234,4952,6.234,4953,6.234,4954,7.278,4955,6.234,4956,6.234,4957,7.943,4958,4.358,4959,4.358,4960,4.358,4961,4.358,4962,7.278,4963,7.278,4964,4.358,4965,4.358,4966,4.358,4967,4.358,4968,7.943,4969,6.234,4970,6.234,4971,4.358,4972,4.358,4973,4.358,4974,4.358,4975,4.358,4976,4.358,4977,6.234]],["title/dependencies.html",[643,3.467,4978,4.173]],["body/dependencies.html",[4,0.034,32,0.125,45,0.005,52,0.733,53,3.017,54,3.017,58,3.017,137,1.478,162,0.003,163,0.004,164,0.003,228,2.799,315,1.194,317,4.872,318,4.031,319,4.274,424,2.268,461,1.864,483,3.017,582,5.819,583,5.581,584,1.839,643,3.799,655,3.91,668,3.91,671,3.351,681,4.655,682,3.43,686,5.494,687,5.494,689,5.494,690,7.003,691,6.845,694,5.494,695,5.494,696,5.494,706,4.312,707,4.312,719,4.031,722,3.799,795,4.67,925,3.43,1141,4.67,1142,5.819,1433,3.759,2105,4.479,2551,5.494,2792,4.031,2936,5.941,2937,5.941,3980,5.941,4979,6.621,4980,10.204,4981,6.621,4982,6.621,4983,6.621,4984,6.621,4985,6.621,4986,6.621,4987,6.621,4988,6.621,4989,8.251,4990,9.68,4991,6.621,4992,6.621,4993,6.621,4994,6.621,4995,6.621,4996,6.621,4997,6.621,4998,6.621,4999,6.621,5000,6.621,5001,6.621,5002,6.621,5003,6.621,5004,6.621,5005,6.621,5006,6.621,5007,6.621,5008,8.251,5009,6.621,5010,6.621,5011,6.621,5012,6.621,5013,6.621,5014,6.621,5015,6.621]],["title/miscellaneous/enumerations.html",[5016,3.251,5017,5.422]],["body/miscellaneous/enumerations.html",[1,1.645,3,0.018,6,1.801,8,0.798,10,2.431,11,0.872,12,3.083,13,2.61,19,1.68,27,2.657,34,0.129,45,0.005,50,1.014,62,2.684,63,1.578,64,1.746,65,2.178,66,1.718,67,2.361,68,3.419,69,3.197,70,4.518,71,3.732,72,1.718,73,1.847,74,2.756,75,1.68,76,3.028,77,1.718,78,1.718,79,2.129,80,1.718,81,1.847,82,2.921,83,2.921,84,1.759,85,1.578,86,1.847,88,1.778,93,1.847,94,1.645,95,1.578,96,1.847,97,1.847,99,2.409,101,2.409,102,2.316,103,2.458,109,1.066,127,1.362,146,1.177,154,1.275,162,0.002,163,0.002,164,0.002,167,2.005,169,3.155,171,2.8,173,0.969,186,1.569,193,1.651,212,1.886,217,3.155,218,3.155,255,1.68,264,3.155,265,1.009,266,1.009,267,2.067,268,2.067,269,2.067,270,1.61,345,1.439,357,2.473,381,2.06,404,2.739,420,2.076,426,1.593,437,1.847,438,2.005,442,2.974,443,1.847,444,1.886,445,1.718,446,2.871,447,1.895,448,1.895,449,2.537,450,1.801,451,3.924,452,1.895,453,1.895,454,1.901,455,2.026,456,2.105,457,2.278,458,2.278,459,2.439,460,2.005,472,1.517,473,1.578,474,2.409,479,1.023,484,2.231,485,1.547,486,4.647,487,1.517,488,1.547,489,1.461,490,1.578,491,1.61,492,1.916,493,1.547,494,1.517,495,2.346,496,1.461,497,3.17,498,1.461,499,1.517,500,1.578,501,1.517,502,1.517,503,1.61,504,1.61,505,1.517,506,1.489,507,1.517,508,1.435,509,1.489,510,1.517,511,1.18,512,1.517,513,1.61,514,1.517,515,1.578,516,1.517,517,2.152,518,2.044,564,3.593,572,1.948,591,2.135,614,2.005,635,2.394,724,2.893,735,4.141,744,2.135,760,1.547,780,4.406,781,4.424,874,2.005,875,2.645,881,3.155,883,4.038,884,1.948,885,2.817,902,2.005,931,3.375,932,2.067,933,2.005,938,2.067,940,2.394,941,2.817,942,4.65,970,4.65,971,3.046,972,3.046,973,3.046,974,3.046,975,3.046,976,3.046,977,3.046,978,3.046,1062,2.211,1066,3.953,1067,2.211,1068,2.067,1124,2.394,1156,3.655,1195,1.948,1256,2.819,1534,2.508,1538,3.259,1541,2.135,1578,3.506,1580,3.829,1657,1.948,1786,2.817,1793,3.375,1800,4.3,1801,2.645,1802,2.211,1819,1.895,2009,3.046,2010,4.65,2014,4.3,2023,2.817,2071,2.974,2120,2.817,2161,2.508,2185,2.645,2216,2.211,2239,3.046,2240,4.65,2242,3.046,2243,3.046,2255,4.3,2262,2.067,2263,2.211,2267,2.067,2268,2.067,2269,2.067,2270,2.067,2271,2.819,2272,2.211,2371,3.606,2373,1.948,2684,1.847,2780,2.211,2781,2.394,2793,3.655,2795,3.06,2797,3.655,2812,2.211,2900,1.948,2901,3.155,2907,2.297,3005,3.046,3020,3.829,3023,4.644,3043,3.046,3044,3.046,3045,3.046,3046,3.046,3047,3.046,3067,2.394,3078,2.135,3082,3.06,3083,1.948,3084,1.895,3085,2.005,3086,2.005,3087,2.005,3103,2.135,3107,2.005,3108,2.005,3109,4.094,3110,2.005,3111,2.005,3388,2.394,3394,2.394,3395,2.645,3399,4.3,3400,2.394,3406,2.817,3407,5.836,3412,4.3,3413,2.817,3638,3.046,3643,3.046,3814,2.067,3815,2.297,3818,3.375,3819,2.067,3820,2.067,3821,2.394,3822,2.067,3823,2.394,3824,2.067,3825,2.394,3826,2.394,4507,3.046,4516,4.65,4564,3.046,4565,3.046,4566,3.046,4567,3.046,4568,3.046,4569,3.046,4570,3.046,4571,3.046,5016,2.645,5017,3.046,5018,4.65,5019,3.046,5020,3.046,5021,3.046,5022,3.395,5023,3.046,5024,6.312,5025,3.046,5026,3.395,5027,3.395,5028,3.395,5029,3.046,5030,3.395,5031,3.046,5032,3.395,5033,3.046,5034,3.046,5035,3.395,5036,3.395,5037,3.046,5038,3.046]],["title/index.html",[34,0.191,5039,4.501]],["body/index.html",[2,0.525,45,0.005,76,1.883,121,2.053,132,2.08,162,0.002,163,0.003,164,0.002,243,3.967,280,2.498,281,1.455,319,2.266,347,1.355,354,3.086,356,2.498,359,2.498,361,2.498,363,2.461,365,2.498,368,3.086,370,2.996,372,2.498,373,3.041,377,2.498,380,2.535,383,2.498,386,2.996,388,3.086,389,2.498,391,3.041,393,2.498,394,2.498,396,2.461,398,2.498,400,2.535,401,2.498,403,2.498,406,2.498,408,2.498,411,2.498,413,3.086,415,2.425,416,2.498,418,2.498,419,2.498,421,2.498,423,2.498,425,2.498,427,1.476,428,3.041,430,2.461,432,2.461,557,5.388,559,4.072,640,1.918,641,7.627,642,2.214,643,2.51,644,2.663,645,2.583,646,2.321,647,3.925,648,3.925,649,3.925,650,3.925,651,5.388,652,7.659,653,6.218,654,6.514,655,3.691,656,2.663,721,2.849,760,1.993,778,2.321,802,3.777,893,1.918,897,4.75,950,4.307,1093,7.87,1094,3.925,1095,3.925,1096,3.925,1097,5.388,1098,7.28,1286,1.849,1907,4.072,2084,5.143,2165,3.925,2166,3.925,2168,3.925,2169,3.925,2170,5.388,2199,5.388,2446,3.085,2852,5.388,2913,8.176,2914,3.925,2915,3.925,2916,3.925,2917,3.925,2918,5.682,2919,5.388,3879,3.925,3880,3.925,3881,5.388,3882,5.682,3883,5.388,3937,7.87,3938,3.925,3939,3.925,3940,3.925,3941,5.388,3973,3.925,3974,3.925,4106,6.82,4107,3.925,4108,3.925,4109,3.925,4110,5.388,4407,3.925,4913,3.925,4914,3.925,4915,3.925,5039,3.925,5040,6.25,5041,4.374,5042,4.374,5043,4.374]],["title/modules.html",[642,3.482]],["body/modules.html",[45,0.004,162,0.003,163,0.004,164,0.003,508,4.233,583,7.04,641,5.523,642,3.784,651,5.523,652,5.523,653,5.523,654,5.057,690,8.109,1093,5.825,1097,5.523,1098,5.272,2913,5.825,2919,5.523,3937,5.825,3941,5.523,4106,5.825,4110,5.523,5044,10.407,5045,10.593,5046,10.015]],["title/routes.html",[721,4.48]],["body/routes.html",[45,0.004,162,0.004,163,0.004,164,0.004,721,5.416]],["title/miscellaneous/typealiases.html",[5016,3.251,5047,6.042]],["body/miscellaneous/typealiases.html",[1,2.962,6,3.245,19,3.027,32,0.116,34,0.233,45,0.005,63,2.842,66,3.095,72,3.095,75,3.027,77,3.095,78,3.095,80,3.095,84,3.168,95,2.842,158,2.901,161,4.163,162,0.003,163,0.004,164,0.003,167,3.612,222,4.777,223,3.724,437,3.327,438,3.612,443,3.327,445,3.095,447,3.415,448,3.415,450,3.245,452,3.415,453,3.415,454,2.251,471,4.777,472,2.733,473,2.842,474,3.647,485,2.786,487,2.733,489,2.633,493,2.786,494,2.733,496,2.633,499,2.733,501,2.733,502,2.733,505,2.733,506,2.682,507,2.733,510,2.733,512,2.733,514,2.733,516,2.733,542,3.647,591,3.847,874,3.612,875,4.765,888,4.313,891,6.51,902,3.612,932,3.724,933,3.612,938,3.724,1062,3.983,1068,3.724,1075,5.308,1541,3.847,1657,3.509,2216,3.983,2262,3.724,2263,3.983,2267,3.724,2268,3.724,2269,3.724,2270,3.724,2278,5.111,2373,3.509,2780,3.983,2781,4.313,2795,3.612,2812,3.983,2815,5.797,2900,3.509,3067,4.313,3074,5.797,3078,3.847,3083,3.509,3084,3.415,3085,3.612,3086,3.612,3087,3.612,3102,5.111,3103,3.847,3107,3.612,3108,3.612,3110,3.612,3111,3.612,3119,5.111,3394,4.313,3395,4.765,3400,4.313,3404,6.51,3814,3.724,3815,4.137,3819,3.724,3820,3.724,3822,3.724,3824,3.724,3833,5.111,5016,4.765,5018,5.488,5019,5.488,5020,5.488,5021,5.488,5023,5.488,5024,5.488,5025,5.488,5029,5.488,5031,5.488,5033,5.488,5034,5.488,5037,5.488,5038,5.488,5048,6.116]]],"invertedIndex":[["",{"_index":45,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/Action.html":{},"components/ActionComponent.html":{},"classes/ActionStatus.html":{},"classes/AddActionsAppear.html":{},"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interfaces/AppState.html":{},"classes/ApplyFilter.html":{},"injectables/ArchiveEffects.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"classes/ArchiveQuerySuccess.html":{},"interfaces/ArchiveState.html":{},"components/ArchivesComponent.html":{},"modules/ArchivesModule.html":{},"modules/ArchivesRoutingModule.html":{},"classes/AuthObject.html":{},"interfaces/AuthState.html":{},"injectables/AuthenticationEffects.html":{},"interfaces/AuthenticationModeHandler.html":{},"components/BaseSettingComponent.html":{},"directives/CalcHeightDirective.html":{},"classes/Card.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"injectables/CardEffects.html":{},"interfaces/CardFeedState.html":{},"components/CardListComponent.html":{},"classes/CardOperation.html":{},"injectables/CardOperationEffects.html":{},"injectables/CardService.html":{},"interfaces/CardState.html":{},"modules/CardsModule.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckImplicitFlowAuthenticationStatus.html":{},"classes/CheckTokenResponse.html":{},"classes/ClearCard.html":{},"classes/ClearLightCardSelection.html":{},"injectables/ConfigEffects.html":{},"injectables/ConfigService.html":{},"interfaces/ConfigState.html":{},"components/ConfirmModalComponent.html":{},"classes/CreateUserApplication.html":{},"classes/CreateUserApplicationOnFailure.html":{},"classes/CreateUserApplicationOnSuccess.html":{},"components/CustomLogoComponent.html":{},"injectables/CustomRouterEffects.html":{},"classes/CustomRouterStateSerializer.html":{},"classes/DateTimeNgb.html":{},"components/DatetimeFilterComponent.html":{},"classes/DelayedLightCardUpdate.html":{},"classes/Detail.html":{},"components/DetailComponent.html":{},"classes/DetailContext.html":{},"components/DetailsComponent.html":{},"directives/DraggableDirective.html":{},"components/EmailSettingComponent.html":{},"classes/EmptyLightCards.html":{},"classes/FailToUpdateTimeReference.html":{},"components/FeedComponent.html":{},"injectables/FeedFiltersEffects.html":{},"modules/FeedModule.html":{},"modules/FeedRoutingModule.html":{},"classes/Filter.html":{},"injectables/FilterService.html":{},"components/FiltersComponent.html":{},"classes/GuidService.html":{},"classes/HandleUnexpectedError.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/HandleUnexpectedError-4.html":{},"classes/HandleUnexpectedError-5.html":{},"classes/HandleUnexpectedError-6.html":{},"injectables/HandlebarsService.html":{},"classes/I18n.html":{},"injectables/I18nService.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/ImplicitlyAuthenticated.html":{},"components/InfoComponent.html":{},"classes/InitAuthStatus.html":{},"classes/InitFilters.html":{},"classes/InitTimeline.html":{},"classes/Input.html":{},"classes/LightCard.html":{},"classes/LightCardAlreadyUpdated.html":{},"injectables/LightCardEffects.html":{},"components/ListSettingComponent.html":{},"classes/LoadArchivedCard.html":{},"classes/LoadArchivedCardFailure.html":{},"classes/LoadArchivedCardSuccess.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{},"classes/LoadConfig.html":{},"classes/LoadConfigFailure.html":{},"classes/LoadConfigSuccess.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/LoadSettings.html":{},"classes/LoadSettingsFailure.html":{},"classes/LoadSettingsSuccess.html":{},"components/LoginComponent.html":{},"classes/Map.html":{},"injectables/MenuEffects.html":{},"components/MenuLinkComponent.html":{},"interfaces/MenuState.html":{},"classes/Message.html":{},"directives/MouseWheelDirective.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"injectables/NotifyService.html":{},"classes/Page.html":{},"classes/ParameterListItem.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"classes/PatchSettings.html":{},"classes/PatchSettingsFailure.html":{},"classes/PatchSettingsSuccess.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/Process.html":{},"classes/RefreshTranslation.html":{},"classes/RejectLogIn.html":{},"classes/RemoveLightCard.html":{},"components/ResizableComponent.html":{},"classes/RouterStateUrl.html":{},"classes/SelectArchivedLightCard.html":{},"classes/SelectLightCard.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{},"classes/SendArchiveQuery.html":{},"modules/ServicesModule.html":{},"classes/SetCardDataTimeline.html":{},"components/SettingsComponent.html":{},"injectables/SettingsEffects.html":{},"interfaces/SettingsInputs.html":{},"modules/SettingsModule.html":{},"modules/SettingsRoutingModule.html":{},"injectables/SettingsService.html":{},"interfaces/SettingsState.html":{},"classes/State.html":{},"modules/StateModule.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"classes/Third.html":{},"classes/ThirdActionAlreadyLoaded.html":{},"classes/ThirdActionAlreadyUpdated.html":{},"injectables/ThirdActionService.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"modules/ThirdpartyModule.html":{},"modules/ThirdpartyRoutingModule.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"classes/ThirdsServiceMock.html":{},"classes/Tick.html":{},"classes/TickPayload.html":{},"injectables/TimeEffects.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"classes/TimeReference.html":{},"classes/TimeSpan.html":{},"interfaces/TimeState.html":{},"interfaces/TimelineState.html":{},"interceptors/TokenInjector.html":{},"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{},"interfaces/TranslationState.html":{},"classes/TranslationUpToDate.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"classes/UnAuthenticationFromImplicitFlow.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateAnActionFailure.html":{},"classes/UpdateArchiveFilter.html":{},"classes/UpdateArchivePage.html":{},"classes/UpdateTimeReference.html":{},"classes/UpdateTranslation.html":{},"classes/UpdateTranslationFailed.html":{},"classes/UpdateTranslationSuccessful.html":{},"classes/UpdatedSubscription.html":{},"classes/UselessAuthAction.html":{},"classes/User.html":{},"classes/UserApplicationNotRegistered.html":{},"classes/UserApplicationRegistered.html":{},"classes/UserContext.html":{},"injectables/UserEffects.html":{},"injectables/UserService.html":{},"interfaces/UserState.html":{},"modules/UtilitiesModule.html":{},"pipes/XAxisTickFormatPipe.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"modules.html":{},"routes.html":{},"miscellaneous/typealiases.html":{}}}],["0",{"_index":1081,"title":{},"body":{"interfaces/ArchiveState.html":{},"classes/AuthObject.html":{},"injectables/AuthenticationEffects.html":{},"interfaces/AuthenticationModeHandler.html":{},"directives/CalcHeightDirective.html":{},"interfaces/CardFeedState.html":{},"injectables/CardOperationEffects.html":{},"classes/CheckTokenResponse.html":{},"injectables/ConfigEffects.html":{},"interfaces/ConfigState.html":{},"classes/CustomRouterStateSerializer.html":{},"classes/DateTimeNgb.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"injectables/FeedFiltersEffects.html":{},"classes/Filter.html":{},"injectables/FilterService.html":{},"injectables/HandlebarsService.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/LightCard.html":{},"directives/MouseWheelDirective.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"components/ResizableComponent.html":{},"classes/RouterStateUrl.html":{},"components/TimeLineComponent.html":{},"classes/TimeSpan.html":{},"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{},"pipes/XAxisTickFormatPipe.html":{}}}],["0${value}`.slice",{"_index":2430,"title":{},"body":{"classes/DateTimeNgb.html":{}}}],["0.3.0",{"_index":4986,"title":{},"body":{"dependencies.html":{}}}],["0.3rem",{"_index":4818,"title":{},"body":{"components/TypeFilterComponent.html":{}}}],["0.5",{"_index":4571,"title":{},"body":{"classes/TimeReference.html":{},"miscellaneous/enumerations.html":{}}}],["0.5.25",{"_index":5006,"title":{},"body":{"dependencies.html":{}}}],["0.5rem",{"_index":3632,"title":{},"body":{"components/MenuLinkComponent.html":{}}}],["0.8.29",{"_index":5015,"title":{},"body":{"dependencies.html":{}}}],["1",{"_index":760,"title":{"classes/HandleUnexpectedError-1.html":{}},"body":{"modules/AppRoutingModule.html":{},"components/ArchiveListPageComponent.html":{},"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/DateTimeNgb.html":{},"components/FeedComponent.html":{},"injectables/HandlebarsService.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/LightCard.html":{},"directives/MouseWheelDirective.html":{},"components/NavbarComponent.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"classes/ThirdsServiceMock.html":{},"components/TimeLineComponent.html":{},"classes/TimeReference.html":{},"classes/TimeSpan.html":{},"miscellaneous/enumerations.html":{},"index.html":{}}}],["1.0.14",{"_index":5007,"title":{},"body":{"dependencies.html":{}}}],["1.0.9",{"_index":5001,"title":{},"body":{"dependencies.html":{}}}],["1.2.17",{"_index":4987,"title":{},"body":{"dependencies.html":{}}}],["1.9.3",{"_index":5013,"title":{},"body":{"dependencies.html":{}}}],["10",{"_index":2161,"title":{},"body":{"injectables/CardService.html":{},"classes/DateTimeNgb.html":{},"classes/TimeReference.html":{},"components/TypeFilterComponent.html":{},"miscellaneous/enumerations.html":{}}}],["10.1.0",{"_index":4994,"title":{},"body":{"dependencies.html":{}}}],["100",{"_index":633,"title":{},"body":{"components/AppComponent.html":{},"components/ArchiveListComponent.html":{},"components/CardListComponent.html":{},"components/IframeDisplayComponent.html":{}}}],["1000",{"_index":1158,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"injectables/CardService.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["11.0.1",{"_index":4991,"title":{},"body":{"dependencies.html":{}}}],["118",{"_index":5043,"title":{},"body":{"index.html":{}}}],["12",{"_index":2837,"title":{},"body":{"components/FeedComponent.html":{}}}],["14",{"_index":5040,"title":{},"body":{"index.html":{}}}],["15",{"_index":4405,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["150",{"_index":2315,"title":{},"body":{"components/CustomLogoComponent.html":{}}}],["16",{"_index":4403,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["16px",{"_index":3326,"title":{},"body":{"components/IconComponent.html":{}}}],["1m",{"_index":2909,"title":{},"body":{"injectables/FeedFiltersEffects.html":{}}}],["2",{"_index":744,"title":{"classes/HandleUnexpectedError-2.html":{}},"body":{"modules/AppRoutingModule.html":{},"injectables/CardService.html":{},"classes/DateTimeNgb.html":{},"classes/LightCard.html":{},"components/TimeLineComponent.html":{},"classes/TimeReference.html":{},"classes/TimeSpan.html":{},"miscellaneous/enumerations.html":{}}}],["2.0",{"_index":340,"title":{},"body":{"components/ActionComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"modules/ArchivesModule.html":{},"modules/ArchivesRoutingModule.html":{},"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"components/CardComponent.html":{},"components/CardListComponent.html":{},"modules/CardsModule.html":{},"classes/CheckTokenResponse.html":{},"components/CustomLogoComponent.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailsComponent.html":{},"components/FeedComponent.html":{},"modules/FeedModule.html":{},"modules/FeedRoutingModule.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"classes/ImplicitAuthenticationHandler.html":{},"components/InfoComponent.html":{},"components/MenuLinkComponent.html":{},"components/MultiFilterComponent.html":{},"components/NavbarComponent.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"components/ResizableComponent.html":{},"modules/ServicesModule.html":{},"modules/SettingsModule.html":{},"modules/SettingsRoutingModule.html":{},"modules/StateModule.html":{},"components/TagsFilterComponent.html":{},"modules/ThirdpartyModule.html":{},"modules/ThirdpartyRoutingModule.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"modules/UtilitiesModule.html":{}}}],["2.0.1",{"_index":5008,"title":{},"body":{"dependencies.html":{}}}],["2.2.0",{"_index":5003,"title":{},"body":{"dependencies.html":{}}}],["2.2.1",{"_index":4996,"title":{},"body":{"dependencies.html":{}}}],["2.24.0",{"_index":5005,"title":{},"body":{"dependencies.html":{}}}],["2.6.3",{"_index":5000,"title":{},"body":{"dependencies.html":{}}}],["200",{"_index":2318,"title":{},"body":{"components/CustomLogoComponent.html":{}}}],["2020",{"_index":331,"title":{},"body":{"components/ActionComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"modules/ArchivesModule.html":{},"modules/ArchivesRoutingModule.html":{},"components/CardComponent.html":{},"components/CardListComponent.html":{},"modules/CardsModule.html":{},"components/CustomLogoComponent.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailsComponent.html":{},"components/FeedComponent.html":{},"modules/FeedModule.html":{},"modules/FeedRoutingModule.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/MenuLinkComponent.html":{},"components/MultiFilterComponent.html":{},"components/NavbarComponent.html":{},"components/ResizableComponent.html":{},"modules/ServicesModule.html":{},"modules/SettingsModule.html":{},"modules/SettingsRoutingModule.html":{},"modules/StateModule.html":{},"components/TagsFilterComponent.html":{},"modules/ThirdpartyModule.html":{},"modules/ThirdpartyRoutingModule.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"modules/UtilitiesModule.html":{}}}],["25",{"_index":5042,"title":{},"body":{"index.html":{}}}],["2px",{"_index":4816,"title":{},"body":{"components/TypeFilterComponent.html":{}}}],["3",{"_index":2446,"title":{"classes/HandleUnexpectedError-3.html":{}},"body":{"classes/DateTimeNgb.html":{},"injectables/HandlebarsService.html":{},"classes/LightCard.html":{},"classes/TimeSpan.html":{},"index.html":{}}}],["3.6.0",{"_index":5011,"title":{},"body":{"dependencies.html":{}}}],["30",{"_index":4407,"title":{},"body":{"components/TimeLineComponent.html":{},"index.html":{}}}],["30px",{"_index":1900,"title":{},"body":{"components/CardComponent.html":{}}}],["32",{"_index":2313,"title":{},"body":{"components/CustomLogoComponent.html":{}}}],["32px",{"_index":3325,"title":{},"body":{"components/IconComponent.html":{}}}],["3600",{"_index":4569,"title":{},"body":{"classes/TimeReference.html":{},"miscellaneous/enumerations.html":{}}}],["362",{"_index":3850,"title":{},"body":{"components/ResizableComponent.html":{}}}],["38",{"_index":5041,"title":{},"body":{"index.html":{}}}],["4",{"_index":3077,"title":{"classes/HandleUnexpectedError-4.html":{}},"body":{"injectables/HandlebarsService.html":{},"components/TimeLineComponent.html":{}}}],["4.0.0",{"_index":4989,"title":{},"body":{"dependencies.html":{}}}],["4.0.14",{"_index":5002,"title":{},"body":{"dependencies.html":{}}}],["4.17.15",{"_index":5004,"title":{},"body":{"dependencies.html":{}}}],["4.3.1",{"_index":4998,"title":{},"body":{"dependencies.html":{}}}],["400px",{"_index":1889,"title":{},"body":{"components/CardComponent.html":{}}}],["401",{"_index":1589,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["404",{"_index":3461,"title":{},"body":{"injectables/LightCardEffects.html":{}}}],["48",{"_index":2123,"title":{},"body":{"injectables/CardService.html":{}}}],["5",{"_index":2236,"title":{"classes/HandleUnexpectedError-5.html":{}},"body":{"interfaces/ConfigState.html":{}}}],["5.8.1",{"_index":4988,"title":{},"body":{"dependencies.html":{}}}],["500",{"_index":1591,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["5000",{"_index":2220,"title":{},"body":{"injectables/ConfigEffects.html":{}}}],["555",{"_index":4672,"title":{},"body":{"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["5px",{"_index":1891,"title":{},"body":{"components/CardComponent.html":{}}}],["6",{"_index":2834,"title":{"classes/HandleUnexpectedError-6.html":{}},"body":{"components/FeedComponent.html":{}}}],["6.3.3",{"_index":5009,"title":{},"body":{"dependencies.html":{}}}],["60",{"_index":2120,"title":{},"body":{"injectables/CardService.html":{},"classes/TimeReference.html":{},"miscellaneous/enumerations.html":{}}}],["60000",{"_index":2877,"title":{},"body":{"injectables/FeedFiltersEffects.html":{}}}],["600000",{"_index":2133,"title":{},"body":{"injectables/CardService.html":{}}}],["64px",{"_index":3323,"title":{},"body":{"components/IconComponent.html":{}}}],["7",{"_index":2840,"title":{},"body":{"components/FeedComponent.html":{}}}],["7.1.0",{"_index":4990,"title":{},"body":{"dependencies.html":{}}}],["7.2.2",{"_index":4980,"title":{},"body":{"dependencies.html":{}}}],["7.3.7",{"_index":4982,"title":{},"body":{"dependencies.html":{}}}],["7d",{"_index":4432,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["8",{"_index":1244,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"components/TimeLineComponent.html":{}}}],["8.0.4",{"_index":4997,"title":{},"body":{"dependencies.html":{}}}],["8px",{"_index":630,"title":{},"body":{"components/AppComponent.html":{},"components/LoginComponent.html":{}}}],["90",{"_index":3389,"title":{},"body":{"components/InfoComponent.html":{}}}],["9999px",{"_index":2527,"title":{},"body":{"components/DatetimeFilterComponent.html":{}}}],["_",{"_index":1143,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"components/BaseSettingComponent.html":{},"classes/CheckTokenResponse.html":{},"injectables/FilterService.html":{},"classes/ImplicitAuthenticationHandler.html":{},"injectables/LightCardEffects.html":{},"components/NavbarComponent.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"components/TagsFilterComponent.html":{},"injectables/ThirdActionService.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{},"components/TypeFilterComponent.html":{}}}],["_.clonedeep(tmpmoment",{"_index":4499,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["_.clonedeep(value",{"_index":4457,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["_.difference(array.from(currentinputversions",{"_index":4716,"title":{},"body":{"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["_.difference(forma.tags,formb.tags).length===0",{"_index":4016,"title":{},"body":{"components/TagsFilterComponent.html":{}}}],["_.difference(formb.tags,forma.tags).length===0",{"_index":4017,"title":{},"body":{"components/TagsFilterComponent.html":{}}}],["_.difference(inputpublishers",{"_index":4701,"title":{},"body":{"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["_.difference(uncachedpublishers",{"_index":4709,"title":{},"body":{"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["_.fill(this.expandedmenu,false",{"_index":3735,"title":{},"body":{"components/NavbarComponent.html":{}}}],["_.get(oauth2conf",{"_index":1200,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["_.intersection(card.tags,status.tags).length",{"_index":3031,"title":{},"body":{"injectables/FilterService.html":{}}}],["_.isequal(forma",{"_index":1703,"title":{},"body":{"components/BaseSettingComponent.html":{},"components/TimeFilterComponent.html":{}}}],["_.isequal(forma,formb",{"_index":4802,"title":{},"body":{"components/TypeFilterComponent.html":{}}}],["_.isequal(status",{"_index":4076,"title":{},"body":{"injectables/ThirdActionService.html":{}}}],["_.isequal(thirdactionstatus",{"_index":3444,"title":{},"body":{"injectables/LightCardEffects.html":{}}}],["_defaultfilters",{"_index":3006,"title":{},"body":{"injectables/FilterService.html":{}}}],["_description",{"_index":3360,"title":{},"body":{"components/InfoComponent.html":{}}}],["_filter",{"_index":3996,"title":{},"body":{"components/TagsFilterComponent.html":{},"components/TimeFilterComponent.html":{},"components/TypeFilterComponent.html":{}}}],["_htmlcontent",{"_index":2537,"title":{},"body":{"components/DetailComponent.html":{}}}],["_i18nprefix",{"_index":1808,"title":{},"body":{"components/CardComponent.html":{},"components/DetailsComponent.html":{}}}],["_locale",{"_index":3123,"title":{},"body":{"injectables/HandlebarsService.html":{},"injectables/I18nService.html":{}}}],["_locale:string",{"_index":3277,"title":{},"body":{"injectables/I18nService.html":{}}}],["_modalservice",{"_index":306,"title":{},"body":{"components/ActionComponent.html":{}}}],["_resizesubject",{"_index":1708,"title":{},"body":{"directives/CalcHeightDirective.html":{}}}],["_selectediframeurl",{"_index":3337,"title":{},"body":{"components/IframeDisplayComponent.html":{}}}],["_thirdmenus",{"_index":3703,"title":{},"body":{"components/NavbarComponent.html":{}}}],["_time",{"_index":3361,"title":{},"body":{"components/InfoComponent.html":{}}}],["_timezone",{"_index":3268,"title":{},"body":{"injectables/I18nService.html":{}}}],["_timezone:string",{"_index":3278,"title":{},"body":{"injectables/I18nService.html":{}}}],["_username",{"_index":3362,"title":{},"body":{"components/InfoComponent.html":{}}}],["a.payload.lightcards",{"_index":2030,"title":{},"body":{"injectables/CardOperationEffects.html":{}}}],["a[key",{"_index":3261,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["above",{"_index":2888,"title":{},"body":{"injectables/FeedFiltersEffects.html":{}}}],["abstractcontrol",{"_index":2498,"title":{},"body":{"components/DatetimeFilterComponent.html":{},"components/ListSettingComponent.html":{}}}],["accept",{"_index":68,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckImplicitFlowAuthenticationStatus.html":{},"classes/ImplicitlyAuthenticated.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"classes/UnAuthenticationFromImplicitFlow.html":{},"classes/UselessAuthAction.html":{},"miscellaneous/enumerations.html":{}}}],["acceptlogin",{"_index":1,"title":{"classes/AcceptLogIn.html":{}},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"injectables/AuthenticationEffects.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckImplicitFlowAuthenticationStatus.html":{},"classes/ImplicitlyAuthenticated.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"injectables/SettingsEffects.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"classes/UnAuthenticationFromImplicitFlow.html":{},"classes/UselessAuthAction.html":{},"injectables/UserEffects.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["acceptlogin(auth",{"_index":1521,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["acceptlogin(authenticationinfo",{"_index":1509,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["acceptlogin(authinfo",{"_index":1523,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["acceptlogin(this.authservice.providepayloadforsuccessfulauthenticationfromimplicitflow",{"_index":1555,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["acceptlogout",{"_index":77,"title":{"classes/AcceptLogOut.html":{}},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"injectables/AuthenticationEffects.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckImplicitFlowAuthenticationStatus.html":{},"classes/ImplicitlyAuthenticated.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"classes/UnAuthenticationFromImplicitFlow.html":{},"classes/UselessAuthAction.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["acceptlogoutsuccess",{"_index":78,"title":{"classes/AcceptLogOutSuccess.html":{}},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"injectables/AuthenticationEffects.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckImplicitFlowAuthenticationStatus.html":{},"classes/ImplicitlyAuthenticated.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"classes/UnAuthenticationFromImplicitFlow.html":{},"classes/UselessAuthAction.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["acceptlogoutsucess",{"_index":1497,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["access_token",{"_index":1126,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["accessors",{"_index":1817,"title":{},"body":{"components/CardComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"injectables/I18nService.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/NavbarComponent.html":{},"components/TimeFilterComponent.html":{},"components/TypeFilterComponent.html":{}}}],["according",{"_index":4928,"title":{},"body":{"pipes/XAxisTickFormatPipe.html":{}}}],["accordingly",{"_index":1480,"title":{},"body":{"injectables/AuthenticationEffects.html":{},"classes/FailToUpdateTimeReference.html":{},"classes/Tick.html":{},"classes/TickPayload.html":{},"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{},"classes/UpdateTimeReference.html":{}}}],["account",{"_index":234,"title":{},"body":{"classes/Action.html":{},"classes/ActionStatus.html":{},"classes/Input.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{}}}],["accumulated",{"_index":2908,"title":{},"body":{"injectables/FeedFiltersEffects.html":{}}}],["accumulation",{"_index":2887,"title":{},"body":{"injectables/FeedFiltersEffects.html":{}}}],["action",{"_index":8,"title":{"classes/Action.html":{}},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/Action.html":{},"components/ActionComponent.html":{},"classes/ActionStatus.html":{},"classes/AddActionsAppear.html":{},"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"classes/ApplyFilter.html":{},"injectables/ArchiveEffects.html":{},"classes/ArchiveQuerySuccess.html":{},"classes/AuthObject.html":{},"injectables/AuthenticationEffects.html":{},"interfaces/AuthenticationModeHandler.html":{},"components/CardComponent.html":{},"injectables/CardEffects.html":{},"injectables/CardOperationEffects.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckImplicitFlowAuthenticationStatus.html":{},"classes/CheckTokenResponse.html":{},"classes/ClearCard.html":{},"classes/ClearLightCardSelection.html":{},"injectables/ConfigEffects.html":{},"components/ConfirmModalComponent.html":{},"classes/CreateUserApplication.html":{},"classes/CreateUserApplicationOnFailure.html":{},"classes/CreateUserApplicationOnSuccess.html":{},"injectables/CustomRouterEffects.html":{},"classes/DelayedLightCardUpdate.html":{},"components/DetailComponent.html":{},"classes/EmptyLightCards.html":{},"classes/FailToUpdateTimeReference.html":{},"injectables/FeedFiltersEffects.html":{},"injectables/FilterService.html":{},"classes/HandleUnexpectedError.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/HandleUnexpectedError-4.html":{},"classes/HandleUnexpectedError-5.html":{},"classes/HandleUnexpectedError-6.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/ImplicitlyAuthenticated.html":{},"classes/InitAuthStatus.html":{},"classes/InitFilters.html":{},"classes/InitTimeline.html":{},"classes/Input.html":{},"classes/LightCard.html":{},"classes/LightCardAlreadyUpdated.html":{},"injectables/LightCardEffects.html":{},"classes/LoadArchivedCard.html":{},"classes/LoadArchivedCardFailure.html":{},"classes/LoadArchivedCardSuccess.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{},"classes/LoadConfig.html":{},"classes/LoadConfigFailure.html":{},"classes/LoadConfigSuccess.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/LoadSettings.html":{},"classes/LoadSettingsFailure.html":{},"classes/LoadSettingsSuccess.html":{},"injectables/MenuEffects.html":{},"classes/ParameterListItem.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"classes/PatchSettings.html":{},"classes/PatchSettingsFailure.html":{},"classes/PatchSettingsSuccess.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/Process.html":{},"classes/RefreshTranslation.html":{},"classes/RejectLogIn.html":{},"classes/RemoveLightCard.html":{},"classes/SelectArchivedLightCard.html":{},"classes/SelectLightCard.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{},"classes/SendArchiveQuery.html":{},"classes/SetCardDataTimeline.html":{},"injectables/SettingsEffects.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdActionAlreadyLoaded.html":{},"classes/ThirdActionAlreadyUpdated.html":{},"injectables/ThirdActionService.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"classes/Tick.html":{},"classes/TickPayload.html":{},"injectables/TimeEffects.html":{},"components/TimeFilterComponent.html":{},"classes/TimeSpan.html":{},"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{},"classes/TranslationUpToDate.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"components/TypeFilterComponent.html":{},"classes/UnAuthenticationFromImplicitFlow.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateAnActionFailure.html":{},"classes/UpdateArchiveFilter.html":{},"classes/UpdateArchivePage.html":{},"classes/UpdateTimeReference.html":{},"classes/UpdateTranslation.html":{},"classes/UpdateTranslationFailed.html":{},"classes/UpdateTranslationSuccessful.html":{},"classes/UpdatedSubscription.html":{},"classes/UselessAuthAction.html":{},"classes/UserApplicationNotRegistered.html":{},"classes/UserApplicationRegistered.html":{},"injectables/UserEffects.html":{},"miscellaneous/enumerations.html":{}}}],["action'},{'name",{"_index":353,"title":{},"body":{"components/ActionComponent.html":{},"components/AppComponent.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/ConfirmModalComponent.html":{},"components/CustomLogoComponent.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MenuLinkComponent.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/ResizableComponent.html":{},"components/SettingsComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{}}}],["action(null",{"_index":221,"title":{},"body":{"classes/Action.html":{},"classes/ActionStatus.html":{},"classes/Input.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{}}}],["action).pipe",{"_index":4079,"title":{},"body":{"injectables/ThirdActionService.html":{}}}],["action.buttonstyle",{"_index":2631,"title":{},"body":{"components/DetailComponent.html":{}}}],["action.buttonstyle.split",{"_index":2632,"title":{},"body":{"components/DetailComponent.html":{}}}],["action.component.html",{"_index":293,"title":{},"body":{"components/ActionComponent.html":{}}}],["action.component.scss",{"_index":291,"title":{},"body":{"components/ActionComponent.html":{}}}],["action.contentstyle",{"_index":2634,"title":{},"body":{"components/DetailComponent.html":{}}}],["action.contentstyle.split",{"_index":2635,"title":{},"body":{"components/DetailComponent.html":{}}}],["action.key",{"_index":4083,"title":{},"body":{"injectables/ThirdActionService.html":{}}}],["action.label.key",{"_index":328,"title":{},"body":{"components/ActionComponent.html":{}}}],["action.payload",{"_index":903,"title":{},"body":{"injectables/ArchiveEffects.html":{},"injectables/AuthenticationEffects.html":{},"injectables/UserEffects.html":{}}}],["action.payload.actionkey",{"_index":3435,"title":{},"body":{"injectables/LightCardEffects.html":{}}}],["action.payload.actions",{"_index":3451,"title":{},"body":{"injectables/LightCardEffects.html":{}}}],["action.payload.card",{"_index":3425,"title":{},"body":{"injectables/LightCardEffects.html":{}}}],["action.payload.cardid",{"_index":3433,"title":{},"body":{"injectables/LightCardEffects.html":{}}}],["action.payload.event.url.indexof(\"/archives/cards/\")>=0",{"_index":2349,"title":{},"body":{"injectables/CustomRouterEffects.html":{}}}],["action.payload.event.url.indexof(\"/feed",{"_index":2345,"title":{},"body":{"injectables/CustomRouterEffects.html":{}}}],["action.payload.event.url.indexof(\"/feed/cards/\")>=0",{"_index":2356,"title":{},"body":{"injectables/CustomRouterEffects.html":{}}}],["action.payload.event.url.indexof(\"/thirdparty/\")>=0",{"_index":2359,"title":{},"body":{"injectables/CustomRouterEffects.html":{}}}],["action.payload.id",{"_index":3453,"title":{},"body":{"injectables/LightCardEffects.html":{}}}],["action.payload.menu_entry_id",{"_index":3597,"title":{},"body":{"injectables/MenuEffects.html":{}}}],["action.payload.menu_version",{"_index":3596,"title":{},"body":{"injectables/MenuEffects.html":{}}}],["action.payload.routerstate",{"_index":2351,"title":{},"body":{"injectables/CustomRouterEffects.html":{}}}],["action.payload.routerstate.url.indexof(\"/feed/cards/\")>=0",{"_index":2344,"title":{},"body":{"injectables/CustomRouterEffects.html":{}}}],["action.payload.settings.defaulttags",{"_index":2863,"title":{},"body":{"injectables/FeedFiltersEffects.html":{}}}],["action.payload.settings.defaulttags.length>0",{"_index":2862,"title":{},"body":{"injectables/FeedFiltersEffects.html":{}}}],["action.payload.user",{"_index":4878,"title":{},"body":{"injectables/UserEffects.html":{}}}],["action.payload.versions",{"_index":4626,"title":{},"body":{"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["action.service",{"_index":321,"title":{},"body":{"components/ActionComponent.html":{},"modules/ServicesModule.html":{}}}],["action.service.ts",{"_index":4045,"title":{},"body":{"injectables/ThirdActionService.html":{}}}],["action.service.ts:104",{"_index":4067,"title":{},"body":{"injectables/ThirdActionService.html":{}}}],["action.service.ts:122",{"_index":4063,"title":{},"body":{"injectables/ThirdActionService.html":{}}}],["action.service.ts:33",{"_index":4051,"title":{},"body":{"injectables/ThirdActionService.html":{}}}],["action.service.ts:40",{"_index":4060,"title":{},"body":{"injectables/ThirdActionService.html":{}}}],["action.service.ts:49",{"_index":4065,"title":{},"body":{"injectables/ThirdActionService.html":{}}}],["action.service.ts:65",{"_index":4058,"title":{},"body":{"injectables/ThirdActionService.html":{}}}],["action.service.ts:80",{"_index":4055,"title":{},"body":{"injectables/ThirdActionService.html":{}}}],["action.updatestatebeforeaction",{"_index":4099,"title":{},"body":{"injectables/ThirdActionService.html":{}}}],["actioncomponent",{"_index":280,"title":{"components/ActionComponent.html":{}},"body":{"components/ActionComponent.html":{},"components/AppComponent.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"modules/CardsModule.html":{},"components/ConfirmModalComponent.html":{},"components/CustomLogoComponent.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MenuLinkComponent.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/ResizableComponent.html":{},"components/SettingsComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"index.html":{}}}],["actionid",{"_index":2558,"title":{},"body":{"components/DetailComponent.html":{}}}],["actionkey",{"_index":536,"title":{},"body":{"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"classes/ClearLightCardSelection.html":{},"classes/DelayedLightCardUpdate.html":{},"classes/EmptyLightCards.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/LightCardAlreadyUpdated.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/RemoveLightCard.html":{},"classes/SelectLightCard.html":{},"classes/ThirdActionAlreadyLoaded.html":{},"classes/ThirdActionAlreadyUpdated.html":{},"injectables/ThirdActionService.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateAnActionFailure.html":{},"classes/UpdatedSubscription.html":{}}}],["actionreducermap",{"_index":800,"title":{},"body":{"interfaces/AppState.html":{}}}],["actions",{"_index":88,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/Action.html":{},"classes/ActionStatus.html":{},"classes/AddActionsAppear.html":{},"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"injectables/ArchiveEffects.html":{},"injectables/AuthenticationEffects.html":{},"components/CardComponent.html":{},"injectables/CardEffects.html":{},"injectables/CardOperationEffects.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckImplicitFlowAuthenticationStatus.html":{},"classes/ClearCard.html":{},"classes/ClearLightCardSelection.html":{},"injectables/ConfigEffects.html":{},"injectables/CustomRouterEffects.html":{},"classes/DelayedLightCardUpdate.html":{},"classes/EmptyLightCards.html":{},"injectables/FeedFiltersEffects.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/ImplicitlyAuthenticated.html":{},"classes/InitAuthStatus.html":{},"classes/Input.html":{},"classes/LightCard.html":{},"classes/LightCardAlreadyUpdated.html":{},"injectables/LightCardEffects.html":{},"classes/LoadArchivedCard.html":{},"classes/LoadArchivedCardFailure.html":{},"classes/LoadArchivedCardSuccess.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"injectables/MenuEffects.html":{},"classes/ParameterListItem.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/Process.html":{},"classes/RejectLogIn.html":{},"classes/RemoveLightCard.html":{},"classes/SelectLightCard.html":{},"injectables/SettingsEffects.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdActionAlreadyLoaded.html":{},"classes/ThirdActionAlreadyUpdated.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"injectables/TimeEffects.html":{},"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"classes/UnAuthenticationFromImplicitFlow.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateAnActionFailure.html":{},"classes/UpdatedSubscription.html":{},"classes/UselessAuthAction.html":{},"injectables/UserEffects.html":{},"miscellaneous/enumerations.html":{}}}],["actions/archive.actions",{"_index":939,"title":{},"body":{"injectables/ArchiveEffects.html":{}}}],["actions?:map",{"_index":3410,"title":{},"body":{"classes/LightCard.html":{},"classes/TimeSpan.html":{}}}],["actionsappear",{"_index":1809,"title":{},"body":{"components/CardComponent.html":{},"interfaces/CardState.html":{}}}],["actionservice",{"_index":304,"title":{},"body":{"components/ActionComponent.html":{}}}],["actionstatus",{"_index":224,"title":{"classes/ActionStatus.html":{}},"body":{"classes/Action.html":{},"classes/ActionStatus.html":{},"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"classes/ClearLightCardSelection.html":{},"classes/DelayedLightCardUpdate.html":{},"classes/EmptyLightCards.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/Input.html":{},"classes/LightCardAlreadyUpdated.html":{},"injectables/LightCardEffects.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/RemoveLightCard.html":{},"classes/SelectLightCard.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdActionAlreadyLoaded.html":{},"classes/ThirdActionAlreadyUpdated.html":{},"injectables/ThirdActionService.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateAnActionFailure.html":{},"classes/UpdatedSubscription.html":{}}}],["actionstatus(null",{"_index":226,"title":{},"body":{"classes/Action.html":{},"classes/ActionStatus.html":{},"classes/Input.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{}}}],["actionsurlpath",{"_index":1810,"title":{},"body":{"components/CardComponent.html":{}}}],["actiontype",{"_index":169,"title":{},"body":{"classes/Action.html":{},"classes/ActionStatus.html":{},"classes/Input.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"miscellaneous/enumerations.html":{}}}],["actionurl",{"_index":4046,"title":{},"body":{"injectables/ThirdActionService.html":{}}}],["actionurlpath",{"_index":299,"title":{},"body":{"components/ActionComponent.html":{}}}],["activate",{"_index":2685,"title":{},"body":{"components/DetailsComponent.html":{}}}],["activatedroutesnapshot",{"_index":2386,"title":{},"body":{"classes/CustomRouterStateSerializer.html":{},"classes/RouterStateUrl.html":{}}}],["active",{"_index":887,"title":{},"body":{"classes/ApplyFilter.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"injectables/FeedFiltersEffects.html":{},"classes/Filter.html":{},"classes/InitFilters.html":{},"components/TagsFilterComponent.html":{},"components/TimeFilterComponent.html":{},"components/TypeFilterComponent.html":{}}}],["active:boolean",{"_index":2993,"title":{},"body":{"classes/Filter.html":{}}}],["active_from_param",{"_index":975,"title":{},"body":{"components/ArchiveFiltersComponent.html":{},"miscellaneous/enumerations.html":{}}}],["active_to_param",{"_index":977,"title":{},"body":{"components/ArchiveFiltersComponent.html":{},"miscellaneous/enumerations.html":{}}}],["activedetail",{"_index":2680,"title":{},"body":{"components/DetailsComponent.html":{}}}],["activedetail.length",{"_index":2686,"title":{},"body":{"components/DetailsComponent.html":{}}}],["activefrom",{"_index":976,"title":{},"body":{"components/ArchiveFiltersComponent.html":{},"miscellaneous/enumerations.html":{}}}],["activeto",{"_index":978,"title":{},"body":{"components/ArchiveFiltersComponent.html":{},"miscellaneous/enumerations.html":{}}}],["actual_component",{"_index":434,"title":{},"body":{"components/ActionComponent.html":{},"components/AppComponent.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/ConfirmModalComponent.html":{},"components/CustomLogoComponent.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MenuLinkComponent.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/ResizableComponent.html":{},"components/SettingsComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{}}}],["actualizedaction",{"_index":3445,"title":{},"body":{"injectables/LightCardEffects.html":{}}}],["add",{"_index":459,"title":{},"body":{"classes/AddActionsAppear.html":{},"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"classes/CardOperation.html":{},"classes/ClearCard.html":{},"classes/ClearLightCardSelection.html":{},"classes/DelayedLightCardUpdate.html":{},"classes/EmptyLightCards.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/LightCardAlreadyUpdated.html":{},"classes/LoadArchivedCard.html":{},"classes/LoadArchivedCardFailure.html":{},"classes/LoadArchivedCardSuccess.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/RemoveLightCard.html":{},"classes/SelectLightCard.html":{},"classes/ThirdActionAlreadyLoaded.html":{},"classes/ThirdActionAlreadyUpdated.html":{},"components/TimeLineComponent.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateAnActionFailure.html":{},"classes/UpdatedSubscription.html":{},"miscellaneous/enumerations.html":{}}}],["addactionsappear",{"_index":437,"title":{"classes/AddActionsAppear.html":{}},"body":{"classes/AddActionsAppear.html":{},"components/CardComponent.html":{},"components/CardListComponent.html":{},"classes/ClearCard.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/LoadArchivedCard.html":{},"classes/LoadArchivedCardFailure.html":{},"classes/LoadArchivedCardSuccess.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["addactionsappear(this.lightcard.id",{"_index":1873,"title":{},"body":{"components/CardComponent.html":{}}}],["addactionsappear(urlparts[3",{"_index":2007,"title":{},"body":{"components/CardListComponent.html":{}}}],["addauthheadersifnecessary",{"_index":4590,"title":{},"body":{"interceptors/TokenInjector.html":{}}}],["addauthheadersifnecessary(request",{"_index":4594,"title":{},"body":{"interceptors/TokenInjector.html":{}}}],["added",{"_index":1959,"title":{},"body":{"interfaces/CardFeedState.html":{},"injectables/CardOperationEffects.html":{},"interfaces/TimelineState.html":{}}}],["adding",{"_index":4380,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["addlightcardfailure",{"_index":472,"title":{"classes/AddLightCardFailure.html":{}},"body":{"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"injectables/CardOperationEffects.html":{},"classes/ClearLightCardSelection.html":{},"classes/DelayedLightCardUpdate.html":{},"classes/EmptyLightCards.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/LightCardAlreadyUpdated.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/RemoveLightCard.html":{},"classes/SelectLightCard.html":{},"classes/ThirdActionAlreadyLoaded.html":{},"classes/ThirdActionAlreadyUpdated.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateAnActionFailure.html":{},"classes/UpdatedSubscription.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["addlightcardfailure({error",{"_index":2056,"title":{},"body":{"injectables/CardOperationEffects.html":{}}}],["adds",{"_index":503,"title":{},"body":{"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"classes/ClearLightCardSelection.html":{},"classes/DelayedLightCardUpdate.html":{},"classes/EmptyLightCards.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/LightCardAlreadyUpdated.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/RemoveLightCard.html":{},"classes/SelectLightCard.html":{},"classes/ThirdActionAlreadyLoaded.html":{},"classes/ThirdActionAlreadyUpdated.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateAnActionFailure.html":{},"classes/UpdatedSubscription.html":{},"miscellaneous/enumerations.html":{}}}],["addthirdactions",{"_index":502,"title":{"classes/AddThirdActions.html":{}},"body":{"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"classes/ClearLightCardSelection.html":{},"classes/DelayedLightCardUpdate.html":{},"classes/EmptyLightCards.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/LightCardAlreadyUpdated.html":{},"injectables/LightCardEffects.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/RemoveLightCard.html":{},"classes/SelectLightCard.html":{},"classes/ThirdActionAlreadyLoaded.html":{},"classes/ThirdActionAlreadyUpdated.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateAnActionFailure.html":{},"classes/UpdatedSubscription.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["addthirdactions({card",{"_index":3459,"title":{},"body":{"injectables/LightCardEffects.html":{}}}],["administrator",{"_index":2319,"title":{},"body":{"components/CustomLogoComponent.html":{}}}],["af.payload.name",{"_index":2060,"title":{},"body":{"injectables/CardOperationEffects.html":{}}}],["af.payload.status.end",{"_index":2064,"title":{},"body":{"injectables/CardOperationEffects.html":{}}}],["afterviewinit",{"_index":2659,"title":{},"body":{"components/DetailsComponent.html":{},"components/FeedComponent.html":{},"components/ResizableComponent.html":{}}}],["ahead",{"_index":424,"title":{},"body":{"components/ActionComponent.html":{},"components/AppComponent.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/ConfirmModalComponent.html":{},"components/CustomLogoComponent.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"modules/FeedModule.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MenuLinkComponent.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/ResizableComponent.html":{},"components/SettingsComponent.html":{},"modules/SettingsModule.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"dependencies.html":{}}}],["aims",{"_index":107,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckImplicitFlowAuthenticationStatus.html":{},"classes/ImplicitlyAuthenticated.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"classes/UnAuthenticationFromImplicitFlow.html":{},"classes/UselessAuthAction.html":{}}}],["alarm",{"_index":3020,"title":{},"body":{"injectables/FilterService.html":{},"classes/LightCard.html":{},"classes/TimeSpan.html":{},"components/TypeFilterComponent.html":{},"miscellaneous/enumerations.html":{}}}],["alert('submitted",{"_index":1704,"title":{},"body":{"components/BaseSettingComponent.html":{}}}],["alert(`${actionid",{"_index":2644,"title":{},"body":{"components/DetailComponent.html":{}}}],["aliases",{"_index":5048,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["align",{"_index":1901,"title":{},"body":{"components/CardComponent.html":{}}}],["allowed",{"_index":1748,"title":{},"body":{"directives/CalcHeightDirective.html":{}}}],["allows",{"_index":634,"title":{},"body":{"components/AppComponent.html":{}}}],["already",{"_index":517,"title":{},"body":{"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"classes/ClearLightCardSelection.html":{},"classes/DelayedLightCardUpdate.html":{},"classes/EmptyLightCards.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/LightCardAlreadyUpdated.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/RefreshTranslation.html":{},"classes/RemoveLightCard.html":{},"classes/SelectLightCard.html":{},"modules/ServicesModule.html":{},"classes/ThirdActionAlreadyLoaded.html":{},"classes/ThirdActionAlreadyUpdated.html":{},"classes/TranslationUpToDate.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateAnActionFailure.html":{},"classes/UpdateTranslation.html":{},"classes/UpdateTranslationFailed.html":{},"classes/UpdateTranslationSuccessful.html":{},"classes/UpdatedSubscription.html":{},"injectables/UserEffects.html":{},"miscellaneous/enumerations.html":{}}}],["always",{"_index":2402,"title":{},"body":{"classes/CustomRouterStateSerializer.html":{},"classes/RouterStateUrl.html":{}}}],["angular",{"_index":58,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"modules/AppModule.html":{},"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckImplicitFlowAuthenticationStatus.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/ImplicitlyAuthenticated.html":{},"classes/InitAuthStatus.html":{},"components/LoginComponent.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"classes/UnAuthenticationFromImplicitFlow.html":{},"classes/UselessAuthAction.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["angular/animations",{"_index":4979,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk",{"_index":4981,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":668,"title":{},"body":{"modules/AppModule.html":{},"modules/ArchivesModule.html":{},"modules/CardsModule.html":{},"modules/FeedModule.html":{},"components/IconComponent.html":{},"modules/ServicesModule.html":{},"modules/SettingsModule.html":{},"modules/StateModule.html":{},"modules/ThirdpartyModule.html":{},"modules/UtilitiesModule.html":{},"dependencies.html":{}}}],["angular/common/http",{"_index":664,"title":{},"body":{"modules/AppModule.html":{},"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"injectables/CardService.html":{},"classes/CheckTokenResponse.html":{},"injectables/ConfigService.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"modules/ServicesModule.html":{},"injectables/SettingsService.html":{},"injectables/ThirdActionService.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"interceptors/TokenInjector.html":{},"injectables/UserService.html":{}}}],["angular/compiler",{"_index":4983,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":315,"title":{},"body":{"components/ActionComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/ArchiveEffects.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"modules/ArchivesModule.html":{},"modules/ArchivesRoutingModule.html":{},"classes/AuthObject.html":{},"injectables/AuthenticationEffects.html":{},"interfaces/AuthenticationModeHandler.html":{},"components/BaseSettingComponent.html":{},"directives/CalcHeightDirective.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"injectables/CardEffects.html":{},"components/CardListComponent.html":{},"injectables/CardOperationEffects.html":{},"injectables/CardService.html":{},"modules/CardsModule.html":{},"classes/CheckTokenResponse.html":{},"injectables/ConfigEffects.html":{},"injectables/ConfigService.html":{},"components/ConfirmModalComponent.html":{},"components/CustomLogoComponent.html":{},"injectables/CustomRouterEffects.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"directives/DraggableDirective.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"injectables/FeedFiltersEffects.html":{},"modules/FeedModule.html":{},"modules/FeedRoutingModule.html":{},"injectables/FilterService.html":{},"components/FiltersComponent.html":{},"classes/GuidService.html":{},"injectables/HandlebarsService.html":{},"injectables/I18nService.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"classes/ImplicitAuthenticationHandler.html":{},"components/InfoComponent.html":{},"injectables/LightCardEffects.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"injectables/MenuEffects.html":{},"components/MenuLinkComponent.html":{},"directives/MouseWheelDirective.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"injectables/NotifyService.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"components/ResizableComponent.html":{},"modules/ServicesModule.html":{},"components/SettingsComponent.html":{},"injectables/SettingsEffects.html":{},"interfaces/SettingsInputs.html":{},"modules/SettingsModule.html":{},"modules/SettingsRoutingModule.html":{},"injectables/SettingsService.html":{},"modules/StateModule.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"injectables/ThirdActionService.html":{},"modules/ThirdpartyModule.html":{},"modules/ThirdpartyRoutingModule.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"injectables/TimeEffects.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"interceptors/TokenInjector.html":{},"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"injectables/UserEffects.html":{},"injectables/UserService.html":{},"modules/UtilitiesModule.html":{},"pipes/XAxisTickFormatPipe.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":671,"title":{},"body":{"modules/AppModule.html":{},"components/ArchiveFiltersComponent.html":{},"modules/ArchivesModule.html":{},"components/BaseSettingComponent.html":{},"components/DatetimeFilterComponent.html":{},"components/EmailSettingComponent.html":{},"modules/FeedModule.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"modules/SettingsModule.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TypeFilterComponent.html":{},"dependencies.html":{}}}],["angular/http",{"_index":4984,"title":{},"body":{"dependencies.html":{}}}],["angular/platform",{"_index":582,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CustomLogoComponent.html":{},"components/DetailComponent.html":{},"components/IframeDisplayComponent.html":{},"dependencies.html":{}}}],["angular/router",{"_index":722,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/ArchivesRoutingModule.html":{},"injectables/AuthenticationEffects.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"classes/CustomRouterStateSerializer.html":{},"modules/FeedRoutingModule.html":{},"injectables/MenuEffects.html":{},"classes/RouterStateUrl.html":{},"modules/SettingsRoutingModule.html":{},"modules/ThirdpartyRoutingModule.html":{},"dependencies.html":{}}}],["another",{"_index":1761,"title":{},"body":{"directives/CalcHeightDirective.html":{},"components/ConfirmModalComponent.html":{}}}],["anyway",{"_index":2261,"title":{},"body":{"components/ConfirmModalComponent.html":{}}}],["api",{"_index":4186,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["apiversion",{"_index":4208,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["app",{"_index":567,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/AuthenticationEffects.html":{},"components/NavbarComponent.html":{}}}],["app.component",{"_index":676,"title":{},"body":{"modules/AppModule.html":{}}}],["app.component.html",{"_index":548,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.scss",{"_index":547,"title":{},"body":{"components/AppComponent.html":{}}}],["app/modules/utilities/components/resizable/resizable.component",{"_index":2004,"title":{},"body":{"components/CardListComponent.html":{},"components/DetailsComponent.html":{}}}],["appcomponent",{"_index":354,"title":{"components/AppComponent.html":{}},"body":{"components/ActionComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/ConfirmModalComponent.html":{},"components/CustomLogoComponent.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MenuLinkComponent.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/ResizableComponent.html":{},"components/SettingsComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"index.html":{}}}],["appdraggable",{"_index":2698,"title":{},"body":{"directives/DraggableDirective.html":{}}}],["appdraggable]'},{'name",{"_index":431,"title":{},"body":{"components/ActionComponent.html":{},"components/AppComponent.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/ConfirmModalComponent.html":{},"components/CustomLogoComponent.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MenuLinkComponent.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/ResizableComponent.html":{},"components/SettingsComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{}}}],["appear",{"_index":460,"title":{},"body":{"classes/AddActionsAppear.html":{},"classes/ClearCard.html":{},"directives/DraggableDirective.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/LoadArchivedCard.html":{},"classes/LoadArchivedCardFailure.html":{},"classes/LoadArchivedCardSuccess.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{},"miscellaneous/enumerations.html":{}}}],["appeffects",{"_index":867,"title":{},"body":{"interfaces/AppState.html":{},"modules/StateModule.html":{}}}],["application",{"_index":564,"title":{},"body":{"components/AppComponent.html":{},"classes/AuthObject.html":{},"injectables/AuthenticationEffects.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/CreateUserApplication.html":{},"classes/CreateUserApplicationOnFailure.html":{},"classes/CreateUserApplicationOnSuccess.html":{},"classes/FailToUpdateTimeReference.html":{},"classes/HandleUnexpectedError-6.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"classes/Tick.html":{},"classes/TickPayload.html":{},"injectables/TimeEffects.html":{},"classes/UpdateTimeReference.html":{},"classes/UserApplicationNotRegistered.html":{},"classes/UserApplicationRegistered.html":{},"injectables/UserEffects.html":{},"miscellaneous/enumerations.html":{}}}],["application/x",{"_index":1240,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["applied",{"_index":3626,"title":{},"body":{"components/MenuLinkComponent.html":{}}}],["applies",{"_index":2990,"title":{},"body":{"classes/Filter.html":{}}}],["apply",{"_index":1537,"title":{},"body":{"injectables/AuthenticationEffects.html":{},"directives/CalcHeightDirective.html":{},"interfaces/CardFeedState.html":{},"classes/Filter.html":{}}}],["applyfilter",{"_index":874,"title":{"classes/ApplyFilter.html":{}},"body":{"classes/ApplyFilter.html":{},"injectables/CardOperationEffects.html":{},"injectables/FeedFiltersEffects.html":{},"classes/Filter.html":{},"classes/InitFilters.html":{},"components/TagsFilterComponent.html":{},"components/TimeFilterComponent.html":{},"components/TypeFilterComponent.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["applyfilter(card",{"_index":2979,"title":{},"body":{"classes/Filter.html":{}}}],["applyfilter({name:filtertype.tag_filter,active:true,status:{tags:v",{"_index":2871,"title":{},"body":{"injectables/FeedFiltersEffects.html":{}}}],["appmetareducers",{"_index":870,"title":{},"body":{"interfaces/AppState.html":{}}}],["appmodule",{"_index":641,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules/ServicesModule.html":{},"index.html":{},"modules.html":{}}}],["appmousewheel",{"_index":433,"title":{},"body":{"components/ActionComponent.html":{},"components/AppComponent.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/ConfirmModalComponent.html":{},"components/CustomLogoComponent.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MenuLinkComponent.html":{},"directives/MouseWheelDirective.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/ResizableComponent.html":{},"components/SettingsComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{}}}],["appreducer",{"_index":868,"title":{},"body":{"interfaces/AppState.html":{},"modules/StateModule.html":{}}}],["appropriate",{"_index":1352,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["approutingmodule",{"_index":651,"title":{"modules/AppRoutingModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"index.html":{},"modules.html":{}}}],["appstate",{"_index":585,"title":{"interfaces/AppState.html":{}},"body":{"components/AppComponent.html":{},"interfaces/AppState.html":{},"injectables/ArchiveEffects.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"classes/AuthObject.html":{},"injectables/AuthenticationEffects.html":{},"interfaces/AuthenticationModeHandler.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"injectables/CardEffects.html":{},"components/CardListComponent.html":{},"injectables/CardOperationEffects.html":{},"classes/CheckTokenResponse.html":{},"injectables/ConfigEffects.html":{},"injectables/ConfigService.html":{},"injectables/CustomRouterEffects.html":{},"components/DetailComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"injectables/FeedFiltersEffects.html":{},"components/FiltersComponent.html":{},"injectables/HandlebarsService.html":{},"injectables/I18nService.html":{},"components/IframeDisplayComponent.html":{},"classes/ImplicitAuthenticationHandler.html":{},"components/InfoComponent.html":{},"injectables/LightCardEffects.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"injectables/MenuEffects.html":{},"components/MenuLinkComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"components/SettingsComponent.html":{},"injectables/SettingsEffects.html":{},"interfaces/SettingsInputs.html":{},"injectables/SettingsService.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"injectables/ThirdActionService.html":{},"injectables/TimeEffects.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"injectables/UserEffects.html":{}}}],["archive",{"_index":357,"title":{},"body":{"components/ActionComponent.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"interfaces/AppState.html":{},"injectables/ArchiveEffects.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"classes/ArchiveQuerySuccess.html":{},"components/ArchivesComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/ConfirmModalComponent.html":{},"components/CustomLogoComponent.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"classes/HandleUnexpectedError.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MenuLinkComponent.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/ResizableComponent.html":{},"classes/SelectArchivedLightCard.html":{},"classes/SendArchiveQuery.html":{},"components/SettingsComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"classes/UpdateArchiveFilter.html":{},"classes/UpdateArchivePage.html":{},"miscellaneous/enumerations.html":{}}}],["archive.filters.{{filterpath",{"_index":2523,"title":{},"body":{"components/DatetimeFilterComponent.html":{},"components/MultiFilterComponent.html":{}}}],["archive.search",{"_index":1011,"title":{},"body":{"components/ArchiveFiltersComponent.html":{}}}],["archiveactions",{"_index":1075,"title":{},"body":{"classes/ArchiveQuerySuccess.html":{},"classes/HandleUnexpectedError.html":{},"classes/SelectArchivedLightCard.html":{},"classes/SendArchiveQuery.html":{},"classes/UpdateArchiveFilter.html":{},"classes/UpdateArchivePage.html":{},"miscellaneous/typealiases.html":{}}}],["archiveactiontypes",{"_index":931,"title":{},"body":{"injectables/ArchiveEffects.html":{},"classes/ArchiveQuerySuccess.html":{},"classes/HandleUnexpectedError.html":{},"classes/SelectArchivedLightCard.html":{},"classes/SendArchiveQuery.html":{},"classes/UpdateArchiveFilter.html":{},"classes/UpdateArchivePage.html":{},"miscellaneous/enumerations.html":{}}}],["archiveactiontypes.archivequerysuccess",{"_index":1065,"title":{},"body":{"classes/ArchiveQuerySuccess.html":{},"classes/HandleUnexpectedError.html":{},"classes/SelectArchivedLightCard.html":{},"classes/SendArchiveQuery.html":{},"classes/UpdateArchiveFilter.html":{},"classes/UpdateArchivePage.html":{}}}],["archiveactiontypes.handleunexpectederror",{"_index":1071,"title":{},"body":{"classes/ArchiveQuerySuccess.html":{},"classes/HandleUnexpectedError.html":{},"classes/SelectArchivedLightCard.html":{},"classes/SendArchiveQuery.html":{},"classes/UpdateArchiveFilter.html":{},"classes/UpdateArchivePage.html":{}}}],["archiveactiontypes.selectarchivedlightcard",{"_index":1074,"title":{},"body":{"classes/ArchiveQuerySuccess.html":{},"classes/HandleUnexpectedError.html":{},"classes/SelectArchivedLightCard.html":{},"classes/SendArchiveQuery.html":{},"classes/UpdateArchiveFilter.html":{},"classes/UpdateArchivePage.html":{}}}],["archiveactiontypes.sendarchivequery",{"_index":1070,"title":{},"body":{"classes/ArchiveQuerySuccess.html":{},"classes/HandleUnexpectedError.html":{},"classes/SelectArchivedLightCard.html":{},"classes/SendArchiveQuery.html":{},"classes/UpdateArchiveFilter.html":{},"classes/UpdateArchivePage.html":{}}}],["archiveactiontypes.updatearchivefilter",{"_index":1069,"title":{},"body":{"classes/ArchiveQuerySuccess.html":{},"classes/HandleUnexpectedError.html":{},"classes/SelectArchivedLightCard.html":{},"classes/SendArchiveQuery.html":{},"classes/UpdateArchiveFilter.html":{},"classes/UpdateArchivePage.html":{}}}],["archiveactiontypes.updatearchivepage",{"_index":1073,"title":{},"body":{"classes/ArchiveQuerySuccess.html":{},"classes/HandleUnexpectedError.html":{},"classes/SelectArchivedLightCard.html":{},"classes/SendArchiveQuery.html":{},"classes/UpdateArchiveFilter.html":{},"classes/UpdateArchivePage.html":{}}}],["archived",{"_index":451,"title":{},"body":{"classes/AddActionsAppear.html":{},"classes/ArchiveQuerySuccess.html":{},"classes/ClearCard.html":{},"classes/HandleUnexpectedError.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/LoadArchivedCard.html":{},"classes/LoadArchivedCardFailure.html":{},"classes/LoadArchivedCardSuccess.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{},"classes/SelectArchivedLightCard.html":{},"classes/SendArchiveQuery.html":{},"classes/UpdateArchiveFilter.html":{},"classes/UpdateArchivePage.html":{},"miscellaneous/enumerations.html":{}}}],["archiveeffects",{"_index":855,"title":{"injectables/ArchiveEffects.html":{}},"body":{"interfaces/AppState.html":{},"injectables/ArchiveEffects.html":{}}}],["archivefilterscomponent",{"_index":356,"title":{"components/ArchiveFiltersComponent.html":{}},"body":{"components/ActionComponent.html":{},"components/AppComponent.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"modules/ArchivesModule.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/ConfirmModalComponent.html":{},"components/CustomLogoComponent.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MenuLinkComponent.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/ResizableComponent.html":{},"components/SettingsComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"index.html":{}}}],["archiveform",{"_index":945,"title":{},"body":{"components/ArchiveFiltersComponent.html":{}}}],["archiveinitialstate",{"_index":1079,"title":{},"body":{"interfaces/ArchiveState.html":{}}}],["archivelistcomponent",{"_index":359,"title":{"components/ArchiveListComponent.html":{}},"body":{"components/ActionComponent.html":{},"components/AppComponent.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"modules/ArchivesModule.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/ConfirmModalComponent.html":{},"components/CustomLogoComponent.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MenuLinkComponent.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/ResizableComponent.html":{},"components/SettingsComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"index.html":{}}}],["archivelistpagecomponent",{"_index":361,"title":{"components/ArchiveListPageComponent.html":{}},"body":{"components/ActionComponent.html":{},"components/AppComponent.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"modules/ArchivesModule.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/ConfirmModalComponent.html":{},"components/CustomLogoComponent.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MenuLinkComponent.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/ResizableComponent.html":{},"components/SettingsComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"index.html":{}}}],["archivepath",{"_index":725,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["archivequerysuccess",{"_index":932,"title":{"classes/ArchiveQuerySuccess.html":{}},"body":{"injectables/ArchiveEffects.html":{},"classes/ArchiveQuerySuccess.html":{},"classes/HandleUnexpectedError.html":{},"classes/SelectArchivedLightCard.html":{},"classes/SendArchiveQuery.html":{},"classes/UpdateArchiveFilter.html":{},"classes/UpdateArchivePage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["archivequerysuccess({resultpage",{"_index":908,"title":{},"body":{"injectables/ArchiveEffects.html":{}}}],["archivereducer",{"_index":829,"title":{},"body":{"interfaces/AppState.html":{}}}],["archives",{"_index":726,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/ArchivesComponent.html":{},"modules/ArchivesModule.html":{}}}],["archives'},{'name",{"_index":364,"title":{},"body":{"components/ActionComponent.html":{},"components/AppComponent.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/ConfirmModalComponent.html":{},"components/CustomLogoComponent.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MenuLinkComponent.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/ResizableComponent.html":{},"components/SettingsComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{}}}],["archives.component",{"_index":1102,"title":{},"body":{"modules/ArchivesModule.html":{},"modules/ArchivesRoutingModule.html":{}}}],["archives.component.html",{"_index":1084,"title":{},"body":{"components/ArchivesComponent.html":{}}}],["archives.component.scss",{"_index":1083,"title":{},"body":{"components/ArchivesComponent.html":{}}}],["archivescomponent",{"_index":363,"title":{"components/ArchivesComponent.html":{}},"body":{"components/ActionComponent.html":{},"components/AppComponent.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"modules/ArchivesModule.html":{},"modules/ArchivesRoutingModule.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/ConfirmModalComponent.html":{},"components/CustomLogoComponent.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MenuLinkComponent.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/ResizableComponent.html":{},"components/SettingsComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"index.html":{}}}],["archivesmodule",{"_index":1093,"title":{"modules/ArchivesModule.html":{}},"body":{"modules/ArchivesModule.html":{},"index.html":{},"modules.html":{}}}],["archivesroutingmodule",{"_index":1097,"title":{"modules/ArchivesRoutingModule.html":{}},"body":{"modules/ArchivesModule.html":{},"modules/ArchivesRoutingModule.html":{},"index.html":{},"modules.html":{}}}],["archivestate",{"_index":782,"title":{"interfaces/ArchiveState.html":{}},"body":{"interfaces/AppState.html":{},"interfaces/ArchiveState.html":{}}}],["archivesurl",{"_index":2074,"title":{},"body":{"injectables/CardService.html":{}}}],["args",{"_index":3222,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["args[0].split(args[1",{"_index":3224,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["args[0].split(args[1])[args[2",{"_index":3225,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["args[2",{"_index":3234,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["arguments",{"_index":2711,"title":{},"body":{"directives/DraggableDirective.html":{},"classes/Filter.html":{},"directives/MouseWheelDirective.html":{}}}],["array",{"_index":2573,"title":{},"body":{"components/DetailComponent.html":{},"injectables/FeedFiltersEffects.html":{},"components/TimeLineComponent.html":{},"interfaces/TimelineState.html":{}}}],["array(menus.length",{"_index":3734,"title":{},"body":{"components/NavbarComponent.html":{}}}],["array.from(actions.entries",{"_index":1881,"title":{},"body":{"components/CardComponent.html":{}}}],["array.from(calcelements",{"_index":1782,"title":{},"body":{"directives/CalcHeightDirective.html":{}}}],["array.from(currentcachedversions",{"_index":4717,"title":{},"body":{"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["array.from(fixedelements",{"_index":1770,"title":{},"body":{"directives/CalcHeightDirective.html":{}}}],["array.from(versions.values()).map(version",{"_index":4648,"title":{},"body":{"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["arrow::after",{"_index":4822,"title":{},"body":{"components/TypeFilterComponent.html":{}}}],["ask",{"_index":1161,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["askcreateuser",{"_index":4898,"title":{},"body":{"injectables/UserService.html":{}}}],["askcreateuser(userdata",{"_index":4901,"title":{},"body":{"injectables/UserService.html":{}}}],["askfori18njson",{"_index":4216,"title":{},"body":{"injectables/ThirdsService.html":{}}}],["askfori18njson(publisher",{"_index":4179,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["askforoauthaccesstoken",{"_index":1398,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["asktokenfromcode(code",{"_index":1257,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["asktokenfrompassword(login",{"_index":1271,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["asktokenurl",{"_index":1162,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["askuserapplicationregistered",{"_index":4899,"title":{},"body":{"injectables/UserService.html":{}}}],["askuserapplicationregistered(user",{"_index":4903,"title":{},"body":{"injectables/UserService.html":{}}}],["assets/styles/_variables.scss",{"_index":3331,"title":{},"body":{"components/IconComponent.html":{},"components/TypeFilterComponent.html":{}}}],["assignconfigurationproperties(oauth2conf",{"_index":1198,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["async",{"_index":1056,"title":{},"body":{"components/ArchiveListPageComponent.html":{},"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["attachaction",{"_index":2541,"title":{},"body":{"components/DetailComponent.html":{}}}],["attachaction(button",{"_index":2556,"title":{},"body":{"components/DetailComponent.html":{}}}],["attempt",{"_index":71,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"injectables/AuthenticationEffects.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckImplicitFlowAuthenticationStatus.html":{},"classes/ImplicitlyAuthenticated.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"classes/UnAuthenticationFromImplicitFlow.html":{},"classes/UselessAuthAction.html":{},"miscellaneous/enumerations.html":{}}}],["attribute",{"_index":231,"title":{},"body":{"classes/Action.html":{},"classes/ActionStatus.html":{},"classes/Input.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{}}}],["auth",{"_index":1292,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["auth.firstname",{"_index":1288,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["auth.lastname",{"_index":1290,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["authenticate",{"_index":1564,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["authenticated",{"_index":1554,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["authentication",{"_index":12,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"interfaces/AppState.html":{},"classes/AuthObject.html":{},"injectables/AuthenticationEffects.html":{},"interfaces/AuthenticationModeHandler.html":{},"injectables/CardOperationEffects.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckImplicitFlowAuthenticationStatus.html":{},"classes/CheckTokenResponse.html":{},"classes/ClearLightCardSelection.html":{},"classes/DelayedLightCardUpdate.html":{},"classes/EmptyLightCards.html":{},"injectables/FeedFiltersEffects.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/ImplicitlyAuthenticated.html":{},"classes/InitAuthStatus.html":{},"classes/LightCardAlreadyUpdated.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/RemoveLightCard.html":{},"classes/SelectLightCard.html":{},"classes/ThirdActionAlreadyLoaded.html":{},"classes/ThirdActionAlreadyUpdated.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"classes/UnAuthenticationFromImplicitFlow.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateAnActionFailure.html":{},"classes/UpdatedSubscription.html":{},"classes/UselessAuthAction.html":{},"miscellaneous/enumerations.html":{}}}],["authentication.reducer.ts",{"_index":26,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckImplicitFlowAuthenticationStatus.html":{},"classes/ImplicitlyAuthenticated.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"classes/UnAuthenticationFromImplicitFlow.html":{},"classes/UselessAuthAction.html":{}}}],["authentication/authentication.service",{"_index":2106,"title":{},"body":{"injectables/CardService.html":{},"modules/ServicesModule.html":{},"interceptors/TokenInjector.html":{}}}],["authenticationactions",{"_index":161,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"injectables/AuthenticationEffects.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckImplicitFlowAuthenticationStatus.html":{},"classes/ImplicitlyAuthenticated.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"classes/UnAuthenticationFromImplicitFlow.html":{},"classes/UselessAuthAction.html":{},"miscellaneous/typealiases.html":{}}}],["authenticationactiontypes",{"_index":62,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"injectables/AuthenticationEffects.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckImplicitFlowAuthenticationStatus.html":{},"classes/ImplicitlyAuthenticated.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"classes/UnAuthenticationFromImplicitFlow.html":{},"classes/UselessAuthAction.html":{},"injectables/UserEffects.html":{},"miscellaneous/enumerations.html":{}}}],["authenticationactiontypes.acceptlogin",{"_index":31,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckImplicitFlowAuthenticationStatus.html":{},"classes/ImplicitlyAuthenticated.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"classes/UnAuthenticationFromImplicitFlow.html":{},"classes/UselessAuthAction.html":{}}}],["authenticationactiontypes.acceptlogout",{"_index":153,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"injectables/AuthenticationEffects.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckImplicitFlowAuthenticationStatus.html":{},"classes/ImplicitlyAuthenticated.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"classes/UnAuthenticationFromImplicitFlow.html":{},"classes/UselessAuthAction.html":{}}}],["authenticationactiontypes.acceptlogoutsuccess",{"_index":155,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckImplicitFlowAuthenticationStatus.html":{},"classes/ImplicitlyAuthenticated.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"classes/UnAuthenticationFromImplicitFlow.html":{},"classes/UselessAuthAction.html":{}}}],["authenticationactiontypes.checkauthenticationstatus",{"_index":116,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"injectables/AuthenticationEffects.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckImplicitFlowAuthenticationStatus.html":{},"classes/ImplicitlyAuthenticated.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"classes/UnAuthenticationFromImplicitFlow.html":{},"classes/UselessAuthAction.html":{}}}],["authenticationactiontypes.checkimplicitflowauthenticationstatus",{"_index":156,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckImplicitFlowAuthenticationStatus.html":{},"classes/ImplicitlyAuthenticated.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"classes/UnAuthenticationFromImplicitFlow.html":{},"classes/UselessAuthAction.html":{}}}],["authenticationactiontypes.implicitallyauthenticated",{"_index":159,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckImplicitFlowAuthenticationStatus.html":{},"classes/ImplicitlyAuthenticated.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"classes/UnAuthenticationFromImplicitFlow.html":{},"classes/UselessAuthAction.html":{}}}],["authenticationactiontypes.initauthstatus",{"_index":111,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckImplicitFlowAuthenticationStatus.html":{},"classes/ImplicitlyAuthenticated.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"classes/UnAuthenticationFromImplicitFlow.html":{},"classes/UselessAuthAction.html":{}}}],["authenticationactiontypes.rejectlogin",{"_index":145,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"injectables/AuthenticationEffects.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckImplicitFlowAuthenticationStatus.html":{},"classes/ImplicitlyAuthenticated.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"classes/UnAuthenticationFromImplicitFlow.html":{},"classes/UselessAuthAction.html":{}}}],["authenticationactiontypes.trytologin",{"_index":129,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"injectables/AuthenticationEffects.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckImplicitFlowAuthenticationStatus.html":{},"classes/ImplicitlyAuthenticated.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"classes/UnAuthenticationFromImplicitFlow.html":{},"classes/UselessAuthAction.html":{}}}],["authenticationactiontypes.trytologout",{"_index":135,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"injectables/AuthenticationEffects.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckImplicitFlowAuthenticationStatus.html":{},"classes/ImplicitlyAuthenticated.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"classes/UnAuthenticationFromImplicitFlow.html":{},"classes/UselessAuthAction.html":{}}}],["authenticationactiontypes.unauthenticationfromimplicitflow",{"_index":160,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckImplicitFlowAuthenticationStatus.html":{},"classes/ImplicitlyAuthenticated.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"classes/UnAuthenticationFromImplicitFlow.html":{},"classes/UselessAuthAction.html":{}}}],["authenticationactiontypes.uselessauthaction",{"_index":157,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckImplicitFlowAuthenticationStatus.html":{},"classes/ImplicitlyAuthenticated.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"classes/UnAuthenticationFromImplicitFlow.html":{},"classes/UselessAuthAction.html":{}}}],["authenticationeffect",{"_index":140,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckImplicitFlowAuthenticationStatus.html":{},"classes/ImplicitlyAuthenticated.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"classes/UnAuthenticationFromImplicitFlow.html":{},"classes/UselessAuthAction.html":{}}}],["authenticationeffects",{"_index":15,"title":{"injectables/AuthenticationEffects.html":{}},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"interfaces/AppState.html":{},"injectables/AuthenticationEffects.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckImplicitFlowAuthenticationStatus.html":{},"classes/ImplicitlyAuthenticated.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"classes/UnAuthenticationFromImplicitFlow.html":{},"classes/UselessAuthAction.html":{}}}],["authenticationguard",{"_index":731,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/ArchivesRoutingModule.html":{},"modules/FeedRoutingModule.html":{},"modules/SettingsRoutingModule.html":{}}}],["authenticationmodehandler",{"_index":1174,"title":{"interfaces/AuthenticationModeHandler.html":{}},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["authenticationreducer",{"_index":798,"title":{},"body":{"interfaces/AppState.html":{}}}],["authenticationservice",{"_index":559,"title":{},"body":{"components/AppComponent.html":{},"classes/AuthObject.html":{},"injectables/AuthenticationEffects.html":{},"interfaces/AuthenticationModeHandler.html":{},"injectables/CardService.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"components/LoginComponent.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"modules/ServicesModule.html":{},"interceptors/TokenInjector.html":{},"injectables/UserEffects.html":{},"index.html":{}}}],["authentificated",{"_index":4873,"title":{},"body":{"injectables/UserEffects.html":{}}}],["authinfo",{"_index":1517,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["authinitialstate",{"_index":1466,"title":{},"body":{"interfaces/AuthState.html":{}}}],["authmodehandler",{"_index":1173,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["authobject",{"_index":1123,"title":{"classes/AuthObject.html":{}},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["authorization",{"_index":1357,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["authorization_code",{"_index":1263,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["authservice",{"_index":1473,"title":{},"body":{"injectables/AuthenticationEffects.html":{},"injectables/CardService.html":{},"interceptors/TokenInjector.html":{},"injectables/UserEffects.html":{}}}],["authstate",{"_index":783,"title":{"interfaces/AuthState.html":{}},"body":{"interfaces/AppState.html":{},"interfaces/AuthState.html":{}}}],["authstate.firstname",{"_index":2591,"title":{},"body":{"components/DetailComponent.html":{}}}],["authstate.identifier",{"_index":2589,"title":{},"body":{"components/DetailComponent.html":{}}}],["authstate.lastname",{"_index":2592,"title":{},"body":{"components/DetailComponent.html":{}}}],["authstate.token",{"_index":2590,"title":{},"body":{"components/DetailComponent.html":{}}}],["auto",{"_index":1034,"title":{},"body":{"components/ArchiveListComponent.html":{},"components/CardListComponent.html":{},"components/DetailsComponent.html":{}}}],["autoscale",{"_index":4412,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["available",{"_index":508,"title":{},"body":{"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"components/AppComponent.html":{},"directives/CalcHeightDirective.html":{},"classes/ClearLightCardSelection.html":{},"classes/DelayedLightCardUpdate.html":{},"classes/EmptyLightCards.html":{},"classes/HandleUnexpectedError-3.html":{},"components/IframeDisplayComponent.html":{},"classes/LightCardAlreadyUpdated.html":{},"injectables/LightCardEffects.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/RemoveLightCard.html":{},"components/ResizableComponent.html":{},"classes/SelectLightCard.html":{},"classes/ThirdActionAlreadyLoaded.html":{},"classes/ThirdActionAlreadyUpdated.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateAnActionFailure.html":{},"classes/UpdatedSubscription.html":{},"miscellaneous/enumerations.html":{},"modules.html":{}}}],["availableheight",{"_index":1779,"title":{},"body":{"directives/CalcHeightDirective.html":{}}}],["availableheight}px",{"_index":1785,"title":{},"body":{"directives/CalcHeightDirective.html":{}}}],["avoid",{"_index":4673,"title":{},"body":{"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["await",{"_index":1349,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["axis",{"_index":2943,"title":{},"body":{"modules/FeedModule.html":{},"pipes/XAxisTickFormatPipe.html":{}}}],["b[key",{"_index":3262,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["back",{"_index":763,"title":{},"body":{"modules/AppRoutingModule.html":{},"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"injectables/MenuEffects.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["background",{"_index":4821,"title":{},"body":{"components/TypeFilterComponent.html":{}}}],["backwardconf",{"_index":4425,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["badge",{"_index":1899,"title":{},"body":{"components/CardComponent.html":{}}}],["base",{"_index":366,"title":{},"body":{"components/ActionComponent.html":{},"components/AppComponent.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/ConfirmModalComponent.html":{},"components/CustomLogoComponent.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MenuLinkComponent.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/ResizableComponent.html":{},"components/SettingsComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{}}}],["base64",{"_index":2295,"title":{},"body":{"components/CustomLogoComponent.html":{}}}],["based",{"_index":1750,"title":{},"body":{"directives/CalcHeightDirective.html":{}}}],["basehref",{"_index":3315,"title":{},"body":{"components/IconComponent.html":{}}}],["basehref?basehref:'/')+'assets/images/icons",{"_index":3318,"title":{},"body":{"components/IconComponent.html":{}}}],["basemoment.add(computedoffsetduration",{"_index":4562,"title":{},"body":{"classes/TimeReference.html":{}}}],["basemoment=moment(this.virtualtime",{"_index":4559,"title":{},"body":{"classes/TimeReference.html":{}}}],["basemoment=ref",{"_index":4561,"title":{},"body":{"classes/TimeReference.html":{}}}],["basesettingcomponent",{"_index":365,"title":{"components/BaseSettingComponent.html":{}},"body":{"components/ActionComponent.html":{},"components/AppComponent.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/ConfirmModalComponent.html":{},"components/CustomLogoComponent.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MenuLinkComponent.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/ResizableComponent.html":{},"components/SettingsComponent.html":{},"modules/SettingsModule.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"index.html":{}}}],["basesettingcomponent:27",{"_index":2752,"title":{},"body":{"components/EmailSettingComponent.html":{},"components/ListSettingComponent.html":{},"components/MultiSettingsComponent.html":{},"components/TextSettingComponent.html":{},"components/TypeAheadSettingsComponent.html":{}}}],["basesettingcomponent:28",{"_index":2750,"title":{},"body":{"components/EmailSettingComponent.html":{},"components/ListSettingComponent.html":{},"components/MultiSettingsComponent.html":{},"components/TextSettingComponent.html":{},"components/TypeAheadSettingsComponent.html":{}}}],["basesettingcomponent:29",{"_index":2751,"title":{},"body":{"components/EmailSettingComponent.html":{},"components/ListSettingComponent.html":{},"components/MultiSettingsComponent.html":{},"components/TextSettingComponent.html":{},"components/TypeAheadSettingsComponent.html":{}}}],["basesettingcomponent:30",{"_index":2767,"title":{},"body":{"components/EmailSettingComponent.html":{},"components/ListSettingComponent.html":{},"components/MultiSettingsComponent.html":{},"components/TextSettingComponent.html":{},"components/TypeAheadSettingsComponent.html":{}}}],["basesettingcomponent:31",{"_index":2769,"title":{},"body":{"components/EmailSettingComponent.html":{},"components/ListSettingComponent.html":{},"components/MultiSettingsComponent.html":{},"components/TextSettingComponent.html":{},"components/TypeAheadSettingsComponent.html":{}}}],["basesettingcomponent:32",{"_index":2768,"title":{},"body":{"components/EmailSettingComponent.html":{},"components/ListSettingComponent.html":{},"components/MultiSettingsComponent.html":{},"components/TextSettingComponent.html":{},"components/TypeAheadSettingsComponent.html":{}}}],["basesettingcomponent:33",{"_index":2766,"title":{},"body":{"components/EmailSettingComponent.html":{},"components/ListSettingComponent.html":{},"components/MultiSettingsComponent.html":{},"components/TextSettingComponent.html":{},"components/TypeAheadSettingsComponent.html":{}}}],["basesettingcomponent:34",{"_index":2765,"title":{},"body":{"components/EmailSettingComponent.html":{},"components/ListSettingComponent.html":{},"components/MultiSettingsComponent.html":{},"components/TextSettingComponent.html":{},"components/TypeAheadSettingsComponent.html":{}}}],["basesettingcomponent:40",{"_index":2762,"title":{},"body":{"components/EmailSettingComponent.html":{},"components/ListSettingComponent.html":{},"components/MultiSettingsComponent.html":{},"components/TextSettingComponent.html":{},"components/TypeAheadSettingsComponent.html":{}}}],["basesettingcomponent:70",{"_index":2761,"title":{},"body":{"components/EmailSettingComponent.html":{},"components/ListSettingComponent.html":{},"components/MultiSettingsComponent.html":{},"components/TextSettingComponent.html":{},"components/TypeAheadSettingsComponent.html":{}}}],["basesettingcomponent:75",{"_index":2764,"title":{},"body":{"components/EmailSettingComponent.html":{},"components/ListSettingComponent.html":{},"components/MultiSettingsComponent.html":{},"components/TextSettingComponent.html":{},"components/TypeAheadSettingsComponent.html":{}}}],["basesettingcomponent:79",{"_index":2759,"title":{},"body":{"components/EmailSettingComponent.html":{},"components/ListSettingComponent.html":{},"components/MultiSettingsComponent.html":{},"components/TextSettingComponent.html":{},"components/TypeAheadSettingsComponent.html":{}}}],["basesettingcomponent:83",{"_index":2757,"title":{},"body":{"components/EmailSettingComponent.html":{},"components/ListSettingComponent.html":{},"components/MultiSettingsComponent.html":{},"components/TextSettingComponent.html":{},"components/TypeAheadSettingsComponent.html":{}}}],["basesettingcomponent:88",{"_index":2758,"title":{},"body":{"components/EmailSettingComponent.html":{},"components/ListSettingComponent.html":{},"components/MultiSettingsComponent.html":{},"components/TextSettingComponent.html":{},"components/TypeAheadSettingsComponent.html":{}}}],["basesettingcomponent:94",{"_index":2760,"title":{},"body":{"components/EmailSettingComponent.html":{},"components/ListSettingComponent.html":{},"components/MultiSettingsComponent.html":{},"components/TextSettingComponent.html":{},"components/TypeAheadSettingsComponent.html":{}}}],["basesettingcomponent:98",{"_index":2763,"title":{},"body":{"components/EmailSettingComponent.html":{},"components/ListSettingComponent.html":{},"components/MultiSettingsComponent.html":{},"components/TextSettingComponent.html":{},"components/TypeAheadSettingsComponent.html":{}}}],["basesettings",{"_index":1623,"title":{},"body":{"components/BaseSettingComponent.html":{},"components/EmailSettingComponent.html":{},"components/ListSettingComponent.html":{},"components/MultiSettingsComponent.html":{},"components/TextSettingComponent.html":{},"components/TypeAheadSettingsComponent.html":{}}}],["basically",{"_index":4183,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["bearer",{"_index":1358,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["bearing",{"_index":1757,"title":{},"body":{"directives/CalcHeightDirective.html":{}}}],["beat",{"_index":2800,"title":{},"body":{"classes/FailToUpdateTimeReference.html":{},"classes/Tick.html":{},"classes/TickPayload.html":{},"injectables/TimeEffects.html":{},"classes/UpdateTimeReference.html":{}}}],["before",{"_index":4583,"title":{},"body":{"interfaces/TimelineState.html":{}}}],["behaviour",{"_index":2960,"title":{},"body":{"classes/Filter.html":{}}}],["being",{"_index":2138,"title":{},"body":{"injectables/CardService.html":{}}}],["best",{"_index":4920,"title":{},"body":{"modules/UtilitiesModule.html":{}}}],["beware",{"_index":1264,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/Filter.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["big",{"_index":3322,"title":{},"body":{"components/IconComponent.html":{}}}],["bindactions",{"_index":2542,"title":{},"body":{"components/DetailComponent.html":{}}}],["bindactions(third",{"_index":2560,"title":{},"body":{"components/DetailComponent.html":{}}}],["block",{"_index":2736,"title":{},"body":{"directives/DraggableDirective.html":{},"components/InfoComponent.html":{}}}],["body",{"_index":637,"title":{},"body":{"components/AppComponent.html":{},"components/TypeFilterComponent.html":{}}}],["boolean",{"_index":173,"title":{},"body":{"classes/Action.html":{},"classes/ActionStatus.html":{},"components/AppComponent.html":{},"classes/ApplyFilter.html":{},"components/ArchiveFiltersComponent.html":{},"interfaces/ArchiveState.html":{},"classes/AuthObject.html":{},"interfaces/AuthState.html":{},"interfaces/AuthenticationModeHandler.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"interfaces/CardFeedState.html":{},"components/CardListComponent.html":{},"interfaces/CardState.html":{},"classes/CheckTokenResponse.html":{},"interfaces/ConfigState.html":{},"components/CustomLogoComponent.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"classes/Filter.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/InitFilters.html":{},"classes/Input.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MenuLinkComponent.html":{},"interfaces/MenuState.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"injectables/NotifyService.html":{},"classes/ParameterListItem.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"classes/Process.html":{},"components/ResizableComponent.html":{},"components/SettingsComponent.html":{},"interfaces/SettingsInputs.html":{},"interfaces/SettingsState.html":{},"classes/State.html":{},"components/TextSettingComponent.html":{},"classes/Third.html":{},"injectables/ThirdActionService.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"components/TimeLineComponent.html":{},"classes/TimeReference.html":{},"interfaces/TimelineState.html":{},"interfaces/TranslationState.html":{},"components/TypeAheadSettingsComponent.html":{},"interfaces/UserState.html":{},"miscellaneous/enumerations.html":{}}}],["bootstrap",{"_index":319,"title":{},"body":{"components/ActionComponent.html":{},"modules/AppModule.html":{},"components/ArchiveFiltersComponent.html":{},"modules/ArchivesModule.html":{},"modules/CardsModule.html":{},"components/ConfirmModalComponent.html":{},"classes/DateTimeNgb.html":{},"modules/FeedModule.html":{},"modules/ServicesModule.html":{},"modules/SettingsModule.html":{},"modules/StateModule.html":{},"injectables/ThirdActionService.html":{},"modules/ThirdpartyModule.html":{},"modules/UtilitiesModule.html":{},"dependencies.html":{},"index.html":{}}}],["bootstrap/ng",{"_index":318,"title":{},"body":{"components/ActionComponent.html":{},"modules/AppModule.html":{},"components/ArchiveFiltersComponent.html":{},"modules/ArchivesModule.html":{},"modules/CardsModule.html":{},"components/ConfirmModalComponent.html":{},"classes/DateTimeNgb.html":{},"modules/FeedModule.html":{},"injectables/ThirdActionService.html":{},"dependencies.html":{}}}],["border",{"_index":1018,"title":{},"body":{"components/ArchiveFiltersComponent.html":{},"components/CardComponent.html":{},"components/IframeDisplayComponent.html":{},"components/TypeFilterComponent.html":{}}}],["both",{"_index":2959,"title":{},"body":{"classes/Filter.html":{},"components/MenuLinkComponent.html":{}}}],["bottom",{"_index":1890,"title":{},"body":{"components/CardComponent.html":{}}}],["break",{"_index":1411,"title":{},"body":{"classes/AuthObject.html":{},"injectables/AuthenticationEffects.html":{},"interfaces/AuthenticationModeHandler.html":{},"components/CardComponent.html":{},"classes/CheckTokenResponse.html":{},"injectables/HandlebarsService.html":{},"components/IconComponent.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/LightCard.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"injectables/ThirdActionService.html":{},"classes/TimeSpan.html":{}}}],["breaks",{"_index":774,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["bright",{"_index":3295,"title":{},"body":{"components/IconComponent.html":{}}}],["bright:string",{"_index":3311,"title":{},"body":{"components/IconComponent.html":{}}}],["browse",{"_index":5045,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":583,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CustomLogoComponent.html":{},"components/DetailComponent.html":{},"components/IframeDisplayComponent.html":{},"dependencies.html":{},"modules.html":{}}}],["browser/animations",{"_index":662,"title":{},"body":{"modules/AppModule.html":{}}}],["browseranimationsmodule",{"_index":661,"title":{},"body":{"modules/AppModule.html":{}}}],["browsermodule",{"_index":659,"title":{},"body":{"modules/AppModule.html":{}}}],["browsers",{"_index":3853,"title":{},"body":{"components/ResizableComponent.html":{}}}],["btn",{"_index":3537,"title":{},"body":{"components/LoginComponent.html":{}}}],["bubble",{"_index":3413,"title":{},"body":{"classes/LightCard.html":{},"classes/TimeSpan.html":{},"miscellaneous/enumerations.html":{}}}],["bug",{"_index":4496,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["build",{"_index":1176,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"injectables/UserService.html":{}}}],["buildconfigselector",{"_index":593,"title":{},"body":{"components/AppComponent.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListPageComponent.html":{},"classes/AuthObject.html":{},"injectables/AuthenticationEffects.html":{},"interfaces/AuthenticationModeHandler.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"classes/CheckTokenResponse.html":{},"components/FeedComponent.html":{},"injectables/FeedFiltersEffects.html":{},"components/FiltersComponent.html":{},"classes/ImplicitAuthenticationHandler.html":{},"components/LoginComponent.html":{},"components/MenuLinkComponent.html":{},"components/NavbarComponent.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"components/SettingsComponent.html":{},"interfaces/SettingsInputs.html":{},"components/TimeLineComponent.html":{}}}],["buildfilterselector",{"_index":2903,"title":{},"body":{"injectables/FeedFiltersEffects.html":{},"components/TagsFilterComponent.html":{},"components/TimeFilterComponent.html":{},"components/TypeFilterComponent.html":{}}}],["buildsettingsorconfigselector",{"_index":3170,"title":{},"body":{"injectables/HandlebarsService.html":{},"injectables/I18nService.html":{},"components/InfoComponent.html":{}}}],["buildsettingsselector",{"_index":1659,"title":{},"body":{"components/BaseSettingComponent.html":{},"components/InfoComponent.html":{}}}],["business",{"_index":1477,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["business_start",{"_index":1869,"title":{},"body":{"components/CardComponent.html":{}}}],["button",{"_index":126,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"components/AppComponent.html":{},"injectables/AuthenticationEffects.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckImplicitFlowAuthenticationStatus.html":{},"components/DetailComponent.html":{},"classes/ImplicitlyAuthenticated.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"classes/UnAuthenticationFromImplicitFlow.html":{},"classes/UselessAuthAction.html":{}}}],["button.addeventlistener('click",{"_index":2643,"title":{},"body":{"components/DetailComponent.html":{}}}],["button.attributes['action",{"_index":2626,"title":{},"body":{"components/DetailComponent.html":{}}}],["button.children[0].classlist.add('fa",{"_index":2637,"title":{},"body":{"components/DetailComponent.html":{}}}],["button.children[0].classlist.add(c",{"_index":2636,"title":{},"body":{"components/DetailComponent.html":{}}}],["button.children[0].textcontent",{"_index":2641,"title":{},"body":{"components/DetailComponent.html":{}}}],["button.classlist.add('btn",{"_index":2630,"title":{},"body":{"components/DetailComponent.html":{}}}],["button.classlist.add(c",{"_index":2633,"title":{},"body":{"components/DetailComponent.html":{}}}],["buttons",{"_index":1877,"title":{},"body":{"components/CardComponent.html":{},"components/DetailComponent.html":{}}}],["buttonstyle",{"_index":174,"title":{},"body":{"classes/Action.html":{},"classes/ActionStatus.html":{},"classes/Input.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{}}}],["buttontitle",{"_index":4423,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["c",{"_index":330,"title":{},"body":{"components/ActionComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"modules/ArchivesModule.html":{},"modules/ArchivesRoutingModule.html":{},"components/CardComponent.html":{},"components/CardListComponent.html":{},"modules/CardsModule.html":{},"components/CustomLogoComponent.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/FeedComponent.html":{},"modules/FeedModule.html":{},"modules/FeedRoutingModule.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/MenuLinkComponent.html":{},"components/MultiFilterComponent.html":{},"components/NavbarComponent.html":{},"components/ResizableComponent.html":{},"modules/ServicesModule.html":{},"modules/SettingsModule.html":{},"modules/SettingsRoutingModule.html":{},"modules/StateModule.html":{},"components/TagsFilterComponent.html":{},"modules/ThirdpartyModule.html":{},"modules/ThirdpartyRoutingModule.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"modules/UtilitiesModule.html":{}}}],["cachedpublishers",{"_index":4698,"title":{},"body":{"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["cachedpublishersforversionverification",{"_index":4707,"title":{},"body":{"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["cachedpublishersforversionverification.foreach(third",{"_index":4710,"title":{},"body":{"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["cachedversions",{"_index":4695,"title":{},"body":{"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["cachedversions[third",{"_index":4714,"title":{},"body":{"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["calc",{"_index":1030,"title":{},"body":{"components/ArchiveListComponent.html":{},"components/CardListComponent.html":{},"components/DetailsComponent.html":{},"modules/UtilitiesModule.html":{}}}],["calcelements",{"_index":1765,"title":{},"body":{"directives/CalcHeightDirective.html":{}}}],["calcheight",{"_index":1709,"title":{},"body":{"directives/CalcHeightDirective.html":{}}}],["calcheight(parentid",{"_index":1723,"title":{},"body":{"directives/CalcHeightDirective.html":{}}}],["calcheightclass",{"_index":1710,"title":{},"body":{"directives/CalcHeightDirective.html":{}}}],["calcheightdirective",{"_index":428,"title":{"directives/CalcHeightDirective.html":{}},"body":{"components/ActionComponent.html":{},"components/AppComponent.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseSettingComponent.html":{},"directives/CalcHeightDirective.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/ConfirmModalComponent.html":{},"components/CustomLogoComponent.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MenuLinkComponent.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/ResizableComponent.html":{},"components/SettingsComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"modules/UtilitiesModule.html":{},"index.html":{}}}],["calcheightdirective]'},{'name",{"_index":429,"title":{},"body":{"components/ActionComponent.html":{},"components/AppComponent.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/ConfirmModalComponent.html":{},"components/CustomLogoComponent.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MenuLinkComponent.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/ResizableComponent.html":{},"components/SettingsComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{}}}],["calculate",{"_index":1775,"title":{},"body":{"directives/CalcHeightDirective.html":{}}}],["calculated",{"_index":1755,"title":{},"body":{"directives/CalcHeightDirective.html":{},"components/ResizableComponent.html":{}}}],["calculation",{"_index":1752,"title":{},"body":{"directives/CalcHeightDirective.html":{}}}],["call",{"_index":1226,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["call.pipe",{"_index":1276,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["called",{"_index":123,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/Action.html":{},"classes/ActionStatus.html":{},"injectables/AuthenticationEffects.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckImplicitFlowAuthenticationStatus.html":{},"classes/ImplicitlyAuthenticated.html":{},"classes/InitAuthStatus.html":{},"classes/Input.html":{},"components/ListSettingComponent.html":{},"classes/ParameterListItem.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/Process.html":{},"classes/RejectLogIn.html":{},"classes/State.html":{},"components/TextSettingComponent.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"classes/UnAuthenticationFromImplicitFlow.html":{},"classes/UselessAuthAction.html":{}}}],["calling",{"_index":752,"title":{},"body":{"modules/AppRoutingModule.html":{},"injectables/AuthenticationEffects.html":{},"directives/CalcHeightDirective.html":{}}}],["callmodalandhandleresponse",{"_index":4047,"title":{},"body":{"injectables/ThirdActionService.html":{}}}],["callmodalandhandleresponse(modalservice",{"_index":4052,"title":{},"body":{"injectables/ThirdActionService.html":{}}}],["callmodalifnecessary",{"_index":4048,"title":{},"body":{"injectables/ThirdActionService.html":{}}}],["callmodalifnecessary(lightcardid",{"_index":4057,"title":{},"body":{"injectables/ThirdActionService.html":{}}}],["canactivate",{"_index":730,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/ArchivesRoutingModule.html":{},"modules/FeedRoutingModule.html":{},"modules/SettingsRoutingModule.html":{}}}],["cancel",{"_index":2242,"title":{},"body":{"components/ConfirmModalComponent.html":{},"miscellaneous/enumerations.html":{}}}],["cancel,ok,dismiss",{"_index":2256,"title":{},"body":{"components/ConfirmModalComponent.html":{}}}],["caps",{"_index":1896,"title":{},"body":{"components/CardComponent.html":{}}}],["card",{"_index":186,"title":{"classes/Card.html":{}},"body":{"classes/Action.html":{},"components/ActionComponent.html":{},"classes/ActionStatus.html":{},"classes/AddActionsAppear.html":{},"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"components/AppComponent.html":{},"interfaces/AppState.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"classes/ArchiveQuerySuccess.html":{},"components/ArchivesComponent.html":{},"components/BaseSettingComponent.html":{},"classes/Card.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"injectables/CardEffects.html":{},"interfaces/CardFeedState.html":{},"components/CardListComponent.html":{},"injectables/CardOperationEffects.html":{},"injectables/CardService.html":{},"interfaces/CardState.html":{},"classes/ClearCard.html":{},"classes/ClearLightCardSelection.html":{},"components/ConfirmModalComponent.html":{},"components/CustomLogoComponent.html":{},"components/DatetimeFilterComponent.html":{},"classes/DelayedLightCardUpdate.html":{},"classes/Detail.html":{},"components/DetailComponent.html":{},"classes/DetailContext.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"classes/EmptyLightCards.html":{},"components/FeedComponent.html":{},"injectables/FeedFiltersEffects.html":{},"classes/Filter.html":{},"injectables/FilterService.html":{},"components/FiltersComponent.html":{},"classes/HandleUnexpectedError.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/HandleUnexpectedError-3.html":{},"injectables/HandlebarsService.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"classes/InitTimeline.html":{},"classes/Input.html":{},"classes/LightCardAlreadyUpdated.html":{},"injectables/LightCardEffects.html":{},"components/ListSettingComponent.html":{},"classes/LoadArchivedCard.html":{},"classes/LoadArchivedCardFailure.html":{},"classes/LoadArchivedCardSuccess.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"components/LoginComponent.html":{},"components/MenuLinkComponent.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/RemoveLightCard.html":{},"components/ResizableComponent.html":{},"classes/SelectArchivedLightCard.html":{},"classes/SelectLightCard.html":{},"classes/SendArchiveQuery.html":{},"classes/SetCardDataTimeline.html":{},"components/SettingsComponent.html":{},"classes/State.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"classes/Third.html":{},"classes/ThirdActionAlreadyLoaded.html":{},"classes/ThirdActionAlreadyUpdated.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"interfaces/TimelineState.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateAnActionFailure.html":{},"classes/UpdateArchiveFilter.html":{},"classes/UpdateArchivePage.html":{},"classes/UpdatedSubscription.html":{},"miscellaneous/enumerations.html":{}}}],["card'},{'name",{"_index":369,"title":{},"body":{"components/ActionComponent.html":{},"components/AppComponent.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/ConfirmModalComponent.html":{},"components/CustomLogoComponent.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MenuLinkComponent.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/ResizableComponent.html":{},"components/SettingsComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{}}}],["card.actions",{"_index":1582,"title":{},"body":{"injectables/AuthenticationEffects.html":{},"components/CardDetailsComponent.html":{},"injectables/CardEffects.html":{},"injectables/CardOperationEffects.html":{},"injectables/CustomRouterEffects.html":{},"injectables/LightCardEffects.html":{},"injectables/ThirdActionService.html":{},"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["card.actions.ts",{"_index":474,"title":{},"body":{"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"classes/ClearLightCardSelection.html":{},"classes/DelayedLightCardUpdate.html":{},"classes/EmptyLightCards.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/LightCardAlreadyUpdated.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/RemoveLightCard.html":{},"classes/SelectLightCard.html":{},"classes/ThirdActionAlreadyLoaded.html":{},"classes/ThirdActionAlreadyUpdated.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateAnActionFailure.html":{},"classes/UpdatedSubscription.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["card.actions.ts:107",{"_index":3075,"title":{},"body":{"classes/HandleUnexpectedError-3.html":{}}}],["card.actions.ts:110",{"_index":3076,"title":{},"body":{"classes/HandleUnexpectedError-3.html":{}}}],["card.actions.ts:115",{"_index":3836,"title":{},"body":{"classes/RemoveLightCard.html":{}}}],["card.actions.ts:117",{"_index":3837,"title":{},"body":{"classes/RemoveLightCard.html":{}}}],["card.actions.ts:122",{"_index":543,"title":{},"body":{"classes/AddThirdActions.html":{}}}],["card.actions.ts:124",{"_index":544,"title":{},"body":{"classes/AddThirdActions.html":{}}}],["card.actions.ts:129",{"_index":4824,"title":{},"body":{"classes/UpdateALightCard.html":{}}}],["card.actions.ts:131",{"_index":4825,"title":{},"body":{"classes/UpdateALightCard.html":{}}}],["card.actions.ts:136",{"_index":4826,"title":{},"body":{"classes/UpdateAnAction.html":{}}}],["card.actions.ts:138",{"_index":4827,"title":{},"body":{"classes/UpdateAnAction.html":{}}}],["card.actions.ts:143",{"_index":4828,"title":{},"body":{"classes/UpdateAnActionFailure.html":{}}}],["card.actions.ts:150",{"_index":4042,"title":{},"body":{"classes/ThirdActionAlreadyLoaded.html":{}}}],["card.actions.ts:157",{"_index":4043,"title":{},"body":{"classes/ThirdActionAlreadyUpdated.html":{}}}],["card.actions.ts:164",{"_index":2531,"title":{},"body":{"classes/DelayedLightCardUpdate.html":{}}}],["card.actions.ts:166",{"_index":2532,"title":{},"body":{"classes/DelayedLightCardUpdate.html":{}}}],["card.actions.ts:171",{"_index":3415,"title":{},"body":{"classes/LightCardAlreadyUpdated.html":{}}}],["card.actions.ts:39",{"_index":3520,"title":{},"body":{"classes/LoadLightCards.html":{}}}],["card.actions.ts:44",{"_index":2779,"title":{},"body":{"classes/EmptyLightCards.html":{}}}],["card.actions.ts:48",{"_index":3524,"title":{},"body":{"classes/LoadLightCardsSuccess.html":{}}}],["card.actions.ts:51",{"_index":3525,"title":{},"body":{"classes/LoadLightCardsSuccess.html":{}}}],["card.actions.ts:56",{"_index":3521,"title":{},"body":{"classes/LoadLightCardsExtendedData.html":{}}}],["card.actions.ts:64",{"_index":3522,"title":{},"body":{"classes/LoadLightCardsFailure.html":{}}}],["card.actions.ts:67",{"_index":3523,"title":{},"body":{"classes/LoadLightCardsFailure.html":{}}}],["card.actions.ts:73",{"_index":3869,"title":{},"body":{"classes/SelectLightCard.html":{}}}],["card.actions.ts:76",{"_index":3870,"title":{},"body":{"classes/SelectLightCard.html":{}}}],["card.actions.ts:83",{"_index":2195,"title":{},"body":{"classes/ClearLightCardSelection.html":{}}}],["card.actions.ts:90",{"_index":476,"title":{},"body":{"classes/AddLightCardFailure.html":{}}}],["card.actions.ts:93",{"_index":477,"title":{},"body":{"classes/AddLightCardFailure.html":{}}}],["card.actions.ts:98",{"_index":4842,"title":{},"body":{"classes/UpdatedSubscription.html":{}}}],["card.component.html",{"_index":1807,"title":{},"body":{"components/CardComponent.html":{}}}],["card.component.scss",{"_index":1806,"title":{},"body":{"components/CardComponent.html":{}}}],["card.details",{"_index":1919,"title":{},"body":{"components/CardDetailsComponent.html":{}}}],["card.effects",{"_index":840,"title":{},"body":{"interfaces/AppState.html":{}}}],["card.effects.ts",{"_index":3417,"title":{},"body":{"injectables/LightCardEffects.html":{}}}],["card.effects.ts:118",{"_index":3431,"title":{},"body":{"injectables/LightCardEffects.html":{}}}],["card.effects.ts:34",{"_index":3422,"title":{},"body":{"injectables/LightCardEffects.html":{}}}],["card.effects.ts:44",{"_index":3452,"title":{},"body":{"injectables/LightCardEffects.html":{}}}],["card.effects.ts:57",{"_index":3449,"title":{},"body":{"injectables/LightCardEffects.html":{}}}],["card.effects.ts:92",{"_index":3463,"title":{},"body":{"injectables/LightCardEffects.html":{}}}],["card.enddate",{"_index":3035,"title":{},"body":{"injectables/FilterService.html":{}}}],["card.id",{"_index":1863,"title":{},"body":{"components/CardComponent.html":{},"injectables/LightCardEffects.html":{}}}],["card.id.indexof(selectedcardid",{"_index":2035,"title":{},"body":{"injectables/CardOperationEffects.html":{}}}],["card.model",{"_index":481,"title":{},"body":{"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"injectables/ArchiveEffects.html":{},"components/ArchiveListComponent.html":{},"classes/ArchiveQuerySuccess.html":{},"interfaces/ArchiveState.html":{},"components/ArchivesComponent.html":{},"classes/Card.html":{},"components/CardComponent.html":{},"interfaces/CardFeedState.html":{},"components/CardListComponent.html":{},"classes/CardOperation.html":{},"injectables/CardService.html":{},"classes/ClearLightCardSelection.html":{},"classes/DelayedLightCardUpdate.html":{},"classes/Detail.html":{},"classes/EmptyLightCards.html":{},"components/FeedComponent.html":{},"classes/Filter.html":{},"injectables/FilterService.html":{},"classes/HandleUnexpectedError.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/LightCardAlreadyUpdated.html":{},"injectables/LightCardEffects.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/Page.html":{},"classes/RemoveLightCard.html":{},"classes/SelectArchivedLightCard.html":{},"classes/SelectLightCard.html":{},"classes/SendArchiveQuery.html":{},"classes/ThirdActionAlreadyLoaded.html":{},"classes/ThirdActionAlreadyUpdated.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"components/TimeLineComponent.html":{},"interfaces/TimelineState.html":{},"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateAnActionFailure.html":{},"classes/UpdateArchiveFilter.html":{},"classes/UpdateArchivePage.html":{},"classes/UpdatedSubscription.html":{}}}],["card.model.ts",{"_index":3407,"title":{},"body":{"classes/LightCard.html":{},"classes/TimeSpan.html":{},"miscellaneous/enumerations.html":{}}}],["card.model.ts:12",{"_index":3409,"title":{},"body":{"classes/LightCard.html":{}}}],["card.model.ts:68",{"_index":4575,"title":{},"body":{"classes/TimeSpan.html":{}}}],["card.process",{"_index":203,"title":{},"body":{"classes/Action.html":{},"classes/ActionStatus.html":{},"classes/Input.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["card.publisherversion",{"_index":4134,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["card.publisher}.${card.publisherversion",{"_index":1848,"title":{},"body":{"components/CardComponent.html":{}}}],["card.reducer",{"_index":818,"title":{},"body":{"interfaces/AppState.html":{}}}],["card.service",{"_index":3889,"title":{},"body":{"modules/ServicesModule.html":{}}}],["card.severity",{"_index":3027,"title":{},"body":{"injectables/FilterService.html":{}}}],["card.startdate",{"_index":3036,"title":{},"body":{"injectables/FilterService.html":{}}}],["card.state",{"_index":207,"title":{},"body":{"classes/Action.html":{},"classes/ActionStatus.html":{},"classes/Input.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["card1.lttd",{"_index":1979,"title":{},"body":{"interfaces/CardFeedState.html":{}}}],["card1.publishdate",{"_index":1983,"title":{},"body":{"interfaces/CardFeedState.html":{}}}],["card1.startdate",{"_index":1973,"title":{},"body":{"interfaces/CardFeedState.html":{}}}],["card2",{"_index":1972,"title":{},"body":{"interfaces/CardFeedState.html":{}}}],["card2.lttd",{"_index":1980,"title":{},"body":{"interfaces/CardFeedState.html":{}}}],["card2.publishdate",{"_index":1982,"title":{},"body":{"interfaces/CardFeedState.html":{}}}],["card2.startdate",{"_index":1974,"title":{},"body":{"interfaces/CardFeedState.html":{}}}],["card:card",{"_index":2657,"title":{},"body":{"classes/DetailContext.html":{}}}],["card:lightcard",{"_index":3032,"title":{},"body":{"injectables/FilterService.html":{}}}],["cardactions",{"_index":471,"title":{},"body":{"classes/AddActionsAppear.html":{},"classes/ClearCard.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/LoadArchivedCard.html":{},"classes/LoadArchivedCardFailure.html":{},"classes/LoadArchivedCardSuccess.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{},"miscellaneous/typealiases.html":{}}}],["cardactiontypes",{"_index":442,"title":{},"body":{"classes/AddActionsAppear.html":{},"injectables/CardEffects.html":{},"classes/ClearCard.html":{},"classes/HandleUnexpectedError-1.html":{},"injectables/LightCardEffects.html":{},"classes/LoadArchivedCard.html":{},"classes/LoadArchivedCardFailure.html":{},"classes/LoadArchivedCardSuccess.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{},"miscellaneous/enumerations.html":{}}}],["cardactiontypes.addactionsappear",{"_index":441,"title":{},"body":{"classes/AddActionsAppear.html":{},"classes/ClearCard.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/LoadArchivedCard.html":{},"classes/LoadArchivedCardFailure.html":{},"classes/LoadArchivedCardSuccess.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{}}}],["cardactiontypes.clearcard",{"_index":463,"title":{},"body":{"classes/AddActionsAppear.html":{},"classes/ClearCard.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/LoadArchivedCard.html":{},"classes/LoadArchivedCardFailure.html":{},"classes/LoadArchivedCardSuccess.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{}}}],["cardactiontypes.handleunexpectederror",{"_index":470,"title":{},"body":{"classes/AddActionsAppear.html":{},"classes/ClearCard.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/LoadArchivedCard.html":{},"classes/LoadArchivedCardFailure.html":{},"classes/LoadArchivedCardSuccess.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{}}}],["cardactiontypes.loadarchivedcard",{"_index":467,"title":{},"body":{"classes/AddActionsAppear.html":{},"classes/ClearCard.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/LoadArchivedCard.html":{},"classes/LoadArchivedCardFailure.html":{},"classes/LoadArchivedCardSuccess.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{}}}],["cardactiontypes.loadarchivedcardfailure",{"_index":468,"title":{},"body":{"classes/AddActionsAppear.html":{},"classes/ClearCard.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/LoadArchivedCard.html":{},"classes/LoadArchivedCardFailure.html":{},"classes/LoadArchivedCardSuccess.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{}}}],["cardactiontypes.loadarchivedcardsuccess",{"_index":469,"title":{},"body":{"classes/AddActionsAppear.html":{},"classes/ClearCard.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/LoadArchivedCard.html":{},"classes/LoadArchivedCardFailure.html":{},"classes/LoadArchivedCardSuccess.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{}}}],["cardactiontypes.loadcard",{"_index":464,"title":{},"body":{"classes/AddActionsAppear.html":{},"classes/ClearCard.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/LoadArchivedCard.html":{},"classes/LoadArchivedCardFailure.html":{},"classes/LoadArchivedCardSuccess.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{}}}],["cardactiontypes.loadcardfailure",{"_index":465,"title":{},"body":{"classes/AddActionsAppear.html":{},"classes/ClearCard.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/LoadArchivedCard.html":{},"classes/LoadArchivedCardFailure.html":{},"classes/LoadArchivedCardSuccess.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{}}}],["cardactiontypes.loadcardsuccess",{"_index":466,"title":{},"body":{"classes/AddActionsAppear.html":{},"classes/ClearCard.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/LoadArchivedCard.html":{},"classes/LoadArchivedCardFailure.html":{},"classes/LoadArchivedCardSuccess.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{}}}],["cardcomponent",{"_index":368,"title":{"components/CardComponent.html":{}},"body":{"components/ActionComponent.html":{},"components/AppComponent.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"modules/CardsModule.html":{},"components/ConfirmModalComponent.html":{},"components/CustomLogoComponent.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MenuLinkComponent.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/ResizableComponent.html":{},"components/SettingsComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"index.html":{}}}],["carddetailscomponent",{"_index":370,"title":{"components/CardDetailsComponent.html":{}},"body":{"components/ActionComponent.html":{},"components/AppComponent.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"modules/ArchivesRoutingModule.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"modules/CardsModule.html":{},"components/ConfirmModalComponent.html":{},"components/CustomLogoComponent.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"modules/FeedRoutingModule.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MenuLinkComponent.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/ResizableComponent.html":{},"components/SettingsComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"index.html":{}}}],["cardeffects",{"_index":806,"title":{"injectables/CardEffects.html":{}},"body":{"interfaces/AppState.html":{},"injectables/CardEffects.html":{}}}],["cardfeedstate",{"_index":786,"title":{"interfaces/CardFeedState.html":{}},"body":{"interfaces/AppState.html":{},"interfaces/CardFeedState.html":{}}}],["cardid",{"_index":535,"title":{},"body":{"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"classes/ClearLightCardSelection.html":{},"classes/DelayedLightCardUpdate.html":{},"classes/EmptyLightCards.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/LightCardAlreadyUpdated.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/RemoveLightCard.html":{},"classes/SelectLightCard.html":{},"classes/ThirdActionAlreadyLoaded.html":{},"classes/ThirdActionAlreadyUpdated.html":{},"injectables/ThirdActionService.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateAnActionFailure.html":{},"classes/UpdatedSubscription.html":{}}}],["cardids",{"_index":2015,"title":{},"body":{"classes/CardOperation.html":{}}}],["cardinitialstate",{"_index":2164,"title":{},"body":{"interfaces/CardState.html":{}}}],["cardlistcomponent",{"_index":372,"title":{"components/CardListComponent.html":{}},"body":{"components/ActionComponent.html":{},"components/AppComponent.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/ConfirmModalComponent.html":{},"components/CustomLogoComponent.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"modules/FeedModule.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MenuLinkComponent.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/ResizableComponent.html":{},"components/SettingsComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"index.html":{}}}],["cardoperation",{"_index":2008,"title":{"classes/CardOperation.html":{}},"body":{"classes/CardOperation.html":{},"injectables/CardService.html":{}}}],["cardoperation.converttypeintoenum",{"_index":2142,"title":{},"body":{"injectables/CardService.html":{}}}],["cardoperationeffects",{"_index":808,"title":{"injectables/CardOperationEffects.html":{}},"body":{"interfaces/AppState.html":{},"injectables/CardOperationEffects.html":{}}}],["cardoperationsurl",{"_index":2075,"title":{},"body":{"injectables/CardService.html":{}}}],["cardoperationtype",{"_index":2014,"title":{},"body":{"classes/CardOperation.html":{},"injectables/CardOperationEffects.html":{},"miscellaneous/enumerations.html":{}}}],["cardoperationtype.add",{"_index":2049,"title":{},"body":{"injectables/CardOperationEffects.html":{}}}],["cardoperationtype.delete",{"_index":2052,"title":{},"body":{"injectables/CardOperationEffects.html":{}}}],["cardoperationtype[value",{"_index":2022,"title":{},"body":{"classes/CardOperation.html":{}}}],["cardreducer",{"_index":819,"title":{},"body":{"interfaces/AppState.html":{}}}],["cards",{"_index":531,"title":{},"body":{"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"modules/ArchivesRoutingModule.html":{},"injectables/AuthenticationEffects.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"interfaces/CardFeedState.html":{},"classes/CardOperation.html":{},"injectables/CardOperationEffects.html":{},"injectables/CardService.html":{},"classes/ClearLightCardSelection.html":{},"classes/DelayedLightCardUpdate.html":{},"classes/EmptyLightCards.html":{},"components/FeedComponent.html":{},"modules/FeedRoutingModule.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/LightCardAlreadyUpdated.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/RemoveLightCard.html":{},"classes/SelectLightCard.html":{},"classes/ThirdActionAlreadyLoaded.html":{},"classes/ThirdActionAlreadyUpdated.html":{},"interfaces/TimelineState.html":{},"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateAnActionFailure.html":{},"classes/UpdatedSubscription.html":{}}}],["cards'},{'name",{"_index":392,"title":{},"body":{"components/ActionComponent.html":{},"components/AppComponent.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/ConfirmModalComponent.html":{},"components/CustomLogoComponent.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MenuLinkComponent.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/ResizableComponent.html":{},"components/SettingsComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{}}}],["cards.map(card",{"_index":4676,"title":{},"body":{"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["cards/cards.module",{"_index":1110,"title":{},"body":{"modules/ArchivesModule.html":{},"modules/FeedModule.html":{}}}],["cards/components/card",{"_index":1113,"title":{},"body":{"modules/ArchivesRoutingModule.html":{},"modules/FeedRoutingModule.html":{}}}],["cards/components/detail/detail.component",{"_index":1116,"title":{},"body":{"modules/ArchivesRoutingModule.html":{},"modules/FeedRoutingModule.html":{}}}],["cardselectors",{"_index":1913,"title":{},"body":{"components/CardDetailsComponent.html":{}}}],["cardservice",{"_index":897,"title":{"injectables/CardService.html":{}},"body":{"injectables/ArchiveEffects.html":{},"injectables/AuthenticationEffects.html":{},"injectables/CardEffects.html":{},"injectables/CardOperationEffects.html":{},"injectables/CardService.html":{},"modules/ServicesModule.html":{},"index.html":{}}}],["cardsmodule",{"_index":1098,"title":{"modules/CardsModule.html":{}},"body":{"modules/ArchivesModule.html":{},"modules/CardsModule.html":{},"modules/FeedModule.html":{},"index.html":{},"modules.html":{}}}],["cardstate",{"_index":784,"title":{"interfaces/CardState.html":{}},"body":{"interfaces/AppState.html":{},"interfaces/CardState.html":{}}}],["cardsurl",{"_index":2076,"title":{},"body":{"injectables/CardService.html":{}}}],["care",{"_index":2966,"title":{},"body":{"classes/Filter.html":{}}}],["careful",{"_index":3743,"title":{},"body":{"components/NavbarComponent.html":{}}}],["case",{"_index":1409,"title":{},"body":{"classes/AuthObject.html":{},"injectables/AuthenticationEffects.html":{},"interfaces/AuthenticationModeHandler.html":{},"components/CardComponent.html":{},"injectables/CardOperationEffects.html":{},"classes/CheckTokenResponse.html":{},"components/CustomLogoComponent.html":{},"classes/CustomRouterStateSerializer.html":{},"injectables/HandlebarsService.html":{},"components/IconComponent.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/LightCard.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"classes/RouterStateUrl.html":{},"injectables/ThirdActionService.html":{},"classes/TimeSpan.html":{},"pipes/XAxisTickFormatPipe.html":{}}}],["case('logout",{"_index":1414,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["case('token_refresh_error",{"_index":1413,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["catch",{"_index":1394,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"injectables/CardService.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["catch(error",{"_index":4090,"title":{},"body":{"injectables/ThirdActionService.html":{}}}],["catcherror",{"_index":927,"title":{},"body":{"injectables/ArchiveEffects.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"classes/AuthObject.html":{},"injectables/AuthenticationEffects.html":{},"interfaces/AuthenticationModeHandler.html":{},"injectables/CardEffects.html":{},"injectables/CardOperationEffects.html":{},"classes/CheckTokenResponse.html":{},"injectables/ConfigEffects.html":{},"components/FeedComponent.html":{},"classes/ImplicitAuthenticationHandler.html":{},"injectables/LightCardEffects.html":{},"injectables/MenuEffects.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"injectables/SettingsEffects.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"injectables/TimeEffects.html":{},"components/TimeLineComponent.html":{},"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{},"injectables/UserEffects.html":{}}}],["catcherror((err",{"_index":1943,"title":{},"body":{"injectables/CardEffects.html":{},"injectables/ConfigEffects.html":{},"injectables/MenuEffects.html":{},"injectables/SettingsEffects.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["catcherror((error",{"_index":909,"title":{},"body":{"injectables/ArchiveEffects.html":{},"injectables/CardOperationEffects.html":{},"injectables/LightCardEffects.html":{},"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{},"injectables/UserEffects.html":{}}}],["catcherror(err",{"_index":1053,"title":{},"body":{"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"injectables/AuthenticationEffects.html":{},"components/FeedComponent.html":{},"injectables/MenuEffects.html":{},"components/TimeLineComponent.html":{}}}],["catcherror(error",{"_index":4190,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"injectables/TimeEffects.html":{},"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["catcherror(errorresponse",{"_index":1510,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["catcherror(function",{"_index":1249,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["category",{"_index":1483,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["caught",{"_index":910,"title":{},"body":{"injectables/ArchiveEffects.html":{},"injectables/CardEffects.html":{},"injectables/CardOperationEffects.html":{},"injectables/ConfigEffects.html":{},"injectables/LightCardEffects.html":{},"injectables/MenuEffects.html":{},"injectables/SettingsEffects.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{},"injectables/UserEffects.html":{}}}],["causes",{"_index":3858,"title":{},"body":{"components/ResizableComponent.html":{}}}],["cell",{"_index":4813,"title":{},"body":{"components/TypeFilterComponent.html":{}}}],["center",{"_index":1902,"title":{},"body":{"components/CardComponent.html":{}}}],["centeredonticks",{"_index":4421,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["chain",{"_index":2984,"title":{},"body":{"classes/Filter.html":{}}}],["chainfilter",{"_index":2972,"title":{},"body":{"classes/Filter.html":{}}}],["chainfilter(card",{"_index":2982,"title":{},"body":{"classes/Filter.html":{}}}],["change",{"_index":884,"title":{},"body":{"classes/ApplyFilter.html":{},"components/CustomLogoComponent.html":{},"classes/FailToUpdateTimeReference.html":{},"classes/InitFilters.html":{},"components/ListSettingComponent.html":{},"components/MultiSettingsComponent.html":{},"classes/Tick.html":{},"classes/TickPayload.html":{},"components/TimeFilterComponent.html":{},"components/TypeFilterComponent.html":{},"classes/UpdateTimeReference.html":{},"miscellaneous/enumerations.html":{}}}],["changed",{"_index":2257,"title":{},"body":{"components/ConfirmModalComponent.html":{},"components/TimeFilterComponent.html":{}}}],["changelocale",{"_index":3125,"title":{},"body":{"injectables/HandlebarsService.html":{},"injectables/I18nService.html":{}}}],["changelocale(locale",{"_index":3145,"title":{},"body":{"injectables/HandlebarsService.html":{},"injectables/I18nService.html":{}}}],["changelocale(locale:string",{"_index":3190,"title":{},"body":{"injectables/HandlebarsService.html":{},"injectables/I18nService.html":{}}}],["changes",{"_index":2668,"title":{},"body":{"components/DetailsComponent.html":{}}}],["changes['card'].currentvalue.publisher+'.'+changes['card'].currentvalue.publisherversion",{"_index":2693,"title":{},"body":{"components/DetailsComponent.html":{}}}],["changing",{"_index":2783,"title":{},"body":{"classes/FailToUpdateTimeReference.html":{},"classes/Tick.html":{},"classes/TickPayload.html":{},"classes/UpdateTimeReference.html":{}}}],["character",{"_index":4168,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["charset=utf",{"_index":1243,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["chart",{"_index":4585,"title":{},"body":{"interfaces/TimelineState.html":{}}}],["chart'},{'name",{"_index":382,"title":{},"body":{"components/ActionComponent.html":{},"components/AppComponent.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/ConfirmModalComponent.html":{},"components/CustomLogoComponent.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MenuLinkComponent.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/ResizableComponent.html":{},"components/SettingsComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{}}}],["chart.component",{"_index":2940,"title":{},"body":{"modules/FeedModule.html":{}}}],["chart/custom",{"_index":2939,"title":{},"body":{"modules/FeedModule.html":{}}}],["chart/init",{"_index":2949,"title":{},"body":{"modules/FeedModule.html":{}}}],["chartcommonmodule",{"_index":2934,"title":{},"body":{"modules/FeedModule.html":{}}}],["charts",{"_index":2937,"title":{},"body":{"modules/FeedModule.html":{},"dependencies.html":{}}}],["checauthentication",{"_index":142,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckImplicitFlowAuthenticationStatus.html":{},"classes/ImplicitlyAuthenticated.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"classes/UnAuthenticationFromImplicitFlow.html":{},"classes/UselessAuthAction.html":{}}}],["check",{"_index":67,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"components/AppComponent.html":{},"classes/AuthObject.html":{},"injectables/AuthenticationEffects.html":{},"interfaces/AuthenticationModeHandler.html":{},"components/CardComponent.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckImplicitFlowAuthenticationStatus.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/ImplicitlyAuthenticated.html":{},"classes/InitAuthStatus.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"classes/UnAuthenticationFromImplicitFlow.html":{},"classes/UselessAuthAction.html":{},"miscellaneous/enumerations.html":{}}}],["checkauthentication",{"_index":20,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"injectables/AuthenticationEffects.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckImplicitFlowAuthenticationStatus.html":{},"classes/ImplicitlyAuthenticated.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"classes/UnAuthenticationFromImplicitFlow.html":{},"classes/UselessAuthAction.html":{}}}],["checkauthentication(token",{"_index":1233,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["checkauthenticationstatus",{"_index":66,"title":{"classes/CheckAuthenticationStatus.html":{}},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"injectables/AuthenticationEffects.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckImplicitFlowAuthenticationStatus.html":{},"classes/ImplicitlyAuthenticated.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"classes/UnAuthenticationFromImplicitFlow.html":{},"classes/UselessAuthAction.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["checkauthenticationwhenready",{"_index":1469,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["checkelement",{"_index":979,"title":{},"body":{"components/ArchiveFiltersComponent.html":{}}}],["checkelement(filterdatetypes",{"_index":998,"title":{},"body":{"components/ArchiveFiltersComponent.html":{}}}],["checkifreceivedstatusisdifferentfromcurrentone",{"_index":242,"title":{},"body":{"classes/Action.html":{},"classes/ActionStatus.html":{},"classes/Input.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"injectables/ThirdActionService.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{}}}],["checkifreceivedstatusisdifferentfromcurrentone(formerstatus",{"_index":4059,"title":{},"body":{"injectables/ThirdActionService.html":{}}}],["checkimplicitflowauthentication",{"_index":1470,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["checkimplicitflowauthenticationstatus",{"_index":80,"title":{"classes/CheckImplicitFlowAuthenticationStatus.html":{}},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"injectables/AuthenticationEffects.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckImplicitFlowAuthenticationStatus.html":{},"classes/ImplicitlyAuthenticated.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"classes/UnAuthenticationFromImplicitFlow.html":{},"classes/UselessAuthAction.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["checking",{"_index":1428,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["checks",{"_index":1227,"title":{},"body":{"classes/AuthObject.html":{},"injectables/AuthenticationEffects.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["checktokenresponse",{"_index":1429,"title":{"classes/CheckTokenResponse.html":{}},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["checktokenurl",{"_index":1159,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["checkuserapplication",{"_index":4858,"title":{},"body":{"injectables/UserEffects.html":{}}}],["child",{"_index":2411,"title":{},"body":{"classes/CustomRouterStateSerializer.html":{},"classes/RouterStateUrl.html":{}}}],["children",{"_index":1117,"title":{},"body":{"modules/ArchivesRoutingModule.html":{},"modules/FeedRoutingModule.html":{}}}],["choose",{"_index":1183,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["cid",{"_index":1120,"title":{},"body":{"modules/ArchivesRoutingModule.html":{},"modules/FeedRoutingModule.html":{}}}],["circle",{"_index":4817,"title":{},"body":{"components/TypeFilterComponent.html":{}}}],["claim",{"_index":1208,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["class",{"_index":0,"title":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/Action.html":{},"classes/ActionStatus.html":{},"classes/AddActionsAppear.html":{},"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"classes/ApplyFilter.html":{},"classes/ArchiveQuerySuccess.html":{},"classes/AuthObject.html":{},"classes/Card.html":{},"classes/CardOperation.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckImplicitFlowAuthenticationStatus.html":{},"classes/CheckTokenResponse.html":{},"classes/ClearCard.html":{},"classes/ClearLightCardSelection.html":{},"classes/CreateUserApplication.html":{},"classes/CreateUserApplicationOnFailure.html":{},"classes/CreateUserApplicationOnSuccess.html":{},"classes/CustomRouterStateSerializer.html":{},"classes/DateTimeNgb.html":{},"classes/DelayedLightCardUpdate.html":{},"classes/Detail.html":{},"classes/DetailContext.html":{},"classes/EmptyLightCards.html":{},"classes/FailToUpdateTimeReference.html":{},"classes/Filter.html":{},"classes/GuidService.html":{},"classes/HandleUnexpectedError.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/HandleUnexpectedError-4.html":{},"classes/HandleUnexpectedError-5.html":{},"classes/HandleUnexpectedError-6.html":{},"classes/I18n.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/ImplicitlyAuthenticated.html":{},"classes/InitAuthStatus.html":{},"classes/InitFilters.html":{},"classes/InitTimeline.html":{},"classes/Input.html":{},"classes/LightCard.html":{},"classes/LightCardAlreadyUpdated.html":{},"classes/LoadArchivedCard.html":{},"classes/LoadArchivedCardFailure.html":{},"classes/LoadArchivedCardSuccess.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{},"classes/LoadConfig.html":{},"classes/LoadConfigFailure.html":{},"classes/LoadConfigSuccess.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/LoadSettings.html":{},"classes/LoadSettingsFailure.html":{},"classes/LoadSettingsSuccess.html":{},"classes/Map.html":{},"classes/Message.html":{},"classes/Page.html":{},"classes/ParameterListItem.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"classes/PatchSettings.html":{},"classes/PatchSettingsFailure.html":{},"classes/PatchSettingsSuccess.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/Process.html":{},"classes/RefreshTranslation.html":{},"classes/RejectLogIn.html":{},"classes/RemoveLightCard.html":{},"classes/RouterStateUrl.html":{},"classes/SelectArchivedLightCard.html":{},"classes/SelectLightCard.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{},"classes/SendArchiveQuery.html":{},"classes/SetCardDataTimeline.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdActionAlreadyLoaded.html":{},"classes/ThirdActionAlreadyUpdated.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"classes/ThirdsI18nLoader.html":{},"classes/ThirdsServiceMock.html":{},"classes/Tick.html":{},"classes/TickPayload.html":{},"classes/TimeReference.html":{},"classes/TimeSpan.html":{},"classes/TransitionalThirdWithItSVersion.html":{},"classes/TranslationUpToDate.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"classes/UnAuthenticationFromImplicitFlow.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateAnActionFailure.html":{},"classes/UpdateArchiveFilter.html":{},"classes/UpdateArchivePage.html":{},"classes/UpdateTimeReference.html":{},"classes/UpdateTranslation.html":{},"classes/UpdateTranslationFailed.html":{},"classes/UpdateTranslationSuccessful.html":{},"classes/UpdatedSubscription.html":{},"classes/UselessAuthAction.html":{},"classes/User.html":{},"classes/UserApplicationNotRegistered.html":{},"classes/UserApplicationRegistered.html":{},"classes/UserContext.html":{}},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/Action.html":{},"components/ActionComponent.html":{},"classes/ActionStatus.html":{},"classes/AddActionsAppear.html":{},"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"classes/ApplyFilter.html":{},"injectables/ArchiveEffects.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"classes/ArchiveQuerySuccess.html":{},"components/ArchivesComponent.html":{},"modules/ArchivesModule.html":{},"modules/ArchivesRoutingModule.html":{},"classes/AuthObject.html":{},"injectables/AuthenticationEffects.html":{},"interfaces/AuthenticationModeHandler.html":{},"components/BaseSettingComponent.html":{},"directives/CalcHeightDirective.html":{},"classes/Card.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"injectables/CardEffects.html":{},"components/CardListComponent.html":{},"classes/CardOperation.html":{},"injectables/CardOperationEffects.html":{},"injectables/CardService.html":{},"modules/CardsModule.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckImplicitFlowAuthenticationStatus.html":{},"classes/CheckTokenResponse.html":{},"classes/ClearCard.html":{},"classes/ClearLightCardSelection.html":{},"injectables/ConfigEffects.html":{},"injectables/ConfigService.html":{},"components/ConfirmModalComponent.html":{},"classes/CreateUserApplication.html":{},"classes/CreateUserApplicationOnFailure.html":{},"classes/CreateUserApplicationOnSuccess.html":{},"components/CustomLogoComponent.html":{},"injectables/CustomRouterEffects.html":{},"classes/CustomRouterStateSerializer.html":{},"classes/DateTimeNgb.html":{},"components/DatetimeFilterComponent.html":{},"classes/DelayedLightCardUpdate.html":{},"classes/Detail.html":{},"components/DetailComponent.html":{},"classes/DetailContext.html":{},"components/DetailsComponent.html":{},"directives/DraggableDirective.html":{},"components/EmailSettingComponent.html":{},"classes/EmptyLightCards.html":{},"classes/FailToUpdateTimeReference.html":{},"components/FeedComponent.html":{},"injectables/FeedFiltersEffects.html":{},"modules/FeedModule.html":{},"modules/FeedRoutingModule.html":{},"classes/Filter.html":{},"injectables/FilterService.html":{},"components/FiltersComponent.html":{},"classes/GuidService.html":{},"classes/HandleUnexpectedError.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/HandleUnexpectedError-4.html":{},"classes/HandleUnexpectedError-5.html":{},"classes/HandleUnexpectedError-6.html":{},"injectables/HandlebarsService.html":{},"classes/I18n.html":{},"injectables/I18nService.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/ImplicitlyAuthenticated.html":{},"components/InfoComponent.html":{},"classes/InitAuthStatus.html":{},"classes/InitFilters.html":{},"classes/InitTimeline.html":{},"classes/Input.html":{},"classes/LightCard.html":{},"classes/LightCardAlreadyUpdated.html":{},"injectables/LightCardEffects.html":{},"components/ListSettingComponent.html":{},"classes/LoadArchivedCard.html":{},"classes/LoadArchivedCardFailure.html":{},"classes/LoadArchivedCardSuccess.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{},"classes/LoadConfig.html":{},"classes/LoadConfigFailure.html":{},"classes/LoadConfigSuccess.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/LoadSettings.html":{},"classes/LoadSettingsFailure.html":{},"classes/LoadSettingsSuccess.html":{},"components/LoginComponent.html":{},"classes/Map.html":{},"injectables/MenuEffects.html":{},"components/MenuLinkComponent.html":{},"classes/Message.html":{},"directives/MouseWheelDirective.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"injectables/NotifyService.html":{},"classes/Page.html":{},"classes/ParameterListItem.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"classes/PatchSettings.html":{},"classes/PatchSettingsFailure.html":{},"classes/PatchSettingsSuccess.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/Process.html":{},"classes/RefreshTranslation.html":{},"classes/RejectLogIn.html":{},"classes/RemoveLightCard.html":{},"components/ResizableComponent.html":{},"classes/RouterStateUrl.html":{},"classes/SelectArchivedLightCard.html":{},"classes/SelectLightCard.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{},"classes/SendArchiveQuery.html":{},"modules/ServicesModule.html":{},"classes/SetCardDataTimeline.html":{},"components/SettingsComponent.html":{},"injectables/SettingsEffects.html":{},"interfaces/SettingsInputs.html":{},"modules/SettingsModule.html":{},"modules/SettingsRoutingModule.html":{},"injectables/SettingsService.html":{},"classes/State.html":{},"modules/StateModule.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"classes/Third.html":{},"classes/ThirdActionAlreadyLoaded.html":{},"classes/ThirdActionAlreadyUpdated.html":{},"injectables/ThirdActionService.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"modules/ThirdpartyModule.html":{},"modules/ThirdpartyRoutingModule.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"classes/ThirdsServiceMock.html":{},"classes/Tick.html":{},"classes/TickPayload.html":{},"injectables/TimeEffects.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"classes/TimeReference.html":{},"classes/TimeSpan.html":{},"interceptors/TokenInjector.html":{},"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{},"classes/TranslationUpToDate.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"classes/UnAuthenticationFromImplicitFlow.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateAnActionFailure.html":{},"classes/UpdateArchiveFilter.html":{},"classes/UpdateArchivePage.html":{},"classes/UpdateTimeReference.html":{},"classes/UpdateTranslation.html":{},"classes/UpdateTranslationFailed.html":{},"classes/UpdateTranslationSuccessful.html":{},"classes/UpdatedSubscription.html":{},"classes/UselessAuthAction.html":{},"classes/User.html":{},"classes/UserApplicationNotRegistered.html":{},"classes/UserApplicationRegistered.html":{},"classes/UserContext.html":{},"injectables/UserEffects.html":{},"injectables/UserService.html":{},"modules/UtilitiesModule.html":{},"pipes/XAxisTickFormatPipe.html":{}}}],["class.thirds",{"_index":3756,"title":{},"body":{"components/NavbarComponent.html":{}}}],["classes",{"_index":2,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/Action.html":{},"classes/ActionStatus.html":{},"classes/AddActionsAppear.html":{},"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"classes/ApplyFilter.html":{},"classes/ArchiveQuerySuccess.html":{},"classes/AuthObject.html":{},"classes/Card.html":{},"classes/CardOperation.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckImplicitFlowAuthenticationStatus.html":{},"classes/CheckTokenResponse.html":{},"classes/ClearCard.html":{},"classes/ClearLightCardSelection.html":{},"classes/CreateUserApplication.html":{},"classes/CreateUserApplicationOnFailure.html":{},"classes/CreateUserApplicationOnSuccess.html":{},"classes/CustomRouterStateSerializer.html":{},"classes/DateTimeNgb.html":{},"classes/DelayedLightCardUpdate.html":{},"classes/Detail.html":{},"classes/DetailContext.html":{},"classes/EmptyLightCards.html":{},"classes/FailToUpdateTimeReference.html":{},"classes/Filter.html":{},"classes/GuidService.html":{},"classes/HandleUnexpectedError.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/HandleUnexpectedError-4.html":{},"classes/HandleUnexpectedError-5.html":{},"classes/HandleUnexpectedError-6.html":{},"classes/I18n.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/ImplicitlyAuthenticated.html":{},"classes/InitAuthStatus.html":{},"classes/InitFilters.html":{},"classes/InitTimeline.html":{},"classes/Input.html":{},"classes/LightCard.html":{},"classes/LightCardAlreadyUpdated.html":{},"classes/LoadArchivedCard.html":{},"classes/LoadArchivedCardFailure.html":{},"classes/LoadArchivedCardSuccess.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{},"classes/LoadConfig.html":{},"classes/LoadConfigFailure.html":{},"classes/LoadConfigSuccess.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/LoadSettings.html":{},"classes/LoadSettingsFailure.html":{},"classes/LoadSettingsSuccess.html":{},"classes/Map.html":{},"classes/Message.html":{},"classes/Page.html":{},"classes/ParameterListItem.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"classes/PatchSettings.html":{},"classes/PatchSettingsFailure.html":{},"classes/PatchSettingsSuccess.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/Process.html":{},"classes/RefreshTranslation.html":{},"classes/RejectLogIn.html":{},"classes/RemoveLightCard.html":{},"classes/RouterStateUrl.html":{},"classes/SelectArchivedLightCard.html":{},"classes/SelectLightCard.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{},"classes/SendArchiveQuery.html":{},"classes/SetCardDataTimeline.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdActionAlreadyLoaded.html":{},"classes/ThirdActionAlreadyUpdated.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"classes/ThirdsI18nLoader.html":{},"classes/ThirdsServiceMock.html":{},"classes/Tick.html":{},"classes/TickPayload.html":{},"classes/TimeReference.html":{},"classes/TimeSpan.html":{},"classes/TransitionalThirdWithItSVersion.html":{},"classes/TranslationUpToDate.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"classes/UnAuthenticationFromImplicitFlow.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateAnActionFailure.html":{},"classes/UpdateArchiveFilter.html":{},"classes/UpdateArchivePage.html":{},"classes/UpdateTimeReference.html":{},"classes/UpdateTranslation.html":{},"classes/UpdateTranslationFailed.html":{},"classes/UpdateTranslationSuccessful.html":{},"classes/UpdatedSubscription.html":{},"classes/UselessAuthAction.html":{},"classes/User.html":{},"classes/UserApplicationNotRegistered.html":{},"classes/UserApplicationRegistered.html":{},"classes/UserContext.html":{},"index.html":{}}}],["clear",{"_index":444,"title":{},"body":{"classes/AddActionsAppear.html":{},"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"classes/AuthObject.html":{},"injectables/AuthenticationEffects.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ClearCard.html":{},"classes/ClearLightCardSelection.html":{},"classes/DelayedLightCardUpdate.html":{},"classes/EmptyLightCards.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/LightCardAlreadyUpdated.html":{},"classes/LoadArchivedCard.html":{},"classes/LoadArchivedCardFailure.html":{},"classes/LoadArchivedCardSuccess.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"classes/RemoveLightCard.html":{},"classes/SelectLightCard.html":{},"classes/ThirdActionAlreadyLoaded.html":{},"classes/ThirdActionAlreadyUpdated.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateAnActionFailure.html":{},"classes/UpdatedSubscription.html":{},"miscellaneous/enumerations.html":{}}}],["clearauthenticationinformation",{"_index":1312,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["clearcard",{"_index":443,"title":{"classes/ClearCard.html":{}},"body":{"classes/AddActionsAppear.html":{},"injectables/AuthenticationEffects.html":{},"injectables/CardEffects.html":{},"classes/ClearCard.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/LoadArchivedCard.html":{},"classes/LoadArchivedCardFailure.html":{},"classes/LoadArchivedCardSuccess.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["clearcardselection",{"_index":1932,"title":{},"body":{"injectables/CardEffects.html":{}}}],["clearlightcardselection",{"_index":496,"title":{"classes/ClearLightCardSelection.html":{}},"body":{"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"components/CardDetailsComponent.html":{},"injectables/CardEffects.html":{},"classes/ClearLightCardSelection.html":{},"injectables/CustomRouterEffects.html":{},"classes/DelayedLightCardUpdate.html":{},"classes/EmptyLightCards.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/LightCardAlreadyUpdated.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/RemoveLightCard.html":{},"classes/SelectLightCard.html":{},"classes/ThirdActionAlreadyLoaded.html":{},"classes/ThirdActionAlreadyUpdated.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateAnActionFailure.html":{},"classes/UpdatedSubscription.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["click",{"_index":124,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckImplicitFlowAuthenticationStatus.html":{},"classes/ImplicitlyAuthenticated.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"classes/UnAuthenticationFromImplicitFlow.html":{},"classes/UselessAuthAction.html":{}}}],["clicked",{"_index":1577,"title":{},"body":{"injectables/AuthenticationEffects.html":{},"injectables/CustomRouterEffects.html":{},"components/DetailsComponent.html":{},"classes/HandleUnexpectedError-4.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{}}}],["clicking",{"_index":1572,"title":{},"body":{"injectables/AuthenticationEffects.html":{},"injectables/CustomRouterEffects.html":{},"classes/HandleUnexpectedError-4.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{}}}],["clientid",{"_index":101,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/AuthObject.html":{},"interfaces/AuthState.html":{},"interfaces/AuthenticationModeHandler.html":{},"injectables/CardService.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckImplicitFlowAuthenticationStatus.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/ImplicitlyAuthenticated.html":{},"classes/InitAuthStatus.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"classes/UnAuthenticationFromImplicitFlow.html":{},"classes/UselessAuthAction.html":{},"miscellaneous/enumerations.html":{}}}],["clientsecret",{"_index":1166,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["clock",{"_index":2803,"title":{},"body":{"classes/FailToUpdateTimeReference.html":{},"classes/Tick.html":{},"classes/TickPayload.html":{},"classes/UpdateTimeReference.html":{}}}],["clone",{"_index":2973,"title":{},"body":{"classes/Filter.html":{}}}],["clone():filter",{"_index":2994,"title":{},"body":{"classes/Filter.html":{}}}],["closedetails",{"_index":1906,"title":{},"body":{"components/CardDetailsComponent.html":{}}}],["cluster",{"_index":4929,"title":{},"body":{"pipes/XAxisTickFormatPipe.html":{}}}],["cluster_appmodule",{"_index":647,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["cluster_appmodule_bootstrap",{"_index":650,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["cluster_appmodule_declarations",{"_index":648,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["cluster_appmodule_imports",{"_index":649,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["cluster_archivesmodule",{"_index":1094,"title":{},"body":{"modules/ArchivesModule.html":{},"index.html":{}}}],["cluster_archivesmodule_declarations",{"_index":1095,"title":{},"body":{"modules/ArchivesModule.html":{},"index.html":{}}}],["cluster_archivesmodule_imports",{"_index":1096,"title":{},"body":{"modules/ArchivesModule.html":{},"index.html":{}}}],["cluster_cardsmodule",{"_index":2165,"title":{},"body":{"modules/CardsModule.html":{},"index.html":{}}}],["cluster_cardsmodule_declarations",{"_index":2166,"title":{},"body":{"modules/CardsModule.html":{},"index.html":{}}}],["cluster_cardsmodule_exports",{"_index":2168,"title":{},"body":{"modules/CardsModule.html":{},"index.html":{}}}],["cluster_cardsmodule_imports",{"_index":2167,"title":{},"body":{"modules/CardsModule.html":{}}}],["cluster_cardsmodule_providers",{"_index":2169,"title":{},"body":{"modules/CardsModule.html":{},"index.html":{}}}],["cluster_feedmodule",{"_index":2914,"title":{},"body":{"modules/FeedModule.html":{},"index.html":{}}}],["cluster_feedmodule_declarations",{"_index":2915,"title":{},"body":{"modules/FeedModule.html":{},"index.html":{}}}],["cluster_feedmodule_exports",{"_index":2917,"title":{},"body":{"modules/FeedModule.html":{},"index.html":{}}}],["cluster_feedmodule_imports",{"_index":2916,"title":{},"body":{"modules/FeedModule.html":{},"index.html":{}}}],["cluster_servicesmodule",{"_index":3879,"title":{},"body":{"modules/ServicesModule.html":{},"index.html":{}}}],["cluster_servicesmodule_providers",{"_index":3880,"title":{},"body":{"modules/ServicesModule.html":{},"index.html":{}}}],["cluster_settingsmodule",{"_index":3938,"title":{},"body":{"modules/SettingsModule.html":{},"index.html":{}}}],["cluster_settingsmodule_declarations",{"_index":3939,"title":{},"body":{"modules/SettingsModule.html":{},"index.html":{}}}],["cluster_settingsmodule_imports",{"_index":3940,"title":{},"body":{"modules/SettingsModule.html":{},"index.html":{}}}],["cluster_statemodule",{"_index":3973,"title":{},"body":{"modules/StateModule.html":{},"index.html":{}}}],["cluster_statemodule_imports",{"_index":3974,"title":{},"body":{"modules/StateModule.html":{},"index.html":{}}}],["cluster_thirdpartymodule",{"_index":4107,"title":{},"body":{"modules/ThirdpartyModule.html":{},"index.html":{}}}],["cluster_thirdpartymodule_declarations",{"_index":4108,"title":{},"body":{"modules/ThirdpartyModule.html":{},"index.html":{}}}],["cluster_thirdpartymodule_imports",{"_index":4109,"title":{},"body":{"modules/ThirdpartyModule.html":{},"index.html":{}}}],["cluster_utilitiesmodule",{"_index":4913,"title":{},"body":{"modules/UtilitiesModule.html":{},"index.html":{}}}],["cluster_utilitiesmodule_declarations",{"_index":4914,"title":{},"body":{"modules/UtilitiesModule.html":{},"index.html":{}}}],["cluster_utilitiesmodule_exports",{"_index":4915,"title":{},"body":{"modules/UtilitiesModule.html":{},"index.html":{}}}],["clusterlevel",{"_index":4925,"title":{},"body":{"pipes/XAxisTickFormatPipe.html":{}}}],["clustertickstoticks",{"_index":4422,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["code",{"_index":91,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"components/ActionComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"modules/ArchivesModule.html":{},"modules/ArchivesRoutingModule.html":{},"classes/AuthObject.html":{},"interfaces/AuthState.html":{},"injectables/AuthenticationEffects.html":{},"interfaces/AuthenticationModeHandler.html":{},"components/CardComponent.html":{},"components/CardListComponent.html":{},"modules/CardsModule.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckImplicitFlowAuthenticationStatus.html":{},"classes/CheckTokenResponse.html":{},"components/CustomLogoComponent.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailsComponent.html":{},"directives/DraggableDirective.html":{},"components/FeedComponent.html":{},"modules/FeedModule.html":{},"modules/FeedRoutingModule.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/ImplicitlyAuthenticated.html":{},"components/InfoComponent.html":{},"classes/InitAuthStatus.html":{},"components/MenuLinkComponent.html":{},"components/MultiFilterComponent.html":{},"components/NavbarComponent.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"components/ResizableComponent.html":{},"modules/ServicesModule.html":{},"modules/SettingsModule.html":{},"modules/SettingsRoutingModule.html":{},"modules/StateModule.html":{},"components/TagsFilterComponent.html":{},"modules/ThirdpartyModule.html":{},"modules/ThirdpartyRoutingModule.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"classes/UnAuthenticationFromImplicitFlow.html":{},"classes/UselessAuthAction.html":{},"modules/UtilitiesModule.html":{}}}],["codeflow",{"_index":3545,"title":{},"body":{"components/LoginComponent.html":{}}}],["codeprovider",{"_index":3540,"title":{},"body":{"components/LoginComponent.html":{}}}],["collection",{"_index":1965,"title":{},"body":{"interfaces/CardFeedState.html":{}}}],["collectionsize",{"_index":1039,"title":{},"body":{"components/ArchiveListPageComponent.html":{}}}],["collectionsize]=\"collectionsize",{"_index":1057,"title":{},"body":{"components/ArchiveListPageComponent.html":{}}}],["color",{"_index":3629,"title":{},"body":{"components/MenuLinkComponent.html":{},"components/TypeFilterComponent.html":{}}}],["combinelatest",{"_index":961,"title":{},"body":{"components/ArchiveFiltersComponent.html":{},"injectables/AuthenticationEffects.html":{},"injectables/I18nService.html":{},"components/InfoComponent.html":{}}}],["common",{"_index":3192,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["commonmodule",{"_index":665,"title":{},"body":{"modules/AppModule.html":{},"modules/ArchivesModule.html":{},"modules/CardsModule.html":{},"modules/FeedModule.html":{},"modules/ServicesModule.html":{},"modules/SettingsModule.html":{},"modules/StateModule.html":{},"modules/ThirdpartyModule.html":{},"modules/UtilitiesModule.html":{}}}],["comparebylttd(card1",{"_index":1978,"title":{},"body":{"interfaces/CardFeedState.html":{}}}],["comparebylttd(card1,card2",{"_index":1987,"title":{},"body":{"interfaces/CardFeedState.html":{}}}],["comparebypublishdate(card1",{"_index":1981,"title":{},"body":{"interfaces/CardFeedState.html":{}}}],["comparebypublishdate(card1,card2",{"_index":1989,"title":{},"body":{"interfaces/CardFeedState.html":{}}}],["comparebyseverity(card1",{"_index":1975,"title":{},"body":{"interfaces/CardFeedState.html":{}}}],["comparebyseverity(card1,card2",{"_index":1985,"title":{},"body":{"interfaces/CardFeedState.html":{}}}],["comparebyseveritylttdpublishdate(card1",{"_index":1984,"title":{},"body":{"interfaces/CardFeedState.html":{}}}],["comparebystartdate(card1",{"_index":1971,"title":{},"body":{"interfaces/CardFeedState.html":{}}}],["complex",{"_index":2401,"title":{},"body":{"classes/CustomRouterStateSerializer.html":{},"classes/RouterStateUrl.html":{},"modules/StateModule.html":{}}}],["compliant",{"_index":3023,"title":{},"body":{"injectables/FilterService.html":{},"classes/LightCard.html":{},"classes/TimeSpan.html":{},"components/TypeFilterComponent.html":{},"miscellaneous/enumerations.html":{}}}],["component",{"_index":279,"title":{"components/ActionComponent.html":{},"components/AppComponent.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/ConfirmModalComponent.html":{},"components/CustomLogoComponent.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MenuLinkComponent.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/ResizableComponent.html":{},"components/SettingsComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{}},"body":{"components/ActionComponent.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"modules/ArchivesRoutingModule.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/ConfirmModalComponent.html":{},"components/CustomLogoComponent.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"injectables/FeedFiltersEffects.html":{},"modules/FeedRoutingModule.html":{},"classes/Filter.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MenuLinkComponent.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/ResizableComponent.html":{},"components/SettingsComponent.html":{},"interfaces/SettingsInputs.html":{},"modules/SettingsRoutingModule.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"modules/ThirdpartyRoutingModule.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{}}}],["component'},{'name",{"_index":376,"title":{},"body":{"components/ActionComponent.html":{},"components/AppComponent.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/ConfirmModalComponent.html":{},"components/CustomLogoComponent.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MenuLinkComponent.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/ResizableComponent.html":{},"components/SettingsComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{}}}],["component_template",{"_index":352,"title":{},"body":{"components/ActionComponent.html":{},"components/AppComponent.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/ConfirmModalComponent.html":{},"components/CustomLogoComponent.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MenuLinkComponent.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/ResizableComponent.html":{},"components/SettingsComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{}}}],["components",{"_index":281,"title":{},"body":{"components/ActionComponent.html":{},"components/AppComponent.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/ConfirmModalComponent.html":{},"components/CustomLogoComponent.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"classes/FailToUpdateTimeReference.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MenuLinkComponent.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/ResizableComponent.html":{},"components/SettingsComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"classes/Tick.html":{},"classes/TickPayload.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"classes/UpdateTimeReference.html":{},"index.html":{}}}],["components/action/action.component",{"_index":2183,"title":{},"body":{"modules/CardsModule.html":{}}}],["components/action/confirm",{"_index":2184,"title":{},"body":{"modules/CardsModule.html":{}}}],["components/archive",{"_index":1100,"title":{},"body":{"modules/ArchivesModule.html":{}}}],["components/card",{"_index":2177,"title":{},"body":{"modules/CardsModule.html":{},"modules/FeedModule.html":{}}}],["components/card/card.component",{"_index":2176,"title":{},"body":{"modules/CardsModule.html":{}}}],["components/detail/detail.component",{"_index":2179,"title":{},"body":{"modules/CardsModule.html":{}}}],["components/details/details.component",{"_index":2178,"title":{},"body":{"modules/CardsModule.html":{}}}],["components/login/login.component",{"_index":678,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["components/navbar/custom",{"_index":702,"title":{},"body":{"modules/AppModule.html":{}}}],["components/navbar/icon/icon.component",{"_index":679,"title":{},"body":{"modules/AppModule.html":{}}}],["components/navbar/info/info.component",{"_index":697,"title":{},"body":{"modules/AppModule.html":{}}}],["components/navbar/menus/menu",{"_index":699,"title":{},"body":{"modules/AppModule.html":{}}}],["components/navbar/navbar.component",{"_index":677,"title":{},"body":{"modules/AppModule.html":{}}}],["components/no",{"_index":2922,"title":{},"body":{"modules/FeedModule.html":{}}}],["components/resizable/resizable.component",{"_index":4918,"title":{},"body":{"modules/UtilitiesModule.html":{}}}],["components/settings/base",{"_index":3944,"title":{},"body":{"modules/SettingsModule.html":{}}}],["components/settings/email",{"_index":3946,"title":{},"body":{"modules/SettingsModule.html":{}}}],["components/settings/list",{"_index":3947,"title":{},"body":{"modules/SettingsModule.html":{}}}],["components/settings/multi",{"_index":3948,"title":{},"body":{"modules/SettingsModule.html":{}}}],["components/settings/settings.component",{"_index":3943,"title":{},"body":{"modules/SettingsModule.html":{},"modules/SettingsRoutingModule.html":{}}}],["components/settings/text",{"_index":3945,"title":{},"body":{"modules/SettingsModule.html":{}}}],["components/settings/type",{"_index":3950,"title":{},"body":{"modules/SettingsModule.html":{}}}],["components/time",{"_index":2925,"title":{},"body":{"modules/FeedModule.html":{}}}],["computation",{"_index":4543,"title":{},"body":{"classes/TimeReference.html":{}}}],["compute",{"_index":235,"title":{},"body":{"classes/Action.html":{},"classes/ActionStatus.html":{},"components/CardComponent.html":{},"classes/Input.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"components/TimeLineComponent.html":{}}}],["computed",{"_index":3097,"title":{},"body":{"classes/HandleUnexpectedError-4.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{}}}],["computeddate",{"_index":1858,"title":{},"body":{"components/CardComponent.html":{}}}],["computedisplayeddates",{"_index":1812,"title":{},"body":{"components/CardComponent.html":{}}}],["computedisplayeddates(config",{"_index":1824,"title":{},"body":{"components/CardComponent.html":{}}}],["computednow",{"_index":4514,"title":{},"body":{"classes/TimeReference.html":{}}}],["computedoffsetduration",{"_index":4557,"title":{},"body":{"classes/TimeReference.html":{}}}],["computedoffsetinmilliseconds",{"_index":4554,"title":{},"body":{"classes/TimeReference.html":{}}}],["computelistvalidators",{"_index":3469,"title":{},"body":{"components/ListSettingComponent.html":{}}}],["computemultivalidators",{"_index":3692,"title":{},"body":{"components/MultiSettingsComponent.html":{},"components/TypeAheadSettingsComponent.html":{}}}],["computenow",{"_index":4508,"title":{},"body":{"classes/TimeReference.html":{}}}],["computenow(momentnow",{"_index":4522,"title":{},"body":{"classes/TimeReference.html":{}}}],["computenow(momentnow:moment.moment):moment.moment",{"_index":4537,"title":{},"body":{"classes/TimeReference.html":{}}}],["computenow(realnow",{"_index":4525,"title":{},"body":{"classes/TimeReference.html":{}}}],["computenow(realnow:number|moment.moment):moment.moment",{"_index":4538,"title":{},"body":{"classes/TimeReference.html":{}}}],["computenow(timestampnow",{"_index":4519,"title":{},"body":{"classes/TimeReference.html":{}}}],["computenow(timestampnow:number):moment.moment",{"_index":4536,"title":{},"body":{"classes/TimeReference.html":{}}}],["computenowmoment",{"_index":4509,"title":{},"body":{"classes/TimeReference.html":{}}}],["computenowmoment(realnowmoment",{"_index":4528,"title":{},"body":{"classes/TimeReference.html":{}}}],["computeredirecturi",{"_index":1385,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["computetextvalidators",{"_index":2745,"title":{},"body":{"components/EmailSettingComponent.html":{},"components/TextSettingComponent.html":{}}}],["computethirdcssurl",{"_index":4217,"title":{},"body":{"injectables/ThirdsService.html":{}}}],["computethirdcssurl(publisher",{"_index":4166,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["computethirdsmenu",{"_index":4192,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"classes/ThirdsServiceMock.html":{}}}],["concatall",{"_index":4617,"title":{},"body":{"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["conf",{"_index":4327,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["conf[key",{"_index":4503,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["conf[key].foreach(value",{"_index":4501,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["config",{"_index":780,"title":{},"body":{"interfaces/AppState.html":{},"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"components/CardComponent.html":{},"classes/CheckTokenResponse.html":{},"injectables/ConfigEffects.html":{},"interfaces/ConfigState.html":{},"injectables/FeedFiltersEffects.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/LoadConfig.html":{},"classes/LoadConfigFailure.html":{},"classes/LoadConfigSuccess.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"miscellaneous/enumerations.html":{}}}],["config:any",{"_index":2237,"title":{},"body":{"interfaces/ConfigState.html":{}}}],["config_load_max_retries",{"_index":2218,"title":{},"body":{"injectables/ConfigEffects.html":{},"interfaces/ConfigState.html":{}}}],["configactions",{"_index":3074,"title":{},"body":{"classes/HandleUnexpectedError-2.html":{},"classes/LoadConfig.html":{},"classes/LoadConfigFailure.html":{},"classes/LoadConfigSuccess.html":{},"miscellaneous/typealiases.html":{}}}],["configactiontypes",{"_index":1578,"title":{},"body":{"injectables/AuthenticationEffects.html":{},"injectables/ConfigEffects.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/LoadConfig.html":{},"classes/LoadConfigFailure.html":{},"classes/LoadConfigSuccess.html":{},"miscellaneous/enumerations.html":{}}}],["configactiontypes.handleunexpectederror",{"_index":3070,"title":{},"body":{"classes/HandleUnexpectedError-2.html":{},"classes/LoadConfig.html":{},"classes/LoadConfigFailure.html":{},"classes/LoadConfigSuccess.html":{}}}],["configactiontypes.loadconfig",{"_index":3071,"title":{},"body":{"classes/HandleUnexpectedError-2.html":{},"classes/LoadConfig.html":{},"classes/LoadConfigFailure.html":{},"classes/LoadConfigSuccess.html":{}}}],["configactiontypes.loadconfigfailure",{"_index":3072,"title":{},"body":{"classes/HandleUnexpectedError-2.html":{},"classes/LoadConfig.html":{},"classes/LoadConfigFailure.html":{},"classes/LoadConfigSuccess.html":{}}}],["configactiontypes.loadconfigsuccess",{"_index":3073,"title":{},"body":{"classes/HandleUnexpectedError-2.html":{},"classes/LoadConfig.html":{},"classes/LoadConfigFailure.html":{},"classes/LoadConfigSuccess.html":{}}}],["configeffects",{"_index":845,"title":{"injectables/ConfigEffects.html":{}},"body":{"interfaces/AppState.html":{},"injectables/ConfigEffects.html":{}}}],["configinitialstate",{"_index":2238,"title":{},"body":{"interfaces/ConfigState.html":{}}}],["configloaded",{"_index":549,"title":{},"body":{"components/AppComponent.html":{}}}],["configreducer",{"_index":821,"title":{},"body":{"interfaces/AppState.html":{}}}],["configservice",{"_index":2199,"title":{"injectables/ConfigService.html":{}},"body":{"injectables/ConfigEffects.html":{},"injectables/ConfigService.html":{},"modules/ServicesModule.html":{},"index.html":{}}}],["configstate",{"_index":785,"title":{"interfaces/ConfigState.html":{}},"body":{"interfaces/AppState.html":{},"interfaces/ConfigState.html":{}}}],["configtags",{"_index":2864,"title":{},"body":{"injectables/FeedFiltersEffects.html":{}}}],["configtags.length",{"_index":2865,"title":{},"body":{"injectables/FeedFiltersEffects.html":{}}}],["configue",{"_index":4342,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["configuration",{"_index":1195,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"components/CardComponent.html":{},"classes/CheckTokenResponse.html":{},"injectables/ConfigEffects.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/LoadConfig.html":{},"classes/LoadConfigFailure.html":{},"classes/LoadConfigSuccess.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"miscellaneous/enumerations.html":{}}}],["configured",{"_index":751,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/CustomLogoComponent.html":{},"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["configurl",{"_index":2228,"title":{},"body":{"injectables/ConfigService.html":{}}}],["confirm",{"_index":374,"title":{},"body":{"components/ActionComponent.html":{},"components/AppComponent.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"classes/CheckTokenResponse.html":{},"components/ConfirmModalComponent.html":{},"components/CustomLogoComponent.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"classes/ImplicitAuthenticationHandler.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MenuLinkComponent.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"components/ResizableComponent.html":{},"components/SettingsComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{}}}],["confirmmodalcomponent",{"_index":373,"title":{"components/ConfirmModalComponent.html":{}},"body":{"components/ActionComponent.html":{},"components/AppComponent.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"modules/CardsModule.html":{},"components/ConfirmModalComponent.html":{},"components/CustomLogoComponent.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MenuLinkComponent.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/ResizableComponent.html":{},"components/SettingsComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"injectables/ThirdActionService.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"index.html":{}}}],["confzoom",{"_index":4328,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["connect",{"_index":1455,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["connect/logout?redirect_uri=${redirect",{"_index":1608,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["connection",{"_index":1254,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["consequence",{"_index":1498,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["consist",{"_index":1955,"title":{},"body":{"interfaces/CardFeedState.html":{},"interfaces/TimelineState.html":{}}}],["console.error(\"no",{"_index":2323,"title":{},"body":{"components/CustomLogoComponent.html":{}}}],["console.error('an",{"_index":2148,"title":{},"body":{"injectables/CardService.html":{}}}],["console.error('error",{"_index":4628,"title":{},"body":{"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["console.error(`error",{"_index":2144,"title":{},"body":{"injectables/CardService.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["console.error(err",{"_index":1526,"title":{},"body":{"injectables/AuthenticationEffects.html":{},"injectables/MenuEffects.html":{}}}],["console.error(error",{"_index":1250,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"injectables/TimeEffects.html":{}}}],["console.error(message",{"_index":1598,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["console.log(\"calcheightdirective",{"_index":1781,"title":{},"body":{"directives/CalcHeightDirective.html":{}}}],["console.log(\"menulinkcomponent",{"_index":3624,"title":{},"body":{"components/MenuLinkComponent.html":{}}}],["console.log(\"ok",{"_index":4881,"title":{},"body":{"injectables/UserEffects.html":{}}}],["console.log(\"transitioncreateuserapplication",{"_index":4889,"title":{},"body":{"injectables/UserEffects.html":{}}}],["console.log(\"user",{"_index":4906,"title":{},"body":{"injectables/UserService.html":{}}}],["console.log('card",{"_index":2647,"title":{},"body":{"components/DetailComponent.html":{}}}],["console.log('listsettingcomponent.isequal",{"_index":3497,"title":{},"body":{"components/ListSettingComponent.html":{}}}],["console.log('no",{"_index":1415,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["console.log('textsettingcomponent.isequal",{"_index":4037,"title":{},"body":{"components/TextSettingComponent.html":{}}}],["console.log('unknown",{"_index":4097,"title":{},"body":{"injectables/ThirdActionService.html":{}}}],["console.log('your",{"_index":1380,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["console.log(`card",{"_index":2648,"title":{},"body":{"components/DetailComponent.html":{}}}],["console.log(`location",{"_index":603,"title":{},"body":{"components/AppComponent.html":{}}}],["console.log(`no",{"_index":3448,"title":{},"body":{"injectables/LightCardEffects.html":{}}}],["console.log(`something",{"_index":1925,"title":{},"body":{"components/CardDetailsComponent.html":{}}}],["console.log(`this",{"_index":2606,"title":{},"body":{"components/DetailComponent.html":{}}}],["console.log(err",{"_index":4158,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["console.log(error",{"_index":3462,"title":{},"body":{"injectables/LightCardEffects.html":{},"injectables/UserEffects.html":{}}}],["console.log(this.disabled",{"_index":2773,"title":{},"body":{"components/EmailSettingComponent.html":{}}}],["consolidatethirdandversions",{"_index":4728,"title":{},"body":{"injectables/TranslateEffects.html":{}}}],["consolidatethirdandversions(thirdsandversions",{"_index":4738,"title":{},"body":{"injectables/TranslateEffects.html":{}}}],["consolidatethirdandversions(thirdsandversions:transitionalthirdwithitsversion",{"_index":4689,"title":{},"body":{"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["const",{"_index":205,"title":{},"body":{"classes/Action.html":{},"classes/ActionStatus.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"interfaces/AppState.html":{},"injectables/ArchiveEffects.html":{},"components/ArchiveFiltersComponent.html":{},"interfaces/ArchiveState.html":{},"modules/ArchivesRoutingModule.html":{},"classes/AuthObject.html":{},"interfaces/AuthState.html":{},"injectables/AuthenticationEffects.html":{},"interfaces/AuthenticationModeHandler.html":{},"components/BaseSettingComponent.html":{},"directives/CalcHeightDirective.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"interfaces/CardFeedState.html":{},"components/CardListComponent.html":{},"injectables/CardService.html":{},"interfaces/CardState.html":{},"classes/CheckTokenResponse.html":{},"interfaces/ConfigState.html":{},"injectables/CustomRouterEffects.html":{},"classes/CustomRouterStateSerializer.html":{},"classes/DateTimeNgb.html":{},"components/DetailComponent.html":{},"components/EmailSettingComponent.html":{},"injectables/FeedFiltersEffects.html":{},"modules/FeedRoutingModule.html":{},"injectables/FilterService.html":{},"injectables/HandlebarsService.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/Input.html":{},"injectables/LightCardEffects.html":{},"components/LoginComponent.html":{},"interfaces/MenuState.html":{},"components/MultiFilterComponent.html":{},"classes/ParameterListItem.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"classes/Process.html":{},"components/ResizableComponent.html":{},"classes/RouterStateUrl.html":{},"modules/SettingsRoutingModule.html":{},"interfaces/SettingsState.html":{},"classes/State.html":{},"components/TextSettingComponent.html":{},"classes/Third.html":{},"injectables/ThirdActionService.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"modules/ThirdpartyRoutingModule.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"injectables/TimeEffects.html":{},"components/TimeLineComponent.html":{},"classes/TimeReference.html":{},"interfaces/TimeState.html":{},"interfaces/TimelineState.html":{},"interceptors/TokenInjector.html":{},"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{},"interfaces/TranslationState.html":{},"injectables/UserEffects.html":{},"interfaces/UserState.html":{},"pipes/XAxisTickFormatPipe.html":{}}}],["constants",{"_index":2904,"title":{},"body":{"injectables/FeedFiltersEffects.html":{}}}],["constructmomentobj",{"_index":4330,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["constructmomentobj(mommentojb",{"_index":4333,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["constructor",{"_index":39,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/Action.html":{},"components/ActionComponent.html":{},"classes/ActionStatus.html":{},"classes/AddActionsAppear.html":{},"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"components/AppComponent.html":{},"classes/ApplyFilter.html":{},"injectables/ArchiveEffects.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"classes/ArchiveQuerySuccess.html":{},"components/ArchivesComponent.html":{},"classes/AuthObject.html":{},"injectables/AuthenticationEffects.html":{},"interfaces/AuthenticationModeHandler.html":{},"components/BaseSettingComponent.html":{},"directives/CalcHeightDirective.html":{},"classes/Card.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"injectables/CardEffects.html":{},"components/CardListComponent.html":{},"classes/CardOperation.html":{},"injectables/CardOperationEffects.html":{},"injectables/CardService.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckImplicitFlowAuthenticationStatus.html":{},"classes/CheckTokenResponse.html":{},"classes/ClearLightCardSelection.html":{},"injectables/ConfigEffects.html":{},"injectables/ConfigService.html":{},"components/ConfirmModalComponent.html":{},"classes/CreateUserApplication.html":{},"classes/CreateUserApplicationOnFailure.html":{},"classes/CreateUserApplicationOnSuccess.html":{},"components/CustomLogoComponent.html":{},"injectables/CustomRouterEffects.html":{},"classes/CustomRouterStateSerializer.html":{},"classes/DateTimeNgb.html":{},"components/DatetimeFilterComponent.html":{},"classes/DelayedLightCardUpdate.html":{},"classes/Detail.html":{},"components/DetailComponent.html":{},"classes/DetailContext.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"classes/EmptyLightCards.html":{},"classes/FailToUpdateTimeReference.html":{},"components/FeedComponent.html":{},"injectables/FeedFiltersEffects.html":{},"classes/Filter.html":{},"injectables/FilterService.html":{},"components/FiltersComponent.html":{},"classes/GuidService.html":{},"classes/HandleUnexpectedError.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/HandleUnexpectedError-4.html":{},"classes/HandleUnexpectedError-5.html":{},"classes/HandleUnexpectedError-6.html":{},"injectables/HandlebarsService.html":{},"classes/I18n.html":{},"injectables/I18nService.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/ImplicitlyAuthenticated.html":{},"components/InfoComponent.html":{},"classes/InitAuthStatus.html":{},"classes/InitFilters.html":{},"classes/InitTimeline.html":{},"classes/Input.html":{},"classes/LightCard.html":{},"classes/LightCardAlreadyUpdated.html":{},"injectables/LightCardEffects.html":{},"components/ListSettingComponent.html":{},"classes/LoadArchivedCard.html":{},"classes/LoadArchivedCardFailure.html":{},"classes/LoadArchivedCardSuccess.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{},"classes/LoadConfigFailure.html":{},"classes/LoadConfigSuccess.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/LoadSettingsFailure.html":{},"classes/LoadSettingsSuccess.html":{},"components/LoginComponent.html":{},"injectables/MenuEffects.html":{},"components/MenuLinkComponent.html":{},"classes/Message.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"injectables/NotifyService.html":{},"classes/Page.html":{},"classes/ParameterListItem.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"classes/PatchSettings.html":{},"classes/PatchSettingsFailure.html":{},"classes/PatchSettingsSuccess.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/Process.html":{},"classes/RejectLogIn.html":{},"classes/RemoveLightCard.html":{},"components/ResizableComponent.html":{},"classes/RouterStateUrl.html":{},"classes/SelectArchivedLightCard.html":{},"classes/SelectLightCard.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{},"classes/SendArchiveQuery.html":{},"modules/ServicesModule.html":{},"classes/SetCardDataTimeline.html":{},"components/SettingsComponent.html":{},"injectables/SettingsEffects.html":{},"injectables/SettingsService.html":{},"classes/State.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"classes/Third.html":{},"classes/ThirdActionAlreadyLoaded.html":{},"classes/ThirdActionAlreadyUpdated.html":{},"injectables/ThirdActionService.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"classes/Tick.html":{},"classes/TickPayload.html":{},"injectables/TimeEffects.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"classes/TimeReference.html":{},"classes/TimeSpan.html":{},"interceptors/TokenInjector.html":{},"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"classes/UnAuthenticationFromImplicitFlow.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateAnActionFailure.html":{},"classes/UpdateArchiveFilter.html":{},"classes/UpdateArchivePage.html":{},"classes/UpdateTimeReference.html":{},"classes/UpdateTranslation.html":{},"classes/UpdateTranslationFailed.html":{},"classes/UpdateTranslationSuccessful.html":{},"classes/UpdatedSubscription.html":{},"classes/UselessAuthAction.html":{},"classes/User.html":{},"classes/UserApplicationNotRegistered.html":{},"classes/UserApplicationRegistered.html":{},"classes/UserContext.html":{},"injectables/UserEffects.html":{},"injectables/UserService.html":{}}}],["constructor(_modalservice",{"_index":302,"title":{},"body":{"components/ActionComponent.html":{}}}],["constructor(access_token",{"_index":1128,"title":{},"body":{"classes/AuthObject.html":{}}}],["constructor(authenticationservice",{"_index":3349,"title":{},"body":{"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["constructor(authservice",{"_index":4592,"title":{},"body":{"interceptors/TokenInjector.html":{}}}],["constructor(card",{"_index":2655,"title":{},"body":{"classes/DetailContext.html":{}}}],["constructor(currenttime",{"_index":4266,"title":{},"body":{"classes/TickPayload.html":{}}}],["constructor(date",{"_index":2421,"title":{},"body":{"classes/DateTimeNgb.html":{}}}],["constructor(details",{"_index":3971,"title":{},"body":{"classes/State.html":{}}}],["constructor(domsanitizationservice",{"_index":2297,"title":{},"body":{"components/CustomLogoComponent.html":{}}}],["constructor(el",{"_index":1715,"title":{},"body":{"directives/CalcHeightDirective.html":{}}}],["constructor(element",{"_index":2549,"title":{},"body":{"components/DetailComponent.html":{}}}],["constructor(formbuilder",{"_index":3999,"title":{},"body":{"components/TagsFilterComponent.html":{}}}],["constructor(funktion",{"_index":2974,"title":{},"body":{"classes/Filter.html":{}}}],["constructor(httpclient",{"_index":2083,"title":{},"body":{"injectables/CardService.html":{},"injectables/ConfigService.html":{},"injectables/SettingsService.html":{},"injectables/ThirdActionService.html":{},"injectables/ThirdsService.html":{},"injectables/UserService.html":{}}}],["constructor(id",{"_index":4103,"title":{},"body":{"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{}}}],["constructor(identifier",{"_index":3804,"title":{},"body":{"classes/PayloadForSuccessfulAuthentication.html":{}}}],["constructor(key",{"_index":3265,"title":{},"body":{"classes/I18n.html":{}}}],["constructor(label",{"_index":435,"title":{},"body":{"classes/ActionStatus.html":{},"classes/ParameterListItem.html":{}}}],["constructor(login",{"_index":4845,"title":{},"body":{"classes/User.html":{},"classes/UserContext.html":{}}}],["constructor(message",{"_index":3639,"title":{},"body":{"classes/Message.html":{}}}],["constructor(modal",{"_index":2244,"title":{},"body":{"components/ConfirmModalComponent.html":{}}}],["constructor(name",{"_index":4039,"title":{},"body":{"classes/Third.html":{}}}],["constructor(number",{"_index":2012,"title":{},"body":{"classes/CardOperation.html":{}}}],["constructor(payload",{"_index":40,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AddActionsAppear.html":{},"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"classes/ApplyFilter.html":{},"classes/ArchiveQuerySuccess.html":{},"classes/CreateUserApplication.html":{},"classes/CreateUserApplicationOnFailure.html":{},"classes/CreateUserApplicationOnSuccess.html":{},"classes/DelayedLightCardUpdate.html":{},"classes/FailToUpdateTimeReference.html":{},"classes/HandleUnexpectedError.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/HandleUnexpectedError-4.html":{},"classes/HandleUnexpectedError-5.html":{},"classes/HandleUnexpectedError-6.html":{},"classes/InitAuthStatus.html":{},"classes/InitFilters.html":{},"classes/InitTimeline.html":{},"classes/LoadArchivedCard.html":{},"classes/LoadArchivedCardFailure.html":{},"classes/LoadArchivedCardSuccess.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{},"classes/LoadConfigFailure.html":{},"classes/LoadConfigSuccess.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/LoadSettingsFailure.html":{},"classes/LoadSettingsSuccess.html":{},"classes/PatchSettings.html":{},"classes/PatchSettingsFailure.html":{},"classes/PatchSettingsSuccess.html":{},"classes/RejectLogIn.html":{},"classes/RemoveLightCard.html":{},"classes/SelectArchivedLightCard.html":{},"classes/SelectLightCard.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{},"classes/SendArchiveQuery.html":{},"classes/SetCardDataTimeline.html":{},"classes/Tick.html":{},"classes/TryToLogIn.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateArchiveFilter.html":{},"classes/UpdateArchivePage.html":{},"classes/UpdateTimeReference.html":{},"classes/UpdateTranslation.html":{},"classes/UpdateTranslationFailed.html":{},"classes/UpdateTranslationSuccessful.html":{},"classes/UserApplicationNotRegistered.html":{},"classes/UserApplicationRegistered.html":{}}}],["constructor(platformlocation",{"_index":3297,"title":{},"body":{"components/IconComponent.html":{}}}],["constructor(private",{"_index":599,"title":{},"body":{"components/AppComponent.html":{},"injectables/ArchiveEffects.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"classes/AuthObject.html":{},"injectables/AuthenticationEffects.html":{},"interfaces/AuthenticationModeHandler.html":{},"directives/CalcHeightDirective.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"injectables/CardEffects.html":{},"components/CardListComponent.html":{},"injectables/CardOperationEffects.html":{},"injectables/CardService.html":{},"classes/CheckTokenResponse.html":{},"injectables/ConfigEffects.html":{},"injectables/ConfigService.html":{},"injectables/CustomRouterEffects.html":{},"components/DetailComponent.html":{},"components/FeedComponent.html":{},"injectables/FeedFiltersEffects.html":{},"components/FiltersComponent.html":{},"injectables/HandlebarsService.html":{},"injectables/I18nService.html":{},"components/IframeDisplayComponent.html":{},"classes/ImplicitAuthenticationHandler.html":{},"components/InfoComponent.html":{},"injectables/LightCardEffects.html":{},"components/LoginComponent.html":{},"injectables/MenuEffects.html":{},"components/MenuLinkComponent.html":{},"components/MultiFilterComponent.html":{},"components/NavbarComponent.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"components/SettingsComponent.html":{},"injectables/SettingsEffects.html":{},"interfaces/SettingsInputs.html":{},"injectables/SettingsService.html":{},"components/TagsFilterComponent.html":{},"injectables/ThirdActionService.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"injectables/TimeEffects.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"interceptors/TokenInjector.html":{},"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{},"components/TypeFilterComponent.html":{},"injectables/UserEffects.html":{},"injectables/UserService.html":{},"pipes/XAxisTickFormatPipe.html":{}}}],["constructor(protected",{"_index":1666,"title":{},"body":{"components/BaseSettingComponent.html":{},"components/EmailSettingComponent.html":{},"components/ListSettingComponent.html":{},"components/MultiSettingsComponent.html":{},"components/TextSettingComponent.html":{},"components/TypeAheadSettingsComponent.html":{}}}],["constructor(public",{"_index":98,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/AddActionsAppear.html":{},"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"classes/ApplyFilter.html":{},"classes/ArchiveQuerySuccess.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckImplicitFlowAuthenticationStatus.html":{},"classes/ClearCard.html":{},"classes/ClearLightCardSelection.html":{},"components/ConfirmModalComponent.html":{},"classes/CreateUserApplication.html":{},"classes/CreateUserApplicationOnFailure.html":{},"classes/CreateUserApplicationOnSuccess.html":{},"components/CustomLogoComponent.html":{},"classes/DelayedLightCardUpdate.html":{},"classes/EmptyLightCards.html":{},"classes/FailToUpdateTimeReference.html":{},"classes/HandleUnexpectedError.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/HandleUnexpectedError-4.html":{},"classes/HandleUnexpectedError-5.html":{},"classes/HandleUnexpectedError-6.html":{},"classes/ImplicitlyAuthenticated.html":{},"classes/InitAuthStatus.html":{},"classes/InitFilters.html":{},"classes/InitTimeline.html":{},"classes/LightCardAlreadyUpdated.html":{},"classes/LoadArchivedCard.html":{},"classes/LoadArchivedCardFailure.html":{},"classes/LoadArchivedCardSuccess.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{},"classes/LoadConfig.html":{},"classes/LoadConfigFailure.html":{},"classes/LoadConfigSuccess.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/LoadSettings.html":{},"classes/LoadSettingsFailure.html":{},"classes/LoadSettingsSuccess.html":{},"classes/PatchSettings.html":{},"classes/PatchSettingsFailure.html":{},"classes/PatchSettingsSuccess.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RefreshTranslation.html":{},"classes/RejectLogIn.html":{},"classes/RemoveLightCard.html":{},"classes/SelectArchivedLightCard.html":{},"classes/SelectLightCard.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{},"classes/SendArchiveQuery.html":{},"classes/SetCardDataTimeline.html":{},"classes/ThirdActionAlreadyLoaded.html":{},"classes/ThirdActionAlreadyUpdated.html":{},"classes/Tick.html":{},"classes/TickPayload.html":{},"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{},"classes/TranslationUpToDate.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"classes/UnAuthenticationFromImplicitFlow.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateAnActionFailure.html":{},"classes/UpdateArchiveFilter.html":{},"classes/UpdateArchivePage.html":{},"classes/UpdateTimeReference.html":{},"classes/UpdateTranslation.html":{},"classes/UpdateTranslationFailed.html":{},"classes/UpdateTranslationSuccessful.html":{},"classes/UpdatedSubscription.html":{},"classes/UselessAuthAction.html":{},"classes/UserApplicationNotRegistered.html":{},"classes/UserApplicationRegistered.html":{}}}],["constructor(readonly",{"_index":2434,"title":{},"body":{"classes/DateTimeNgb.html":{},"classes/DetailContext.html":{},"classes/TimeReference.html":{}}}],["constructor(referencetime",{"_index":4512,"title":{},"body":{"classes/TimeReference.html":{}}}],["constructor(router",{"_index":1818,"title":{},"body":{"components/CardComponent.html":{}}}],["constructor(start",{"_index":4574,"title":{},"body":{"classes/TimeSpan.html":{}}}],["constructor(states",{"_index":3812,"title":{},"body":{"classes/Process.html":{}}}],["constructor(store",{"_index":556,"title":{},"body":{"components/AppComponent.html":{},"injectables/ArchiveEffects.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"injectables/AuthenticationEffects.html":{},"components/BaseSettingComponent.html":{},"components/CardDetailsComponent.html":{},"injectables/CardEffects.html":{},"components/CardListComponent.html":{},"injectables/CardOperationEffects.html":{},"injectables/ConfigEffects.html":{},"injectables/CustomRouterEffects.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"injectables/FeedFiltersEffects.html":{},"components/FiltersComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"injectables/LightCardEffects.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"injectables/MenuEffects.html":{},"components/MenuLinkComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/SettingsComponent.html":{},"injectables/SettingsEffects.html":{},"components/TextSettingComponent.html":{},"injectables/TimeEffects.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"injectables/TranslateEffects.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"injectables/UserEffects.html":{}}}],["constructor(sub",{"_index":2189,"title":{},"body":{"classes/CheckTokenResponse.html":{}}}],["constructor(third",{"_index":4613,"title":{},"body":{"classes/TransitionalThirdWithItSVersion.html":{}}}],["constructor(thirdsservice",{"_index":4119,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["constructor(time",{"_index":3143,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["constructor(titleposition",{"_index":2533,"title":{},"body":{"classes/Detail.html":{}}}],["constructor(totalpages",{"_index":3788,"title":{},"body":{"classes/Page.html":{}}}],["constructor(translate",{"_index":3269,"title":{},"body":{"injectables/I18nService.html":{}}}],["constructor(translateservice",{"_index":3680,"title":{},"body":{"components/MultiFilterComponent.html":{}}}],["constructor(type",{"_index":168,"title":{},"body":{"classes/Action.html":{},"classes/Input.html":{}}}],["constructor(uid",{"_index":1787,"title":{},"body":{"classes/Card.html":{},"classes/LightCard.html":{}}}],["constructor(url",{"_index":3865,"title":{},"body":{"classes/RouterStateUrl.html":{}}}],["constructorcheckimplicitflowauthenticationstatus",{"_index":1585,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["consume",{"_index":151,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckImplicitFlowAuthenticationStatus.html":{},"classes/ImplicitlyAuthenticated.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"classes/UnAuthenticationFromImplicitFlow.html":{},"classes/UselessAuthAction.html":{}}}],["contain",{"_index":2838,"title":{},"body":{"components/FeedComponent.html":{}}}],["containing",{"_index":29,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckImplicitFlowAuthenticationStatus.html":{},"injectables/CustomRouterEffects.html":{},"classes/ImplicitlyAuthenticated.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"classes/UnAuthenticationFromImplicitFlow.html":{},"classes/UselessAuthAction.html":{}}}],["contains",{"_index":511,"title":{},"body":{"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ClearLightCardSelection.html":{},"classes/CustomRouterStateSerializer.html":{},"classes/DelayedLightCardUpdate.html":{},"classes/EmptyLightCards.html":{},"classes/FailToUpdateTimeReference.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/HandleUnexpectedError-4.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/LightCardAlreadyUpdated.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"classes/RemoveLightCard.html":{},"classes/RouterStateUrl.html":{},"classes/SelectLightCard.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{},"classes/ThirdActionAlreadyLoaded.html":{},"classes/ThirdActionAlreadyUpdated.html":{},"classes/Tick.html":{},"classes/TickPayload.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateAnActionFailure.html":{},"classes/UpdateTimeReference.html":{},"classes/UpdatedSubscription.html":{},"miscellaneous/enumerations.html":{}}}],["content",{"_index":631,"title":{},"body":{"components/AppComponent.html":{},"components/ArchiveListComponent.html":{},"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"directives/CalcHeightDirective.html":{},"components/CardListComponent.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/Page.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["contentchildren",{"_index":2676,"title":{},"body":{"components/DetailsComponent.html":{}}}],["contentchildren(detailcomponent",{"_index":2673,"title":{},"body":{"components/DetailsComponent.html":{}}}],["contentstyle",{"_index":175,"title":{},"body":{"classes/Action.html":{},"classes/ActionStatus.html":{},"classes/Input.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{}}}],["context",{"_index":3149,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["context.model",{"_index":2582,"title":{},"body":{"components/DetailComponent.html":{},"classes/DetailContext.html":{},"injectables/HandlebarsService.html":{}}}],["context.model.ts",{"_index":2654,"title":{},"body":{"classes/DetailContext.html":{},"classes/UserContext.html":{}}}],["context.model.ts:12",{"_index":2656,"title":{},"body":{"classes/DetailContext.html":{}}}],["context.model.ts:9",{"_index":4855,"title":{},"body":{"classes/UserContext.html":{}}}],["control",{"_index":3478,"title":{},"body":{"components/ListSettingComponent.html":{}}}],["controlvalueaccessor",{"_index":2466,"title":{},"body":{"components/DatetimeFilterComponent.html":{}}}],["convert",{"_index":1303,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"components/BaseSettingComponent.html":{},"classes/CheckTokenResponse.html":{},"components/EmailSettingComponent.html":{},"classes/ImplicitAuthenticationHandler.html":{},"components/ListSettingComponent.html":{},"components/MultiSettingsComponent.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"components/TextSettingComponent.html":{},"components/TypeAheadSettingsComponent.html":{}}}],["convert(payload",{"_index":1338,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["convert(value",{"_index":1639,"title":{},"body":{"components/BaseSettingComponent.html":{},"components/EmailSettingComponent.html":{},"components/ListSettingComponent.html":{},"components/MultiSettingsComponent.html":{},"components/TextSettingComponent.html":{},"components/TypeAheadSettingsComponent.html":{}}}],["convert(value:any):any",{"_index":1696,"title":{},"body":{"components/BaseSettingComponent.html":{}}}],["convertjsontoi18nobject",{"_index":4218,"title":{},"body":{"injectables/ThirdsService.html":{}}}],["convertjsontoi18nobject(locale",{"_index":4175,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["convertspeedintoenum",{"_index":4510,"title":{},"body":{"classes/TimeReference.html":{}}}],["convertspeedintoenum(key",{"_index":4531,"title":{},"body":{"classes/TimeReference.html":{}}}],["converttypeintoenum",{"_index":2011,"title":{},"body":{"classes/CardOperation.html":{}}}],["converttypeintoenum(key",{"_index":2017,"title":{},"body":{"classes/CardOperation.html":{}}}],["converttypeintoenum(key:string",{"_index":2019,"title":{},"body":{"classes/CardOperation.html":{}}}],["copy",{"_index":341,"title":{},"body":{"components/ActionComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"modules/ArchivesModule.html":{},"modules/ArchivesRoutingModule.html":{},"components/CardComponent.html":{},"components/CardListComponent.html":{},"modules/CardsModule.html":{},"components/CustomLogoComponent.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailsComponent.html":{},"components/FeedComponent.html":{},"modules/FeedModule.html":{},"modules/FeedRoutingModule.html":{},"classes/Filter.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/MenuLinkComponent.html":{},"components/MultiFilterComponent.html":{},"components/NavbarComponent.html":{},"components/ResizableComponent.html":{},"modules/ServicesModule.html":{},"modules/SettingsModule.html":{},"modules/SettingsRoutingModule.html":{},"modules/StateModule.html":{},"components/TagsFilterComponent.html":{},"modules/ThirdpartyModule.html":{},"modules/ThirdpartyRoutingModule.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"modules/UtilitiesModule.html":{}}}],["copyright",{"_index":329,"title":{},"body":{"components/ActionComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"modules/ArchivesModule.html":{},"modules/ArchivesRoutingModule.html":{},"components/CardComponent.html":{},"components/CardListComponent.html":{},"modules/CardsModule.html":{},"components/CustomLogoComponent.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailsComponent.html":{},"components/FeedComponent.html":{},"modules/FeedModule.html":{},"modules/FeedRoutingModule.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/MenuLinkComponent.html":{},"components/MultiFilterComponent.html":{},"components/NavbarComponent.html":{},"components/ResizableComponent.html":{},"modules/ServicesModule.html":{},"modules/SettingsModule.html":{},"modules/SettingsRoutingModule.html":{},"modules/StateModule.html":{},"components/TagsFilterComponent.html":{},"modules/ThirdpartyModule.html":{},"modules/ThirdpartyRoutingModule.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"modules/UtilitiesModule.html":{}}}],["core",{"_index":691,"title":{},"body":{"modules/AppModule.html":{},"modules/FeedModule.html":{},"dependencies.html":{}}}],["correct",{"_index":4937,"title":{},"body":{"pipes/XAxisTickFormatPipe.html":{}}}],["correctly",{"_index":1259,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/HandleUnexpectedError-4.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{}}}],["corresponding",{"_index":1426,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"injectables/MenuEffects.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"injectables/TimeEffects.html":{}}}],["create",{"_index":27,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckImplicitFlowAuthenticationStatus.html":{},"classes/CheckTokenResponse.html":{},"classes/CreateUserApplication.html":{},"classes/CreateUserApplicationOnFailure.html":{},"classes/CreateUserApplicationOnSuccess.html":{},"classes/HandleUnexpectedError-6.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/ImplicitlyAuthenticated.html":{},"classes/InitAuthStatus.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"classes/UnAuthenticationFromImplicitFlow.html":{},"classes/UselessAuthAction.html":{},"classes/UserApplicationNotRegistered.html":{},"classes/UserApplicationRegistered.html":{},"injectables/UserEffects.html":{},"miscellaneous/enumerations.html":{}}}],["createentityadapter",{"_index":1968,"title":{},"body":{"interfaces/CardFeedState.html":{}}}],["createformgroup",{"_index":3998,"title":{},"body":{"components/TagsFilterComponent.html":{},"components/TimeFilterComponent.html":{},"components/TypeFilterComponent.html":{}}}],["createnotification",{"_index":3772,"title":{},"body":{"injectables/NotifyService.html":{}}}],["createnotification(title",{"_index":3776,"title":{},"body":{"injectables/NotifyService.html":{}}}],["createuserapplication",{"_index":2262,"title":{"classes/CreateUserApplication.html":{}},"body":{"classes/CreateUserApplication.html":{},"classes/CreateUserApplicationOnFailure.html":{},"classes/CreateUserApplicationOnSuccess.html":{},"classes/HandleUnexpectedError-6.html":{},"classes/UserApplicationNotRegistered.html":{},"classes/UserApplicationRegistered.html":{},"injectables/UserEffects.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["createuserapplication({user",{"_index":4890,"title":{},"body":{"injectables/UserEffects.html":{}}}],["createuserapplicationonfailure",{"_index":2270,"title":{"classes/CreateUserApplicationOnFailure.html":{}},"body":{"classes/CreateUserApplication.html":{},"classes/CreateUserApplicationOnFailure.html":{},"classes/CreateUserApplicationOnSuccess.html":{},"classes/HandleUnexpectedError-6.html":{},"classes/UserApplicationNotRegistered.html":{},"classes/UserApplicationRegistered.html":{},"injectables/UserEffects.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["createuserapplicationonfailure({error",{"_index":4885,"title":{},"body":{"injectables/UserEffects.html":{}}}],["createuserapplicationonsuccess",{"_index":2269,"title":{"classes/CreateUserApplicationOnSuccess.html":{}},"body":{"classes/CreateUserApplication.html":{},"classes/CreateUserApplicationOnFailure.html":{},"classes/CreateUserApplicationOnSuccess.html":{},"classes/HandleUnexpectedError-6.html":{},"classes/UserApplicationNotRegistered.html":{},"classes/UserApplicationRegistered.html":{},"injectables/UserEffects.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["createuserapplicationonsuccess({user",{"_index":4883,"title":{},"body":{"injectables/UserEffects.html":{}}}],["creation",{"_index":2272,"title":{},"body":{"classes/CreateUserApplication.html":{},"classes/CreateUserApplicationOnFailure.html":{},"classes/CreateUserApplicationOnSuccess.html":{},"classes/HandleUnexpectedError-6.html":{},"classes/UserApplicationNotRegistered.html":{},"classes/UserApplicationRegistered.html":{},"injectables/UserEffects.html":{},"miscellaneous/enumerations.html":{}}}],["css",{"_index":2601,"title":{},"body":{"components/DetailComponent.html":{},"directives/DraggableDirective.html":{}}}],["csses",{"_index":197,"title":{},"body":{"classes/Action.html":{},"classes/ActionStatus.html":{},"classes/Input.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{}}}],["cssurl",{"_index":2596,"title":{},"body":{"components/DetailComponent.html":{}}}],["curr",{"_index":1773,"title":{},"body":{"directives/CalcHeightDirective.html":{}}}],["current",{"_index":109,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"components/AppComponent.html":{},"injectables/ArchiveEffects.html":{},"injectables/AuthenticationEffects.html":{},"components/CardComponent.html":{},"injectables/CardOperationEffects.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckImplicitFlowAuthenticationStatus.html":{},"classes/ClearLightCardSelection.html":{},"classes/CustomRouterStateSerializer.html":{},"classes/DelayedLightCardUpdate.html":{},"classes/EmptyLightCards.html":{},"classes/FailToUpdateTimeReference.html":{},"classes/Filter.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/ImplicitlyAuthenticated.html":{},"classes/InitAuthStatus.html":{},"classes/LightCardAlreadyUpdated.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/RemoveLightCard.html":{},"classes/RouterStateUrl.html":{},"classes/SelectLightCard.html":{},"classes/ThirdActionAlreadyLoaded.html":{},"classes/ThirdActionAlreadyUpdated.html":{},"classes/Tick.html":{},"classes/TickPayload.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"classes/UnAuthenticationFromImplicitFlow.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateAnActionFailure.html":{},"classes/UpdateTimeReference.html":{},"classes/UpdatedSubscription.html":{},"classes/UselessAuthAction.html":{},"miscellaneous/enumerations.html":{}}}],["currentactionpath",{"_index":295,"title":{},"body":{"components/ActionComponent.html":{},"injectables/ThirdActionService.html":{}}}],["currentauthmodehandler",{"_index":1296,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["currentauthmodehandler.extracttoken",{"_index":1297,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["currentcachedversions",{"_index":4713,"title":{},"body":{"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["currentcard",{"_index":2538,"title":{},"body":{"components/DetailComponent.html":{}}}],["currentdate",{"_index":4577,"title":{},"body":{"interfaces/TimeState.html":{}}}],["currenthreflocation",{"_index":1613,"title":{},"body":{"interfaces/AuthenticationModeHandler.html":{}}}],["currentinputversions",{"_index":4711,"title":{},"body":{"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["currentlocationhref",{"_index":3353,"title":{},"body":{"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["currentlocationhref.indexof(searchcodestring",{"_index":1446,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["currentlocationhref.substring(foundindex",{"_index":1449,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["currently",{"_index":1592,"title":{},"body":{"injectables/AuthenticationEffects.html":{},"interfaces/CardFeedState.html":{},"injectables/CardOperationEffects.html":{},"interfaces/TimelineState.html":{}}}],["currentmoment",{"_index":4359,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["currentpage",{"_index":1045,"title":{},"body":{"components/ArchiveListPageComponent.html":{}}}],["currentpath",{"_index":550,"title":{},"body":{"components/AppComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/NavbarComponent.html":{}}}],["currentrouter",{"_index":750,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["currentrouter.navigate([lastdestination",{"_index":766,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["currentselected",{"_index":1862,"title":{},"body":{"components/CardComponent.html":{}}}],["currentstatus",{"_index":4077,"title":{},"body":{"injectables/ThirdActionService.html":{}}}],["currenttime",{"_index":2809,"title":{},"body":{"classes/FailToUpdateTimeReference.html":{},"classes/Tick.html":{},"classes/TickPayload.html":{},"classes/UpdateTimeReference.html":{}}}],["currenttimefilter",{"_index":2892,"title":{},"body":{"injectables/FeedFiltersEffects.html":{}}}],["currenttimefilter.active",{"_index":2893,"title":{},"body":{"injectables/FeedFiltersEffects.html":{}}}],["currenttimefilter.status.end",{"_index":2895,"title":{},"body":{"injectables/FeedFiltersEffects.html":{}}}],["currenttimefilter.status.start",{"_index":2894,"title":{},"body":{"injectables/FeedFiltersEffects.html":{}}}],["currenttimereference",{"_index":4271,"title":{},"body":{"injectables/TimeEffects.html":{}}}],["currentuser",{"_index":4884,"title":{},"body":{"injectables/UserEffects.html":{}}}],["custom",{"_index":378,"title":{},"body":{"components/ActionComponent.html":{},"components/AppComponent.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/ConfirmModalComponent.html":{},"components/CustomLogoComponent.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MenuLinkComponent.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/ResizableComponent.html":{},"components/SettingsComponent.html":{},"modules/StateModule.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{}}}],["customlogo",{"_index":2331,"title":{},"body":{"components/CustomLogoComponent.html":{},"components/NavbarComponent.html":{}}}],["customlogocomponent",{"_index":377,"title":{"components/CustomLogoComponent.html":{}},"body":{"components/ActionComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/ConfirmModalComponent.html":{},"components/CustomLogoComponent.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MenuLinkComponent.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/ResizableComponent.html":{},"components/SettingsComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"index.html":{}}}],["customroutereffects",{"_index":833,"title":{"injectables/CustomRouterEffects.html":{}},"body":{"interfaces/AppState.html":{},"injectables/CustomRouterEffects.html":{},"classes/HandleUnexpectedError-4.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{}}}],["customrouterstateserializer",{"_index":2380,"title":{"classes/CustomRouterStateSerializer.html":{}},"body":{"classes/CustomRouterStateSerializer.html":{},"classes/RouterStateUrl.html":{},"modules/StateModule.html":{}}}],["customtimelinechartcomponent",{"_index":380,"title":{},"body":{"components/ActionComponent.html":{},"components/AppComponent.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/ConfirmModalComponent.html":{},"components/CustomLogoComponent.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"modules/FeedModule.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MenuLinkComponent.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/ResizableComponent.html":{},"components/SettingsComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"index.html":{}}}],["d",{"_index":3915,"title":{},"body":{"components/SettingsComponent.html":{},"interfaces/SettingsInputs.html":{},"components/TimeLineComponent.html":{}}}],["d.end",{"_index":4467,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["d.includes(currentselected",{"_index":1864,"title":{},"body":{"components/CardComponent.html":{}}}],["d.map(domain",{"_index":4449,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["d.start",{"_index":4465,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["dark",{"_index":2640,"title":{},"body":{"components/DetailComponent.html":{},"components/IconComponent.html":{},"components/TypeFilterComponent.html":{}}}],["dat",{"_index":4950,"title":{},"body":{"pipes/XAxisTickFormatPipe.html":{}}}],["data",{"_index":492,"title":{},"body":{"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/Card.html":{},"classes/CheckTokenResponse.html":{},"classes/ClearLightCardSelection.html":{},"classes/CustomRouterStateSerializer.html":{},"classes/DelayedLightCardUpdate.html":{},"classes/Detail.html":{},"classes/EmptyLightCards.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/InitTimeline.html":{},"classes/LightCardAlreadyUpdated.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"components/NavbarComponent.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"classes/RemoveLightCard.html":{},"classes/RouterStateUrl.html":{},"classes/SelectLightCard.html":{},"classes/SetCardDataTimeline.html":{},"classes/ThirdActionAlreadyLoaded.html":{},"classes/ThirdActionAlreadyUpdated.html":{},"components/TimeLineComponent.html":{},"interfaces/TimelineState.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateAnActionFailure.html":{},"classes/UpdatedSubscription.html":{},"miscellaneous/enumerations.html":{}}}],["data:image/svg+xml;base64,${data",{"_index":3738,"title":{},"body":{"components/NavbarComponent.html":{}}}],["date",{"_index":104,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"components/ArchiveFiltersComponent.html":{},"classes/AuthObject.html":{},"interfaces/AuthState.html":{},"injectables/AuthenticationEffects.html":{},"interfaces/AuthenticationModeHandler.html":{},"components/CardComponent.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckImplicitFlowAuthenticationStatus.html":{},"classes/CheckTokenResponse.html":{},"classes/DateTimeNgb.html":{},"components/DatetimeFilterComponent.html":{},"classes/FailToUpdateTimeReference.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/ImplicitlyAuthenticated.html":{},"classes/InitAuthStatus.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/Tick.html":{},"classes/TickPayload.html":{},"components/TimeLineComponent.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"classes/UnAuthenticationFromImplicitFlow.html":{},"classes/UpdateTimeReference.html":{},"classes/UselessAuthAction.html":{},"pipes/XAxisTickFormatPipe.html":{}}}],["date().valueof",{"_index":2119,"title":{},"body":{"injectables/CardService.html":{}}}],["date(+localstorage.getitem(localstorageauthcontent.expirationdate",{"_index":1335,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["date(0",{"_index":1467,"title":{},"body":{"interfaces/AuthState.html":{}}}],["date(expirationdate",{"_index":1346,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["date(minus2hour.valueof",{"_index":2122,"title":{},"body":{"injectables/CardService.html":{}}}],["date(new",{"_index":2118,"title":{},"body":{"injectables/CardService.html":{}}}],["date(this.oauthservice.getaccesstokenexpiration",{"_index":1404,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["date(value",{"_index":3244,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["date.format",{"_index":4964,"title":{},"body":{"pipes/XAxisTickFormatPipe.html":{}}}],["date.format(clusterlevel",{"_index":4956,"title":{},"body":{"pipes/XAxisTickFormatPipe.html":{}}}],["date.hour",{"_index":4970,"title":{},"body":{"pipes/XAxisTickFormatPipe.html":{}}}],["date.hours",{"_index":4967,"title":{},"body":{"pipes/XAxisTickFormatPipe.html":{}}}],["date.minutes",{"_index":4969,"title":{},"body":{"pipes/XAxisTickFormatPipe.html":{}}}],["date.now",{"_index":1341,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["date.seconds",{"_index":4971,"title":{},"body":{"pipes/XAxisTickFormatPipe.html":{}}}],["date.valueof",{"_index":4962,"title":{},"body":{"pipes/XAxisTickFormatPipe.html":{}}}],["date.year",{"_index":2449,"title":{},"body":{"classes/DateTimeNgb.html":{}}}],["dateformat",{"_index":3917,"title":{},"body":{"components/SettingsComponent.html":{},"interfaces/SettingsInputs.html":{}}}],["dateinsidetooltipsmonth",{"_index":4955,"title":{},"body":{"pipes/XAxisTickFormatPipe.html":{}}}],["dateinsidetooltipsweek",{"_index":4946,"title":{},"body":{"pipes/XAxisTickFormatPipe.html":{}}}],["dateonday",{"_index":4968,"title":{},"body":{"pipes/XAxisTickFormatPipe.html":{}}}],["dateondaynewyear",{"_index":4972,"title":{},"body":{"pipes/XAxisTickFormatPipe.html":{}}}],["dateonmonth",{"_index":4976,"title":{},"body":{"pipes/XAxisTickFormatPipe.html":{}}}],["dateonweek",{"_index":4975,"title":{},"body":{"pipes/XAxisTickFormatPipe.html":{}}}],["dateonyear",{"_index":4977,"title":{},"body":{"pipes/XAxisTickFormatPipe.html":{}}}],["dateparts",{"_index":2435,"title":{},"body":{"classes/DateTimeNgb.html":{}}}],["dateparts.length",{"_index":2438,"title":{},"body":{"classes/DateTimeNgb.html":{}}}],["datesimplifliedonday",{"_index":4974,"title":{},"body":{"pipes/XAxisTickFormatPipe.html":{}}}],["datesimplifliedondaynewyear",{"_index":4973,"title":{},"body":{"pipes/XAxisTickFormatPipe.html":{}}}],["datestring",{"_index":999,"title":{},"body":{"components/ArchiveFiltersComponent.html":{}}}],["datetime",{"_index":384,"title":{},"body":{"components/ActionComponent.html":{},"components/AppComponent.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/ConfirmModalComponent.html":{},"components/CustomLogoComponent.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MenuLinkComponent.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/ResizableComponent.html":{},"components/SettingsComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{}}}],["datetimefiltercomponent",{"_index":383,"title":{"components/DatetimeFilterComponent.html":{}},"body":{"components/ActionComponent.html":{},"components/AppComponent.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"modules/ArchivesModule.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/ConfirmModalComponent.html":{},"components/CustomLogoComponent.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MenuLinkComponent.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/ResizableComponent.html":{},"components/SettingsComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"index.html":{}}}],["datetimeform",{"_index":2474,"title":{},"body":{"components/DatetimeFilterComponent.html":{}}}],["datetimeformat",{"_index":3918,"title":{},"body":{"components/SettingsComponent.html":{},"interfaces/SettingsInputs.html":{}}}],["datetimengb",{"_index":964,"title":{"classes/DateTimeNgb.html":{}},"body":{"components/ArchiveFiltersComponent.html":{},"classes/DateTimeNgb.html":{}}}],["datetimengb(date",{"_index":985,"title":{},"body":{"components/ArchiveFiltersComponent.html":{}}}],["datetodisplay",{"_index":1811,"title":{},"body":{"components/CardComponent.html":{}}}],["day",{"_index":2440,"title":{},"body":{"classes/DateTimeNgb.html":{},"components/FeedComponent.html":{},"components/TimeLineComponent.html":{},"pipes/XAxisTickFormatPipe.html":{}}}],["days",{"_index":4393,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["dd",{"_index":4442,"title":{},"body":{"components/TimeLineComponent.html":{},"pipes/XAxisTickFormatPipe.html":{}}}],["dd/mm",{"_index":4444,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["deactivate",{"_index":2688,"title":{},"body":{"components/DetailsComponent.html":{}}}],["debounce",{"_index":1662,"title":{},"body":{"components/BaseSettingComponent.html":{},"components/TagsFilterComponent.html":{},"components/TimeFilterComponent.html":{},"components/TypeFilterComponent.html":{}}}],["debouncetime",{"_index":1726,"title":{},"body":{"directives/CalcHeightDirective.html":{},"components/TimeLineComponent.html":{}}}],["debouncetime(300",{"_index":1729,"title":{},"body":{"directives/CalcHeightDirective.html":{}}}],["debug",{"_index":3643,"title":{},"body":{"classes/Message.html":{},"miscellaneous/enumerations.html":{}}}],["declaration",{"_index":233,"title":{},"body":{"classes/Action.html":{},"classes/ActionStatus.html":{},"classes/Input.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{}}}],["declarations",{"_index":644,"title":{},"body":{"modules/AppModule.html":{},"modules/ArchivesModule.html":{},"modules/CardsModule.html":{},"modules/FeedModule.html":{},"modules/ServicesModule.html":{},"modules/SettingsModule.html":{},"modules/StateModule.html":{},"modules/ThirdpartyModule.html":{},"modules/UtilitiesModule.html":{},"index.html":{}}}],["decode",{"_index":1142,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"dependencies.html":{}}}],["decodetoken(token",{"_index":1392,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["decoration",{"_index":3631,"title":{},"body":{"components/MenuLinkComponent.html":{}}}],["decorators",{"_index":912,"title":{},"body":{"injectables/ArchiveEffects.html":{},"injectables/AuthenticationEffects.html":{},"injectables/CardEffects.html":{},"injectables/CardOperationEffects.html":{},"injectables/ConfigEffects.html":{},"injectables/CustomRouterEffects.html":{},"components/DetailsComponent.html":{},"injectables/FeedFiltersEffects.html":{},"injectables/LightCardEffects.html":{},"injectables/MenuEffects.html":{},"injectables/SettingsEffects.html":{},"injectables/TimeEffects.html":{},"injectables/TranslateEffects.html":{},"injectables/UserEffects.html":{}}}],["deep",{"_index":4023,"title":{},"body":{"components/TagsFilterComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{}}}],["default",{"_index":49,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/AddActionsAppear.html":{},"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"components/AppComponent.html":{},"classes/ApplyFilter.html":{},"injectables/ArchiveEffects.html":{},"components/ArchiveFiltersComponent.html":{},"classes/ArchiveQuerySuccess.html":{},"classes/AuthObject.html":{},"injectables/AuthenticationEffects.html":{},"interfaces/AuthenticationModeHandler.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"injectables/CardEffects.html":{},"injectables/CardOperationEffects.html":{},"injectables/CardService.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckImplicitFlowAuthenticationStatus.html":{},"classes/CheckTokenResponse.html":{},"classes/ClearCard.html":{},"classes/ClearLightCardSelection.html":{},"injectables/ConfigEffects.html":{},"classes/CreateUserApplication.html":{},"classes/CreateUserApplicationOnFailure.html":{},"classes/CreateUserApplicationOnSuccess.html":{},"components/CustomLogoComponent.html":{},"injectables/CustomRouterEffects.html":{},"components/DatetimeFilterComponent.html":{},"classes/DelayedLightCardUpdate.html":{},"components/DetailComponent.html":{},"directives/DraggableDirective.html":{},"components/EmailSettingComponent.html":{},"classes/EmptyLightCards.html":{},"classes/FailToUpdateTimeReference.html":{},"injectables/FeedFiltersEffects.html":{},"injectables/FilterService.html":{},"classes/HandleUnexpectedError.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/HandleUnexpectedError-4.html":{},"classes/HandleUnexpectedError-5.html":{},"classes/HandleUnexpectedError-6.html":{},"injectables/HandlebarsService.html":{},"components/IconComponent.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/ImplicitlyAuthenticated.html":{},"classes/InitAuthStatus.html":{},"classes/InitFilters.html":{},"classes/InitTimeline.html":{},"classes/LightCardAlreadyUpdated.html":{},"injectables/LightCardEffects.html":{},"components/ListSettingComponent.html":{},"classes/LoadArchivedCard.html":{},"classes/LoadArchivedCardFailure.html":{},"classes/LoadArchivedCardSuccess.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{},"classes/LoadConfig.html":{},"classes/LoadConfigFailure.html":{},"classes/LoadConfigSuccess.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/LoadSettings.html":{},"classes/LoadSettingsFailure.html":{},"classes/LoadSettingsSuccess.html":{},"injectables/MenuEffects.html":{},"components/MenuLinkComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"classes/PatchSettings.html":{},"classes/PatchSettingsFailure.html":{},"classes/PatchSettingsSuccess.html":{},"classes/RefreshTranslation.html":{},"classes/RejectLogIn.html":{},"classes/RemoveLightCard.html":{},"classes/SelectArchivedLightCard.html":{},"classes/SelectLightCard.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{},"classes/SendArchiveQuery.html":{},"classes/SetCardDataTimeline.html":{},"injectables/SettingsEffects.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"classes/ThirdActionAlreadyLoaded.html":{},"classes/ThirdActionAlreadyUpdated.html":{},"injectables/ThirdActionService.html":{},"injectables/ThirdsService.html":{},"classes/Tick.html":{},"injectables/TimeEffects.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"injectables/TranslateEffects.html":{},"classes/TranslationUpToDate.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"classes/UnAuthenticationFromImplicitFlow.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateAnActionFailure.html":{},"classes/UpdateArchiveFilter.html":{},"classes/UpdateArchivePage.html":{},"classes/UpdateTimeReference.html":{},"classes/UpdateTranslation.html":{},"classes/UpdateTranslationFailed.html":{},"classes/UpdateTranslationSuccessful.html":{},"classes/UpdatedSubscription.html":{},"classes/UselessAuthAction.html":{},"classes/UserApplicationNotRegistered.html":{},"classes/UserApplicationRegistered.html":{},"injectables/UserEffects.html":{},"pipes/XAxisTickFormatPipe.html":{}}}],["default_height",{"_index":2288,"title":{},"body":{"components/CustomLogoComponent.html":{}}}],["default_width",{"_index":2289,"title":{},"body":{"components/CustomLogoComponent.html":{}}}],["defaultfilters",{"_index":3007,"title":{},"body":{"injectables/FilterService.html":{}}}],["defaultpath",{"_index":723,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["defaultpublisher').set('size",{"_index":2160,"title":{},"body":{"injectables/CardService.html":{}}}],["define",{"_index":1749,"title":{},"body":{"directives/CalcHeightDirective.html":{}}}],["defined",{"_index":42,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/Action.html":{},"components/ActionComponent.html":{},"classes/ActionStatus.html":{},"classes/AddActionsAppear.html":{},"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"components/AppComponent.html":{},"classes/ApplyFilter.html":{},"injectables/ArchiveEffects.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"classes/ArchiveQuerySuccess.html":{},"components/ArchivesComponent.html":{},"classes/AuthObject.html":{},"injectables/AuthenticationEffects.html":{},"interfaces/AuthenticationModeHandler.html":{},"components/BaseSettingComponent.html":{},"directives/CalcHeightDirective.html":{},"classes/Card.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"injectables/CardEffects.html":{},"components/CardListComponent.html":{},"classes/CardOperation.html":{},"injectables/CardOperationEffects.html":{},"injectables/CardService.html":{},"modules/CardsModule.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckImplicitFlowAuthenticationStatus.html":{},"classes/CheckTokenResponse.html":{},"classes/ClearCard.html":{},"classes/ClearLightCardSelection.html":{},"injectables/ConfigEffects.html":{},"injectables/ConfigService.html":{},"components/ConfirmModalComponent.html":{},"classes/CreateUserApplication.html":{},"classes/CreateUserApplicationOnFailure.html":{},"classes/CreateUserApplicationOnSuccess.html":{},"components/CustomLogoComponent.html":{},"injectables/CustomRouterEffects.html":{},"classes/CustomRouterStateSerializer.html":{},"classes/DateTimeNgb.html":{},"components/DatetimeFilterComponent.html":{},"classes/DelayedLightCardUpdate.html":{},"classes/Detail.html":{},"components/DetailComponent.html":{},"classes/DetailContext.html":{},"components/DetailsComponent.html":{},"directives/DraggableDirective.html":{},"components/EmailSettingComponent.html":{},"classes/EmptyLightCards.html":{},"classes/FailToUpdateTimeReference.html":{},"components/FeedComponent.html":{},"injectables/FeedFiltersEffects.html":{},"classes/Filter.html":{},"injectables/FilterService.html":{},"components/FiltersComponent.html":{},"classes/GuidService.html":{},"classes/HandleUnexpectedError.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/HandleUnexpectedError-4.html":{},"classes/HandleUnexpectedError-5.html":{},"classes/HandleUnexpectedError-6.html":{},"injectables/HandlebarsService.html":{},"classes/I18n.html":{},"injectables/I18nService.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/ImplicitlyAuthenticated.html":{},"components/InfoComponent.html":{},"classes/InitAuthStatus.html":{},"classes/InitFilters.html":{},"classes/InitTimeline.html":{},"classes/Input.html":{},"classes/LightCard.html":{},"classes/LightCardAlreadyUpdated.html":{},"injectables/LightCardEffects.html":{},"components/ListSettingComponent.html":{},"classes/LoadArchivedCard.html":{},"classes/LoadArchivedCardFailure.html":{},"classes/LoadArchivedCardSuccess.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{},"classes/LoadConfig.html":{},"classes/LoadConfigFailure.html":{},"classes/LoadConfigSuccess.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/LoadSettings.html":{},"classes/LoadSettingsFailure.html":{},"classes/LoadSettingsSuccess.html":{},"components/LoginComponent.html":{},"classes/Map.html":{},"injectables/MenuEffects.html":{},"components/MenuLinkComponent.html":{},"classes/Message.html":{},"directives/MouseWheelDirective.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"injectables/NotifyService.html":{},"classes/Page.html":{},"classes/ParameterListItem.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"classes/PatchSettings.html":{},"classes/PatchSettingsFailure.html":{},"classes/PatchSettingsSuccess.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/Process.html":{},"classes/RefreshTranslation.html":{},"classes/RejectLogIn.html":{},"classes/RemoveLightCard.html":{},"components/ResizableComponent.html":{},"classes/RouterStateUrl.html":{},"classes/SelectArchivedLightCard.html":{},"classes/SelectLightCard.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{},"classes/SendArchiveQuery.html":{},"modules/ServicesModule.html":{},"classes/SetCardDataTimeline.html":{},"components/SettingsComponent.html":{},"injectables/SettingsEffects.html":{},"injectables/SettingsService.html":{},"classes/State.html":{},"modules/StateModule.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"classes/Third.html":{},"classes/ThirdActionAlreadyLoaded.html":{},"classes/ThirdActionAlreadyUpdated.html":{},"injectables/ThirdActionService.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"classes/ThirdsServiceMock.html":{},"classes/Tick.html":{},"classes/TickPayload.html":{},"injectables/TimeEffects.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"classes/TimeReference.html":{},"classes/TimeSpan.html":{},"interceptors/TokenInjector.html":{},"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{},"classes/TranslationUpToDate.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"classes/UnAuthenticationFromImplicitFlow.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateAnActionFailure.html":{},"classes/UpdateArchiveFilter.html":{},"classes/UpdateArchivePage.html":{},"classes/UpdateTimeReference.html":{},"classes/UpdateTranslation.html":{},"classes/UpdateTranslationFailed.html":{},"classes/UpdateTranslationSuccessful.html":{},"classes/UpdatedSubscription.html":{},"classes/UselessAuthAction.html":{},"classes/User.html":{},"classes/UserApplicationNotRegistered.html":{},"classes/UserApplicationRegistered.html":{},"classes/UserContext.html":{},"injectables/UserEffects.html":{},"injectables/UserService.html":{},"pipes/XAxisTickFormatPipe.html":{}}}],["defines",{"_index":1265,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["delay",{"_index":2214,"title":{},"body":{"injectables/ConfigEffects.html":{},"injectables/LightCardEffects.html":{}}}],["delay(500",{"_index":3430,"title":{},"body":{"injectables/LightCardEffects.html":{}}}],["delay(this.retrydelay",{"_index":2226,"title":{},"body":{"injectables/ConfigEffects.html":{}}}],["delayedlightcardupdate",{"_index":514,"title":{"classes/DelayedLightCardUpdate.html":{}},"body":{"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"classes/ClearLightCardSelection.html":{},"classes/DelayedLightCardUpdate.html":{},"classes/EmptyLightCards.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/LightCardAlreadyUpdated.html":{},"injectables/LightCardEffects.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/RemoveLightCard.html":{},"classes/SelectLightCard.html":{},"classes/ThirdActionAlreadyLoaded.html":{},"classes/ThirdActionAlreadyUpdated.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateAnActionFailure.html":{},"classes/UpdatedSubscription.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["delayupdatelightcard",{"_index":3418,"title":{},"body":{"injectables/LightCardEffects.html":{}}}],["delegateurl",{"_index":1169,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["delete",{"_index":2023,"title":{},"body":{"classes/CardOperation.html":{},"directives/DraggableDirective.html":{},"miscellaneous/enumerations.html":{}}}],["delta",{"_index":3673,"title":{},"body":{"directives/MouseWheelDirective.html":{}}}],["demand",{"_index":1587,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["dentifier",{"_index":1329,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["dependencies",{"_index":643,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/ArchivesModule.html":{},"modules/CardsModule.html":{},"modules/FeedModule.html":{},"modules/ServicesModule.html":{},"modules/SettingsModule.html":{},"modules/StateModule.html":{},"modules/ThirdpartyModule.html":{},"modules/UtilitiesModule.html":{},"dependencies.html":{},"index.html":{}}}],["depending",{"_index":4341,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["deprecation",{"_index":3859,"title":{},"body":{"components/ResizableComponent.html":{}}}],["description",{"_index":7,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/AuthObject.html":{},"injectables/AuthenticationEffects.html":{},"interfaces/AuthenticationModeHandler.html":{},"interfaces/CardFeedState.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckTokenResponse.html":{},"classes/FailToUpdateTimeReference.html":{},"classes/Filter.html":{},"classes/ImplicitAuthenticationHandler.html":{},"components/InfoComponent.html":{},"classes/InitAuthStatus.html":{},"directives/MouseWheelDirective.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/RouterStateUrl.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{},"components/SettingsComponent.html":{},"interfaces/SettingsInputs.html":{},"classes/Tick.html":{},"classes/TickPayload.html":{},"interfaces/TimelineState.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"classes/UpdateTimeReference.html":{},"injectables/UserService.html":{}}}],["description$|async",{"_index":3385,"title":{},"body":{"components/InfoComponent.html":{}}}],["deserializable",{"_index":1231,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["desired",{"_index":3993,"title":{},"body":{"modules/StateModule.html":{}}}],["destination",{"_index":758,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["destination.includes(archivepath",{"_index":765,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["detail",{"_index":187,"title":{"classes/Detail.html":{}},"body":{"classes/Action.html":{},"classes/ActionStatus.html":{},"classes/Card.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"classes/Detail.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"classes/Input.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{}}}],["detail'},{'name",{"_index":387,"title":{},"body":{"components/ActionComponent.html":{},"components/AppComponent.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/ConfirmModalComponent.html":{},"components/CustomLogoComponent.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MenuLinkComponent.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/ResizableComponent.html":{},"components/SettingsComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{}}}],["detail.active",{"_index":2691,"title":{},"body":{"components/DetailsComponent.html":{}}}],["detail.component.html",{"_index":2536,"title":{},"body":{"components/DetailComponent.html":{}}}],["detail/detail.component",{"_index":2677,"title":{},"body":{"components/DetailsComponent.html":{}}}],["detailcomponent",{"_index":386,"title":{"components/DetailComponent.html":{}},"body":{"components/ActionComponent.html":{},"components/AppComponent.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"modules/ArchivesRoutingModule.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"modules/CardsModule.html":{},"components/ConfirmModalComponent.html":{},"components/CustomLogoComponent.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"modules/FeedRoutingModule.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MenuLinkComponent.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/ResizableComponent.html":{},"components/SettingsComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"index.html":{}}}],["detailcontext",{"_index":2580,"title":{"classes/DetailContext.html":{}},"body":{"components/DetailComponent.html":{},"classes/DetailContext.html":{},"injectables/HandlebarsService.html":{}}}],["detailcontext(this.card,null",{"_index":2614,"title":{},"body":{"components/DetailComponent.html":{}}}],["detailcontext):observable",{"_index":3198,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["details",{"_index":216,"title":{},"body":{"classes/Action.html":{},"classes/ActionStatus.html":{},"classes/Card.html":{},"components/CardDetailsComponent.html":{},"classes/Detail.html":{},"components/DetailsComponent.html":{},"classes/Input.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{}}}],["details'},{'name",{"_index":371,"title":{},"body":{"components/ActionComponent.html":{},"components/AppComponent.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/ConfirmModalComponent.html":{},"components/CustomLogoComponent.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MenuLinkComponent.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/ResizableComponent.html":{},"components/SettingsComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{}}}],["details.component",{"_index":1115,"title":{},"body":{"modules/ArchivesRoutingModule.html":{},"modules/CardsModule.html":{},"modules/FeedRoutingModule.html":{}}}],["details.component.html",{"_index":1905,"title":{},"body":{"components/CardDetailsComponent.html":{},"components/DetailsComponent.html":{}}}],["details.component.scss",{"_index":2660,"title":{},"body":{"components/DetailsComponent.html":{}}}],["details.component.ts",{"_index":1904,"title":{},"body":{"components/CardDetailsComponent.html":{}}}],["details.component.ts:24",{"_index":1911,"title":{},"body":{"components/CardDetailsComponent.html":{}}}],["details.component.ts:25",{"_index":1912,"title":{},"body":{"components/CardDetailsComponent.html":{}}}],["details.component.ts:26",{"_index":1908,"title":{},"body":{"components/CardDetailsComponent.html":{}}}],["details.component.ts:33",{"_index":1910,"title":{},"body":{"components/CardDetailsComponent.html":{}}}],["details.component.ts:62",{"_index":1909,"title":{},"body":{"components/CardDetailsComponent.html":{}}}],["details/:did",{"_index":1121,"title":{},"body":{"modules/ArchivesRoutingModule.html":{},"modules/FeedRoutingModule.html":{}}}],["details/card",{"_index":1114,"title":{},"body":{"modules/ArchivesRoutingModule.html":{},"components/CardDetailsComponent.html":{},"modules/CardsModule.html":{},"modules/FeedRoutingModule.html":{}}}],["detailscomponent",{"_index":388,"title":{"components/DetailsComponent.html":{}},"body":{"components/ActionComponent.html":{},"components/AppComponent.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"modules/CardsModule.html":{},"components/ConfirmModalComponent.html":{},"components/CustomLogoComponent.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MenuLinkComponent.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/ResizableComponent.html":{},"components/SettingsComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"index.html":{}}}],["detect",{"_index":4875,"title":{},"body":{"injectables/UserEffects.html":{}}}],["devkit/build",{"_index":59,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckImplicitFlowAuthenticationStatus.html":{},"classes/ImplicitlyAuthenticated.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"classes/UnAuthenticationFromImplicitFlow.html":{},"classes/UselessAuthAction.html":{}}}],["devtools",{"_index":3980,"title":{},"body":{"modules/StateModule.html":{},"dependencies.html":{}}}],["didn't",{"_index":1742,"title":{},"body":{"directives/CalcHeightDirective.html":{}}}],["directive",{"_index":350,"title":{"directives/CalcHeightDirective.html":{},"directives/DraggableDirective.html":{},"directives/MouseWheelDirective.html":{}},"body":{"components/ActionComponent.html":{},"components/AppComponent.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseSettingComponent.html":{},"directives/CalcHeightDirective.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/ConfirmModalComponent.html":{},"components/CustomLogoComponent.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"directives/DraggableDirective.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MenuLinkComponent.html":{},"directives/MouseWheelDirective.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/ResizableComponent.html":{},"components/SettingsComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"modules/UtilitiesModule.html":{}}}],["directives",{"_index":427,"title":{},"body":{"components/ActionComponent.html":{},"components/AppComponent.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseSettingComponent.html":{},"directives/CalcHeightDirective.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/ConfirmModalComponent.html":{},"components/CustomLogoComponent.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"directives/DraggableDirective.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MenuLinkComponent.html":{},"directives/MouseWheelDirective.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/ResizableComponent.html":{},"components/SettingsComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"index.html":{}}}],["disabled",{"_index":2475,"title":{},"body":{"components/DatetimeFilterComponent.html":{},"components/EmailSettingComponent.html":{},"components/TextSettingComponent.html":{}}}],["disableinfos",{"_index":3896,"title":{},"body":{"components/SettingsComponent.html":{},"interfaces/SettingsInputs.html":{}}}],["dismiss",{"_index":2243,"title":{},"body":{"components/ConfirmModalComponent.html":{},"miscellaneous/enumerations.html":{}}}],["dispalyinfos",{"_index":3897,"title":{},"body":{"components/SettingsComponent.html":{},"interfaces/SettingsInputs.html":{}}}],["dispatch",{"_index":1416,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"components/BaseSettingComponent.html":{},"classes/CheckTokenResponse.html":{},"components/EmailSettingComponent.html":{},"classes/FailToUpdateTimeReference.html":{},"classes/ImplicitAuthenticationHandler.html":{},"components/ListSettingComponent.html":{},"components/MultiSettingsComponent.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"components/TextSettingComponent.html":{},"classes/Tick.html":{},"classes/TickPayload.html":{},"components/TypeAheadSettingsComponent.html":{},"classes/UpdateTimeReference.html":{}}}],["dispatch(value",{"_index":1641,"title":{},"body":{"components/BaseSettingComponent.html":{},"components/EmailSettingComponent.html":{},"components/ListSettingComponent.html":{},"components/MultiSettingsComponent.html":{},"components/TextSettingComponent.html":{},"components/TypeAheadSettingsComponent.html":{}}}],["dispatch(value:any",{"_index":1697,"title":{},"body":{"components/BaseSettingComponent.html":{}}}],["dispatchappstateactionfromoauth2events(event",{"_index":1406,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["dispatchauthactionfromoauthevents",{"_index":1395,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["dispatched",{"_index":4303,"title":{},"body":{"components/TimeFilterComponent.html":{}}}],["dispatchupdatethirdaction",{"_index":4049,"title":{},"body":{"injectables/ThirdActionService.html":{}}}],["dispatchupdatethirdaction(updatethirdaction",{"_index":4062,"title":{},"body":{"injectables/ThirdActionService.html":{}}}],["display",{"_index":1538,"title":{},"body":{"injectables/AuthenticationEffects.html":{},"components/InfoComponent.html":{},"classes/LightCard.html":{},"components/TagsFilterComponent.html":{},"classes/TimeSpan.html":{},"interfaces/TimelineState.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"miscellaneous/enumerations.html":{}}}],["display.bubble",{"_index":3414,"title":{},"body":{"classes/LightCard.html":{},"classes/TimeSpan.html":{}}}],["displaydate",{"_index":4464,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["displays",{"_index":2910,"title":{},"body":{"injectables/FeedFiltersEffects.html":{}}}],["distinctuntilchanged",{"_index":1663,"title":{},"body":{"components/BaseSettingComponent.html":{},"components/TagsFilterComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeFilterComponent.html":{}}}],["distinctuntilchanged((forma",{"_index":1682,"title":{},"body":{"components/BaseSettingComponent.html":{},"components/TagsFilterComponent.html":{},"components/TimeFilterComponent.html":{},"components/TypeFilterComponent.html":{}}}],["distinctuntilchanged()).subscribe(value",{"_index":4456,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["distributed",{"_index":343,"title":{},"body":{"components/ActionComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"modules/ArchivesModule.html":{},"modules/ArchivesRoutingModule.html":{},"components/CardComponent.html":{},"components/CardListComponent.html":{},"modules/CardsModule.html":{},"components/CustomLogoComponent.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailsComponent.html":{},"components/FeedComponent.html":{},"modules/FeedModule.html":{},"modules/FeedRoutingModule.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/MenuLinkComponent.html":{},"components/MultiFilterComponent.html":{},"components/NavbarComponent.html":{},"components/ResizableComponent.html":{},"modules/ServicesModule.html":{},"modules/SettingsModule.html":{},"modules/SettingsRoutingModule.html":{},"modules/StateModule.html":{},"components/TagsFilterComponent.html":{},"modules/ThirdpartyModule.html":{},"modules/ThirdpartyRoutingModule.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"modules/UtilitiesModule.html":{}}}],["divide",{"_index":1763,"title":{},"body":{"directives/CalcHeightDirective.html":{}}}],["document.getelementbyid('${svguid}').addeventlistener('load",{"_index":3238,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["document.getelementbyid(this.parentid",{"_index":1739,"title":{},"body":{"directives/CalcHeightDirective.html":{}}}],["doesn't",{"_index":2649,"title":{},"body":{"components/DetailComponent.html":{},"classes/TimeReference.html":{}}}],["dom",{"_index":284,"title":{},"body":{"components/ActionComponent.html":{},"components/AppComponent.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/ConfirmModalComponent.html":{},"components/CustomLogoComponent.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MenuLinkComponent.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/ResizableComponent.html":{},"components/SettingsComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{}}}],["domain",{"_index":4343,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["domain7dayconf",{"_index":4353,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["domainmonthconf",{"_index":4356,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["domains",{"_index":4329,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["domainweekconf",{"_index":4355,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["domainyearconf",{"_index":4357,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["dommousescroll",{"_index":3651,"title":{},"body":{"directives/MouseWheelDirective.html":{}}}],["dommousescroll(event",{"_index":3655,"title":{},"body":{"directives/MouseWheelDirective.html":{}}}],["domsanitizationservice",{"_index":2290,"title":{},"body":{"components/CustomLogoComponent.html":{}}}],["domsanitizer",{"_index":2298,"title":{},"body":{"components/CustomLogoComponent.html":{},"components/DetailComponent.html":{},"components/IframeDisplayComponent.html":{}}}],["done",{"_index":571,"title":{},"body":{"components/AppComponent.html":{},"classes/FailToUpdateTimeReference.html":{},"classes/Tick.html":{},"classes/TickPayload.html":{},"classes/UpdateTimeReference.html":{}}}],["dow",{"_index":2833,"title":{},"body":{"components/FeedComponent.html":{}}}],["down",{"_index":1801,"title":{},"body":{"classes/Card.html":{},"classes/Detail.html":{},"directives/MouseWheelDirective.html":{},"miscellaneous/enumerations.html":{}}}],["doy",{"_index":2836,"title":{},"body":{"components/FeedComponent.html":{}}}],["drag",{"_index":2715,"title":{},"body":{"directives/DraggableDirective.html":{}}}],["dragend",{"_index":2701,"title":{},"body":{"directives/DraggableDirective.html":{}}}],["dragevent",{"_index":2742,"title":{},"body":{"directives/DraggableDirective.html":{}}}],["draggable",{"_index":2947,"title":{},"body":{"modules/FeedModule.html":{}}}],["draggable.ts",{"_index":2697,"title":{},"body":{"directives/DraggableDirective.html":{}}}],["draggable.ts:14",{"_index":2710,"title":{},"body":{"directives/DraggableDirective.html":{}}}],["draggable.ts:15",{"_index":2709,"title":{},"body":{"directives/DraggableDirective.html":{}}}],["draggable.ts:16",{"_index":2708,"title":{},"body":{"directives/DraggableDirective.html":{}}}],["draggable.ts:18",{"_index":2721,"title":{},"body":{"directives/DraggableDirective.html":{}}}],["draggable.ts:25",{"_index":2714,"title":{},"body":{"directives/DraggableDirective.html":{}}}],["draggable.ts:35",{"_index":2718,"title":{},"body":{"directives/DraggableDirective.html":{}}}],["draggable.ts:47",{"_index":2720,"title":{},"body":{"directives/DraggableDirective.html":{}}}],["draggabledirective",{"_index":430,"title":{"directives/DraggableDirective.html":{}},"body":{"components/ActionComponent.html":{},"components/AppComponent.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/ConfirmModalComponent.html":{},"components/CustomLogoComponent.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"directives/DraggableDirective.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"modules/FeedModule.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MenuLinkComponent.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/ResizableComponent.html":{},"components/SettingsComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"index.html":{}}}],["dragging",{"_index":2699,"title":{},"body":{"directives/DraggableDirective.html":{}}}],["dragmove",{"_index":2702,"title":{},"body":{"directives/DraggableDirective.html":{}}}],["dragstart",{"_index":2703,"title":{},"body":{"directives/DraggableDirective.html":{}}}],["dropdown",{"_index":4024,"title":{},"body":{"components/TagsFilterComponent.html":{},"components/TypeAheadSettingsComponent.html":{}}}],["dropdown]=\"tmenu.entries.length>1",{"_index":3757,"title":{},"body":{"components/NavbarComponent.html":{}}}],["due",{"_index":1551,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["duration",{"_index":4552,"title":{},"body":{"classes/TimeReference.html":{}}}],["duration.asmilliseconds",{"_index":4555,"title":{},"body":{"classes/TimeReference.html":{}}}],["during",{"_index":1963,"title":{},"body":{"interfaces/CardFeedState.html":{},"injectables/TimeEffects.html":{},"interfaces/TimelineState.html":{}}}],["dynamic",{"_index":4985,"title":{},"body":{"dependencies.html":{}}}],["e.type",{"_index":1377,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["each",{"_index":4345,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["effect",{"_index":241,"title":{},"body":{"classes/Action.html":{},"classes/ActionStatus.html":{},"injectables/ArchiveEffects.html":{},"injectables/AuthenticationEffects.html":{},"injectables/CardEffects.html":{},"injectables/CardOperationEffects.html":{},"injectables/ConfigEffects.html":{},"injectables/CustomRouterEffects.html":{},"injectables/FeedFiltersEffects.html":{},"classes/Input.html":{},"injectables/LightCardEffects.html":{},"injectables/MenuEffects.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"injectables/SettingsEffects.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"injectables/TimeEffects.html":{},"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{},"injectables/UserEffects.html":{}}}],["effects",{"_index":1952,"title":{},"body":{"injectables/CardEffects.html":{},"injectables/ConfigEffects.html":{},"injectables/SettingsEffects.html":{}}}],["effectsmodule",{"_index":3978,"title":{},"body":{"modules/StateModule.html":{}}}],["effectsmodule.forroot(appeffects",{"_index":3987,"title":{},"body":{"modules/StateModule.html":{}}}],["el",{"_index":1718,"title":{},"body":{"directives/CalcHeightDirective.html":{}}}],["elapsed",{"_index":2801,"title":{},"body":{"classes/FailToUpdateTimeReference.html":{},"classes/Tick.html":{},"classes/TickPayload.html":{},"classes/UpdateTimeReference.html":{}}}],["elapsedsincelast",{"_index":2811,"title":{},"body":{"classes/FailToUpdateTimeReference.html":{},"injectables/FeedFiltersEffects.html":{},"classes/Tick.html":{},"classes/TickPayload.html":{},"classes/UpdateTimeReference.html":{}}}],["elapsedsofar",{"_index":2846,"title":{},"body":{"injectables/FeedFiltersEffects.html":{}}}],["element",{"_index":349,"title":{},"body":{"components/ActionComponent.html":{},"components/AppComponent.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseSettingComponent.html":{},"directives/CalcHeightDirective.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/ConfirmModalComponent.html":{},"components/CustomLogoComponent.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MenuLinkComponent.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/ResizableComponent.html":{},"components/SettingsComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{}}}],["element.length",{"_index":1003,"title":{},"body":{"components/ArchiveFiltersComponent.html":{}}}],["elementref",{"_index":1716,"title":{},"body":{"directives/CalcHeightDirective.html":{},"components/DetailComponent.html":{}}}],["elements",{"_index":1747,"title":{},"body":{"directives/CalcHeightDirective.html":{}}}],["email",{"_index":390,"title":{},"body":{"components/ActionComponent.html":{},"components/AppComponent.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/ConfirmModalComponent.html":{},"components/CustomLogoComponent.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MenuLinkComponent.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/ResizableComponent.html":{},"components/SettingsComponent.html":{},"interfaces/SettingsInputs.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{}}}],["emailsettingcomponent",{"_index":389,"title":{"components/EmailSettingComponent.html":{}},"body":{"components/ActionComponent.html":{},"components/AppComponent.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/ConfirmModalComponent.html":{},"components/CustomLogoComponent.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MenuLinkComponent.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/ResizableComponent.html":{},"components/SettingsComponent.html":{},"modules/SettingsModule.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"index.html":{}}}],["emit",{"_index":1496,"title":{},"body":{"injectables/AuthenticationEffects.html":{},"directives/DraggableDirective.html":{},"injectables/FeedFiltersEffects.html":{},"directives/MouseWheelDirective.html":{}}}],["emitevent",{"_index":2511,"title":{},"body":{"components/DatetimeFilterComponent.html":{},"components/ListSettingComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TypeFilterComponent.html":{}}}],["emitevent:false",{"_index":4301,"title":{},"body":{"components/TimeFilterComponent.html":{}}}],["emits",{"_index":1568,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["emitted",{"_index":14,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"injectables/AuthenticationEffects.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckImplicitFlowAuthenticationStatus.html":{},"classes/HandleUnexpectedError-4.html":{},"classes/ImplicitlyAuthenticated.html":{},"classes/InitAuthStatus.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"classes/UnAuthenticationFromImplicitFlow.html":{},"classes/UselessAuthAction.html":{}}}],["emittedby",{"_index":1535,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["emmited",{"_index":139,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckImplicitFlowAuthenticationStatus.html":{},"classes/ImplicitlyAuthenticated.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"classes/UnAuthenticationFromImplicitFlow.html":{},"classes/UselessAuthAction.html":{}}}],["empty",{"_index":488,"title":{},"body":{"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"classes/ClearLightCardSelection.html":{},"classes/DelayedLightCardUpdate.html":{},"classes/EmptyLightCards.html":{},"injectables/FeedFiltersEffects.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/LightCardAlreadyUpdated.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/RemoveLightCard.html":{},"classes/SelectLightCard.html":{},"classes/ThirdActionAlreadyLoaded.html":{},"classes/ThirdActionAlreadyUpdated.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateAnActionFailure.html":{},"classes/UpdatedSubscription.html":{},"pipes/XAxisTickFormatPipe.html":{},"miscellaneous/enumerations.html":{}}}],["emptyaction",{"_index":220,"title":{},"body":{"classes/Action.html":{},"classes/ActionStatus.html":{},"classes/Input.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{}}}],["emptyactionstatus",{"_index":225,"title":{},"body":{"classes/Action.html":{},"classes/ActionStatus.html":{},"classes/Input.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{}}}],["emptylightcards",{"_index":487,"title":{"classes/EmptyLightCards.html":{}},"body":{"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"injectables/AuthenticationEffects.html":{},"classes/ClearLightCardSelection.html":{},"classes/DelayedLightCardUpdate.html":{},"classes/EmptyLightCards.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/LightCardAlreadyUpdated.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/RemoveLightCard.html":{},"classes/SelectLightCard.html":{},"classes/ThirdActionAlreadyLoaded.html":{},"classes/ThirdActionAlreadyUpdated.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateAnActionFailure.html":{},"classes/UpdatedSubscription.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["en",{"_index":3195,"title":{},"body":{"injectables/HandlebarsService.html":{},"injectables/I18nService.html":{}}}],["enable",{"_index":772,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["enabledrag",{"_index":4409,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["enabletracing",{"_index":768,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["enablezoom",{"_index":4410,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["encoding",{"_index":4169,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["end",{"_index":1197,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"directives/DraggableDirective.html":{},"injectables/FeedFiltersEffects.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/LightCard.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"classes/TimeSpan.html":{}}}],["enddate",{"_index":1792,"title":{},"body":{"classes/Card.html":{},"classes/Detail.html":{},"classes/LightCard.html":{},"components/TimeLineComponent.html":{},"classes/TimeSpan.html":{}}}],["enddomain",{"_index":4419,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["enddomain7day",{"_index":4363,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["enddomain7day.valueof",{"_index":4434,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["enddomainj",{"_index":4391,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["enddomainj.valueof",{"_index":4420,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["enddomainmonth",{"_index":4373,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["enddomainmonth.valueof",{"_index":4441,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["enddomaintr",{"_index":4387,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["enddomaintr.valueof",{"_index":4431,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["enddomainweek",{"_index":4368,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["enddomainweek.valueof",{"_index":4439,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["enddomainyear",{"_index":4378,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["enddomainyear.valueof",{"_index":4446,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["entire",{"_index":2400,"title":{},"body":{"classes/CustomRouterStateSerializer.html":{},"classes/RouterStateUrl.html":{}}}],["entities",{"_index":462,"title":{},"body":{"classes/AddActionsAppear.html":{},"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"classes/ClearCard.html":{},"classes/ClearLightCardSelection.html":{},"classes/DelayedLightCardUpdate.html":{},"classes/EmptyLightCards.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/HandleUnexpectedError-4.html":{},"classes/HandleUnexpectedError-5.html":{},"classes/LightCardAlreadyUpdated.html":{},"classes/LoadArchivedCard.html":{},"classes/LoadArchivedCardFailure.html":{},"classes/LoadArchivedCardSuccess.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{},"classes/LoadConfig.html":{},"classes/LoadConfigFailure.html":{},"classes/LoadConfigSuccess.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/LoadSettings.html":{},"classes/LoadSettingsFailure.html":{},"classes/LoadSettingsSuccess.html":{},"classes/PatchSettings.html":{},"classes/PatchSettingsFailure.html":{},"classes/PatchSettingsSuccess.html":{},"classes/RemoveLightCard.html":{},"classes/SelectLightCard.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{},"classes/ThirdActionAlreadyLoaded.html":{},"classes/ThirdActionAlreadyUpdated.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateAnActionFailure.html":{},"classes/UpdatedSubscription.html":{}}}],["entityadapter",{"_index":1969,"title":{},"body":{"interfaces/CardFeedState.html":{}}}],["entitystate",{"_index":1956,"title":{},"body":{"interfaces/CardFeedState.html":{},"interfaces/TimelineState.html":{}}}],["entries",{"_index":214,"title":{},"body":{"classes/Action.html":{},"classes/ActionStatus.html":{},"components/CardComponent.html":{},"classes/Input.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{}}}],["entries.map(([key",{"_index":1882,"title":{},"body":{"components/CardComponent.html":{}}}],["entry",{"_index":2376,"title":{},"body":{"injectables/CustomRouterEffects.html":{},"classes/HandleUnexpectedError-4.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["entry.id",{"_index":4154,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["entry.length",{"_index":4155,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["entrycomponents",{"_index":2172,"title":{},"body":{"modules/CardsModule.html":{}}}],["enum",{"_index":61,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/Action.html":{},"classes/ActionStatus.html":{},"classes/AddActionsAppear.html":{},"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"classes/ApplyFilter.html":{},"components/ArchiveFiltersComponent.html":{},"classes/ArchiveQuerySuccess.html":{},"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/Card.html":{},"classes/CardOperation.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckImplicitFlowAuthenticationStatus.html":{},"classes/CheckTokenResponse.html":{},"classes/ClearCard.html":{},"classes/ClearLightCardSelection.html":{},"components/ConfirmModalComponent.html":{},"classes/CreateUserApplication.html":{},"classes/CreateUserApplicationOnFailure.html":{},"classes/CreateUserApplicationOnSuccess.html":{},"classes/DelayedLightCardUpdate.html":{},"classes/Detail.html":{},"classes/EmptyLightCards.html":{},"classes/FailToUpdateTimeReference.html":{},"injectables/FilterService.html":{},"classes/HandleUnexpectedError.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/HandleUnexpectedError-4.html":{},"classes/HandleUnexpectedError-5.html":{},"classes/HandleUnexpectedError-6.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/ImplicitlyAuthenticated.html":{},"classes/InitAuthStatus.html":{},"classes/InitFilters.html":{},"classes/InitTimeline.html":{},"classes/Input.html":{},"classes/LightCard.html":{},"classes/LightCardAlreadyUpdated.html":{},"classes/LoadArchivedCard.html":{},"classes/LoadArchivedCardFailure.html":{},"classes/LoadArchivedCardSuccess.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{},"classes/LoadConfig.html":{},"classes/LoadConfigFailure.html":{},"classes/LoadConfigSuccess.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/LoadSettings.html":{},"classes/LoadSettingsFailure.html":{},"classes/LoadSettingsSuccess.html":{},"classes/Message.html":{},"classes/ParameterListItem.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"classes/PatchSettings.html":{},"classes/PatchSettingsFailure.html":{},"classes/PatchSettingsSuccess.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/Process.html":{},"classes/RefreshTranslation.html":{},"classes/RejectLogIn.html":{},"classes/RemoveLightCard.html":{},"classes/SelectArchivedLightCard.html":{},"classes/SelectLightCard.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{},"classes/SendArchiveQuery.html":{},"classes/SetCardDataTimeline.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdActionAlreadyLoaded.html":{},"classes/ThirdActionAlreadyUpdated.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"classes/Tick.html":{},"classes/TickPayload.html":{},"classes/TimeReference.html":{},"classes/TimeSpan.html":{},"classes/TranslationUpToDate.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"classes/UnAuthenticationFromImplicitFlow.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateAnActionFailure.html":{},"classes/UpdateArchiveFilter.html":{},"classes/UpdateArchivePage.html":{},"classes/UpdateTimeReference.html":{},"classes/UpdateTranslation.html":{},"classes/UpdateTranslationFailed.html":{},"classes/UpdateTranslationSuccessful.html":{},"classes/UpdatedSubscription.html":{},"classes/UselessAuthAction.html":{},"classes/UserApplicationNotRegistered.html":{},"classes/UserApplicationRegistered.html":{}}}],["enumeration",{"_index":980,"title":{},"body":{"components/ArchiveFiltersComponent.html":{}}}],["enumerations",{"_index":5017,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["env/environment",{"_index":803,"title":{},"body":{"interfaces/AppState.html":{},"classes/AuthObject.html":{},"injectables/AuthenticationEffects.html":{},"interfaces/AuthenticationModeHandler.html":{},"injectables/CardService.html":{},"classes/CheckTokenResponse.html":{},"injectables/ConfigService.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"injectables/SettingsService.html":{},"modules/StateModule.html":{},"injectables/ThirdActionService.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"injectables/UserService.html":{}}}],["environment",{"_index":802,"title":{},"body":{"interfaces/AppState.html":{},"classes/AuthObject.html":{},"injectables/AuthenticationEffects.html":{},"interfaces/AuthenticationModeHandler.html":{},"injectables/CardService.html":{},"classes/CheckTokenResponse.html":{},"injectables/ConfigService.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"injectables/SettingsService.html":{},"modules/StateModule.html":{},"injectables/ThirdActionService.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"injectables/UserService.html":{},"index.html":{}}}],["environment.production",{"_index":871,"title":{},"body":{"interfaces/AppState.html":{},"modules/StateModule.html":{}}}],["environment.urls.actions",{"_index":4070,"title":{},"body":{"injectables/ThirdActionService.html":{}}}],["environment.urls.auth}/check_token",{"_index":1160,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["environment.urls.auth}/code/redirect_uri=${this.computeredirecturi",{"_index":1363,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["environment.urls.auth}/token",{"_index":1163,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["environment.urls.cards}/archives",{"_index":2115,"title":{},"body":{"injectables/CardService.html":{}}}],["environment.urls.cards}/cards",{"_index":2113,"title":{},"body":{"injectables/CardService.html":{}}}],["environment.urls.cards}/cardsubscription?clientid=${clientid",{"_index":2111,"title":{},"body":{"injectables/CardService.html":{}}}],["environment.urls.config",{"_index":2233,"title":{},"body":{"injectables/ConfigService.html":{}}}],["environment.urls.thirds",{"_index":4131,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["environment.urls.users",{"_index":3964,"title":{},"body":{"injectables/SettingsService.html":{},"injectables/UserService.html":{}}}],["environment.urls.users}/users",{"_index":1165,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["equality",{"_index":237,"title":{},"body":{"classes/Action.html":{},"classes/ActionStatus.html":{},"classes/Input.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{}}}],["equally",{"_index":1764,"title":{},"body":{"directives/CalcHeightDirective.html":{}}}],["equals",{"_index":229,"title":{},"body":{"classes/Action.html":{},"classes/ActionStatus.html":{},"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/Input.html":{},"classes/ParameterListItem.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{}}}],["err",{"_index":1528,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["error",{"_index":146,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/AddActionsAppear.html":{},"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"injectables/ArchiveEffects.html":{},"classes/ArchiveQuerySuccess.html":{},"classes/AuthObject.html":{},"injectables/AuthenticationEffects.html":{},"interfaces/AuthenticationModeHandler.html":{},"components/CardDetailsComponent.html":{},"interfaces/CardFeedState.html":{},"injectables/CardOperationEffects.html":{},"injectables/CardService.html":{},"interfaces/CardState.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckImplicitFlowAuthenticationStatus.html":{},"classes/CheckTokenResponse.html":{},"classes/ClearCard.html":{},"classes/ClearLightCardSelection.html":{},"interfaces/ConfigState.html":{},"classes/CreateUserApplication.html":{},"classes/CreateUserApplicationOnFailure.html":{},"classes/CreateUserApplicationOnSuccess.html":{},"classes/DelayedLightCardUpdate.html":{},"classes/EmptyLightCards.html":{},"classes/FailToUpdateTimeReference.html":{},"classes/HandleUnexpectedError.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/HandleUnexpectedError-4.html":{},"classes/HandleUnexpectedError-5.html":{},"classes/HandleUnexpectedError-6.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/ImplicitlyAuthenticated.html":{},"classes/InitAuthStatus.html":{},"classes/LightCardAlreadyUpdated.html":{},"classes/LoadArchivedCard.html":{},"classes/LoadArchivedCardFailure.html":{},"classes/LoadArchivedCardSuccess.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{},"classes/LoadConfig.html":{},"classes/LoadConfigFailure.html":{},"classes/LoadConfigSuccess.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/LoadSettings.html":{},"classes/LoadSettingsFailure.html":{},"classes/LoadSettingsSuccess.html":{},"injectables/MenuEffects.html":{},"interfaces/MenuState.html":{},"classes/Message.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"classes/PatchSettings.html":{},"classes/PatchSettingsFailure.html":{},"classes/PatchSettingsSuccess.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RefreshTranslation.html":{},"classes/RejectLogIn.html":{},"classes/RemoveLightCard.html":{},"classes/SelectArchivedLightCard.html":{},"classes/SelectLightCard.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{},"classes/SendArchiveQuery.html":{},"modules/ServicesModule.html":{},"interfaces/SettingsState.html":{},"classes/ThirdActionAlreadyLoaded.html":{},"classes/ThirdActionAlreadyUpdated.html":{},"injectables/ThirdActionService.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"classes/Tick.html":{},"classes/TickPayload.html":{},"injectables/TimeEffects.html":{},"interfaces/TimeState.html":{},"interfaces/TimelineState.html":{},"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{},"interfaces/TranslationState.html":{},"classes/TranslationUpToDate.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"classes/UnAuthenticationFromImplicitFlow.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateAnActionFailure.html":{},"classes/UpdateArchiveFilter.html":{},"classes/UpdateArchivePage.html":{},"classes/UpdateTimeReference.html":{},"classes/UpdateTranslation.html":{},"classes/UpdateTranslationFailed.html":{},"classes/UpdateTranslationSuccessful.html":{},"classes/UpdatedSubscription.html":{},"classes/UselessAuthAction.html":{},"classes/UserApplicationNotRegistered.html":{},"classes/UserApplicationRegistered.html":{},"injectables/UserEffects.html":{},"miscellaneous/enumerations.html":{}}}],["error('no",{"_index":4157,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["error(`unhandled",{"_index":2055,"title":{},"body":{"injectables/CardOperationEffects.html":{}}}],["error.status",{"_index":3460,"title":{},"body":{"injectables/LightCardEffects.html":{}}}],["error.tostring",{"_index":2147,"title":{},"body":{"injectables/CardService.html":{}}}],["error:null",{"_index":3637,"title":{},"body":{"interfaces/MenuState.html":{},"interfaces/TranslationState.html":{}}}],["error:string",{"_index":3635,"title":{},"body":{"interfaces/MenuState.html":{},"interfaces/TranslationState.html":{}}}],["errormsg",{"_index":1488,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["errorresponse",{"_index":1485,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["errorresponse.message",{"_index":1597,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["errorresponse.status",{"_index":1588,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["es",{"_index":2146,"title":{},"body":{"injectables/CardService.html":{}}}],["etc",{"_index":4300,"title":{},"body":{"components/TimeFilterComponent.html":{}}}],["evaluate",{"_index":2964,"title":{},"body":{"classes/Filter.html":{}}}],["event",{"_index":2105,"title":{},"body":{"injectables/CardService.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailComponent.html":{},"directives/DraggableDirective.html":{},"directives/MouseWheelDirective.html":{},"components/ResizableComponent.html":{},"dependencies.html":{}}}],["event('resize",{"_index":3855,"title":{},"body":{"components/ResizableComponent.html":{}}}],["event.detail",{"_index":3677,"title":{},"body":{"directives/MouseWheelDirective.html":{}}}],["event.target.value",{"_index":2522,"title":{},"body":{"components/DatetimeFilterComponent.html":{}}}],["event.type",{"_index":1407,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["event.wheeldelta",{"_index":3676,"title":{},"body":{"directives/MouseWheelDirective.html":{}}}],["eventemitter",{"_index":2707,"title":{},"body":{"directives/DraggableDirective.html":{},"directives/MouseWheelDirective.html":{}}}],["eventsource",{"_index":2091,"title":{},"body":{"injectables/CardService.html":{}}}],["eventsource.close",{"_index":2152,"title":{},"body":{"injectables/CardService.html":{}}}],["eventsource.closed",{"_index":2151,"title":{},"body":{"injectables/CardService.html":{}}}],["eventsource.onerror",{"_index":2143,"title":{},"body":{"injectables/CardService.html":{}}}],["eventsource.onmessage",{"_index":2136,"title":{},"body":{"injectables/CardService.html":{}}}],["eventsource.readystate",{"_index":2150,"title":{},"body":{"injectables/CardService.html":{}}}],["eventsourcepolyfill",{"_index":2089,"title":{},"body":{"injectables/CardService.html":{}}}],["eventtype",{"_index":1145,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["evt",{"_index":3860,"title":{},"body":{"components/ResizableComponent.html":{}}}],["evt.inituievent('resize",{"_index":3862,"title":{},"body":{"components/ResizableComponent.html":{}}}],["example",{"_index":3093,"title":{},"body":{"classes/HandleUnexpectedError-4.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"directives/MouseWheelDirective.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{}}}],["examples/blob/master/app/mousewheeldirective/mousewheel.directive.ts",{"_index":3647,"title":{},"body":{"directives/MouseWheelDirective.html":{}}}],["executetemplate",{"_index":3126,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["executetemplate(templatename",{"_index":3148,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["exist",{"_index":2650,"title":{},"body":{"components/DetailComponent.html":{},"classes/TimeReference.html":{}}}],["existing",{"_index":504,"title":{},"body":{"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"classes/ClearLightCardSelection.html":{},"classes/DelayedLightCardUpdate.html":{},"classes/EmptyLightCards.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/LightCardAlreadyUpdated.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/RemoveLightCard.html":{},"classes/SelectLightCard.html":{},"classes/ThirdActionAlreadyLoaded.html":{},"classes/ThirdActionAlreadyUpdated.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateAnActionFailure.html":{},"classes/UpdatedSubscription.html":{},"miscellaneous/enumerations.html":{}}}],["exists",{"_index":110,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckImplicitFlowAuthenticationStatus.html":{},"components/DetailComponent.html":{},"classes/ImplicitlyAuthenticated.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"classes/UnAuthenticationFromImplicitFlow.html":{},"classes/UselessAuthAction.html":{}}}],["exp",{"_index":1218,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["expandedmenu",{"_index":3704,"title":{},"body":{"components/NavbarComponent.html":{}}}],["expandedmenu:boolean",{"_index":3728,"title":{},"body":{"components/NavbarComponent.html":{}}}],["expandedusermenu",{"_index":3705,"title":{},"body":{"components/NavbarComponent.html":{}}}],["expandedusermenu=false",{"_index":3729,"title":{},"body":{"components/NavbarComponent.html":{}}}],["expiration",{"_index":1298,"title":{},"body":{"classes/AuthObject.html":{},"injectables/AuthenticationEffects.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["expirationdate",{"_index":103,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/AuthObject.html":{},"interfaces/AuthState.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckImplicitFlowAuthenticationStatus.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/ImplicitlyAuthenticated.html":{},"classes/InitAuthStatus.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"classes/UnAuthenticationFromImplicitFlow.html":{},"classes/UselessAuthAction.html":{},"miscellaneous/enumerations.html":{}}}],["expireclaim",{"_index":1168,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["expired",{"_index":1524,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["expires_in",{"_index":1127,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["explicit",{"_index":1552,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["explicitly",{"_index":2320,"title":{},"body":{"components/CustomLogoComponent.html":{}}}],["export",{"_index":60,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/Action.html":{},"components/ActionComponent.html":{},"classes/ActionStatus.html":{},"classes/AddActionsAppear.html":{},"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interfaces/AppState.html":{},"classes/ApplyFilter.html":{},"injectables/ArchiveEffects.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"classes/ArchiveQuerySuccess.html":{},"interfaces/ArchiveState.html":{},"components/ArchivesComponent.html":{},"modules/ArchivesModule.html":{},"modules/ArchivesRoutingModule.html":{},"classes/AuthObject.html":{},"interfaces/AuthState.html":{},"injectables/AuthenticationEffects.html":{},"interfaces/AuthenticationModeHandler.html":{},"components/BaseSettingComponent.html":{},"directives/CalcHeightDirective.html":{},"classes/Card.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"injectables/CardEffects.html":{},"interfaces/CardFeedState.html":{},"components/CardListComponent.html":{},"classes/CardOperation.html":{},"injectables/CardOperationEffects.html":{},"injectables/CardService.html":{},"interfaces/CardState.html":{},"modules/CardsModule.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckImplicitFlowAuthenticationStatus.html":{},"classes/CheckTokenResponse.html":{},"classes/ClearCard.html":{},"classes/ClearLightCardSelection.html":{},"injectables/ConfigEffects.html":{},"injectables/ConfigService.html":{},"interfaces/ConfigState.html":{},"components/ConfirmModalComponent.html":{},"classes/CreateUserApplication.html":{},"classes/CreateUserApplicationOnFailure.html":{},"classes/CreateUserApplicationOnSuccess.html":{},"components/CustomLogoComponent.html":{},"injectables/CustomRouterEffects.html":{},"classes/CustomRouterStateSerializer.html":{},"classes/DateTimeNgb.html":{},"components/DatetimeFilterComponent.html":{},"classes/DelayedLightCardUpdate.html":{},"classes/Detail.html":{},"components/DetailComponent.html":{},"classes/DetailContext.html":{},"components/DetailsComponent.html":{},"directives/DraggableDirective.html":{},"components/EmailSettingComponent.html":{},"classes/EmptyLightCards.html":{},"classes/FailToUpdateTimeReference.html":{},"components/FeedComponent.html":{},"injectables/FeedFiltersEffects.html":{},"modules/FeedModule.html":{},"modules/FeedRoutingModule.html":{},"classes/Filter.html":{},"injectables/FilterService.html":{},"components/FiltersComponent.html":{},"classes/GuidService.html":{},"classes/HandleUnexpectedError.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/HandleUnexpectedError-4.html":{},"classes/HandleUnexpectedError-5.html":{},"classes/HandleUnexpectedError-6.html":{},"injectables/HandlebarsService.html":{},"classes/I18n.html":{},"injectables/I18nService.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/ImplicitlyAuthenticated.html":{},"components/InfoComponent.html":{},"classes/InitAuthStatus.html":{},"classes/InitFilters.html":{},"classes/InitTimeline.html":{},"classes/Input.html":{},"classes/LightCard.html":{},"classes/LightCardAlreadyUpdated.html":{},"injectables/LightCardEffects.html":{},"components/ListSettingComponent.html":{},"classes/LoadArchivedCard.html":{},"classes/LoadArchivedCardFailure.html":{},"classes/LoadArchivedCardSuccess.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{},"classes/LoadConfig.html":{},"classes/LoadConfigFailure.html":{},"classes/LoadConfigSuccess.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/LoadSettings.html":{},"classes/LoadSettingsFailure.html":{},"classes/LoadSettingsSuccess.html":{},"components/LoginComponent.html":{},"classes/Map.html":{},"injectables/MenuEffects.html":{},"components/MenuLinkComponent.html":{},"interfaces/MenuState.html":{},"classes/Message.html":{},"directives/MouseWheelDirective.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"injectables/NotifyService.html":{},"classes/Page.html":{},"classes/ParameterListItem.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"classes/PatchSettings.html":{},"classes/PatchSettingsFailure.html":{},"classes/PatchSettingsSuccess.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/Process.html":{},"classes/RefreshTranslation.html":{},"classes/RejectLogIn.html":{},"classes/RemoveLightCard.html":{},"components/ResizableComponent.html":{},"classes/RouterStateUrl.html":{},"classes/SelectArchivedLightCard.html":{},"classes/SelectLightCard.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{},"classes/SendArchiveQuery.html":{},"modules/ServicesModule.html":{},"classes/SetCardDataTimeline.html":{},"components/SettingsComponent.html":{},"injectables/SettingsEffects.html":{},"interfaces/SettingsInputs.html":{},"modules/SettingsModule.html":{},"modules/SettingsRoutingModule.html":{},"injectables/SettingsService.html":{},"interfaces/SettingsState.html":{},"classes/State.html":{},"modules/StateModule.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"classes/Third.html":{},"classes/ThirdActionAlreadyLoaded.html":{},"classes/ThirdActionAlreadyUpdated.html":{},"injectables/ThirdActionService.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"modules/ThirdpartyModule.html":{},"modules/ThirdpartyRoutingModule.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"classes/ThirdsServiceMock.html":{},"classes/Tick.html":{},"classes/TickPayload.html":{},"injectables/TimeEffects.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"classes/TimeReference.html":{},"classes/TimeSpan.html":{},"interfaces/TimeState.html":{},"interfaces/TimelineState.html":{},"interceptors/TokenInjector.html":{},"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{},"interfaces/TranslationState.html":{},"classes/TranslationUpToDate.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"classes/UnAuthenticationFromImplicitFlow.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateAnActionFailure.html":{},"classes/UpdateArchiveFilter.html":{},"classes/UpdateArchivePage.html":{},"classes/UpdateTimeReference.html":{},"classes/UpdateTranslation.html":{},"classes/UpdateTranslationFailed.html":{},"classes/UpdateTranslationSuccessful.html":{},"classes/UpdatedSubscription.html":{},"classes/UselessAuthAction.html":{},"classes/User.html":{},"classes/UserApplicationNotRegistered.html":{},"classes/UserApplicationRegistered.html":{},"classes/UserContext.html":{},"injectables/UserEffects.html":{},"injectables/UserService.html":{},"interfaces/UserState.html":{},"modules/UtilitiesModule.html":{},"pipes/XAxisTickFormatPipe.html":{}}}],["exports",{"_index":646,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/ArchivesModule.html":{},"modules/ArchivesRoutingModule.html":{},"modules/CardsModule.html":{},"modules/FeedModule.html":{},"modules/FeedRoutingModule.html":{},"modules/ServicesModule.html":{},"modules/SettingsModule.html":{},"modules/SettingsRoutingModule.html":{},"modules/StateModule.html":{},"modules/ThirdpartyModule.html":{},"modules/ThirdpartyRoutingModule.html":{},"modules/UtilitiesModule.html":{},"index.html":{}}}],["extended",{"_index":491,"title":{},"body":{"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"classes/ClearLightCardSelection.html":{},"classes/DelayedLightCardUpdate.html":{},"classes/EmptyLightCards.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/LightCardAlreadyUpdated.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/RemoveLightCard.html":{},"classes/SelectLightCard.html":{},"classes/ThirdActionAlreadyLoaded.html":{},"classes/ThirdActionAlreadyUpdated.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateAnActionFailure.html":{},"classes/UpdatedSubscription.html":{},"miscellaneous/enumerations.html":{}}}],["extends",{"_index":1967,"title":{},"body":{"interfaces/CardFeedState.html":{},"components/CardListComponent.html":{},"classes/DateTimeNgb.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/ListSettingComponent.html":{},"components/MultiSettingsComponent.html":{},"components/TextSettingComponent.html":{},"interfaces/TimelineState.html":{},"components/TypeAheadSettingsComponent.html":{}}}],["external",{"_index":217,"title":{},"body":{"classes/Action.html":{},"classes/ActionStatus.html":{},"classes/Input.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"miscellaneous/enumerations.html":{}}}],["extract",{"_index":1194,"title":{},"body":{"classes/AuthObject.html":{},"injectables/AuthenticationEffects.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["extractactionstatusfrompseudoactionstatus",{"_index":3465,"title":{},"body":{"injectables/LightCardEffects.html":{},"injectables/ThirdActionService.html":{}}}],["extractactionstatusfrompseudoactionstatus(action.payload.status",{"_index":3437,"title":{},"body":{"injectables/LightCardEffects.html":{}}}],["extractactionstatusfrompseudoactionstatus(currentstatus",{"_index":4074,"title":{},"body":{"injectables/ThirdActionService.html":{}}}],["extractactionstatusfrompseudoactionstatus(formerstatus",{"_index":4071,"title":{},"body":{"injectables/ThirdActionService.html":{}}}],["extractactionstatusfrompseudoactionstatus(taction",{"_index":244,"title":{},"body":{"classes/Action.html":{},"classes/ActionStatus.html":{},"classes/Input.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{}}}],["extractactionstatusfrompseudoactionstatus(thirdactiontoupdate",{"_index":3443,"title":{},"body":{"injectables/LightCardEffects.html":{}}}],["extracted",{"_index":1187,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["extracti18nbuilderoptions",{"_index":57,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckImplicitFlowAuthenticationStatus.html":{},"classes/ImplicitlyAuthenticated.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"classes/UnAuthenticationFromImplicitFlow.html":{},"classes/UselessAuthAction.html":{}}}],["extracti18ntoupdate",{"_index":4729,"title":{},"body":{"injectables/TranslateEffects.html":{}}}],["extracti18ntoupdate(versions",{"_index":4666,"title":{},"body":{"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["extractidentificationinformation",{"_index":1330,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["extractparams",{"_index":2383,"title":{},"body":{"classes/CustomRouterStateSerializer.html":{}}}],["extractparams(state",{"_index":2385,"title":{},"body":{"classes/CustomRouterStateSerializer.html":{},"classes/RouterStateUrl.html":{}}}],["extractpublisherassociatedwithdistinctversionsfrom",{"_index":4730,"title":{},"body":{"injectables/TranslateEffects.html":{}}}],["extractpublisherassociatedwithdistinctversionsfrom(menus",{"_index":4685,"title":{},"body":{"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["extractpublisherassociatedwithdistinctversionsfromcards",{"_index":4731,"title":{},"body":{"injectables/TranslateEffects.html":{}}}],["extractpublisherassociatedwithdistinctversionsfromcards(cards",{"_index":4671,"title":{},"body":{"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["extractstate",{"_index":4038,"title":{},"body":{"classes/Third.html":{}}}],["extractstate(card",{"_index":202,"title":{},"body":{"classes/Action.html":{},"classes/ActionStatus.html":{},"classes/Input.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{}}}],["extractthirdtoupdate",{"_index":4732,"title":{},"body":{"injectables/TranslateEffects.html":{}}}],["extractthirdtoupdate(versioninput",{"_index":4694,"title":{},"body":{"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["extracttoken",{"_index":1295,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["f5",{"_index":627,"title":{},"body":{"components/AppComponent.html":{}}}],["fa",{"_index":2638,"title":{},"body":{"components/DetailComponent.html":{},"components/TypeFilterComponent.html":{}}}],["faclock",{"_index":2933,"title":{},"body":{"modules/FeedModule.html":{}}}],["faexternallinkalt",{"_index":692,"title":{},"body":{"modules/AppModule.html":{}}}],["fail",{"_index":449,"title":{},"body":{"classes/AddActionsAppear.html":{},"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"classes/ClearCard.html":{},"classes/ClearLightCardSelection.html":{},"classes/DelayedLightCardUpdate.html":{},"classes/EmptyLightCards.html":{},"classes/FailToUpdateTimeReference.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/HandleUnexpectedError-4.html":{},"classes/HandleUnexpectedError-5.html":{},"classes/LightCardAlreadyUpdated.html":{},"classes/LoadArchivedCard.html":{},"classes/LoadArchivedCardFailure.html":{},"classes/LoadArchivedCardSuccess.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{},"classes/LoadConfig.html":{},"classes/LoadConfigFailure.html":{},"classes/LoadConfigSuccess.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/LoadSettings.html":{},"classes/LoadSettingsFailure.html":{},"classes/LoadSettingsSuccess.html":{},"classes/PatchSettings.html":{},"classes/PatchSettingsFailure.html":{},"classes/PatchSettingsSuccess.html":{},"classes/RemoveLightCard.html":{},"classes/SelectLightCard.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{},"classes/ThirdActionAlreadyLoaded.html":{},"classes/ThirdActionAlreadyUpdated.html":{},"classes/Tick.html":{},"classes/TickPayload.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateAnActionFailure.html":{},"classes/UpdateTimeReference.html":{},"classes/UpdatedSubscription.html":{},"miscellaneous/enumerations.html":{}}}],["failed",{"_index":3823,"title":{},"body":{"classes/RefreshTranslation.html":{},"classes/TranslationUpToDate.html":{},"classes/UpdateTranslation.html":{},"classes/UpdateTranslationFailed.html":{},"classes/UpdateTranslationSuccessful.html":{},"miscellaneous/enumerations.html":{}}}],["failtoupdatetimereference",{"_index":2780,"title":{"classes/FailToUpdateTimeReference.html":{}},"body":{"classes/FailToUpdateTimeReference.html":{},"classes/Tick.html":{},"classes/TickPayload.html":{},"injectables/TimeEffects.html":{},"classes/UpdateTimeReference.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["failtoupdatetimereference='[time",{"_index":2798,"title":{},"body":{"classes/FailToUpdateTimeReference.html":{},"classes/Tick.html":{},"classes/TickPayload.html":{},"classes/UpdateTimeReference.html":{}}}],["failure",{"_index":2271,"title":{},"body":{"classes/CreateUserApplication.html":{},"classes/CreateUserApplicationOnFailure.html":{},"classes/CreateUserApplicationOnSuccess.html":{},"classes/HandleUnexpectedError-4.html":{},"classes/HandleUnexpectedError-6.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{},"classes/UserApplicationNotRegistered.html":{},"classes/UserApplicationRegistered.html":{},"miscellaneous/enumerations.html":{}}}],["fallback",{"_index":1744,"title":{},"body":{"directives/CalcHeightDirective.html":{},"injectables/HandlebarsService.html":{}}}],["false",{"_index":219,"title":{},"body":{"classes/Action.html":{},"classes/ActionStatus.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/ArchiveFiltersComponent.html":{},"interfaces/ArchiveState.html":{},"classes/AuthObject.html":{},"interfaces/AuthState.html":{},"interfaces/AuthenticationModeHandler.html":{},"components/CardComponent.html":{},"interfaces/CardFeedState.html":{},"interfaces/CardState.html":{},"classes/CheckTokenResponse.html":{},"interfaces/ConfigState.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"directives/DraggableDirective.html":{},"injectables/FeedFiltersEffects.html":{},"classes/Filter.html":{},"injectables/FilterService.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/Input.html":{},"components/ListSettingComponent.html":{},"interfaces/MenuState.html":{},"components/NavbarComponent.html":{},"classes/ParameterListItem.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"classes/Process.html":{},"components/ResizableComponent.html":{},"interfaces/SettingsState.html":{},"classes/State.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"interfaces/TimelineState.html":{},"components/TypeFilterComponent.html":{},"interfaces/UserState.html":{}}}],["family_name",{"_index":1215,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["familynameclaim",{"_index":1171,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["fasignoutalt",{"_index":693,"title":{},"body":{"modules/AppModule.html":{}}}],["fctargs[fctargs.length",{"_index":3237,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["feed",{"_index":724,"title":{},"body":{"modules/AppRoutingModule.html":{},"interfaces/AppState.html":{},"classes/ApplyFilter.html":{},"components/ArchiveListComponent.html":{},"injectables/AuthenticationEffects.html":{},"interfaces/CardFeedState.html":{},"components/CardListComponent.html":{},"modules/FeedModule.html":{},"classes/Filter.html":{},"classes/InitFilters.html":{},"components/TimeLineComponent.html":{},"interfaces/TimelineState.html":{},"miscellaneous/enumerations.html":{}}}],["feed.component",{"_index":2921,"title":{},"body":{"modules/FeedModule.html":{},"modules/FeedRoutingModule.html":{}}}],["feed.component.html",{"_index":2818,"title":{},"body":{"components/FeedComponent.html":{}}}],["feed.component.scss",{"_index":2817,"title":{},"body":{"components/FeedComponent.html":{}}}],["feed.filters.time.end.label",{"_index":4323,"title":{},"body":{"components/TimeFilterComponent.html":{}}}],["feed.filters.time.start.label",{"_index":4322,"title":{},"body":{"components/TimeFilterComponent.html":{}}}],["feed.filters.time.title",{"_index":4324,"title":{},"body":{"components/TimeFilterComponent.html":{}}}],["feed.filters.type.action.label",{"_index":4809,"title":{},"body":{"components/TypeFilterComponent.html":{}}}],["feed.filters.type.alarm.label",{"_index":4808,"title":{},"body":{"components/TypeFilterComponent.html":{}}}],["feed.filters.type.compliant.label",{"_index":4810,"title":{},"body":{"components/TypeFilterComponent.html":{}}}],["feed.filters.type.information.label",{"_index":4811,"title":{},"body":{"components/TypeFilterComponent.html":{}}}],["feed.filters.type.title",{"_index":4812,"title":{},"body":{"components/TypeFilterComponent.html":{}}}],["feed.timefilter.followclocktick",{"_index":2905,"title":{},"body":{"injectables/FeedFiltersEffects.html":{}}}],["feedactions",{"_index":891,"title":{},"body":{"classes/ApplyFilter.html":{},"classes/InitFilters.html":{},"miscellaneous/typealiases.html":{}}}],["feedactiontypes",{"_index":883,"title":{},"body":{"classes/ApplyFilter.html":{},"injectables/CardOperationEffects.html":{},"classes/InitFilters.html":{},"miscellaneous/enumerations.html":{}}}],["feedactiontypes.applyfilter",{"_index":878,"title":{},"body":{"classes/ApplyFilter.html":{},"classes/InitFilters.html":{}}}],["feedactiontypes.initfilter",{"_index":889,"title":{},"body":{"classes/ApplyFilter.html":{},"classes/InitFilters.html":{}}}],["feedcomponent",{"_index":391,"title":{"components/FeedComponent.html":{}},"body":{"components/ActionComponent.html":{},"components/AppComponent.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/ConfirmModalComponent.html":{},"components/CustomLogoComponent.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"modules/FeedModule.html":{},"modules/FeedRoutingModule.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MenuLinkComponent.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/ResizableComponent.html":{},"components/SettingsComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"index.html":{}}}],["feedfilterseffects",{"_index":841,"title":{"injectables/FeedFiltersEffects.html":{}},"body":{"interfaces/AppState.html":{},"injectables/FeedFiltersEffects.html":{}}}],["feedinitialstate",{"_index":1992,"title":{},"body":{"interfaces/CardFeedState.html":{}}}],["feedmodule",{"_index":2913,"title":{"modules/FeedModule.html":{}},"body":{"modules/FeedModule.html":{},"index.html":{},"modules.html":{}}}],["feedroutingmodule",{"_index":2919,"title":{"modules/FeedRoutingModule.html":{}},"body":{"modules/FeedModule.html":{},"modules/FeedRoutingModule.html":{},"index.html":{},"modules.html":{}}}],["feedselectors",{"_index":2825,"title":{},"body":{"components/FeedComponent.html":{},"components/TimeLineComponent.html":{}}}],["fetch",{"_index":1927,"title":{},"body":{"components/CardDetailsComponent.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["fetchactionmap",{"_index":4219,"title":{},"body":{"injectables/ThirdsService.html":{}}}],["fetchactionmap(publisher",{"_index":4207,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["fetchactionmapfromlightcard",{"_index":4220,"title":{},"body":{"injectables/ThirdsService.html":{}}}],["fetchactionmapfromlightcard(card",{"_index":4205,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["fetcharchivedcards",{"_index":2078,"title":{},"body":{"injectables/CardService.html":{}}}],["fetcharchivedcards(filters",{"_index":2086,"title":{},"body":{"injectables/CardService.html":{}}}],["fetchcardoperation",{"_index":2079,"title":{},"body":{"injectables/CardService.html":{}}}],["fetchcardoperation(eventsource",{"_index":2088,"title":{},"body":{"injectables/CardService.html":{}}}],["fetchconfiguration",{"_index":2229,"title":{},"body":{"injectables/ConfigService.html":{}}}],["fetchhbstemplate",{"_index":4221,"title":{},"body":{"injectables/ThirdsService.html":{}}}],["fetchhbstemplate(publisher",{"_index":4162,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["fetchlightcard",{"_index":3464,"title":{},"body":{"injectables/LightCardEffects.html":{}}}],["fetchthird",{"_index":4222,"title":{},"body":{"injectables/ThirdsService.html":{}}}],["fetchthird(publisher",{"_index":4144,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["fetchusersettings",{"_index":3956,"title":{},"body":{"injectables/SettingsService.html":{}}}],["field",{"_index":4022,"title":{},"body":{"components/TagsFilterComponent.html":{},"components/TypeAheadSettingsComponent.html":{}}}],["fields",{"_index":2519,"title":{},"body":{"components/DatetimeFilterComponent.html":{}}}],["file",{"_index":5,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/Action.html":{},"components/ActionComponent.html":{},"classes/ActionStatus.html":{},"classes/AddActionsAppear.html":{},"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interfaces/AppState.html":{},"classes/ApplyFilter.html":{},"injectables/ArchiveEffects.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"classes/ArchiveQuerySuccess.html":{},"interfaces/ArchiveState.html":{},"components/ArchivesComponent.html":{},"modules/ArchivesModule.html":{},"modules/ArchivesRoutingModule.html":{},"classes/AuthObject.html":{},"interfaces/AuthState.html":{},"injectables/AuthenticationEffects.html":{},"interfaces/AuthenticationModeHandler.html":{},"components/BaseSettingComponent.html":{},"directives/CalcHeightDirective.html":{},"classes/Card.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"injectables/CardEffects.html":{},"interfaces/CardFeedState.html":{},"components/CardListComponent.html":{},"classes/CardOperation.html":{},"injectables/CardOperationEffects.html":{},"injectables/CardService.html":{},"interfaces/CardState.html":{},"modules/CardsModule.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckImplicitFlowAuthenticationStatus.html":{},"classes/CheckTokenResponse.html":{},"classes/ClearCard.html":{},"classes/ClearLightCardSelection.html":{},"injectables/ConfigEffects.html":{},"injectables/ConfigService.html":{},"interfaces/ConfigState.html":{},"components/ConfirmModalComponent.html":{},"classes/CreateUserApplication.html":{},"classes/CreateUserApplicationOnFailure.html":{},"classes/CreateUserApplicationOnSuccess.html":{},"components/CustomLogoComponent.html":{},"injectables/CustomRouterEffects.html":{},"classes/CustomRouterStateSerializer.html":{},"classes/DateTimeNgb.html":{},"components/DatetimeFilterComponent.html":{},"classes/DelayedLightCardUpdate.html":{},"classes/Detail.html":{},"components/DetailComponent.html":{},"classes/DetailContext.html":{},"components/DetailsComponent.html":{},"directives/DraggableDirective.html":{},"components/EmailSettingComponent.html":{},"classes/EmptyLightCards.html":{},"classes/FailToUpdateTimeReference.html":{},"components/FeedComponent.html":{},"injectables/FeedFiltersEffects.html":{},"modules/FeedModule.html":{},"modules/FeedRoutingModule.html":{},"classes/Filter.html":{},"injectables/FilterService.html":{},"components/FiltersComponent.html":{},"classes/GuidService.html":{},"classes/HandleUnexpectedError.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/HandleUnexpectedError-4.html":{},"classes/HandleUnexpectedError-5.html":{},"classes/HandleUnexpectedError-6.html":{},"injectables/HandlebarsService.html":{},"classes/I18n.html":{},"injectables/I18nService.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/ImplicitlyAuthenticated.html":{},"components/InfoComponent.html":{},"classes/InitAuthStatus.html":{},"classes/InitFilters.html":{},"classes/InitTimeline.html":{},"classes/Input.html":{},"classes/LightCard.html":{},"classes/LightCardAlreadyUpdated.html":{},"injectables/LightCardEffects.html":{},"components/ListSettingComponent.html":{},"classes/LoadArchivedCard.html":{},"classes/LoadArchivedCardFailure.html":{},"classes/LoadArchivedCardSuccess.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{},"classes/LoadConfig.html":{},"classes/LoadConfigFailure.html":{},"classes/LoadConfigSuccess.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/LoadSettings.html":{},"classes/LoadSettingsFailure.html":{},"classes/LoadSettingsSuccess.html":{},"components/LoginComponent.html":{},"classes/Map.html":{},"injectables/MenuEffects.html":{},"components/MenuLinkComponent.html":{},"interfaces/MenuState.html":{},"classes/Message.html":{},"directives/MouseWheelDirective.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"injectables/NotifyService.html":{},"classes/Page.html":{},"classes/ParameterListItem.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"classes/PatchSettings.html":{},"classes/PatchSettingsFailure.html":{},"classes/PatchSettingsSuccess.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/Process.html":{},"classes/RefreshTranslation.html":{},"classes/RejectLogIn.html":{},"classes/RemoveLightCard.html":{},"components/ResizableComponent.html":{},"classes/RouterStateUrl.html":{},"classes/SelectArchivedLightCard.html":{},"classes/SelectLightCard.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{},"classes/SendArchiveQuery.html":{},"modules/ServicesModule.html":{},"classes/SetCardDataTimeline.html":{},"components/SettingsComponent.html":{},"injectables/SettingsEffects.html":{},"interfaces/SettingsInputs.html":{},"modules/SettingsModule.html":{},"modules/SettingsRoutingModule.html":{},"injectables/SettingsService.html":{},"interfaces/SettingsState.html":{},"classes/State.html":{},"modules/StateModule.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"classes/Third.html":{},"classes/ThirdActionAlreadyLoaded.html":{},"classes/ThirdActionAlreadyUpdated.html":{},"injectables/ThirdActionService.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"modules/ThirdpartyModule.html":{},"modules/ThirdpartyRoutingModule.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"classes/ThirdsServiceMock.html":{},"classes/Tick.html":{},"classes/TickPayload.html":{},"injectables/TimeEffects.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"classes/TimeReference.html":{},"classes/TimeSpan.html":{},"interfaces/TimeState.html":{},"interfaces/TimelineState.html":{},"interceptors/TokenInjector.html":{},"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{},"interfaces/TranslationState.html":{},"classes/TranslationUpToDate.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"classes/UnAuthenticationFromImplicitFlow.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateAnActionFailure.html":{},"classes/UpdateArchiveFilter.html":{},"classes/UpdateArchivePage.html":{},"classes/UpdateTimeReference.html":{},"classes/UpdateTranslation.html":{},"classes/UpdateTranslationFailed.html":{},"classes/UpdateTranslationSuccessful.html":{},"classes/UpdatedSubscription.html":{},"classes/UselessAuthAction.html":{},"classes/User.html":{},"classes/UserApplicationNotRegistered.html":{},"classes/UserApplicationRegistered.html":{},"classes/UserContext.html":{},"injectables/UserEffects.html":{},"injectables/UserService.html":{},"interfaces/UserState.html":{},"modules/UtilitiesModule.html":{},"pipes/XAxisTickFormatPipe.html":{}}}],["fill",{"_index":3332,"title":{},"body":{"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{}}}],["filter",{"_index":426,"title":{"classes/Filter.html":{}},"body":{"components/ActionComponent.html":{},"components/AppComponent.html":{},"classes/ApplyFilter.html":{},"injectables/ArchiveEffects.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"classes/ArchiveQuerySuccess.html":{},"components/ArchivesComponent.html":{},"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"interfaces/CardFeedState.html":{},"components/CardListComponent.html":{},"injectables/CardOperationEffects.html":{},"classes/CheckTokenResponse.html":{},"injectables/ConfigEffects.html":{},"components/ConfirmModalComponent.html":{},"components/CustomLogoComponent.html":{},"injectables/CustomRouterEffects.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"injectables/FeedFiltersEffects.html":{},"classes/Filter.html":{},"injectables/FilterService.html":{},"components/FiltersComponent.html":{},"classes/HandleUnexpectedError.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"classes/ImplicitAuthenticationHandler.html":{},"components/InfoComponent.html":{},"classes/InitFilters.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MenuLinkComponent.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"components/ResizableComponent.html":{},"classes/SelectArchivedLightCard.html":{},"classes/SendArchiveQuery.html":{},"components/SettingsComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"classes/UpdateArchiveFilter.html":{},"classes/UpdateArchivePage.html":{},"miscellaneous/enumerations.html":{}}}],["filter$(filter",{"_index":4787,"title":{},"body":{"components/TypeFilterComponent.html":{}}}],["filter'},{'name",{"_index":385,"title":{},"body":{"components/ActionComponent.html":{},"components/AppComponent.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/ConfirmModalComponent.html":{},"components/CustomLogoComponent.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MenuLinkComponent.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/ResizableComponent.html":{},"components/SettingsComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{}}}],["filter(()=>this.form.valid",{"_index":1681,"title":{},"body":{"components/BaseSettingComponent.html":{}}}],["filter(([action",{"_index":2225,"title":{},"body":{"injectables/ConfigEffects.html":{}}}],["filter(([elapsedsincelast",{"_index":2891,"title":{},"body":{"injectables/FeedFiltersEffects.html":{}}}],["filter((action",{"_index":2342,"title":{},"body":{"injectables/CustomRouterEffects.html":{}}}],["filter((af",{"_index":2059,"title":{},"body":{"injectables/CardOperationEffects.html":{}}}],["filter((t",{"_index":4196,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["filter(time",{"_index":2886,"title":{},"body":{"injectables/FeedFiltersEffects.html":{}}}],["filter(v=>!!v",{"_index":2868,"title":{},"body":{"injectables/FeedFiltersEffects.html":{}}}],["filter(x",{"_index":2878,"title":{},"body":{"injectables/FeedFiltersEffects.html":{}}}],["filter.component",{"_index":1107,"title":{},"body":{"modules/ArchivesModule.html":{},"modules/FeedModule.html":{}}}],["filter.component.css",{"_index":2472,"title":{},"body":{"components/DatetimeFilterComponent.html":{},"components/MultiFilterComponent.html":{}}}],["filter.component.html",{"_index":2473,"title":{},"body":{"components/DatetimeFilterComponent.html":{},"components/MultiFilterComponent.html":{},"components/TagsFilterComponent.html":{},"components/TimeFilterComponent.html":{},"components/TypeFilterComponent.html":{}}}],["filter.component.scss",{"_index":3995,"title":{},"body":{"components/TagsFilterComponent.html":{},"components/TypeFilterComponent.html":{}}}],["filter.component.ts",{"_index":2465,"title":{},"body":{"components/DatetimeFilterComponent.html":{},"components/MultiFilterComponent.html":{},"components/TagsFilterComponent.html":{},"components/TimeFilterComponent.html":{},"components/TypeFilterComponent.html":{}}}],["filter.component.ts:21",{"_index":3685,"title":{},"body":{"components/MultiFilterComponent.html":{}}}],["filter.component.ts:22",{"_index":3683,"title":{},"body":{"components/MultiFilterComponent.html":{}}}],["filter.component.ts:23",{"_index":3682,"title":{},"body":{"components/MultiFilterComponent.html":{}}}],["filter.component.ts:25",{"_index":3681,"title":{},"body":{"components/MultiFilterComponent.html":{}}}],["filter.component.ts:28",{"_index":4005,"title":{},"body":{"components/TagsFilterComponent.html":{},"components/TimeFilterComponent.html":{},"components/TypeFilterComponent.html":{}}}],["filter.component.ts:29",{"_index":4004,"title":{},"body":{"components/TagsFilterComponent.html":{},"components/TimeFilterComponent.html":{},"components/TypeFilterComponent.html":{}}}],["filter.component.ts:30",{"_index":4001,"title":{},"body":{"components/TagsFilterComponent.html":{}}}],["filter.component.ts:31",{"_index":4296,"title":{},"body":{"components/TimeFilterComponent.html":{},"components/TypeFilterComponent.html":{}}}],["filter.component.ts:32",{"_index":3684,"title":{},"body":{"components/MultiFilterComponent.html":{}}}],["filter.component.ts:33",{"_index":4786,"title":{},"body":{"components/TypeFilterComponent.html":{}}}],["filter.component.ts:34",{"_index":2505,"title":{},"body":{"components/DatetimeFilterComponent.html":{}}}],["filter.component.ts:35",{"_index":2507,"title":{},"body":{"components/DatetimeFilterComponent.html":{},"components/TimeFilterComponent.html":{},"components/TypeFilterComponent.html":{}}}],["filter.component.ts:36",{"_index":2485,"title":{},"body":{"components/DatetimeFilterComponent.html":{},"components/TagsFilterComponent.html":{}}}],["filter.component.ts:37",{"_index":2504,"title":{},"body":{"components/DatetimeFilterComponent.html":{}}}],["filter.component.ts:40",{"_index":2484,"title":{},"body":{"components/DatetimeFilterComponent.html":{}}}],["filter.component.ts:42",{"_index":4294,"title":{},"body":{"components/TimeFilterComponent.html":{}}}],["filter.component.ts:45",{"_index":2506,"title":{},"body":{"components/DatetimeFilterComponent.html":{},"components/TypeFilterComponent.html":{}}}],["filter.component.ts:47",{"_index":2502,"title":{},"body":{"components/DatetimeFilterComponent.html":{},"components/TimeFilterComponent.html":{}}}],["filter.component.ts:51",{"_index":2490,"title":{},"body":{"components/DatetimeFilterComponent.html":{}}}],["filter.component.ts:54",{"_index":4784,"title":{},"body":{"components/TypeFilterComponent.html":{}}}],["filter.component.ts:55",{"_index":2493,"title":{},"body":{"components/DatetimeFilterComponent.html":{}}}],["filter.component.ts:59",{"_index":2495,"title":{},"body":{"components/DatetimeFilterComponent.html":{}}}],["filter.component.ts:60",{"_index":4785,"title":{},"body":{"components/TypeFilterComponent.html":{}}}],["filter.component.ts:63",{"_index":2499,"title":{},"body":{"components/DatetimeFilterComponent.html":{}}}],["filter.component.ts:64",{"_index":4003,"title":{},"body":{"components/TagsFilterComponent.html":{}}}],["filter.component.ts:67",{"_index":2488,"title":{},"body":{"components/DatetimeFilterComponent.html":{}}}],["filter.component.ts:69",{"_index":4002,"title":{},"body":{"components/TagsFilterComponent.html":{}}}],["filter.component.ts:75",{"_index":2487,"title":{},"body":{"components/DatetimeFilterComponent.html":{}}}],["filter.component.ts:97",{"_index":4293,"title":{},"body":{"components/TimeFilterComponent.html":{}}}],["filter.model",{"_index":880,"title":{},"body":{"classes/ApplyFilter.html":{},"interfaces/ArchiveState.html":{},"interfaces/CardFeedState.html":{},"injectables/FilterService.html":{},"classes/InitFilters.html":{},"components/TagsFilterComponent.html":{},"components/TimeFilterComponent.html":{},"components/TypeFilterComponent.html":{}}}],["filter.model.ts",{"_index":2957,"title":{},"body":{"classes/Filter.html":{}}}],["filter.model.ts:23",{"_index":2976,"title":{},"body":{"classes/Filter.html":{}}}],["filter.model.ts:28",{"_index":2977,"title":{},"body":{"classes/Filter.html":{}}}],["filter.model.ts:29",{"_index":2978,"title":{},"body":{"classes/Filter.html":{}}}],["filter.model.ts:33",{"_index":2991,"title":{},"body":{"classes/Filter.html":{}}}],["filter.model.ts:44",{"_index":2980,"title":{},"body":{"classes/Filter.html":{}}}],["filter.model.ts:57",{"_index":2983,"title":{},"body":{"classes/Filter.html":{}}}],["filter.model.ts:68",{"_index":2988,"title":{},"body":{"classes/Filter.html":{}}}],["filter/datetime",{"_index":1109,"title":{},"body":{"modules/ArchivesModule.html":{},"components/DatetimeFilterComponent.html":{}}}],["filter/multi",{"_index":1106,"title":{},"body":{"modules/ArchivesModule.html":{},"components/MultiFilterComponent.html":{}}}],["filter/tags",{"_index":2951,"title":{},"body":{"modules/FeedModule.html":{},"components/TagsFilterComponent.html":{}}}],["filter/time",{"_index":2932,"title":{},"body":{"modules/FeedModule.html":{},"components/TimeFilterComponent.html":{}}}],["filter/type",{"_index":2930,"title":{},"body":{"modules/FeedModule.html":{},"components/TypeFilterComponent.html":{}}}],["filterdatetypes",{"_index":970,"title":{},"body":{"components/ArchiveFiltersComponent.html":{},"miscellaneous/enumerations.html":{}}}],["filtered",{"_index":2869,"title":{},"body":{"injectables/FeedFiltersEffects.html":{},"classes/Filter.html":{},"components/TimeLineComponent.html":{}}}],["filtering",{"_index":30,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckImplicitFlowAuthenticationStatus.html":{},"injectables/CustomRouterEffects.html":{},"classes/Filter.html":{},"classes/ImplicitlyAuthenticated.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"classes/UnAuthenticationFromImplicitFlow.html":{},"classes/UselessAuthAction.html":{}}}],["filterpath",{"_index":2483,"title":{},"body":{"components/DatetimeFilterComponent.html":{},"components/MultiFilterComponent.html":{}}}],["filters",{"_index":917,"title":{},"body":{"injectables/ArchiveEffects.html":{},"components/ArchiveFiltersComponent.html":{},"classes/ArchiveQuerySuccess.html":{},"interfaces/ArchiveState.html":{},"interfaces/CardFeedState.html":{},"injectables/CardService.html":{},"classes/Filter.html":{},"injectables/FilterService.html":{},"components/FiltersComponent.html":{},"classes/HandleUnexpectedError.html":{},"classes/SelectArchivedLightCard.html":{},"classes/SendArchiveQuery.html":{},"classes/UpdateArchiveFilter.html":{},"classes/UpdateArchivePage.html":{}}}],["filters'},{'name",{"_index":358,"title":{},"body":{"components/ActionComponent.html":{},"components/AppComponent.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/ConfirmModalComponent.html":{},"components/CustomLogoComponent.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MenuLinkComponent.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/ResizableComponent.html":{},"components/SettingsComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{}}}],["filters.component",{"_index":1104,"title":{},"body":{"modules/ArchivesModule.html":{}}}],["filters.component.css",{"_index":943,"title":{},"body":{"components/ArchiveFiltersComponent.html":{}}}],["filters.component.html",{"_index":944,"title":{},"body":{"components/ArchiveFiltersComponent.html":{},"components/FiltersComponent.html":{}}}],["filters.component.ts",{"_index":942,"title":{},"body":{"components/ArchiveFiltersComponent.html":{},"miscellaneous/enumerations.html":{}}}],["filters.component.ts:47",{"_index":960,"title":{},"body":{"components/ArchiveFiltersComponent.html":{}}}],["filters.component.ts:48",{"_index":958,"title":{},"body":{"components/ArchiveFiltersComponent.html":{}}}],["filters.component.ts:49",{"_index":959,"title":{},"body":{"components/ArchiveFiltersComponent.html":{}}}],["filters.component.ts:50",{"_index":957,"title":{},"body":{"components/ArchiveFiltersComponent.html":{}}}],["filters.component.ts:52",{"_index":951,"title":{},"body":{"components/ArchiveFiltersComponent.html":{}}}],["filters.component.ts:66",{"_index":952,"title":{},"body":{"components/ArchiveFiltersComponent.html":{}}}],["filters.component.ts:76",{"_index":955,"title":{},"body":{"components/ArchiveFiltersComponent.html":{}}}],["filters.component.ts:98",{"_index":953,"title":{},"body":{"components/ArchiveFiltersComponent.html":{}}}],["filters.effects",{"_index":843,"title":{},"body":{"interfaces/AppState.html":{}}}],["filters.effects.ts",{"_index":2845,"title":{},"body":{"injectables/FeedFiltersEffects.html":{}}}],["filters.effects.ts:26",{"_index":2855,"title":{},"body":{"injectables/FeedFiltersEffects.html":{}}}],["filters.effects.ts:29",{"_index":2854,"title":{},"body":{"injectables/FeedFiltersEffects.html":{}}}],["filters.effects.ts:32",{"_index":2853,"title":{},"body":{"injectables/FeedFiltersEffects.html":{}}}],["filters.effects.ts:45",{"_index":2876,"title":{},"body":{"injectables/FeedFiltersEffects.html":{}}}],["filters.effects.ts:55",{"_index":2872,"title":{},"body":{"injectables/FeedFiltersEffects.html":{}}}],["filters.effects.ts:76",{"_index":2899,"title":{},"body":{"injectables/FeedFiltersEffects.html":{}}}],["filters.foreach((values",{"_index":2155,"title":{},"body":{"injectables/CardService.html":{}}}],["filters.set('page",{"_index":920,"title":{},"body":{"injectables/ArchiveEffects.html":{}}}],["filters.set(filtertype.tag_filter",{"_index":3041,"title":{},"body":{"injectables/FilterService.html":{}}}],["filters.set(filtertype.time_filter",{"_index":3039,"title":{},"body":{"injectables/FilterService.html":{}}}],["filters.set(filtertype.type_filter",{"_index":3037,"title":{},"body":{"injectables/FilterService.html":{}}}],["filters/archive",{"_index":941,"title":{},"body":{"components/ArchiveFiltersComponent.html":{},"modules/ArchivesModule.html":{},"miscellaneous/enumerations.html":{}}}],["filters/datetime",{"_index":1108,"title":{},"body":{"modules/ArchivesModule.html":{},"components/DatetimeFilterComponent.html":{}}}],["filters/multi",{"_index":1105,"title":{},"body":{"modules/ArchivesModule.html":{},"components/MultiFilterComponent.html":{}}}],["filters[key",{"_index":997,"title":{},"body":{"components/ArchiveFiltersComponent.html":{}}}],["filterscomponent",{"_index":393,"title":{"components/FiltersComponent.html":{}},"body":{"components/ActionComponent.html":{},"components/AppComponent.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/ConfirmModalComponent.html":{},"components/CustomLogoComponent.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"modules/FeedModule.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MenuLinkComponent.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/ResizableComponent.html":{},"components/SettingsComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"index.html":{}}}],["filterservice",{"_index":2852,"title":{"injectables/FilterService.html":{}},"body":{"injectables/FeedFiltersEffects.html":{},"injectables/FilterService.html":{},"modules/ServicesModule.html":{},"index.html":{}}}],["filterstomap",{"_index":946,"title":{},"body":{"components/ArchiveFiltersComponent.html":{}}}],["filtertype",{"_index":881,"title":{},"body":{"classes/ApplyFilter.html":{},"interfaces/CardFeedState.html":{},"injectables/CardOperationEffects.html":{},"injectables/FeedFiltersEffects.html":{},"injectables/FilterService.html":{},"classes/InitFilters.html":{},"components/TagsFilterComponent.html":{},"components/TimeFilterComponent.html":{},"components/TypeFilterComponent.html":{},"miscellaneous/enumerations.html":{}}}],["filtertype.tag_filter",{"_index":4019,"title":{},"body":{"components/TagsFilterComponent.html":{}}}],["filtertype.time_filter",{"_index":2061,"title":{},"body":{"injectables/CardOperationEffects.html":{},"injectables/FeedFiltersEffects.html":{},"components/TimeFilterComponent.html":{}}}],["filtertype.type_filter",{"_index":4803,"title":{},"body":{"components/TypeFilterComponent.html":{}}}],["find",{"_index":4919,"title":{},"body":{"modules/UtilitiesModule.html":{}}}],["fires",{"_index":2372,"title":{},"body":{"injectables/CustomRouterEffects.html":{},"injectables/MenuEffects.html":{}}}],["firing",{"_index":2040,"title":{},"body":{"injectables/CardOperationEffects.html":{}}}],["first",{"_index":947,"title":{},"body":{"components/ArchiveFiltersComponent.html":{},"components/ArchiveListPageComponent.html":{},"injectables/AuthenticationEffects.html":{},"components/BaseSettingComponent.html":{},"components/DetailsComponent.html":{},"components/FeedComponent.html":{},"components/TagsFilterComponent.html":{},"components/TimeFilterComponent.html":{},"components/TypeFilterComponent.html":{},"injectables/UserEffects.html":{}}}],["first.tostring",{"_index":1010,"title":{},"body":{"components/ArchiveFiltersComponent.html":{}}}],["firstmovestartofunit",{"_index":4435,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["firstname",{"_index":1463,"title":{},"body":{"interfaces/AuthState.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/User.html":{},"classes/UserContext.html":{}}}],["firstname:string",{"_index":4848,"title":{},"body":{"classes/User.html":{},"classes/UserContext.html":{}}}],["firstname?:string",{"_index":105,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckImplicitFlowAuthenticationStatus.html":{},"classes/ImplicitlyAuthenticated.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"classes/UnAuthenticationFromImplicitFlow.html":{},"classes/UselessAuthAction.html":{}}}],["fixed",{"_index":1751,"title":{},"body":{"directives/CalcHeightDirective.html":{}}}],["fixedelements",{"_index":1753,"title":{},"body":{"directives/CalcHeightDirective.html":{}}}],["fixedheightclass",{"_index":1711,"title":{},"body":{"directives/CalcHeightDirective.html":{}}}],["flatmap",{"_index":1548,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["flow",{"_index":83,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"modules/AppRoutingModule.html":{},"classes/AuthObject.html":{},"injectables/AuthenticationEffects.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckImplicitFlowAuthenticationStatus.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/ImplicitlyAuthenticated.html":{},"classes/InitAuthStatus.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"classes/UnAuthenticationFromImplicitFlow.html":{},"classes/UselessAuthAction.html":{},"miscellaneous/enumerations.html":{}}}],["flow.config",{"_index":1152,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["flowmode",{"_index":1542,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["fluent",{"_index":4185,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["fn",{"_index":2491,"title":{},"body":{"components/DatetimeFilterComponent.html":{}}}],["followclocktick",{"_index":2847,"title":{},"body":{"injectables/FeedFiltersEffects.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{}}}],["following",{"_index":16,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckImplicitFlowAuthenticationStatus.html":{},"classes/FailToUpdateTimeReference.html":{},"classes/HandleUnexpectedError-4.html":{},"classes/ImplicitlyAuthenticated.html":{},"classes/InitAuthStatus.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{},"classes/Tick.html":{},"classes/TickPayload.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"classes/UnAuthenticationFromImplicitFlow.html":{},"classes/UpdateTimeReference.html":{},"classes/UselessAuthAction.html":{}}}],["font",{"_index":1893,"title":{},"body":{"components/CardComponent.html":{},"components/InfoComponent.html":{}}}],["fontawesome",{"_index":687,"title":{},"body":{"modules/AppModule.html":{},"modules/FeedModule.html":{},"dependencies.html":{}}}],["fontawesomemodule",{"_index":685,"title":{},"body":{"modules/AppModule.html":{},"modules/FeedModule.html":{}}}],["foreach((x",{"_index":1783,"title":{},"body":{"directives/CalcHeightDirective.html":{}}}],["forkjoin",{"_index":4616,"title":{},"body":{"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["forkjoin(this.maplanguages(thirdswiththeirversions)).pipe",{"_index":4627,"title":{},"body":{"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["forkjoin(this.mapthirds(locale",{"_index":4638,"title":{},"body":{"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["forkjoin(this.mapversions(locale",{"_index":4645,"title":{},"body":{"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["form",{"_index":128,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"components/ActionComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"modules/ArchivesModule.html":{},"modules/ArchivesRoutingModule.html":{},"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardListComponent.html":{},"modules/CardsModule.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckImplicitFlowAuthenticationStatus.html":{},"classes/CheckTokenResponse.html":{},"components/CustomLogoComponent.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"modules/FeedModule.html":{},"modules/FeedRoutingModule.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/ImplicitlyAuthenticated.html":{},"components/InfoComponent.html":{},"classes/InitAuthStatus.html":{},"components/ListSettingComponent.html":{},"components/MenuLinkComponent.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"components/ResizableComponent.html":{},"modules/ServicesModule.html":{},"modules/SettingsModule.html":{},"modules/SettingsRoutingModule.html":{},"modules/StateModule.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"modules/ThirdpartyModule.html":{},"modules/ThirdpartyRoutingModule.html":{},"components/TimeFilterComponent.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"classes/UnAuthenticationFromImplicitFlow.html":{},"classes/UselessAuthAction.html":{},"modules/UtilitiesModule.html":{}}}],["form.action",{"_index":4805,"title":{},"body":{"components/TypeFilterComponent.html":{}}}],["form.alarm",{"_index":4804,"title":{},"body":{"components/TypeFilterComponent.html":{}}}],["form.compliant",{"_index":4806,"title":{},"body":{"components/TypeFilterComponent.html":{}}}],["form.end",{"_index":4319,"title":{},"body":{"components/TimeFilterComponent.html":{}}}],["form.information",{"_index":4807,"title":{},"body":{"components/TypeFilterComponent.html":{}}}],["form.start",{"_index":4318,"title":{},"body":{"components/TimeFilterComponent.html":{}}}],["form.tags.length>0",{"_index":4020,"title":{},"body":{"components/TagsFilterComponent.html":{}}}],["forma",{"_index":1647,"title":{},"body":{"components/BaseSettingComponent.html":{},"components/EmailSettingComponent.html":{},"components/ListSettingComponent.html":{},"components/MultiSettingsComponent.html":{},"components/TextSettingComponent.html":{},"components/TypeAheadSettingsComponent.html":{}}}],["forma.setting",{"_index":3498,"title":{},"body":{"components/ListSettingComponent.html":{},"components/TextSettingComponent.html":{}}}],["format",{"_index":2417,"title":{},"body":{"classes/DateTimeNgb.html":{},"modules/FeedModule.html":{},"pipes/XAxisTickFormatPipe.html":{}}}],["format.pipe",{"_index":2944,"title":{},"body":{"modules/FeedModule.html":{}}}],["format.pipe.ts",{"_index":4922,"title":{},"body":{"pipes/XAxisTickFormatPipe.html":{}}}],["format.pipe.ts:23",{"_index":4940,"title":{},"body":{"pipes/XAxisTickFormatPipe.html":{}}}],["format.pipe.ts:62",{"_index":4932,"title":{},"body":{"pipes/XAxisTickFormatPipe.html":{}}}],["format.pipe.ts:86",{"_index":4926,"title":{},"body":{"pipes/XAxisTickFormatPipe.html":{}}}],["formatdatetime",{"_index":2418,"title":{},"body":{"classes/DateTimeNgb.html":{}}}],["formatted",{"_index":4927,"title":{},"body":{"pipes/XAxisTickFormatPipe.html":{}}}],["formatter",{"_index":3248,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["formatter.format(value",{"_index":3251,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["formatticks",{"_index":4427,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["formattime",{"_index":2419,"title":{},"body":{"classes/DateTimeNgb.html":{}}}],["formattooltipsdate",{"_index":4443,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["formb",{"_index":1645,"title":{},"body":{"components/BaseSettingComponent.html":{},"components/EmailSettingComponent.html":{},"components/ListSettingComponent.html":{},"components/MultiSettingsComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{}}}],["formb):boolean",{"_index":1702,"title":{},"body":{"components/BaseSettingComponent.html":{}}}],["formb.setting",{"_index":3499,"title":{},"body":{"components/ListSettingComponent.html":{},"components/TextSettingComponent.html":{}}}],["formbuilder",{"_index":4000,"title":{},"body":{"components/TagsFilterComponent.html":{}}}],["formbuilder,private",{"_index":4006,"title":{},"body":{"components/TagsFilterComponent.html":{}}}],["formcontrol",{"_index":962,"title":{},"body":{"components/ArchiveFiltersComponent.html":{},"components/DatetimeFilterComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TypeFilterComponent.html":{}}}],["formcontrol([],validators",{"_index":3698,"title":{},"body":{"components/MultiSettingsComponent.html":{}}}],["formcontrol(null",{"_index":4033,"title":{},"body":{"components/TextSettingComponent.html":{}}}],["formdata",{"_index":1235,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["former",{"_index":4095,"title":{},"body":{"injectables/ThirdActionService.html":{}}}],["formerstatus",{"_index":4061,"title":{},"body":{"injectables/ThirdActionService.html":{}}}],["formgroup",{"_index":954,"title":{},"body":{"components/ArchiveFiltersComponent.html":{},"components/BaseSettingComponent.html":{},"components/DatetimeFilterComponent.html":{},"components/EmailSettingComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{}}}],["forms",{"_index":2406,"title":{},"body":{"classes/CustomRouterStateSerializer.html":{},"classes/RouterStateUrl.html":{}}}],["formsmodule",{"_index":669,"title":{},"body":{"modules/AppModule.html":{},"modules/ArchivesModule.html":{},"modules/FeedModule.html":{},"modules/SettingsModule.html":{}}}],["forroot",{"_index":2173,"title":{},"body":{"modules/CardsModule.html":{},"modules/ServicesModule.html":{},"modules/StateModule.html":{}}}],["fortawesome/angular",{"_index":686,"title":{},"body":{"modules/AppModule.html":{},"modules/FeedModule.html":{},"dependencies.html":{}}}],["fortawesome/fontawesome",{"_index":689,"title":{},"body":{"modules/AppModule.html":{},"modules/FeedModule.html":{},"dependencies.html":{}}}],["fortawesome/free",{"_index":694,"title":{},"body":{"modules/AppModule.html":{},"modules/FeedModule.html":{},"dependencies.html":{}}}],["forward",{"_index":4394,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["forwardconf",{"_index":4424,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["forwarddayconf",{"_index":4398,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["forwardmonthconf",{"_index":4396,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["forwardref",{"_index":2470,"title":{},"body":{"components/DatetimeFilterComponent.html":{}}}],["forwardtrconf",{"_index":4399,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["forwardweekconf",{"_index":4397,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["forwardyearconf",{"_index":4395,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["found",{"_index":3100,"title":{},"body":{"classes/HandleUnexpectedError-4.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{}}}],["foundindex",{"_index":1445,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["france.com",{"_index":334,"title":{},"body":{"components/ActionComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"modules/ArchivesModule.html":{},"modules/ArchivesRoutingModule.html":{},"components/CardComponent.html":{},"components/CardListComponent.html":{},"modules/CardsModule.html":{},"components/CustomLogoComponent.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailsComponent.html":{},"components/FeedComponent.html":{},"modules/FeedModule.html":{},"modules/FeedRoutingModule.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/MenuLinkComponent.html":{},"components/MultiFilterComponent.html":{},"components/NavbarComponent.html":{},"components/ResizableComponent.html":{},"modules/ServicesModule.html":{},"modules/SettingsModule.html":{},"modules/SettingsRoutingModule.html":{},"modules/StateModule.html":{},"components/TagsFilterComponent.html":{},"modules/ThirdpartyModule.html":{},"modules/ThirdpartyRoutingModule.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"modules/UtilitiesModule.html":{}}}],["freeze",{"_index":805,"title":{},"body":{"interfaces/AppState.html":{}}}],["from(this.authservice.initandloadauth()).pipe",{"_index":1549,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["from(ts",{"_index":4195,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["fromrouter",{"_index":794,"title":{},"body":{"interfaces/AppState.html":{}}}],["fromrouter.routerreducer",{"_index":869,"title":{},"body":{"interfaces/AppState.html":{}}}],["full",{"_index":1119,"title":{},"body":{"modules/ArchivesRoutingModule.html":{},"modules/FeedRoutingModule.html":{}}}],["function",{"_index":24,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/Action.html":{},"classes/ActionStatus.html":{},"modules/AppRoutingModule.html":{},"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"interfaces/CardFeedState.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckImplicitFlowAuthenticationStatus.html":{},"classes/CheckTokenResponse.html":{},"classes/DateTimeNgb.html":{},"components/DatetimeFilterComponent.html":{},"classes/Filter.html":{},"injectables/HandlebarsService.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/ImplicitlyAuthenticated.html":{},"classes/InitAuthStatus.html":{},"classes/Input.html":{},"classes/LightCard.html":{},"classes/ParameterListItem.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/Process.html":{},"classes/RejectLogIn.html":{},"components/ResizableComponent.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"components/TimeLineComponent.html":{},"classes/TimeSpan.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"classes/UnAuthenticationFromImplicitFlow.html":{},"classes/UselessAuthAction.html":{},"pipes/XAxisTickFormatPipe.html":{}}}],["function(a,b",{"_index":3259,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["function(lvalue",{"_index":3227,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["funktion",{"_index":2962,"title":{},"body":{"classes/Filter.html":{}}}],["futur",{"_index":1430,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["future",{"_index":1435,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"components/TimeLineComponent.html":{}}}],["g",{"_index":3256,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["gather",{"_index":2958,"title":{},"body":{"classes/Filter.html":{}}}],["generating",{"_index":1255,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["gently",{"_index":741,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["getactions",{"_index":1813,"title":{},"body":{"components/CardComponent.html":{}}}],["getauthenticationmode",{"_index":1417,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["getcardoperation",{"_index":2080,"title":{},"body":{"injectables/CardService.html":{}}}],["getcurrentguid",{"_index":3055,"title":{},"body":{"classes/GuidService.html":{}}}],["getcurrentguidstring",{"_index":3056,"title":{},"body":{"classes/GuidService.html":{}}}],["getdescription",{"_index":3369,"title":{},"body":{"components/InfoComponent.html":{}}}],["getfilter",{"_index":4295,"title":{},"body":{"components/TimeFilterComponent.html":{},"components/TypeFilterComponent.html":{}}}],["gethtmlcontent",{"_index":2575,"title":{},"body":{"components/DetailComponent.html":{}}}],["geti18nprefix",{"_index":1840,"title":{},"body":{"components/CardComponent.html":{},"components/DetailsComponent.html":{}}}],["getimage",{"_index":2293,"title":{},"body":{"components/CustomLogoComponent.html":{}}}],["getitem",{"_index":1334,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["getlocale",{"_index":3273,"title":{},"body":{"injectables/I18nService.html":{}}}],["getroutepe",{"_index":551,"title":{},"body":{"components/AppComponent.html":{}}}],["getsecurityheader",{"_index":1356,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["getselectediframeurl",{"_index":3341,"title":{},"body":{"components/IframeDisplayComponent.html":{}}}],["getthirdmenus",{"_index":3725,"title":{},"body":{"components/NavbarComponent.html":{}}}],["gettime",{"_index":3371,"title":{},"body":{"components/InfoComponent.html":{}}}],["gettimezone",{"_index":3275,"title":{},"body":{"injectables/I18nService.html":{}}}],["gettranslation",{"_index":4118,"title":{},"body":{"classes/ThirdsI18nLoader.html":{}}}],["gettranslation(lang",{"_index":4121,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["getusername",{"_index":3367,"title":{},"body":{"components/InfoComponent.html":{}}}],["given",{"_index":1253,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/CustomRouterStateSerializer.html":{},"classes/HandleUnexpectedError-4.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"classes/RouterStateUrl.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{}}}],["given_name",{"_index":1212,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["givennameclaim",{"_index":1170,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["gives",{"_index":1229,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["grand",{"_index":1186,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["grant",{"_index":1441,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["granted",{"_index":3785,"title":{},"body":{"injectables/NotifyService.html":{}}}],["graph",{"_index":5046,"title":{},"body":{"modules.html":{}}}],["group",{"_index":4911,"title":{},"body":{"interfaces/UserState.html":{}}}],["guid",{"_index":53,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/AuthObject.html":{},"interfaces/AuthState.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckImplicitFlowAuthenticationStatus.html":{},"classes/CheckTokenResponse.html":{},"classes/GuidService.html":{},"injectables/HandlebarsService.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/ImplicitlyAuthenticated.html":{},"classes/InitAuthStatus.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"classes/UnAuthenticationFromImplicitFlow.html":{},"classes/UselessAuthAction.html":{},"dependencies.html":{}}}],["guid.create",{"_index":3061,"title":{},"body":{"classes/GuidService.html":{}}}],["guid.parse(localstorage.getitem(localstorageauthcontent.clientid",{"_index":1332,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["guidservice",{"_index":1138,"title":{"classes/GuidService.html":{}},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"injectables/CardService.html":{},"classes/CheckTokenResponse.html":{},"classes/GuidService.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"modules/ServicesModule.html":{}}}],["h",{"_index":4947,"title":{},"body":{"pipes/XAxisTickFormatPipe.html":{}}}],["half",{"_index":4570,"title":{},"body":{"classes/TimeReference.html":{},"miscellaneous/enumerations.html":{}}}],["handelactionbuttontext",{"_index":2543,"title":{},"body":{"components/DetailComponent.html":{}}}],["handelactionbuttontext(label",{"_index":2562,"title":{},"body":{"components/DetailComponent.html":{}}}],["handle",{"_index":455,"title":{},"body":{"classes/AddActionsAppear.html":{},"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"classes/ArchiveQuerySuccess.html":{},"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ClearCard.html":{},"classes/ClearLightCardSelection.html":{},"classes/CreateUserApplication.html":{},"classes/CreateUserApplicationOnFailure.html":{},"classes/CreateUserApplicationOnSuccess.html":{},"classes/DelayedLightCardUpdate.html":{},"classes/EmptyLightCards.html":{},"classes/HandleUnexpectedError.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/HandleUnexpectedError-4.html":{},"classes/HandleUnexpectedError-5.html":{},"classes/HandleUnexpectedError-6.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/LightCardAlreadyUpdated.html":{},"classes/LoadArchivedCard.html":{},"classes/LoadArchivedCardFailure.html":{},"classes/LoadArchivedCardSuccess.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{},"classes/LoadConfig.html":{},"classes/LoadConfigFailure.html":{},"classes/LoadConfigSuccess.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/LoadSettings.html":{},"classes/LoadSettingsFailure.html":{},"classes/LoadSettingsSuccess.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"classes/PatchSettings.html":{},"classes/PatchSettingsFailure.html":{},"classes/PatchSettingsSuccess.html":{},"classes/RemoveLightCard.html":{},"classes/SelectArchivedLightCard.html":{},"classes/SelectLightCard.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{},"classes/SendArchiveQuery.html":{},"classes/ThirdActionAlreadyLoaded.html":{},"classes/ThirdActionAlreadyUpdated.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateAnActionFailure.html":{},"classes/UpdateArchiveFilter.html":{},"classes/UpdateArchivePage.html":{},"classes/UpdatedSubscription.html":{},"classes/UserApplicationNotRegistered.html":{},"classes/UserApplicationRegistered.html":{},"miscellaneous/enumerations.html":{}}}],["handlebars",{"_index":2551,"title":{},"body":{"components/DetailComponent.html":{},"injectables/HandlebarsService.html":{},"dependencies.html":{}}}],["handlebars.registerhelper(\"math",{"_index":3226,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["handlebars.registerhelper(\"preservespace",{"_index":3254,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["handlebars.registerhelper('action",{"_index":3240,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["handlebars.registerhelper('arrayatindex",{"_index":3231,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["handlebars.registerhelper('arrayatindexlength",{"_index":3219,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["handlebars.registerhelper('bool",{"_index":3214,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["handlebars.registerhelper('dateformat",{"_index":3241,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["handlebars.registerhelper('json",{"_index":3211,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["handlebars.registerhelper('now",{"_index":3252,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["handlebars.registerhelper('numberformat",{"_index":3247,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["handlebars.registerhelper('slice",{"_index":3233,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["handlebars.registerhelper('sort",{"_index":3236,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["handlebars.registerhelper('split",{"_index":3221,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["handlebars.safestring(json.stringify(obj",{"_index":3213,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["handlebars/dist/handlebars.js",{"_index":3169,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["handlebarsservice",{"_index":2170,"title":{"injectables/HandlebarsService.html":{}},"body":{"modules/CardsModule.html":{},"components/DetailComponent.html":{},"injectables/HandlebarsService.html":{},"index.html":{}}}],["handledate",{"_index":1814,"title":{},"body":{"components/CardComponent.html":{}}}],["handledate(timestamp",{"_index":1827,"title":{},"body":{"components/CardComponent.html":{}}}],["handleerrorontokengeneration",{"_index":1471,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["handleerrorontokengeneration(errorresponse",{"_index":1482,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["handleloginattempt",{"_index":22,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"injectables/AuthenticationEffects.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckImplicitFlowAuthenticationStatus.html":{},"classes/ImplicitlyAuthenticated.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"classes/UnAuthenticationFromImplicitFlow.html":{},"classes/UselessAuthAction.html":{}}}],["handlenewtoken(call",{"_index":1275,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["handler",{"_index":3826,"title":{},"body":{"classes/RefreshTranslation.html":{},"classes/TranslationUpToDate.html":{},"classes/UpdateTranslation.html":{},"classes/UpdateTranslationFailed.html":{},"classes/UpdateTranslationSuccessful.html":{},"miscellaneous/enumerations.html":{}}}],["handlerejectedlogin",{"_index":141,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"injectables/AuthenticationEffects.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckImplicitFlowAuthenticationStatus.html":{},"classes/ImplicitlyAuthenticated.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"classes/UnAuthenticationFromImplicitFlow.html":{},"classes/UselessAuthAction.html":{}}}],["handlerejectedlogin(errormsg",{"_index":1486,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["handleunexpectederror",{"_index":454,"title":{"classes/HandleUnexpectedError.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/HandleUnexpectedError-4.html":{},"classes/HandleUnexpectedError-5.html":{},"classes/HandleUnexpectedError-6.html":{}},"body":{"classes/AddActionsAppear.html":{},"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"injectables/ArchiveEffects.html":{},"classes/ArchiveQuerySuccess.html":{},"injectables/CardOperationEffects.html":{},"classes/ClearCard.html":{},"classes/ClearLightCardSelection.html":{},"classes/CreateUserApplication.html":{},"classes/CreateUserApplicationOnFailure.html":{},"classes/CreateUserApplicationOnSuccess.html":{},"classes/DelayedLightCardUpdate.html":{},"classes/EmptyLightCards.html":{},"classes/HandleUnexpectedError.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/HandleUnexpectedError-4.html":{},"classes/HandleUnexpectedError-5.html":{},"classes/HandleUnexpectedError-6.html":{},"classes/LightCardAlreadyUpdated.html":{},"classes/LoadArchivedCard.html":{},"classes/LoadArchivedCardFailure.html":{},"classes/LoadArchivedCardSuccess.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{},"classes/LoadConfig.html":{},"classes/LoadConfigFailure.html":{},"classes/LoadConfigSuccess.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/LoadSettings.html":{},"classes/LoadSettingsFailure.html":{},"classes/LoadSettingsSuccess.html":{},"classes/PatchSettings.html":{},"classes/PatchSettingsFailure.html":{},"classes/PatchSettingsSuccess.html":{},"classes/RemoveLightCard.html":{},"classes/SelectArchivedLightCard.html":{},"classes/SelectLightCard.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{},"classes/SendArchiveQuery.html":{},"classes/ThirdActionAlreadyLoaded.html":{},"classes/ThirdActionAlreadyUpdated.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateAnActionFailure.html":{},"classes/UpdateArchiveFilter.html":{},"classes/UpdateArchivePage.html":{},"classes/UpdatedSubscription.html":{},"classes/UserApplicationNotRegistered.html":{},"classes/UserApplicationRegistered.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["handleunexpectederror({error",{"_index":911,"title":{},"body":{"injectables/ArchiveEffects.html":{},"injectables/CardOperationEffects.html":{}}}],["handling",{"_index":258,"title":{},"body":{"classes/Action.html":{},"classes/ActionStatus.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthenticationEffects.html":{},"components/DetailComponent.html":{},"injectables/HandlebarsService.html":{},"classes/Input.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{}}}],["haschanged",{"_index":4075,"title":{},"body":{"injectables/ThirdActionService.html":{}}}],["hashlength",{"_index":756,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["hashlocationstrategy",{"_index":666,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["header",{"_index":1355,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"injectables/CardService.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"components/TypeFilterComponent.html":{}}}],["headers",{"_index":1238,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"injectables/CardService.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["headers}).pipe",{"_index":1247,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["heart",{"_index":2799,"title":{},"body":{"classes/FailToUpdateTimeReference.html":{},"classes/Tick.html":{},"classes/TickPayload.html":{},"injectables/TimeEffects.html":{},"classes/UpdateTimeReference.html":{}}}],["heartbeat",{"_index":4272,"title":{},"body":{"injectables/TimeEffects.html":{}}}],["heartbeattimeout",{"_index":2132,"title":{},"body":{"injectables/CardService.html":{}}}],["height",{"_index":632,"title":{},"body":{"components/AppComponent.html":{},"components/ArchiveListComponent.html":{},"directives/CalcHeightDirective.html":{},"components/CardListComponent.html":{},"components/CustomLogoComponent.html":{},"components/DetailsComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/NavbarComponent.html":{},"components/ResizableComponent.html":{},"components/TypeFilterComponent.html":{}}}],["height.directive",{"_index":4917,"title":{},"body":{"modules/UtilitiesModule.html":{}}}],["height.directive.ts",{"_index":1707,"title":{},"body":{"directives/CalcHeightDirective.html":{}}}],["height.directive.ts:22",{"_index":1721,"title":{},"body":{"directives/CalcHeightDirective.html":{}}}],["height.directive.ts:25",{"_index":1720,"title":{},"body":{"directives/CalcHeightDirective.html":{}}}],["height.directive.ts:28",{"_index":1719,"title":{},"body":{"directives/CalcHeightDirective.html":{}}}],["height.directive.ts:30",{"_index":1717,"title":{},"body":{"directives/CalcHeightDirective.html":{}}}],["height.directive.ts:42",{"_index":1722,"title":{},"body":{"directives/CalcHeightDirective.html":{}}}],["height.directive.ts:46",{"_index":1724,"title":{},"body":{"directives/CalcHeightDirective.html":{}}}],["height:auto",{"_index":2529,"title":{},"body":{"components/DatetimeFilterComponent.html":{}}}],["heights",{"_index":1768,"title":{},"body":{"directives/CalcHeightDirective.html":{}}}],["helper",{"_index":1336,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["here",{"_index":2125,"title":{},"body":{"injectables/CardService.html":{}}}],["hh[h]mm",{"_index":4428,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["hidden",{"_index":172,"title":{},"body":{"classes/Action.html":{},"classes/ActionStatus.html":{},"components/ArchiveListComponent.html":{},"components/CardListComponent.html":{},"components/DetailsComponent.html":{},"classes/Input.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{}}}],["hide",{"_index":3541,"title":{},"body":{"components/LoginComponent.html":{}}}],["hidetags",{"_index":3049,"title":{},"body":{"components/FiltersComponent.html":{},"components/SettingsComponent.html":{},"interfaces/SettingsInputs.html":{}}}],["hidetimeline",{"_index":2819,"title":{},"body":{"components/FeedComponent.html":{}}}],["homedomainextraticks",{"_index":4436,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["horizontal",{"_index":4936,"title":{},"body":{"pipes/XAxisTickFormatPipe.html":{}}}],["hostlistener",{"_index":1725,"title":{},"body":{"directives/CalcHeightDirective.html":{},"directives/DraggableDirective.html":{},"directives/MouseWheelDirective.html":{},"components/ResizableComponent.html":{}}}],["hostlistener('document:dragstart",{"_index":2740,"title":{},"body":{"directives/DraggableDirective.html":{}}}],["hostlistener('dommousescroll",{"_index":3668,"title":{},"body":{"directives/MouseWheelDirective.html":{}}}],["hostlistener('mousewheel",{"_index":3665,"title":{},"body":{"directives/MouseWheelDirective.html":{}}}],["hostlistener('onmousewheel",{"_index":3670,"title":{},"body":{"directives/MouseWheelDirective.html":{}}}],["hostlistener('pointerdown",{"_index":2723,"title":{},"body":{"directives/DraggableDirective.html":{}}}],["hostlistener('pointermove",{"_index":2727,"title":{},"body":{"directives/DraggableDirective.html":{}}}],["hostlistener('pointerup",{"_index":2730,"title":{},"body":{"directives/DraggableDirective.html":{}}}],["hostlistener('window:resize",{"_index":1734,"title":{},"body":{"directives/CalcHeightDirective.html":{},"components/ResizableComponent.html":{}}}],["hostlisteners",{"_index":1713,"title":{},"body":{"directives/CalcHeightDirective.html":{},"components/CardListComponent.html":{},"components/DetailsComponent.html":{},"directives/DraggableDirective.html":{},"directives/MouseWheelDirective.html":{},"components/ResizableComponent.html":{}}}],["hou",{"_index":4949,"title":{},"body":{"pipes/XAxisTickFormatPipe.html":{}}}],["hour",{"_index":2461,"title":{},"body":{"classes/DateTimeNgb.html":{},"components/DatetimeFilterComponent.html":{}}}],["hours",{"_index":4386,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["hoursonly",{"_index":4957,"title":{},"body":{"pipes/XAxisTickFormatPipe.html":{}}}],["href",{"_index":2600,"title":{},"body":{"components/DetailComponent.html":{}}}],["href=\"javascript:void(0",{"_index":3758,"title":{},"body":{"components/NavbarComponent.html":{}}}],["hrefsofcsslink",{"_index":2539,"title":{},"body":{"components/DetailComponent.html":{}}}],["html",{"_index":348,"title":{},"body":{"components/ActionComponent.html":{},"components/AppComponent.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/ConfirmModalComponent.html":{},"components/CustomLogoComponent.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MenuLinkComponent.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/ResizableComponent.html":{},"components/SettingsComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{}}}],["htmlbuttonelement",{"_index":2557,"title":{},"body":{"components/DetailComponent.html":{}}}],["htmlcontent",{"_index":2548,"title":{},"body":{"components/DetailComponent.html":{}}}],["htmlelement",{"_index":1738,"title":{},"body":{"directives/CalcHeightDirective.html":{}}}],["http",{"_index":1354,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["http://mozilla.org/mpl/2.0",{"_index":346,"title":{},"body":{"components/ActionComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"modules/ArchivesModule.html":{},"modules/ArchivesRoutingModule.html":{},"components/CardComponent.html":{},"components/CardListComponent.html":{},"modules/CardsModule.html":{},"components/CustomLogoComponent.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailsComponent.html":{},"components/FeedComponent.html":{},"modules/FeedModule.html":{},"modules/FeedRoutingModule.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/MenuLinkComponent.html":{},"components/MultiFilterComponent.html":{},"components/NavbarComponent.html":{},"components/ResizableComponent.html":{},"modules/ServicesModule.html":{},"modules/SettingsModule.html":{},"modules/SettingsRoutingModule.html":{},"modules/StateModule.html":{},"components/TagsFilterComponent.html":{},"modules/ThirdpartyModule.html":{},"modules/ThirdpartyRoutingModule.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"modules/UtilitiesModule.html":{}}}],["http://www.rte",{"_index":333,"title":{},"body":{"components/ActionComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"modules/ArchivesModule.html":{},"modules/ArchivesRoutingModule.html":{},"components/CardComponent.html":{},"components/CardListComponent.html":{},"modules/CardsModule.html":{},"components/CustomLogoComponent.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailsComponent.html":{},"components/FeedComponent.html":{},"modules/FeedModule.html":{},"modules/FeedRoutingModule.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/MenuLinkComponent.html":{},"components/MultiFilterComponent.html":{},"components/NavbarComponent.html":{},"components/ResizableComponent.html":{},"modules/ServicesModule.html":{},"modules/SettingsModule.html":{},"modules/SettingsRoutingModule.html":{},"modules/StateModule.html":{},"components/TagsFilterComponent.html":{},"modules/ThirdpartyModule.html":{},"modules/ThirdpartyRoutingModule.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"modules/UtilitiesModule.html":{}}}],["http_interceptors",{"_index":3887,"title":{},"body":{"modules/ServicesModule.html":{}}}],["httpclient",{"_index":1134,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"injectables/CardService.html":{},"classes/CheckTokenResponse.html":{},"injectables/ConfigService.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"injectables/SettingsService.html":{},"injectables/ThirdActionService.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"injectables/UserService.html":{}}}],["httpclientmodule",{"_index":663,"title":{},"body":{"modules/AppModule.html":{}}}],["httpevent",{"_index":4600,"title":{},"body":{"interceptors/TokenInjector.html":{}}}],["httphandler",{"_index":4598,"title":{},"body":{"interceptors/TokenInjector.html":{}}}],["httpheaders",{"_index":1135,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"injectables/UserService.html":{}}}],["httpheaders({'content",{"_index":1239,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["httpinterceptor",{"_index":4601,"title":{},"body":{"interceptors/TokenInjector.html":{}}}],["httpparams",{"_index":2107,"title":{},"body":{"injectables/CardService.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["httpparams().set(\"apiversion",{"_index":4209,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["httpparams().set('locale",{"_index":4180,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["httpparams().set('publisher",{"_index":2159,"title":{},"body":{"injectables/CardService.html":{}}}],["httpparams().set('version",{"_index":4173,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["httpparams.set",{"_index":4182,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["httprequest",{"_index":4595,"title":{},"body":{"interceptors/TokenInjector.html":{}}}],["https://github.com/briebug/ngrx",{"_index":2405,"title":{},"body":{"classes/CustomRouterStateSerializer.html":{},"classes/RouterStateUrl.html":{}}}],["https://github.com/sodhanalibrary/angular2",{"_index":3646,"title":{},"body":{"directives/MouseWheelDirective.html":{}}}],["httpurlencodingcodec",{"_index":4124,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["i18n",{"_index":171,"title":{"classes/I18n.html":{}},"body":{"classes/Action.html":{},"components/ActionComponent.html":{},"classes/ActionStatus.html":{},"injectables/AuthenticationEffects.html":{},"classes/Card.html":{},"classes/Detail.html":{},"components/DetailComponent.html":{},"injectables/HandlebarsService.html":{},"classes/I18n.html":{},"classes/Input.html":{},"classes/LightCard.html":{},"components/ListSettingComponent.html":{},"classes/Message.html":{},"components/MultiFilterComponent.html":{},"classes/Page.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/RefreshTranslation.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"injectables/TimeEffects.html":{},"classes/TimeSpan.html":{},"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{},"classes/TranslationUpToDate.html":{},"classes/UpdateTranslation.html":{},"classes/UpdateTranslationFailed.html":{},"classes/UpdateTranslationSuccessful.html":{},"miscellaneous/enumerations.html":{}}}],["i18n('login.error.token.expiration",{"_index":1525,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["i18n('login.error.token.invalid",{"_index":1515,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["i18n('login.error.unexpected",{"_index":1530,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["i18n('time.error",{"_index":4285,"title":{},"body":{"injectables/TimeEffects.html":{}}}],["i18n(i18n['key",{"_index":250,"title":{},"body":{"classes/Action.html":{},"classes/ActionStatus.html":{},"classes/Input.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{}}}],["i18n(key",{"_index":1601,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["i18n['parameters",{"_index":247,"title":{},"body":{"classes/Action.html":{},"classes/ActionStatus.html":{},"classes/Input.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{}}}],["i18nbundleversionloaded",{"_index":4754,"title":{},"body":{"interfaces/TranslationState.html":{}}}],["i18nbundleversionloaded:new",{"_index":4757,"title":{},"body":{"interfaces/TranslationState.html":{}}}],["i18nlabelkey",{"_index":195,"title":{},"body":{"classes/Action.html":{},"classes/ActionStatus.html":{},"classes/Input.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{}}}],["i18nparameters",{"_index":4283,"title":{},"body":{"injectables/TimeEffects.html":{}}}],["i18nparameters['message",{"_index":4284,"title":{},"body":{"injectables/TimeEffects.html":{}}}],["i18nprefix",{"_index":300,"title":{},"body":{"components/ActionComponent.html":{},"components/CardComponent.html":{},"components/DetailsComponent.html":{}}}],["i18nprefix+detailc.detail.title.key",{"_index":2694,"title":{},"body":{"components/DetailsComponent.html":{}}}],["i18nservice",{"_index":557,"title":{"injectables/I18nService.html":{}},"body":{"components/AppComponent.html":{},"injectables/I18nService.html":{},"modules/ServicesModule.html":{},"index.html":{}}}],["iarchivefilter",{"_index":1077,"title":{},"body":{"interfaces/ArchiveState.html":{}}}],["icon",{"_index":3288,"title":{},"body":{"components/IconComponent.html":{},"components/MenuLinkComponent.html":{}}}],["icon'},{'name",{"_index":395,"title":{},"body":{"components/ActionComponent.html":{},"components/AppComponent.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/ConfirmModalComponent.html":{},"components/CustomLogoComponent.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MenuLinkComponent.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/ResizableComponent.html":{},"components/SettingsComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{}}}],["icon.component.html",{"_index":3290,"title":{},"body":{"components/IconComponent.html":{}}}],["icon.component.scss",{"_index":3289,"title":{},"body":{"components/IconComponent.html":{}}}],["icon:string",{"_index":3309,"title":{},"body":{"components/IconComponent.html":{}}}],["iconcomponent",{"_index":394,"title":{"components/IconComponent.html":{}},"body":{"components/ActionComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/ConfirmModalComponent.html":{},"components/CustomLogoComponent.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MenuLinkComponent.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/ResizableComponent.html":{},"components/SettingsComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"index.html":{}}}],["iconpath",{"_index":3291,"title":{},"body":{"components/IconComponent.html":{}}}],["iconpath:string",{"_index":3314,"title":{},"body":{"components/IconComponent.html":{}}}],["icons",{"_index":696,"title":{},"body":{"modules/AppModule.html":{},"modules/FeedModule.html":{},"dependencies.html":{}}}],["id",{"_index":211,"title":{},"body":{"classes/Action.html":{},"classes/ActionStatus.html":{},"classes/AddActionsAppear.html":{},"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/Card.html":{},"interfaces/CardFeedState.html":{},"injectables/CardOperationEffects.html":{},"injectables/CardService.html":{},"classes/CheckTokenResponse.html":{},"classes/ClearCard.html":{},"classes/Detail.html":{},"components/DetailComponent.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/HandleUnexpectedError-4.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/Input.html":{},"classes/LightCard.html":{},"classes/LoadArchivedCard.html":{},"classes/LoadArchivedCardFailure.html":{},"classes/LoadArchivedCardSuccess.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/ParameterListItem.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"classes/Process.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"classes/TimeSpan.html":{},"interfaces/TimelineState.html":{}}}],["id'].nodevalue",{"_index":2627,"title":{},"body":{"components/DetailComponent.html":{}}}],["identifier",{"_index":99,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/AuthObject.html":{},"interfaces/AuthState.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckImplicitFlowAuthenticationStatus.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/ImplicitlyAuthenticated.html":{},"classes/InitAuthStatus.html":{},"components/LoginComponent.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"classes/UnAuthenticationFromImplicitFlow.html":{},"classes/UselessAuthAction.html":{},"miscellaneous/enumerations.html":{}}}],["identifying",{"_index":2375,"title":{},"body":{"injectables/CustomRouterEffects.html":{},"classes/HandleUnexpectedError-4.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{}}}],["identityclaims",{"_index":1401,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["identityclaims['sub",{"_index":1403,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["ie",{"_index":3856,"title":{},"body":{"components/ResizableComponent.html":{}}}],["if(!!control.value",{"_index":3500,"title":{},"body":{"components/ListSettingComponent.html":{}}}],["if(!!next.status.end",{"_index":4311,"title":{},"body":{"components/TimeFilterComponent.html":{}}}],["if(!!next.status.start",{"_index":4306,"title":{},"body":{"components/TimeFilterComponent.html":{}}}],["if(!parent",{"_index":1745,"title":{},"body":{"directives/CalcHeightDirective.html":{}}}],["if(!this.form",{"_index":1669,"title":{},"body":{"components/BaseSettingComponent.html":{}}}],["if(a[key]b[key",{"_index":3263,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["if(action.payload.settings.defaulttags",{"_index":2861,"title":{},"body":{"injectables/FeedFiltersEffects.html":{}}}],["if(args.length",{"_index":3223,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["if(changes['card'].currentvalue",{"_index":2692,"title":{},"body":{"components/DetailsComponent.html":{}}}],["if(ismoment(realnow",{"_index":4539,"title":{},"body":{"classes/TimeReference.html":{}}}],["if(key",{"_index":2021,"title":{},"body":{"classes/CardOperation.html":{}}}],["if(locale",{"_index":3193,"title":{},"body":{"injectables/HandlebarsService.html":{},"injectables/I18nService.html":{}}}],["if(newelapsedsofar>=this.refreshthreshold",{"_index":2883,"title":{},"body":{"injectables/FeedFiltersEffects.html":{}}}],["if(realm",{"_index":1605,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["if(result",{"_index":1988,"title":{},"body":{"interfaces/CardFeedState.html":{}}}],["if(result==0",{"_index":1986,"title":{},"body":{"interfaces/CardFeedState.html":{}}}],["if(template",{"_index":3206,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["if(this.active",{"_index":2999,"title":{},"body":{"classes/Filter.html":{}}}],["if(this.applyfilter(card",{"_index":3001,"title":{},"body":{"classes/Filter.html":{}}}],["if(this.expandedmenu[index",{"_index":3750,"title":{},"body":{"components/NavbarComponent.html":{}}}],["if(this.expandedusermenu",{"_index":3753,"title":{},"body":{"components/NavbarComponent.html":{}}}],["if(this.isvirtualtimeundefine",{"_index":4560,"title":{},"body":{"classes/TimeReference.html":{}}}],["if(this.speed",{"_index":4547,"title":{},"body":{"classes/TimeReference.html":{}}}],["if(timezone",{"_index":3283,"title":{},"body":{"injectables/I18nService.html":{}}}],["if(typeof",{"_index":3260,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["if(url",{"_index":3730,"title":{},"body":{"components/NavbarComponent.html":{}}}],["if(v",{"_index":3620,"title":{},"body":{"components/MenuLinkComponent.html":{}}}],["iframe",{"_index":3622,"title":{},"body":{"components/MenuLinkComponent.html":{}}}],["iframe_url",{"_index":3099,"title":{},"body":{"classes/HandleUnexpectedError-4.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{}}}],["iframedisplay",{"_index":3334,"title":{},"body":{"components/IframeDisplayComponent.html":{}}}],["iframedisplay'},{'name",{"_index":397,"title":{},"body":{"components/ActionComponent.html":{},"components/AppComponent.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/ConfirmModalComponent.html":{},"components/CustomLogoComponent.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MenuLinkComponent.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/ResizableComponent.html":{},"components/SettingsComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{}}}],["iframedisplay.component",{"_index":4112,"title":{},"body":{"modules/ThirdpartyModule.html":{},"modules/ThirdpartyRoutingModule.html":{}}}],["iframedisplay.component.html",{"_index":3336,"title":{},"body":{"components/IframeDisplayComponent.html":{}}}],["iframedisplay.component.scss",{"_index":3335,"title":{},"body":{"components/IframeDisplayComponent.html":{}}}],["iframedisplaycomponent",{"_index":396,"title":{"components/IframeDisplayComponent.html":{}},"body":{"components/ActionComponent.html":{},"components/AppComponent.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/ConfirmModalComponent.html":{},"components/CustomLogoComponent.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MenuLinkComponent.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/ResizableComponent.html":{},"components/SettingsComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"modules/ThirdpartyModule.html":{},"modules/ThirdpartyRoutingModule.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"index.html":{}}}],["iframeurl",{"_index":3346,"title":{},"body":{"components/IframeDisplayComponent.html":{}}}],["ignore",{"_index":113,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/Action.html":{},"components/ActionComponent.html":{},"classes/ActionStatus.html":{},"classes/AddActionsAppear.html":{},"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"classes/ApplyFilter.html":{},"injectables/ArchiveEffects.html":{},"classes/ArchiveQuerySuccess.html":{},"injectables/AuthenticationEffects.html":{},"classes/Card.html":{},"components/CardComponent.html":{},"injectables/CardEffects.html":{},"classes/CardOperation.html":{},"injectables/CardOperationEffects.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckImplicitFlowAuthenticationStatus.html":{},"classes/ClearCard.html":{},"classes/ClearLightCardSelection.html":{},"injectables/ConfigEffects.html":{},"classes/CreateUserApplication.html":{},"classes/CreateUserApplicationOnFailure.html":{},"classes/CreateUserApplicationOnSuccess.html":{},"classes/CustomRouterStateSerializer.html":{},"classes/DateTimeNgb.html":{},"components/DatetimeFilterComponent.html":{},"classes/DelayedLightCardUpdate.html":{},"classes/Detail.html":{},"classes/EmptyLightCards.html":{},"injectables/FeedFiltersEffects.html":{},"classes/Filter.html":{},"classes/HandleUnexpectedError.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/HandleUnexpectedError-4.html":{},"classes/HandleUnexpectedError-5.html":{},"classes/HandleUnexpectedError-6.html":{},"classes/I18n.html":{},"classes/ImplicitlyAuthenticated.html":{},"classes/InitAuthStatus.html":{},"classes/InitFilters.html":{},"classes/Input.html":{},"classes/LightCard.html":{},"classes/LightCardAlreadyUpdated.html":{},"injectables/LightCardEffects.html":{},"classes/LoadArchivedCard.html":{},"classes/LoadArchivedCardFailure.html":{},"classes/LoadArchivedCardSuccess.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{},"classes/LoadConfig.html":{},"classes/LoadConfigFailure.html":{},"classes/LoadConfigSuccess.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/LoadSettings.html":{},"classes/LoadSettingsFailure.html":{},"classes/LoadSettingsSuccess.html":{},"components/LoginComponent.html":{},"injectables/MenuEffects.html":{},"classes/Message.html":{},"classes/Page.html":{},"classes/ParameterListItem.html":{},"classes/PatchSettings.html":{},"classes/PatchSettingsFailure.html":{},"classes/PatchSettingsSuccess.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/Process.html":{},"classes/RejectLogIn.html":{},"classes/RemoveLightCard.html":{},"classes/RouterStateUrl.html":{},"classes/SelectArchivedLightCard.html":{},"classes/SelectLightCard.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{},"classes/SendArchiveQuery.html":{},"injectables/SettingsEffects.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdActionAlreadyLoaded.html":{},"classes/ThirdActionAlreadyUpdated.html":{},"injectables/ThirdActionService.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"classes/TimeSpan.html":{},"interceptors/TokenInjector.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"classes/UnAuthenticationFromImplicitFlow.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateAnActionFailure.html":{},"classes/UpdateArchiveFilter.html":{},"classes/UpdateArchivePage.html":{},"classes/UpdatedSubscription.html":{},"classes/UselessAuthAction.html":{},"classes/UserApplicationNotRegistered.html":{},"classes/UserApplicationRegistered.html":{}}}],["implementation",{"_index":1438,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/Filter.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["implemented",{"_index":2646,"title":{},"body":{"components/DetailComponent.html":{}}}],["implementing",{"_index":1476,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["implements",{"_index":33,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"components/ActionComponent.html":{},"classes/AddActionsAppear.html":{},"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"components/AppComponent.html":{},"classes/ApplyFilter.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"classes/ArchiveQuerySuccess.html":{},"components/ArchivesComponent.html":{},"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"classes/CardOperation.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckImplicitFlowAuthenticationStatus.html":{},"classes/CheckTokenResponse.html":{},"classes/ClearCard.html":{},"classes/ClearLightCardSelection.html":{},"classes/CreateUserApplication.html":{},"classes/CreateUserApplicationOnFailure.html":{},"classes/CreateUserApplicationOnSuccess.html":{},"components/CustomLogoComponent.html":{},"classes/CustomRouterStateSerializer.html":{},"components/DatetimeFilterComponent.html":{},"classes/DelayedLightCardUpdate.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"classes/EmptyLightCards.html":{},"classes/FailToUpdateTimeReference.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"classes/HandleUnexpectedError.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/HandleUnexpectedError-4.html":{},"classes/HandleUnexpectedError-5.html":{},"classes/HandleUnexpectedError-6.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/ImplicitlyAuthenticated.html":{},"components/InfoComponent.html":{},"classes/InitAuthStatus.html":{},"classes/InitFilters.html":{},"classes/InitTimeline.html":{},"classes/LightCardAlreadyUpdated.html":{},"components/ListSettingComponent.html":{},"classes/LoadArchivedCard.html":{},"classes/LoadArchivedCardFailure.html":{},"classes/LoadArchivedCardSuccess.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{},"classes/LoadConfig.html":{},"classes/LoadConfigFailure.html":{},"classes/LoadConfigSuccess.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/LoadSettings.html":{},"classes/LoadSettingsFailure.html":{},"classes/LoadSettingsSuccess.html":{},"components/LoginComponent.html":{},"components/MenuLinkComponent.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"classes/PatchSettings.html":{},"classes/PatchSettingsFailure.html":{},"classes/PatchSettingsSuccess.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RefreshTranslation.html":{},"classes/RejectLogIn.html":{},"classes/RemoveLightCard.html":{},"components/ResizableComponent.html":{},"classes/RouterStateUrl.html":{},"classes/SelectArchivedLightCard.html":{},"classes/SelectLightCard.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{},"classes/SendArchiveQuery.html":{},"classes/SetCardDataTimeline.html":{},"components/SettingsComponent.html":{},"interfaces/SettingsInputs.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"classes/ThirdActionAlreadyLoaded.html":{},"classes/ThirdActionAlreadyUpdated.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"classes/Tick.html":{},"classes/TickPayload.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"interceptors/TokenInjector.html":{},"classes/TranslationUpToDate.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"classes/UnAuthenticationFromImplicitFlow.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateAnActionFailure.html":{},"classes/UpdateArchiveFilter.html":{},"classes/UpdateArchivePage.html":{},"classes/UpdateTimeReference.html":{},"classes/UpdateTranslation.html":{},"classes/UpdateTranslationFailed.html":{},"classes/UpdateTranslationSuccessful.html":{},"classes/UpdatedSubscription.html":{},"classes/UselessAuthAction.html":{},"classes/UserApplicationNotRegistered.html":{},"classes/UserApplicationRegistered.html":{},"pipes/XAxisTickFormatPipe.html":{}}}],["implicit",{"_index":82,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"modules/AppRoutingModule.html":{},"classes/AuthObject.html":{},"injectables/AuthenticationEffects.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckImplicitFlowAuthenticationStatus.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/ImplicitlyAuthenticated.html":{},"classes/InitAuthStatus.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"classes/UnAuthenticationFromImplicitFlow.html":{},"classes/UselessAuthAction.html":{},"miscellaneous/enumerations.html":{}}}],["implicitallyauthenticated",{"_index":93,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckImplicitFlowAuthenticationStatus.html":{},"classes/ImplicitlyAuthenticated.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"classes/UnAuthenticationFromImplicitFlow.html":{},"classes/UselessAuthAction.html":{},"miscellaneous/enumerations.html":{}}}],["implicitauthenticationconfigfallback",{"_index":1150,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["implicitauthenticationhandler",{"_index":1222,"title":{"classes/ImplicitAuthenticationHandler.html":{}},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["implicitauthenticationhandler(this",{"_index":1191,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["implicitconf",{"_index":1175,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["implicitlyauthenticated",{"_index":158,"title":{"classes/ImplicitlyAuthenticated.html":{}},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckImplicitFlowAuthenticationStatus.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/ImplicitlyAuthenticated.html":{},"classes/InitAuthStatus.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"classes/UnAuthenticationFromImplicitFlow.html":{},"classes/UselessAuthAction.html":{},"miscellaneous/typealiases.html":{}}}],["import",{"_index":51,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/Action.html":{},"components/ActionComponent.html":{},"classes/ActionStatus.html":{},"classes/AddActionsAppear.html":{},"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interfaces/AppState.html":{},"classes/ApplyFilter.html":{},"injectables/ArchiveEffects.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"classes/ArchiveQuerySuccess.html":{},"interfaces/ArchiveState.html":{},"components/ArchivesComponent.html":{},"modules/ArchivesModule.html":{},"modules/ArchivesRoutingModule.html":{},"classes/AuthObject.html":{},"interfaces/AuthState.html":{},"injectables/AuthenticationEffects.html":{},"interfaces/AuthenticationModeHandler.html":{},"components/BaseSettingComponent.html":{},"directives/CalcHeightDirective.html":{},"classes/Card.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"injectables/CardEffects.html":{},"interfaces/CardFeedState.html":{},"components/CardListComponent.html":{},"classes/CardOperation.html":{},"injectables/CardOperationEffects.html":{},"injectables/CardService.html":{},"interfaces/CardState.html":{},"modules/CardsModule.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckImplicitFlowAuthenticationStatus.html":{},"classes/CheckTokenResponse.html":{},"classes/ClearCard.html":{},"classes/ClearLightCardSelection.html":{},"injectables/ConfigEffects.html":{},"injectables/ConfigService.html":{},"components/ConfirmModalComponent.html":{},"classes/CreateUserApplication.html":{},"classes/CreateUserApplicationOnFailure.html":{},"classes/CreateUserApplicationOnSuccess.html":{},"components/CustomLogoComponent.html":{},"injectables/CustomRouterEffects.html":{},"classes/CustomRouterStateSerializer.html":{},"classes/DateTimeNgb.html":{},"components/DatetimeFilterComponent.html":{},"classes/DelayedLightCardUpdate.html":{},"classes/Detail.html":{},"components/DetailComponent.html":{},"classes/DetailContext.html":{},"components/DetailsComponent.html":{},"directives/DraggableDirective.html":{},"components/EmailSettingComponent.html":{},"classes/EmptyLightCards.html":{},"classes/FailToUpdateTimeReference.html":{},"components/FeedComponent.html":{},"injectables/FeedFiltersEffects.html":{},"modules/FeedModule.html":{},"modules/FeedRoutingModule.html":{},"classes/Filter.html":{},"injectables/FilterService.html":{},"components/FiltersComponent.html":{},"classes/GuidService.html":{},"classes/HandleUnexpectedError.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/HandleUnexpectedError-4.html":{},"classes/HandleUnexpectedError-5.html":{},"classes/HandleUnexpectedError-6.html":{},"injectables/HandlebarsService.html":{},"classes/I18n.html":{},"injectables/I18nService.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/ImplicitlyAuthenticated.html":{},"components/InfoComponent.html":{},"classes/InitAuthStatus.html":{},"classes/InitFilters.html":{},"classes/InitTimeline.html":{},"classes/Input.html":{},"classes/LightCard.html":{},"classes/LightCardAlreadyUpdated.html":{},"injectables/LightCardEffects.html":{},"components/ListSettingComponent.html":{},"classes/LoadArchivedCard.html":{},"classes/LoadArchivedCardFailure.html":{},"classes/LoadArchivedCardSuccess.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{},"classes/LoadConfig.html":{},"classes/LoadConfigFailure.html":{},"classes/LoadConfigSuccess.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/LoadSettings.html":{},"classes/LoadSettingsFailure.html":{},"classes/LoadSettingsSuccess.html":{},"components/LoginComponent.html":{},"injectables/MenuEffects.html":{},"components/MenuLinkComponent.html":{},"interfaces/MenuState.html":{},"classes/Message.html":{},"directives/MouseWheelDirective.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"injectables/NotifyService.html":{},"classes/Page.html":{},"classes/ParameterListItem.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"classes/PatchSettings.html":{},"classes/PatchSettingsFailure.html":{},"classes/PatchSettingsSuccess.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/Process.html":{},"classes/RefreshTranslation.html":{},"classes/RejectLogIn.html":{},"classes/RemoveLightCard.html":{},"components/ResizableComponent.html":{},"classes/RouterStateUrl.html":{},"classes/SelectArchivedLightCard.html":{},"classes/SelectLightCard.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{},"classes/SendArchiveQuery.html":{},"modules/ServicesModule.html":{},"classes/SetCardDataTimeline.html":{},"components/SettingsComponent.html":{},"injectables/SettingsEffects.html":{},"interfaces/SettingsInputs.html":{},"modules/SettingsModule.html":{},"modules/SettingsRoutingModule.html":{},"injectables/SettingsService.html":{},"classes/State.html":{},"modules/StateModule.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"classes/Third.html":{},"classes/ThirdActionAlreadyLoaded.html":{},"classes/ThirdActionAlreadyUpdated.html":{},"injectables/ThirdActionService.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"modules/ThirdpartyModule.html":{},"modules/ThirdpartyRoutingModule.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"classes/ThirdsServiceMock.html":{},"classes/Tick.html":{},"classes/TickPayload.html":{},"injectables/TimeEffects.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"classes/TimeReference.html":{},"classes/TimeSpan.html":{},"interfaces/TimeState.html":{},"interfaces/TimelineState.html":{},"interceptors/TokenInjector.html":{},"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{},"interfaces/TranslationState.html":{},"classes/TranslationUpToDate.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"classes/UnAuthenticationFromImplicitFlow.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateAnActionFailure.html":{},"classes/UpdateArchiveFilter.html":{},"classes/UpdateArchivePage.html":{},"classes/UpdateTimeReference.html":{},"classes/UpdateTranslation.html":{},"classes/UpdateTranslationFailed.html":{},"classes/UpdateTranslationSuccessful.html":{},"classes/UpdatedSubscription.html":{},"classes/UselessAuthAction.html":{},"classes/UserApplicationNotRegistered.html":{},"classes/UserApplicationRegistered.html":{},"injectables/UserEffects.html":{},"injectables/UserService.html":{},"modules/UtilitiesModule.html":{},"pipes/XAxisTickFormatPipe.html":{}}}],["imports",{"_index":658,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/ArchivesModule.html":{},"modules/ArchivesRoutingModule.html":{},"modules/CardsModule.html":{},"modules/FeedModule.html":{},"modules/FeedRoutingModule.html":{},"modules/ServicesModule.html":{},"modules/SettingsModule.html":{},"modules/SettingsRoutingModule.html":{},"modules/StateModule.html":{},"modules/ThirdpartyModule.html":{},"modules/ThirdpartyRoutingModule.html":{},"modules/UtilitiesModule.html":{}}}],["include",{"_index":3992,"title":{},"body":{"modules/StateModule.html":{}}}],["incorrect",{"_index":2777,"title":{},"body":{"components/EmailSettingComponent.html":{},"components/ListSettingComponent.html":{},"components/TextSettingComponent.html":{}}}],["index",{"_index":34,"title":{"index.html":{}},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"components/ActionComponent.html":{},"classes/AddActionsAppear.html":{},"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"components/AppComponent.html":{},"interfaces/AppState.html":{},"classes/ApplyFilter.html":{},"injectables/ArchiveEffects.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"classes/ArchiveQuerySuccess.html":{},"interfaces/ArchiveState.html":{},"components/ArchivesComponent.html":{},"classes/AuthObject.html":{},"interfaces/AuthState.html":{},"injectables/AuthenticationEffects.html":{},"interfaces/AuthenticationModeHandler.html":{},"components/BaseSettingComponent.html":{},"directives/CalcHeightDirective.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"injectables/CardEffects.html":{},"interfaces/CardFeedState.html":{},"components/CardListComponent.html":{},"classes/CardOperation.html":{},"injectables/CardOperationEffects.html":{},"injectables/CardService.html":{},"interfaces/CardState.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckImplicitFlowAuthenticationStatus.html":{},"classes/CheckTokenResponse.html":{},"classes/ClearCard.html":{},"classes/ClearLightCardSelection.html":{},"injectables/ConfigEffects.html":{},"injectables/ConfigService.html":{},"interfaces/ConfigState.html":{},"components/ConfirmModalComponent.html":{},"classes/CreateUserApplication.html":{},"classes/CreateUserApplicationOnFailure.html":{},"classes/CreateUserApplicationOnSuccess.html":{},"components/CustomLogoComponent.html":{},"injectables/CustomRouterEffects.html":{},"classes/CustomRouterStateSerializer.html":{},"classes/DateTimeNgb.html":{},"components/DatetimeFilterComponent.html":{},"classes/DelayedLightCardUpdate.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"directives/DraggableDirective.html":{},"components/EmailSettingComponent.html":{},"classes/EmptyLightCards.html":{},"classes/FailToUpdateTimeReference.html":{},"components/FeedComponent.html":{},"injectables/FeedFiltersEffects.html":{},"classes/Filter.html":{},"injectables/FilterService.html":{},"components/FiltersComponent.html":{},"classes/GuidService.html":{},"classes/HandleUnexpectedError.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/HandleUnexpectedError-4.html":{},"classes/HandleUnexpectedError-5.html":{},"classes/HandleUnexpectedError-6.html":{},"injectables/HandlebarsService.html":{},"injectables/I18nService.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/ImplicitlyAuthenticated.html":{},"components/InfoComponent.html":{},"classes/InitAuthStatus.html":{},"classes/InitFilters.html":{},"classes/InitTimeline.html":{},"classes/LightCardAlreadyUpdated.html":{},"injectables/LightCardEffects.html":{},"components/ListSettingComponent.html":{},"classes/LoadArchivedCard.html":{},"classes/LoadArchivedCardFailure.html":{},"classes/LoadArchivedCardSuccess.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{},"classes/LoadConfig.html":{},"classes/LoadConfigFailure.html":{},"classes/LoadConfigSuccess.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/LoadSettings.html":{},"classes/LoadSettingsFailure.html":{},"classes/LoadSettingsSuccess.html":{},"components/LoginComponent.html":{},"injectables/MenuEffects.html":{},"components/MenuLinkComponent.html":{},"interfaces/MenuState.html":{},"directives/MouseWheelDirective.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"injectables/NotifyService.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"classes/PatchSettings.html":{},"classes/PatchSettingsFailure.html":{},"classes/PatchSettingsSuccess.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RefreshTranslation.html":{},"classes/RejectLogIn.html":{},"classes/RemoveLightCard.html":{},"components/ResizableComponent.html":{},"classes/SelectArchivedLightCard.html":{},"classes/SelectLightCard.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{},"classes/SendArchiveQuery.html":{},"classes/SetCardDataTimeline.html":{},"components/SettingsComponent.html":{},"injectables/SettingsEffects.html":{},"interfaces/SettingsInputs.html":{},"injectables/SettingsService.html":{},"interfaces/SettingsState.html":{},"modules/StateModule.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"classes/Third.html":{},"classes/ThirdActionAlreadyLoaded.html":{},"classes/ThirdActionAlreadyUpdated.html":{},"injectables/ThirdActionService.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"classes/ThirdsServiceMock.html":{},"classes/Tick.html":{},"classes/TickPayload.html":{},"injectables/TimeEffects.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"classes/TimeReference.html":{},"interfaces/TimeState.html":{},"interfaces/TimelineState.html":{},"interceptors/TokenInjector.html":{},"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{},"interfaces/TranslationState.html":{},"classes/TranslationUpToDate.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"classes/UnAuthenticationFromImplicitFlow.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateAnActionFailure.html":{},"classes/UpdateArchiveFilter.html":{},"classes/UpdateArchivePage.html":{},"classes/UpdateTimeReference.html":{},"classes/UpdateTranslation.html":{},"classes/UpdateTranslationFailed.html":{},"classes/UpdateTranslationSuccessful.html":{},"classes/UpdatedSubscription.html":{},"classes/UselessAuthAction.html":{},"classes/UserApplicationNotRegistered.html":{},"classes/UserApplicationRegistered.html":{},"injectables/UserEffects.html":{},"injectables/UserService.html":{},"interfaces/UserState.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["indexable",{"_index":3582,"title":{},"body":{"classes/Map.html":{}}}],["infinite",{"_index":4674,"title":{},"body":{"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["info",{"_index":3,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/Action.html":{},"components/ActionComponent.html":{},"classes/ActionStatus.html":{},"classes/AddActionsAppear.html":{},"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interfaces/AppState.html":{},"classes/ApplyFilter.html":{},"injectables/ArchiveEffects.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"classes/ArchiveQuerySuccess.html":{},"interfaces/ArchiveState.html":{},"components/ArchivesComponent.html":{},"modules/ArchivesModule.html":{},"modules/ArchivesRoutingModule.html":{},"classes/AuthObject.html":{},"interfaces/AuthState.html":{},"injectables/AuthenticationEffects.html":{},"interfaces/AuthenticationModeHandler.html":{},"components/BaseSettingComponent.html":{},"directives/CalcHeightDirective.html":{},"classes/Card.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"injectables/CardEffects.html":{},"interfaces/CardFeedState.html":{},"components/CardListComponent.html":{},"classes/CardOperation.html":{},"injectables/CardOperationEffects.html":{},"injectables/CardService.html":{},"interfaces/CardState.html":{},"modules/CardsModule.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckImplicitFlowAuthenticationStatus.html":{},"classes/CheckTokenResponse.html":{},"classes/ClearCard.html":{},"classes/ClearLightCardSelection.html":{},"injectables/ConfigEffects.html":{},"injectables/ConfigService.html":{},"interfaces/ConfigState.html":{},"components/ConfirmModalComponent.html":{},"classes/CreateUserApplication.html":{},"classes/CreateUserApplicationOnFailure.html":{},"classes/CreateUserApplicationOnSuccess.html":{},"components/CustomLogoComponent.html":{},"injectables/CustomRouterEffects.html":{},"classes/CustomRouterStateSerializer.html":{},"classes/DateTimeNgb.html":{},"components/DatetimeFilterComponent.html":{},"classes/DelayedLightCardUpdate.html":{},"classes/Detail.html":{},"components/DetailComponent.html":{},"classes/DetailContext.html":{},"components/DetailsComponent.html":{},"directives/DraggableDirective.html":{},"components/EmailSettingComponent.html":{},"classes/EmptyLightCards.html":{},"classes/FailToUpdateTimeReference.html":{},"components/FeedComponent.html":{},"injectables/FeedFiltersEffects.html":{},"modules/FeedModule.html":{},"modules/FeedRoutingModule.html":{},"classes/Filter.html":{},"injectables/FilterService.html":{},"components/FiltersComponent.html":{},"classes/GuidService.html":{},"classes/HandleUnexpectedError.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/HandleUnexpectedError-4.html":{},"classes/HandleUnexpectedError-5.html":{},"classes/HandleUnexpectedError-6.html":{},"injectables/HandlebarsService.html":{},"classes/I18n.html":{},"injectables/I18nService.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/ImplicitlyAuthenticated.html":{},"components/InfoComponent.html":{},"classes/InitAuthStatus.html":{},"classes/InitFilters.html":{},"classes/InitTimeline.html":{},"classes/Input.html":{},"classes/LightCard.html":{},"classes/LightCardAlreadyUpdated.html":{},"injectables/LightCardEffects.html":{},"components/ListSettingComponent.html":{},"classes/LoadArchivedCard.html":{},"classes/LoadArchivedCardFailure.html":{},"classes/LoadArchivedCardSuccess.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{},"classes/LoadConfig.html":{},"classes/LoadConfigFailure.html":{},"classes/LoadConfigSuccess.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/LoadSettings.html":{},"classes/LoadSettingsFailure.html":{},"classes/LoadSettingsSuccess.html":{},"components/LoginComponent.html":{},"classes/Map.html":{},"injectables/MenuEffects.html":{},"components/MenuLinkComponent.html":{},"interfaces/MenuState.html":{},"classes/Message.html":{},"directives/MouseWheelDirective.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"injectables/NotifyService.html":{},"classes/Page.html":{},"classes/ParameterListItem.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"classes/PatchSettings.html":{},"classes/PatchSettingsFailure.html":{},"classes/PatchSettingsSuccess.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/Process.html":{},"classes/RefreshTranslation.html":{},"classes/RejectLogIn.html":{},"classes/RemoveLightCard.html":{},"components/ResizableComponent.html":{},"classes/RouterStateUrl.html":{},"classes/SelectArchivedLightCard.html":{},"classes/SelectLightCard.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{},"classes/SendArchiveQuery.html":{},"modules/ServicesModule.html":{},"classes/SetCardDataTimeline.html":{},"components/SettingsComponent.html":{},"injectables/SettingsEffects.html":{},"interfaces/SettingsInputs.html":{},"modules/SettingsModule.html":{},"modules/SettingsRoutingModule.html":{},"injectables/SettingsService.html":{},"interfaces/SettingsState.html":{},"classes/State.html":{},"modules/StateModule.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"classes/Third.html":{},"classes/ThirdActionAlreadyLoaded.html":{},"classes/ThirdActionAlreadyUpdated.html":{},"injectables/ThirdActionService.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"modules/ThirdpartyModule.html":{},"modules/ThirdpartyRoutingModule.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"classes/ThirdsServiceMock.html":{},"classes/Tick.html":{},"classes/TickPayload.html":{},"injectables/TimeEffects.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"classes/TimeReference.html":{},"classes/TimeSpan.html":{},"interfaces/TimeState.html":{},"interfaces/TimelineState.html":{},"interceptors/TokenInjector.html":{},"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{},"interfaces/TranslationState.html":{},"classes/TranslationUpToDate.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"classes/UnAuthenticationFromImplicitFlow.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateAnActionFailure.html":{},"classes/UpdateArchiveFilter.html":{},"classes/UpdateArchivePage.html":{},"classes/UpdateTimeReference.html":{},"classes/UpdateTranslation.html":{},"classes/UpdateTranslationFailed.html":{},"classes/UpdateTranslationSuccessful.html":{},"classes/UpdatedSubscription.html":{},"classes/UselessAuthAction.html":{},"classes/User.html":{},"classes/UserApplicationNotRegistered.html":{},"classes/UserApplicationRegistered.html":{},"classes/UserContext.html":{},"injectables/UserEffects.html":{},"injectables/UserService.html":{},"interfaces/UserState.html":{},"modules/UtilitiesModule.html":{},"pipes/XAxisTickFormatPipe.html":{},"miscellaneous/enumerations.html":{}}}],["info'},{'name",{"_index":399,"title":{},"body":{"components/ActionComponent.html":{},"components/AppComponent.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/ConfirmModalComponent.html":{},"components/CustomLogoComponent.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MenuLinkComponent.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/ResizableComponent.html":{},"components/SettingsComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{}}}],["info.component.html",{"_index":3359,"title":{},"body":{"components/InfoComponent.html":{}}}],["info.component.scss",{"_index":3358,"title":{},"body":{"components/InfoComponent.html":{}}}],["infocomponent",{"_index":398,"title":{"components/InfoComponent.html":{}},"body":{"components/ActionComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/ConfirmModalComponent.html":{},"components/CustomLogoComponent.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MenuLinkComponent.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/ResizableComponent.html":{},"components/SettingsComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"index.html":{}}}],["information",{"_index":13,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/AuthObject.html":{},"injectables/AuthenticationEffects.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckImplicitFlowAuthenticationStatus.html":{},"classes/CheckTokenResponse.html":{},"classes/CustomRouterStateSerializer.html":{},"injectables/FilterService.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/ImplicitlyAuthenticated.html":{},"classes/InitAuthStatus.html":{},"classes/LightCard.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/RouterStateUrl.html":{},"classes/TimeSpan.html":{},"interfaces/TimelineState.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"components/TypeFilterComponent.html":{},"classes/UnAuthenticationFromImplicitFlow.html":{},"classes/UselessAuthAction.html":{},"miscellaneous/enumerations.html":{}}}],["informatios",{"_index":1317,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["inherit",{"_index":3630,"title":{},"body":{"components/MenuLinkComponent.html":{}}}],["inheritance",{"_index":2969,"title":{},"body":{"classes/Filter.html":{}}}],["inherited",{"_index":1999,"title":{},"body":{"components/CardListComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/ListSettingComponent.html":{},"components/MultiSettingsComponent.html":{},"components/TextSettingComponent.html":{},"components/TypeAheadSettingsComponent.html":{}}}],["iniitialized",{"_index":1361,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["init",{"_index":64,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"components/ActionComponent.html":{},"components/AppComponent.html":{},"classes/ApplyFilter.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckImplicitFlowAuthenticationStatus.html":{},"components/ConfirmModalComponent.html":{},"components/CustomLogoComponent.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"classes/ImplicitlyAuthenticated.html":{},"components/InfoComponent.html":{},"classes/InitAuthStatus.html":{},"classes/InitFilters.html":{},"classes/InitTimeline.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MenuLinkComponent.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"components/ResizableComponent.html":{},"classes/SetCardDataTimeline.html":{},"components/SettingsComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"classes/UnAuthenticationFromImplicitFlow.html":{},"classes/UselessAuthAction.html":{},"miscellaneous/enumerations.html":{}}}],["initandloadauth",{"_index":1370,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["initauthstatus",{"_index":63,"title":{"classes/InitAuthStatus.html":{}},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckImplicitFlowAuthenticationStatus.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/ImplicitlyAuthenticated.html":{},"classes/InitAuthStatus.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"classes/UnAuthenticationFromImplicitFlow.html":{},"classes/UselessAuthAction.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["initauthstatus({code",{"_index":1448,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["initchartcomponent",{"_index":400,"title":{},"body":{"components/ActionComponent.html":{},"components/AppComponent.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/ConfirmModalComponent.html":{},"components/CustomLogoComponent.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"modules/FeedModule.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MenuLinkComponent.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/ResizableComponent.html":{},"components/SettingsComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"index.html":{}}}],["initfilter",{"_index":885,"title":{},"body":{"classes/ApplyFilter.html":{},"classes/InitFilters.html":{},"miscellaneous/enumerations.html":{}}}],["initfilters",{"_index":888,"title":{"classes/InitFilters.html":{}},"body":{"classes/ApplyFilter.html":{},"injectables/FeedFiltersEffects.html":{},"injectables/FilterService.html":{},"classes/InitFilters.html":{},"miscellaneous/typealiases.html":{}}}],["initfilters({filters:this.service.defaultfilters",{"_index":2875,"title":{},"body":{"injectables/FeedFiltersEffects.html":{}}}],["initformgroup",{"_index":1627,"title":{},"body":{"components/BaseSettingComponent.html":{},"components/EmailSettingComponent.html":{},"components/ListSettingComponent.html":{},"components/MultiSettingsComponent.html":{},"components/TextSettingComponent.html":{},"components/TypeAheadSettingsComponent.html":{}}}],["initformgroup():formgroup",{"_index":1695,"title":{},"body":{"components/BaseSettingComponent.html":{}}}],["initializeauthentication",{"_index":1418,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["initializeauthentication(currenthreflocation",{"_index":1437,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["initializeauthentication(currentlocationhref",{"_index":1443,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["initialized",{"_index":1260,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["initializehandlebarstemplates",{"_index":2544,"title":{},"body":{"components/DetailComponent.html":{}}}],["initializehrefsofcsslink",{"_index":2545,"title":{},"body":{"components/DetailComponent.html":{}}}],["initialnavigation",{"_index":771,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["initialstate",{"_index":2392,"title":{},"body":{"classes/CustomRouterStateSerializer.html":{},"classes/RouterStateUrl.html":{}}}],["inittagfilter",{"_index":3008,"title":{},"body":{"injectables/FilterService.html":{}}}],["inittagfilteronloadedsettings",{"_index":2848,"title":{},"body":{"injectables/FeedFiltersEffects.html":{}}}],["inittimefilter",{"_index":3009,"title":{},"body":{"injectables/FilterService.html":{}}}],["inittimeline",{"_index":3394,"title":{"classes/InitTimeline.html":{}},"body":{"classes/InitTimeline.html":{},"classes/SetCardDataTimeline.html":{},"components/TimeLineComponent.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["inittimeline({data",{"_index":4458,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["inittypefilter",{"_index":3010,"title":{},"body":{"injectables/FilterService.html":{}}}],["inject",{"_index":2213,"title":{},"body":{"injectables/ConfigEffects.html":{},"classes/GuidService.html":{}}}],["inject('configretrydelay",{"_index":2219,"title":{},"body":{"injectables/ConfigEffects.html":{}}}],["injectable",{"_index":892,"title":{"injectables/ArchiveEffects.html":{},"injectables/AuthenticationEffects.html":{},"injectables/CardEffects.html":{},"injectables/CardOperationEffects.html":{},"injectables/CardService.html":{},"injectables/ConfigEffects.html":{},"injectables/ConfigService.html":{},"injectables/CustomRouterEffects.html":{},"injectables/FeedFiltersEffects.html":{},"injectables/FilterService.html":{},"injectables/HandlebarsService.html":{},"injectables/I18nService.html":{},"injectables/LightCardEffects.html":{},"injectables/MenuEffects.html":{},"injectables/NotifyService.html":{},"injectables/SettingsEffects.html":{},"injectables/SettingsService.html":{},"injectables/ThirdActionService.html":{},"injectables/ThirdsService.html":{},"injectables/TimeEffects.html":{},"injectables/TranslateEffects.html":{},"injectables/UserEffects.html":{},"injectables/UserService.html":{}},"body":{"injectables/ArchiveEffects.html":{},"classes/AuthObject.html":{},"injectables/AuthenticationEffects.html":{},"interfaces/AuthenticationModeHandler.html":{},"injectables/CardEffects.html":{},"injectables/CardOperationEffects.html":{},"injectables/CardService.html":{},"classes/CheckTokenResponse.html":{},"injectables/ConfigEffects.html":{},"injectables/ConfigService.html":{},"injectables/CustomRouterEffects.html":{},"injectables/FeedFiltersEffects.html":{},"injectables/FilterService.html":{},"injectables/HandlebarsService.html":{},"injectables/I18nService.html":{},"classes/ImplicitAuthenticationHandler.html":{},"injectables/LightCardEffects.html":{},"injectables/MenuEffects.html":{},"injectables/NotifyService.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"injectables/SettingsEffects.html":{},"injectables/SettingsService.html":{},"injectables/ThirdActionService.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"injectables/TimeEffects.html":{},"interceptors/TokenInjector.html":{},"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{},"injectables/UserEffects.html":{},"injectables/UserService.html":{}}}],["injectables",{"_index":893,"title":{},"body":{"injectables/ArchiveEffects.html":{},"injectables/AuthenticationEffects.html":{},"injectables/CardEffects.html":{},"injectables/CardOperationEffects.html":{},"injectables/CardService.html":{},"injectables/ConfigEffects.html":{},"injectables/ConfigService.html":{},"injectables/CustomRouterEffects.html":{},"injectables/FeedFiltersEffects.html":{},"injectables/FilterService.html":{},"injectables/HandlebarsService.html":{},"injectables/I18nService.html":{},"injectables/LightCardEffects.html":{},"injectables/MenuEffects.html":{},"injectables/NotifyService.html":{},"injectables/SettingsEffects.html":{},"injectables/SettingsService.html":{},"injectables/ThirdActionService.html":{},"injectables/ThirdsService.html":{},"injectables/TimeEffects.html":{},"injectables/TranslateEffects.html":{},"injectables/UserEffects.html":{},"injectables/UserService.html":{},"index.html":{}}}],["injected",{"_index":562,"title":{},"body":{"components/AppComponent.html":{}}}],["inline",{"_index":3387,"title":{},"body":{"components/InfoComponent.html":{}}}],["input",{"_index":177,"title":{"classes/Input.html":{}},"body":{"classes/Action.html":{},"components/ActionComponent.html":{},"classes/ActionStatus.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/BaseSettingComponent.html":{},"directives/CalcHeightDirective.html":{},"components/CardComponent.html":{},"components/CardListComponent.html":{},"components/CustomLogoComponent.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/IconComponent.html":{},"classes/Input.html":{},"components/ListSettingComponent.html":{},"components/MenuLinkComponent.html":{},"components/MultiFilterComponent.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"components/TextSettingComponent.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{}}}],["inputpublishers",{"_index":4696,"title":{},"body":{"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["inputs",{"_index":176,"title":{},"body":{"classes/Action.html":{},"components/ActionComponent.html":{},"classes/ActionStatus.html":{},"components/ArchiveListComponent.html":{},"components/BaseSettingComponent.html":{},"directives/CalcHeightDirective.html":{},"components/CardComponent.html":{},"components/CardListComponent.html":{},"components/CustomLogoComponent.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/IconComponent.html":{},"classes/Input.html":{},"components/ListSettingComponent.html":{},"components/MenuLinkComponent.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"components/TextSettingComponent.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"components/TypeAheadSettingsComponent.html":{}}}],["inputtype",{"_index":264,"title":{},"body":{"classes/Action.html":{},"classes/ActionStatus.html":{},"classes/Input.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"miscellaneous/enumerations.html":{}}}],["inside",{"_index":2735,"title":{},"body":{"directives/DraggableDirective.html":{}}}],["instance",{"_index":1337,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["instanciate",{"_index":1672,"title":{},"body":{"components/BaseSettingComponent.html":{}}}],["instanciation",{"_index":2968,"title":{},"body":{"classes/Filter.html":{}}}],["instantiate",{"_index":2599,"title":{},"body":{"components/DetailComponent.html":{}}}],["instantiateauthmodehandler(mode",{"_index":1188,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["instantiateimplicitflowconfiguration",{"_index":1223,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["intercept",{"_index":4591,"title":{},"body":{"interceptors/TokenInjector.html":{}}}],["intercept(request",{"_index":4597,"title":{},"body":{"interceptors/TokenInjector.html":{}}}],["intercepted",{"_index":2127,"title":{},"body":{"injectables/CardService.html":{}}}],["interceptor",{"_index":2128,"title":{"interceptors/TokenInjector.html":{}},"body":{"injectables/CardService.html":{}}}],["interceptors",{"_index":4588,"title":{},"body":{"interceptors/TokenInjector.html":{}}}],["interceptors.service",{"_index":3888,"title":{},"body":{"modules/ServicesModule.html":{}}}],["interface",{"_index":777,"title":{"interfaces/AppState.html":{},"interfaces/ArchiveState.html":{},"interfaces/AuthState.html":{},"interfaces/AuthenticationModeHandler.html":{},"interfaces/CardFeedState.html":{},"interfaces/CardState.html":{},"interfaces/ConfigState.html":{},"interfaces/MenuState.html":{},"interfaces/SettingsInputs.html":{},"interfaces/SettingsState.html":{},"interfaces/TimeState.html":{},"interfaces/TimelineState.html":{},"interfaces/TranslationState.html":{},"interfaces/UserState.html":{}},"body":{"interfaces/AppState.html":{},"interfaces/ArchiveState.html":{},"classes/AuthObject.html":{},"interfaces/AuthState.html":{},"interfaces/AuthenticationModeHandler.html":{},"interfaces/CardFeedState.html":{},"interfaces/CardState.html":{},"classes/CheckTokenResponse.html":{},"interfaces/ConfigState.html":{},"classes/ImplicitAuthenticationHandler.html":{},"interfaces/MenuState.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"components/SettingsComponent.html":{},"interfaces/SettingsInputs.html":{},"interfaces/SettingsState.html":{},"interfaces/TimeState.html":{},"interfaces/TimelineState.html":{},"interfaces/TranslationState.html":{},"interfaces/UserState.html":{}}}],["interfaces",{"_index":778,"title":{},"body":{"interfaces/AppState.html":{},"interfaces/ArchiveState.html":{},"interfaces/AuthState.html":{},"interfaces/AuthenticationModeHandler.html":{},"interfaces/CardFeedState.html":{},"interfaces/CardState.html":{},"interfaces/ConfigState.html":{},"interfaces/MenuState.html":{},"interfaces/SettingsInputs.html":{},"interfaces/SettingsState.html":{},"interfaces/TimeState.html":{},"interfaces/TimelineState.html":{},"interfaces/TranslationState.html":{},"interfaces/UserState.html":{},"index.html":{}}}],["internal",{"_index":96,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckImplicitFlowAuthenticationStatus.html":{},"classes/ImplicitlyAuthenticated.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"classes/UnAuthenticationFromImplicitFlow.html":{},"classes/UselessAuthAction.html":{},"miscellaneous/enumerations.html":{}}}],["intl.datetimeformat().resolvedoptions().timezone",{"_index":3285,"title":{},"body":{"injectables/I18nService.html":{}}}],["intl.numberformat(this._locale",{"_index":3249,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["invalid",{"_index":1230,"title":{},"body":{"classes/AuthObject.html":{},"injectables/AuthenticationEffects.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"components/DatetimeFilterComponent.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["invalidform",{"_index":2518,"title":{},"body":{"components/DatetimeFilterComponent.html":{}}}],["isauthenticated",{"_index":552,"title":{},"body":{"components/AppComponent.html":{},"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["isauthmodecodeorimplicitflow",{"_index":1424,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["isdisabled",{"_index":2496,"title":{},"body":{"components/DatetimeFilterComponent.html":{}}}],["isequal",{"_index":1628,"title":{},"body":{"components/BaseSettingComponent.html":{},"components/EmailSettingComponent.html":{},"components/ListSettingComponent.html":{},"components/MultiSettingsComponent.html":{},"components/TextSettingComponent.html":{},"components/TypeAheadSettingsComponent.html":{}}}],["isequal(forma",{"_index":1644,"title":{},"body":{"components/BaseSettingComponent.html":{},"components/EmailSettingComponent.html":{},"components/ListSettingComponent.html":{},"components/MultiSettingsComponent.html":{},"components/TextSettingComponent.html":{},"components/TypeAheadSettingsComponent.html":{}}}],["isexpirationdateover",{"_index":1310,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["isimplicitlyauthenticated",{"_index":1464,"title":{},"body":{"interfaces/AuthState.html":{}}}],["isinthefuture(expirationdate",{"_index":1308,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["isinthefuture(time",{"_index":1436,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["ismoment",{"_index":4534,"title":{},"body":{"classes/TimeReference.html":{}}}],["isnan(expirationdate",{"_index":1306,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["isnan(tointeger(value",{"_index":2433,"title":{},"body":{"classes/DateTimeNgb.html":{}}}],["isnotanumber",{"_index":1305,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["isnumber(date.day",{"_index":2452,"title":{},"body":{"classes/DateTimeNgb.html":{}}}],["isnumber(date.month",{"_index":2450,"title":{},"body":{"classes/DateTimeNgb.html":{}}}],["isnumber(dateparts[0",{"_index":2439,"title":{},"body":{"classes/DateTimeNgb.html":{}}}],["isnumber(dateparts[1",{"_index":2444,"title":{},"body":{"classes/DateTimeNgb.html":{}}}],["isnumber(dateparts[2",{"_index":2447,"title":{},"body":{"classes/DateTimeNgb.html":{}}}],["isnumber(time.hour",{"_index":2456,"title":{},"body":{"classes/DateTimeNgb.html":{}}}],["isnumber(time.minute",{"_index":2458,"title":{},"body":{"classes/DateTimeNgb.html":{}}}],["isnumber(value",{"_index":2429,"title":{},"body":{"classes/DateTimeNgb.html":{}}}],["issue",{"_index":458,"title":{},"body":{"classes/AddActionsAppear.html":{},"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"classes/ArchiveQuerySuccess.html":{},"classes/ClearCard.html":{},"classes/ClearLightCardSelection.html":{},"classes/CreateUserApplication.html":{},"classes/CreateUserApplicationOnFailure.html":{},"classes/CreateUserApplicationOnSuccess.html":{},"classes/DelayedLightCardUpdate.html":{},"classes/EmptyLightCards.html":{},"classes/HandleUnexpectedError.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/HandleUnexpectedError-5.html":{},"classes/HandleUnexpectedError-6.html":{},"classes/LightCardAlreadyUpdated.html":{},"classes/LoadArchivedCard.html":{},"classes/LoadArchivedCardFailure.html":{},"classes/LoadArchivedCardSuccess.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{},"classes/LoadConfig.html":{},"classes/LoadConfigFailure.html":{},"classes/LoadConfigSuccess.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/LoadSettings.html":{},"classes/LoadSettingsFailure.html":{},"classes/LoadSettingsSuccess.html":{},"classes/PatchSettings.html":{},"classes/PatchSettingsFailure.html":{},"classes/PatchSettingsSuccess.html":{},"classes/RemoveLightCard.html":{},"classes/SelectArchivedLightCard.html":{},"classes/SelectLightCard.html":{},"classes/SendArchiveQuery.html":{},"classes/ThirdActionAlreadyLoaded.html":{},"classes/ThirdActionAlreadyUpdated.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateAnActionFailure.html":{},"classes/UpdateArchiveFilter.html":{},"classes/UpdateArchivePage.html":{},"classes/UpdatedSubscription.html":{},"classes/UserApplicationNotRegistered.html":{},"classes/UserApplicationRegistered.html":{},"miscellaneous/enumerations.html":{}}}],["issuer",{"_index":1225,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["issupported",{"_index":3773,"title":{},"body":{"injectables/NotifyService.html":{}}}],["issupported(window",{"_index":3778,"title":{},"body":{"injectables/NotifyService.html":{}}}],["istanbul",{"_index":112,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/Action.html":{},"components/ActionComponent.html":{},"classes/ActionStatus.html":{},"classes/AddActionsAppear.html":{},"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"classes/ApplyFilter.html":{},"injectables/ArchiveEffects.html":{},"classes/ArchiveQuerySuccess.html":{},"injectables/AuthenticationEffects.html":{},"classes/Card.html":{},"components/CardComponent.html":{},"injectables/CardEffects.html":{},"classes/CardOperation.html":{},"injectables/CardOperationEffects.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckImplicitFlowAuthenticationStatus.html":{},"classes/ClearCard.html":{},"classes/ClearLightCardSelection.html":{},"injectables/ConfigEffects.html":{},"classes/CreateUserApplication.html":{},"classes/CreateUserApplicationOnFailure.html":{},"classes/CreateUserApplicationOnSuccess.html":{},"classes/CustomRouterStateSerializer.html":{},"classes/DateTimeNgb.html":{},"components/DatetimeFilterComponent.html":{},"classes/DelayedLightCardUpdate.html":{},"classes/Detail.html":{},"classes/EmptyLightCards.html":{},"injectables/FeedFiltersEffects.html":{},"classes/Filter.html":{},"classes/HandleUnexpectedError.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/HandleUnexpectedError-4.html":{},"classes/HandleUnexpectedError-5.html":{},"classes/HandleUnexpectedError-6.html":{},"classes/I18n.html":{},"classes/ImplicitlyAuthenticated.html":{},"classes/InitAuthStatus.html":{},"classes/InitFilters.html":{},"classes/Input.html":{},"classes/LightCard.html":{},"classes/LightCardAlreadyUpdated.html":{},"injectables/LightCardEffects.html":{},"classes/LoadArchivedCard.html":{},"classes/LoadArchivedCardFailure.html":{},"classes/LoadArchivedCardSuccess.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{},"classes/LoadConfig.html":{},"classes/LoadConfigFailure.html":{},"classes/LoadConfigSuccess.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/LoadSettings.html":{},"classes/LoadSettingsFailure.html":{},"classes/LoadSettingsSuccess.html":{},"components/LoginComponent.html":{},"injectables/MenuEffects.html":{},"classes/Message.html":{},"classes/Page.html":{},"classes/ParameterListItem.html":{},"classes/PatchSettings.html":{},"classes/PatchSettingsFailure.html":{},"classes/PatchSettingsSuccess.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/Process.html":{},"classes/RejectLogIn.html":{},"classes/RemoveLightCard.html":{},"classes/RouterStateUrl.html":{},"classes/SelectArchivedLightCard.html":{},"classes/SelectLightCard.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{},"classes/SendArchiveQuery.html":{},"injectables/SettingsEffects.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdActionAlreadyLoaded.html":{},"classes/ThirdActionAlreadyUpdated.html":{},"injectables/ThirdActionService.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"classes/TimeSpan.html":{},"interceptors/TokenInjector.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"classes/UnAuthenticationFromImplicitFlow.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateAnActionFailure.html":{},"classes/UpdateArchiveFilter.html":{},"classes/UpdateArchivePage.html":{},"classes/UpdatedSubscription.html":{},"classes/UselessAuthAction.html":{},"classes/UserApplicationNotRegistered.html":{},"classes/UserApplicationRegistered.html":{}}}],["isvirtualtimeundefine",{"_index":4511,"title":{},"body":{"classes/TimeReference.html":{}}}],["it's",{"_index":1533,"title":{},"body":{"injectables/AuthenticationEffects.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["items",{"_index":2403,"title":{},"body":{"classes/CustomRouterStateSerializer.html":{},"classes/RouterStateUrl.html":{}}}],["iterate",{"_index":4633,"title":{},"body":{"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["j",{"_index":4416,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["january",{"_index":2839,"title":{},"body":{"components/FeedComponent.html":{}}}],["jnlp",{"_index":218,"title":{},"body":{"classes/Action.html":{},"classes/ActionStatus.html":{},"classes/Input.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"miscellaneous/enumerations.html":{}}}],["js",{"_index":4999,"title":{},"body":{"dependencies.html":{}}}],["json.parse(json",{"_index":4212,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["jwksvalidationhandler",{"_index":1147,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["jwt",{"_index":1141,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"dependencies.html":{}}}],["jwt.expire",{"_index":1217,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["jwt.family",{"_index":1214,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["jwt.given",{"_index":1211,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["jwt.login",{"_index":1207,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["jwt[this.expireclaim",{"_index":1342,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["jwt[this.familynameclaim",{"_index":1348,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["jwt[this.givennameclaim",{"_index":1347,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["jwt_decode",{"_index":1140,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["jwt_decode(token",{"_index":1393,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["keep",{"_index":2036,"title":{},"body":{"injectables/CardOperationEffects.html":{}}}],["key",{"_index":183,"title":{},"body":{"classes/Action.html":{},"classes/ActionStatus.html":{},"components/ArchiveFiltersComponent.html":{},"injectables/AuthenticationEffects.html":{},"components/CardComponent.html":{},"classes/CardOperation.html":{},"injectables/CardService.html":{},"injectables/HandlebarsService.html":{},"classes/I18n.html":{},"classes/Input.html":{},"classes/Map.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"components/TimeLineComponent.html":{},"classes/TimeReference.html":{}}}],["know",{"_index":3744,"title":{},"body":{"components/NavbarComponent.html":{}}}],["label",{"_index":170,"title":{},"body":{"classes/Action.html":{},"classes/ActionStatus.html":{},"components/DetailComponent.html":{},"classes/Input.html":{},"components/ListSettingComponent.html":{},"components/MultiFilterComponent.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{}}}],["label.parameters",{"_index":2652,"title":{},"body":{"components/DetailComponent.html":{}}}],["label1",{"_index":4251,"title":{},"body":{"classes/ThirdsServiceMock.html":{}}}],["label2",{"_index":4254,"title":{},"body":{"classes/ThirdsServiceMock.html":{}}}],["label3",{"_index":4259,"title":{},"body":{"classes/ThirdsServiceMock.html":{}}}],["lang",{"_index":4123,"title":{},"body":{"classes/ThirdsI18nLoader.html":{}}}],["language",{"_index":3831,"title":{},"body":{"classes/RefreshTranslation.html":{},"components/SettingsComponent.html":{},"interfaces/SettingsInputs.html":{},"classes/TranslationUpToDate.html":{},"classes/UpdateTranslation.html":{},"classes/UpdateTranslationFailed.html":{},"classes/UpdateTranslationSuccessful.html":{}}}],["languages",{"_index":4634,"title":{},"body":{"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["large",{"_index":3990,"title":{},"body":{"modules/StateModule.html":{}}}],["larger",{"_index":1897,"title":{},"body":{"components/CardComponent.html":{}}}],["last",{"_index":1958,"title":{},"body":{"interfaces/CardFeedState.html":{},"interfaces/TimelineState.html":{}}}],["lastcards",{"_index":1957,"title":{},"body":{"interfaces/CardFeedState.html":{},"interfaces/TimelineState.html":{}}}],["lastdestination",{"_index":764,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["lastname",{"_index":1465,"title":{},"body":{"interfaces/AuthState.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/User.html":{},"classes/UserContext.html":{}}}],["lastname:string",{"_index":4849,"title":{},"body":{"classes/User.html":{},"classes/UserContext.html":{}}}],["lastname?:string",{"_index":106,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckImplicitFlowAuthenticationStatus.html":{},"classes/ImplicitlyAuthenticated.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"classes/UnAuthenticationFromImplicitFlow.html":{},"classes/UselessAuthAction.html":{}}}],["later",{"_index":515,"title":{},"body":{"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"components/AppComponent.html":{},"classes/ClearLightCardSelection.html":{},"classes/DelayedLightCardUpdate.html":{},"classes/EmptyLightCards.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/LightCardAlreadyUpdated.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/RemoveLightCard.html":{},"classes/SelectLightCard.html":{},"classes/ThirdActionAlreadyLoaded.html":{},"classes/ThirdActionAlreadyUpdated.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateAnActionFailure.html":{},"classes/UpdatedSubscription.html":{},"miscellaneous/enumerations.html":{}}}],["latest",{"_index":2859,"title":{},"body":{"injectables/FeedFiltersEffects.html":{}}}],["lcard",{"_index":486,"title":{},"body":{"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"classes/ClearLightCardSelection.html":{},"classes/DelayedLightCardUpdate.html":{},"classes/EmptyLightCards.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/LightCardAlreadyUpdated.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/RemoveLightCard.html":{},"classes/SelectLightCard.html":{},"classes/ThirdActionAlreadyLoaded.html":{},"classes/ThirdActionAlreadyUpdated.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateAnActionFailure.html":{},"classes/UpdatedSubscription.html":{},"miscellaneous/enumerations.html":{}}}],["leaves",{"_index":4094,"title":{},"body":{"injectables/ThirdActionService.html":{}}}],["left",{"_index":2526,"title":{},"body":{"components/DatetimeFilterComponent.html":{},"components/MenuLinkComponent.html":{}}}],["left:0",{"_index":1013,"title":{},"body":{"components/ArchiveFiltersComponent.html":{},"components/DatetimeFilterComponent.html":{}}}],["legacy",{"_index":1440,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["legend",{"_index":347,"title":{},"body":{"components/ActionComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"modules/ArchivesModule.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"modules/CardsModule.html":{},"components/ConfirmModalComponent.html":{},"components/CustomLogoComponent.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"modules/FeedModule.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MenuLinkComponent.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/ResizableComponent.html":{},"modules/ServicesModule.html":{},"components/SettingsComponent.html":{},"modules/SettingsModule.html":{},"modules/StateModule.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"modules/ThirdpartyModule.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"modules/UtilitiesModule.html":{},"index.html":{}}}],["legend.accessibility",{"_index":2524,"title":{},"body":{"components/DatetimeFilterComponent.html":{}}}],["less",{"_index":4584,"title":{},"body":{"interfaces/TimelineState.html":{}}}],["level",{"_index":3640,"title":{},"body":{"classes/Message.html":{},"pipes/XAxisTickFormatPipe.html":{}}}],["library",{"_index":688,"title":{},"body":{"modules/AppModule.html":{},"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"modules/FeedModule.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["library.add(faclock",{"_index":2953,"title":{},"body":{"modules/FeedModule.html":{}}}],["library.add(faexternallinkalt",{"_index":708,"title":{},"body":{"modules/AppModule.html":{}}}],["library.add(fasignoutalt",{"_index":709,"title":{},"body":{"modules/AppModule.html":{}}}],["license",{"_index":338,"title":{},"body":{"components/ActionComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"modules/ArchivesModule.html":{},"modules/ArchivesRoutingModule.html":{},"components/CardComponent.html":{},"components/CardListComponent.html":{},"modules/CardsModule.html":{},"components/CustomLogoComponent.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailsComponent.html":{},"components/FeedComponent.html":{},"modules/FeedModule.html":{},"modules/FeedRoutingModule.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/MenuLinkComponent.html":{},"components/MultiFilterComponent.html":{},"components/NavbarComponent.html":{},"components/ResizableComponent.html":{},"modules/ServicesModule.html":{},"modules/SettingsModule.html":{},"modules/SettingsRoutingModule.html":{},"modules/StateModule.html":{},"components/TagsFilterComponent.html":{},"modules/ThirdpartyModule.html":{},"modules/ThirdpartyRoutingModule.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"modules/UtilitiesModule.html":{}}}],["light",{"_index":497,"title":{},"body":{"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"classes/ArchiveQuerySuccess.html":{},"components/CardComponent.html":{},"classes/CardOperation.html":{},"injectables/CardOperationEffects.html":{},"classes/ClearLightCardSelection.html":{},"classes/DelayedLightCardUpdate.html":{},"components/DetailComponent.html":{},"classes/EmptyLightCards.html":{},"classes/HandleUnexpectedError.html":{},"classes/HandleUnexpectedError-3.html":{},"components/IconComponent.html":{},"classes/LightCardAlreadyUpdated.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/RemoveLightCard.html":{},"classes/SelectArchivedLightCard.html":{},"classes/SelectLightCard.html":{},"classes/SendArchiveQuery.html":{},"classes/ThirdActionAlreadyLoaded.html":{},"classes/ThirdActionAlreadyUpdated.html":{},"components/TypeFilterComponent.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateAnActionFailure.html":{},"classes/UpdateArchiveFilter.html":{},"classes/UpdateArchivePage.html":{},"classes/UpdatedSubscription.html":{},"miscellaneous/enumerations.html":{}}}],["lightcard",{"_index":479,"title":{"classes/LightCard.html":{}},"body":{"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"injectables/ArchiveEffects.html":{},"components/ArchiveListComponent.html":{},"classes/ArchiveQuerySuccess.html":{},"interfaces/ArchiveState.html":{},"components/ArchivesComponent.html":{},"components/CardComponent.html":{},"interfaces/CardFeedState.html":{},"components/CardListComponent.html":{},"classes/CardOperation.html":{},"injectables/CardService.html":{},"classes/ClearLightCardSelection.html":{},"classes/DelayedLightCardUpdate.html":{},"classes/EmptyLightCards.html":{},"components/FeedComponent.html":{},"classes/Filter.html":{},"injectables/FilterService.html":{},"classes/HandleUnexpectedError.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/LightCard.html":{},"classes/LightCardAlreadyUpdated.html":{},"injectables/LightCardEffects.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/RemoveLightCard.html":{},"classes/SelectArchivedLightCard.html":{},"classes/SelectLightCard.html":{},"classes/SendArchiveQuery.html":{},"classes/ThirdActionAlreadyLoaded.html":{},"classes/ThirdActionAlreadyUpdated.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"components/TimeLineComponent.html":{},"classes/TimeSpan.html":{},"interfaces/TimelineState.html":{},"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateAnActionFailure.html":{},"classes/UpdateArchiveFilter.html":{},"classes/UpdateArchivePage.html":{},"classes/UpdatedSubscription.html":{},"miscellaneous/enumerations.html":{}}}],["lightcard):boolean",{"_index":2998,"title":{},"body":{"classes/Filter.html":{}}}],["lightcard,any",{"_index":2992,"title":{},"body":{"classes/Filter.html":{}}}],["lightcard.actions",{"_index":3456,"title":{},"body":{"injectables/LightCardEffects.html":{}}}],["lightcard.id",{"_index":2039,"title":{},"body":{"injectables/CardOperationEffects.html":{}}}],["lightcard.summary.key",{"_index":1886,"title":{},"body":{"components/CardComponent.html":{}}}],["lightcard.title.key",{"_index":1885,"title":{},"body":{"components/CardComponent.html":{}}}],["lightcardactions",{"_index":542,"title":{},"body":{"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"injectables/CardOperationEffects.html":{},"classes/ClearLightCardSelection.html":{},"classes/DelayedLightCardUpdate.html":{},"classes/EmptyLightCards.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/LightCardAlreadyUpdated.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/RemoveLightCard.html":{},"classes/SelectLightCard.html":{},"classes/ThirdActionAlreadyLoaded.html":{},"classes/ThirdActionAlreadyUpdated.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateAnActionFailure.html":{},"classes/UpdatedSubscription.html":{},"miscellaneous/typealiases.html":{}}}],["lightcardactiontypes",{"_index":484,"title":{},"body":{"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"injectables/CardEffects.html":{},"injectables/CardOperationEffects.html":{},"classes/ClearLightCardSelection.html":{},"classes/DelayedLightCardUpdate.html":{},"classes/EmptyLightCards.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/LightCardAlreadyUpdated.html":{},"injectables/LightCardEffects.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/RemoveLightCard.html":{},"classes/SelectLightCard.html":{},"classes/ThirdActionAlreadyLoaded.html":{},"classes/ThirdActionAlreadyUpdated.html":{},"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateAnActionFailure.html":{},"classes/UpdatedSubscription.html":{},"miscellaneous/enumerations.html":{}}}],["lightcardactiontypes.addlightcardfailure",{"_index":478,"title":{},"body":{"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"classes/ClearLightCardSelection.html":{},"classes/DelayedLightCardUpdate.html":{},"classes/EmptyLightCards.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/LightCardAlreadyUpdated.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/RemoveLightCard.html":{},"classes/SelectLightCard.html":{},"classes/ThirdActionAlreadyLoaded.html":{},"classes/ThirdActionAlreadyUpdated.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateAnActionFailure.html":{},"classes/UpdatedSubscription.html":{}}}],["lightcardactiontypes.addthirdactions",{"_index":532,"title":{},"body":{"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"classes/ClearLightCardSelection.html":{},"classes/DelayedLightCardUpdate.html":{},"classes/EmptyLightCards.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/LightCardAlreadyUpdated.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/RemoveLightCard.html":{},"classes/SelectLightCard.html":{},"classes/ThirdActionAlreadyLoaded.html":{},"classes/ThirdActionAlreadyUpdated.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateAnActionFailure.html":{},"classes/UpdatedSubscription.html":{}}}],["lightcardactiontypes.clearlightcardselection",{"_index":527,"title":{},"body":{"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"classes/ClearLightCardSelection.html":{},"classes/DelayedLightCardUpdate.html":{},"classes/EmptyLightCards.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/LightCardAlreadyUpdated.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/RemoveLightCard.html":{},"classes/SelectLightCard.html":{},"classes/ThirdActionAlreadyLoaded.html":{},"classes/ThirdActionAlreadyUpdated.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateAnActionFailure.html":{},"classes/UpdatedSubscription.html":{}}}],["lightcardactiontypes.delayedlightcardupdate",{"_index":540,"title":{},"body":{"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"classes/ClearLightCardSelection.html":{},"classes/DelayedLightCardUpdate.html":{},"classes/EmptyLightCards.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/LightCardAlreadyUpdated.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/RemoveLightCard.html":{},"classes/SelectLightCard.html":{},"classes/ThirdActionAlreadyLoaded.html":{},"classes/ThirdActionAlreadyUpdated.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateAnActionFailure.html":{},"classes/UpdatedSubscription.html":{}}}],["lightcardactiontypes.emptylightcards",{"_index":520,"title":{},"body":{"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"classes/ClearLightCardSelection.html":{},"classes/DelayedLightCardUpdate.html":{},"classes/EmptyLightCards.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/LightCardAlreadyUpdated.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/RemoveLightCard.html":{},"classes/SelectLightCard.html":{},"classes/ThirdActionAlreadyLoaded.html":{},"classes/ThirdActionAlreadyUpdated.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateAnActionFailure.html":{},"classes/UpdatedSubscription.html":{}}}],["lightcardactiontypes.handleunexpectederror",{"_index":529,"title":{},"body":{"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"classes/ClearLightCardSelection.html":{},"classes/DelayedLightCardUpdate.html":{},"classes/EmptyLightCards.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/LightCardAlreadyUpdated.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/RemoveLightCard.html":{},"classes/SelectLightCard.html":{},"classes/ThirdActionAlreadyLoaded.html":{},"classes/ThirdActionAlreadyUpdated.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateAnActionFailure.html":{},"classes/UpdatedSubscription.html":{}}}],["lightcardactiontypes.lightcardalreadyupdated",{"_index":541,"title":{},"body":{"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"classes/ClearLightCardSelection.html":{},"classes/DelayedLightCardUpdate.html":{},"classes/EmptyLightCards.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/LightCardAlreadyUpdated.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/RemoveLightCard.html":{},"classes/SelectLightCard.html":{},"classes/ThirdActionAlreadyLoaded.html":{},"classes/ThirdActionAlreadyUpdated.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateAnActionFailure.html":{},"classes/UpdatedSubscription.html":{}}}],["lightcardactiontypes.loadlightcards",{"_index":519,"title":{},"body":{"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"classes/ClearLightCardSelection.html":{},"classes/DelayedLightCardUpdate.html":{},"classes/EmptyLightCards.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/LightCardAlreadyUpdated.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/RemoveLightCard.html":{},"classes/SelectLightCard.html":{},"classes/ThirdActionAlreadyLoaded.html":{},"classes/ThirdActionAlreadyUpdated.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateAnActionFailure.html":{},"classes/UpdatedSubscription.html":{}}}],["lightcardactiontypes.loadlightcardsextendeddata",{"_index":523,"title":{},"body":{"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"classes/ClearLightCardSelection.html":{},"classes/DelayedLightCardUpdate.html":{},"classes/EmptyLightCards.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/LightCardAlreadyUpdated.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/RemoveLightCard.html":{},"classes/SelectLightCard.html":{},"classes/ThirdActionAlreadyLoaded.html":{},"classes/ThirdActionAlreadyUpdated.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateAnActionFailure.html":{},"classes/UpdatedSubscription.html":{}}}],["lightcardactiontypes.loadlightcardsfailure",{"_index":524,"title":{},"body":{"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"classes/ClearLightCardSelection.html":{},"classes/DelayedLightCardUpdate.html":{},"classes/EmptyLightCards.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/LightCardAlreadyUpdated.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/RemoveLightCard.html":{},"classes/SelectLightCard.html":{},"classes/ThirdActionAlreadyLoaded.html":{},"classes/ThirdActionAlreadyUpdated.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateAnActionFailure.html":{},"classes/UpdatedSubscription.html":{}}}],["lightcardactiontypes.loadlightcardssuccess",{"_index":521,"title":{},"body":{"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"classes/ClearLightCardSelection.html":{},"classes/DelayedLightCardUpdate.html":{},"classes/EmptyLightCards.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/LightCardAlreadyUpdated.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/RemoveLightCard.html":{},"classes/SelectLightCard.html":{},"classes/ThirdActionAlreadyLoaded.html":{},"classes/ThirdActionAlreadyUpdated.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateAnActionFailure.html":{},"classes/UpdatedSubscription.html":{}}}],["lightcardactiontypes.removelightcard",{"_index":530,"title":{},"body":{"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"classes/ClearLightCardSelection.html":{},"classes/DelayedLightCardUpdate.html":{},"classes/EmptyLightCards.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/LightCardAlreadyUpdated.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/RemoveLightCard.html":{},"classes/SelectLightCard.html":{},"classes/ThirdActionAlreadyLoaded.html":{},"classes/ThirdActionAlreadyUpdated.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateAnActionFailure.html":{},"classes/UpdatedSubscription.html":{}}}],["lightcardactiontypes.selectlightcard",{"_index":525,"title":{},"body":{"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"classes/ClearLightCardSelection.html":{},"classes/DelayedLightCardUpdate.html":{},"classes/EmptyLightCards.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/LightCardAlreadyUpdated.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/RemoveLightCard.html":{},"classes/SelectLightCard.html":{},"classes/ThirdActionAlreadyLoaded.html":{},"classes/ThirdActionAlreadyUpdated.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateAnActionFailure.html":{},"classes/UpdatedSubscription.html":{}}}],["lightcardactiontypes.thirdactionalreadyloaded",{"_index":538,"title":{},"body":{"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"classes/ClearLightCardSelection.html":{},"classes/DelayedLightCardUpdate.html":{},"classes/EmptyLightCards.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/LightCardAlreadyUpdated.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/RemoveLightCard.html":{},"classes/SelectLightCard.html":{},"classes/ThirdActionAlreadyLoaded.html":{},"classes/ThirdActionAlreadyUpdated.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateAnActionFailure.html":{},"classes/UpdatedSubscription.html":{}}}],["lightcardactiontypes.thirdactionalreadyupdated",{"_index":539,"title":{},"body":{"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"classes/ClearLightCardSelection.html":{},"classes/DelayedLightCardUpdate.html":{},"classes/EmptyLightCards.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/LightCardAlreadyUpdated.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/RemoveLightCard.html":{},"classes/SelectLightCard.html":{},"classes/ThirdActionAlreadyLoaded.html":{},"classes/ThirdActionAlreadyUpdated.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateAnActionFailure.html":{},"classes/UpdatedSubscription.html":{}}}],["lightcardactiontypes.updatealightcard",{"_index":533,"title":{},"body":{"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"classes/ClearLightCardSelection.html":{},"classes/DelayedLightCardUpdate.html":{},"classes/EmptyLightCards.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/LightCardAlreadyUpdated.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/RemoveLightCard.html":{},"classes/SelectLightCard.html":{},"classes/ThirdActionAlreadyLoaded.html":{},"classes/ThirdActionAlreadyUpdated.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateAnActionFailure.html":{},"classes/UpdatedSubscription.html":{}}}],["lightcardactiontypes.updateanaction",{"_index":534,"title":{},"body":{"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"classes/ClearLightCardSelection.html":{},"classes/DelayedLightCardUpdate.html":{},"classes/EmptyLightCards.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/LightCardAlreadyUpdated.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/RemoveLightCard.html":{},"classes/SelectLightCard.html":{},"classes/ThirdActionAlreadyLoaded.html":{},"classes/ThirdActionAlreadyUpdated.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateAnActionFailure.html":{},"classes/UpdatedSubscription.html":{}}}],["lightcardactiontypes.updateanactionfailure",{"_index":537,"title":{},"body":{"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"classes/ClearLightCardSelection.html":{},"classes/DelayedLightCardUpdate.html":{},"classes/EmptyLightCards.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/LightCardAlreadyUpdated.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/RemoveLightCard.html":{},"classes/SelectLightCard.html":{},"classes/ThirdActionAlreadyLoaded.html":{},"classes/ThirdActionAlreadyUpdated.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateAnActionFailure.html":{},"classes/UpdatedSubscription.html":{}}}],["lightcardactiontypes.updatedsubscription",{"_index":528,"title":{},"body":{"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"classes/ClearLightCardSelection.html":{},"classes/DelayedLightCardUpdate.html":{},"classes/EmptyLightCards.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/LightCardAlreadyUpdated.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/RemoveLightCard.html":{},"classes/SelectLightCard.html":{},"classes/ThirdActionAlreadyLoaded.html":{},"classes/ThirdActionAlreadyUpdated.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateAnActionFailure.html":{},"classes/UpdatedSubscription.html":{}}}],["lightcardadapter",{"_index":1990,"title":{},"body":{"interfaces/CardFeedState.html":{},"interfaces/TimelineState.html":{}}}],["lightcardadapter.getinitialstate",{"_index":1993,"title":{},"body":{"interfaces/CardFeedState.html":{},"interfaces/TimelineState.html":{}}}],["lightcardalreadyupdated",{"_index":516,"title":{"classes/LightCardAlreadyUpdated.html":{}},"body":{"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"classes/ClearLightCardSelection.html":{},"classes/DelayedLightCardUpdate.html":{},"classes/EmptyLightCards.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/LightCardAlreadyUpdated.html":{},"injectables/LightCardEffects.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/RemoveLightCard.html":{},"classes/SelectLightCard.html":{},"classes/ThirdActionAlreadyLoaded.html":{},"classes/ThirdActionAlreadyUpdated.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateAnActionFailure.html":{},"classes/UpdatedSubscription.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["lightcardeffects",{"_index":239,"title":{"injectables/LightCardEffects.html":{}},"body":{"classes/Action.html":{},"classes/ActionStatus.html":{},"interfaces/AppState.html":{},"classes/Input.html":{},"injectables/LightCardEffects.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{}}}],["lightcardid",{"_index":301,"title":{},"body":{"components/ActionComponent.html":{},"injectables/LightCardEffects.html":{},"injectables/ThirdActionService.html":{}}}],["lightcardreducer",{"_index":816,"title":{},"body":{"interfaces/AppState.html":{}}}],["lightcards",{"_index":522,"title":{},"body":{"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"components/ArchiveListComponent.html":{},"components/ArchivesComponent.html":{},"components/CardListComponent.html":{},"injectables/CardOperationEffects.html":{},"classes/ClearLightCardSelection.html":{},"classes/DelayedLightCardUpdate.html":{},"classes/EmptyLightCards.html":{},"components/FeedComponent.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/LightCardAlreadyUpdated.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/RemoveLightCard.html":{},"classes/SelectLightCard.html":{},"classes/ThirdActionAlreadyLoaded.html":{},"classes/ThirdActionAlreadyUpdated.html":{},"components/TimeLineComponent.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateAnActionFailure.html":{},"classes/UpdatedSubscription.html":{}}}],["lightcards.filter(card",{"_index":2034,"title":{},"body":{"injectables/CardOperationEffects.html":{}}}],["limit",{"_index":2330,"title":{},"body":{"components/CustomLogoComponent.html":{}}}],["limited",{"_index":2332,"title":{},"body":{"components/CustomLogoComponent.html":{}}}],["limitsize",{"_index":2296,"title":{},"body":{"components/CustomLogoComponent.html":{},"components/NavbarComponent.html":{}}}],["limitsize!=undefined",{"_index":3745,"title":{},"body":{"components/NavbarComponent.html":{}}}],["limitsize:boolean",{"_index":3742,"title":{},"body":{"components/NavbarComponent.html":{}}}],["line",{"_index":3388,"title":{},"body":{"components/InfoComponent.html":{},"classes/LightCard.html":{},"components/TimeLineComponent.html":{},"classes/TimeSpan.html":{},"pipes/XAxisTickFormatPipe.html":{},"miscellaneous/enumerations.html":{}}}],["line'},{'name",{"_index":422,"title":{},"body":{"components/ActionComponent.html":{},"components/AppComponent.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/ConfirmModalComponent.html":{},"components/CustomLogoComponent.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MenuLinkComponent.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/ResizableComponent.html":{},"components/SettingsComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{}}}],["line.component",{"_index":2927,"title":{},"body":{"modules/FeedModule.html":{}}}],["line.component.html",{"_index":4326,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["line.component.ts",{"_index":4325,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["line.component.ts:227",{"_index":4335,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["line.component.ts:252",{"_index":4340,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["line.component.ts:26",{"_index":4350,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["line.component.ts:27",{"_index":4351,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["line.component.ts:273",{"_index":4337,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["line.component.ts:29",{"_index":4348,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["line.component.ts:30",{"_index":4349,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["line.component.ts:31",{"_index":4332,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["line.component.ts:34",{"_index":4338,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["line/custom",{"_index":2938,"title":{},"body":{"modules/FeedModule.html":{}}}],["line/directives/app",{"_index":2696,"title":{},"body":{"directives/DraggableDirective.html":{},"modules/FeedModule.html":{}}}],["line/directives/mouse",{"_index":2945,"title":{},"body":{"modules/FeedModule.html":{},"directives/MouseWheelDirective.html":{}}}],["line/init",{"_index":2948,"title":{},"body":{"modules/FeedModule.html":{}}}],["line/tick",{"_index":2941,"title":{},"body":{"modules/FeedModule.html":{},"pipes/XAxisTickFormatPipe.html":{}}}],["line/time",{"_index":2926,"title":{},"body":{"modules/FeedModule.html":{},"components/TimeLineComponent.html":{}}}],["link",{"_index":2371,"title":{},"body":{"injectables/CustomRouterEffects.html":{},"components/DetailComponent.html":{},"classes/HandleUnexpectedError-4.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"injectables/MenuEffects.html":{},"components/MenuLinkComponent.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{},"miscellaneous/enumerations.html":{}}}],["link'},{'name",{"_index":405,"title":{},"body":{"components/ActionComponent.html":{},"components/AppComponent.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/ConfirmModalComponent.html":{},"components/CustomLogoComponent.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MenuLinkComponent.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/ResizableComponent.html":{},"components/SettingsComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{}}}],["link.component",{"_index":701,"title":{},"body":{"modules/AppModule.html":{}}}],["link.component.html",{"_index":3607,"title":{},"body":{"components/MenuLinkComponent.html":{}}}],["link.component.scss",{"_index":3606,"title":{},"body":{"components/MenuLinkComponent.html":{}}}],["link.component.ts",{"_index":3605,"title":{},"body":{"components/MenuLinkComponent.html":{}}}],["link.component.ts:21",{"_index":3613,"title":{},"body":{"components/MenuLinkComponent.html":{}}}],["link.component.ts:22",{"_index":3614,"title":{},"body":{"components/MenuLinkComponent.html":{}}}],["link.component.ts:23",{"_index":3617,"title":{},"body":{"components/MenuLinkComponent.html":{}}}],["link.component.ts:24",{"_index":3616,"title":{},"body":{"components/MenuLinkComponent.html":{}}}],["link.component.ts:25",{"_index":3612,"title":{},"body":{"components/MenuLinkComponent.html":{}}}],["link.component.ts:30",{"_index":3615,"title":{},"body":{"components/MenuLinkComponent.html":{}}}],["link/button",{"_index":1576,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["link/menu",{"_index":700,"title":{},"body":{"modules/AppModule.html":{},"components/MenuLinkComponent.html":{}}}],["link1",{"_index":4252,"title":{},"body":{"classes/ThirdsServiceMock.html":{}}}],["link2",{"_index":4255,"title":{},"body":{"classes/ThirdsServiceMock.html":{}}}],["link3",{"_index":4260,"title":{},"body":{"classes/ThirdsServiceMock.html":{}}}],["linkauthenticationstatus",{"_index":1610,"title":{},"body":{"interfaces/AuthenticationModeHandler.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["linkauthenticationstatus(linker",{"_index":1420,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["linker",{"_index":1615,"title":{},"body":{"interfaces/AuthenticationModeHandler.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["list",{"_index":266,"title":{},"body":{"classes/Action.html":{},"components/ActionComponent.html":{},"classes/ActionStatus.html":{},"components/AppComponent.html":{},"injectables/ArchiveEffects.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"modules/ArchivesModule.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"injectables/CardOperationEffects.html":{},"components/ConfirmModalComponent.html":{},"components/CustomLogoComponent.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"classes/Input.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MenuLinkComponent.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"components/ResizableComponent.html":{},"components/SettingsComponent.html":{},"classes/State.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"miscellaneous/enumerations.html":{}}}],["list'},{'name",{"_index":360,"title":{},"body":{"components/ActionComponent.html":{},"components/AppComponent.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/ConfirmModalComponent.html":{},"components/CustomLogoComponent.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MenuLinkComponent.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/ResizableComponent.html":{},"components/SettingsComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{}}}],["list.component",{"_index":1103,"title":{},"body":{"modules/ArchivesModule.html":{},"modules/FeedModule.html":{}}}],["list.component.html",{"_index":1023,"title":{},"body":{"components/ArchiveListComponent.html":{},"components/CardListComponent.html":{}}}],["list.component.scss",{"_index":1022,"title":{},"body":{"components/ArchiveListComponent.html":{},"components/CardListComponent.html":{}}}],["list.component.ts",{"_index":1021,"title":{},"body":{"components/ArchiveListComponent.html":{},"components/CardListComponent.html":{}}}],["list.component.ts:24",{"_index":1025,"title":{},"body":{"components/ArchiveListComponent.html":{}}}],["list.component.ts:25",{"_index":1024,"title":{},"body":{"components/ArchiveListComponent.html":{},"components/CardListComponent.html":{}}}],["list.component.ts:26",{"_index":1998,"title":{},"body":{"components/CardListComponent.html":{}}}],["list.component.ts:29",{"_index":1026,"title":{},"body":{"components/ArchiveListComponent.html":{}}}],["list.component.ts:32",{"_index":2001,"title":{},"body":{"components/CardListComponent.html":{}}}],["list/archive",{"_index":1020,"title":{},"body":{"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"modules/ArchivesModule.html":{}}}],["list/card",{"_index":1995,"title":{},"body":{"components/CardListComponent.html":{},"modules/FeedModule.html":{}}}],["list/filters/filters.component",{"_index":2928,"title":{},"body":{"modules/FeedModule.html":{}}}],["list/filters/filters.component.ts",{"_index":3048,"title":{},"body":{"components/FiltersComponent.html":{}}}],["list/filters/filters.component.ts:21",{"_index":3050,"title":{},"body":{"components/FiltersComponent.html":{}}}],["list/filters/filters.component.ts:25",{"_index":3051,"title":{},"body":{"components/FiltersComponent.html":{}}}],["list/filters/tags",{"_index":2950,"title":{},"body":{"modules/FeedModule.html":{},"components/TagsFilterComponent.html":{}}}],["list/filters/time",{"_index":2931,"title":{},"body":{"modules/FeedModule.html":{},"components/TimeFilterComponent.html":{}}}],["list/filters/type",{"_index":2929,"title":{},"body":{"modules/FeedModule.html":{},"components/TypeFilterComponent.html":{}}}],["list_radio",{"_index":267,"title":{},"body":{"classes/Action.html":{},"classes/ActionStatus.html":{},"classes/Input.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"miscellaneous/enumerations.html":{}}}],["listen",{"_index":1566,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["listens",{"_index":1493,"title":{},"body":{"injectables/AuthenticationEffects.html":{},"injectables/CustomRouterEffects.html":{},"injectables/MenuEffects.html":{}}}],["listsettingcomponent",{"_index":401,"title":{"components/ListSettingComponent.html":{}},"body":{"components/ActionComponent.html":{},"components/AppComponent.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/ConfirmModalComponent.html":{},"components/CustomLogoComponent.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MenuLinkComponent.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/ResizableComponent.html":{},"components/SettingsComponent.html":{},"modules/SettingsModule.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"index.html":{}}}],["literal",{"_index":475,"title":{},"body":{"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"classes/ApplyFilter.html":{},"classes/ArchiveQuerySuccess.html":{},"classes/CreateUserApplication.html":{},"classes/CreateUserApplicationOnFailure.html":{},"classes/CreateUserApplicationOnSuccess.html":{},"classes/DelayedLightCardUpdate.html":{},"classes/FailToUpdateTimeReference.html":{},"classes/HandleUnexpectedError.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/HandleUnexpectedError-4.html":{},"classes/HandleUnexpectedError-5.html":{},"classes/HandleUnexpectedError-6.html":{},"classes/InitAuthStatus.html":{},"classes/InitFilters.html":{},"classes/InitTimeline.html":{},"components/ListSettingComponent.html":{},"classes/LoadArchivedCard.html":{},"classes/LoadArchivedCardFailure.html":{},"classes/LoadArchivedCardSuccess.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{},"classes/LoadConfigFailure.html":{},"classes/LoadConfigSuccess.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/LoadSettingsFailure.html":{},"classes/LoadSettingsSuccess.html":{},"components/MultiFilterComponent.html":{},"classes/PatchSettings.html":{},"classes/PatchSettingsFailure.html":{},"classes/PatchSettingsSuccess.html":{},"classes/RejectLogIn.html":{},"classes/RemoveLightCard.html":{},"classes/SelectArchivedLightCard.html":{},"classes/SelectLightCard.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{},"classes/SendArchiveQuery.html":{},"classes/SetCardDataTimeline.html":{},"classes/TryToLogIn.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateArchiveFilter.html":{},"classes/UpdateArchivePage.html":{},"classes/UpdateTimeReference.html":{},"classes/UpdateTranslation.html":{},"classes/UpdateTranslationFailed.html":{},"classes/UpdateTranslationSuccessful.html":{},"classes/UserApplicationNotRegistered.html":{},"classes/UserApplicationRegistered.html":{}}}],["little",{"_index":2739,"title":{},"body":{"directives/DraggableDirective.html":{}}}],["load",{"_index":446,"title":{},"body":{"classes/AddActionsAppear.html":{},"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"classes/ClearCard.html":{},"classes/ClearLightCardSelection.html":{},"injectables/ConfigEffects.html":{},"classes/DelayedLightCardUpdate.html":{},"classes/EmptyLightCards.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/HandleUnexpectedError-4.html":{},"classes/HandleUnexpectedError-5.html":{},"classes/LightCardAlreadyUpdated.html":{},"classes/LoadArchivedCard.html":{},"classes/LoadArchivedCardFailure.html":{},"classes/LoadArchivedCardSuccess.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{},"classes/LoadConfig.html":{},"classes/LoadConfigFailure.html":{},"classes/LoadConfigSuccess.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/LoadSettings.html":{},"classes/LoadSettingsFailure.html":{},"classes/LoadSettingsSuccess.html":{},"injectables/MenuEffects.html":{},"classes/PatchSettings.html":{},"classes/PatchSettingsFailure.html":{},"classes/PatchSettingsSuccess.html":{},"classes/RemoveLightCard.html":{},"classes/SelectLightCard.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{},"injectables/SettingsEffects.html":{},"classes/ThirdActionAlreadyLoaded.html":{},"classes/ThirdActionAlreadyUpdated.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateAnActionFailure.html":{},"classes/UpdatedSubscription.html":{},"miscellaneous/enumerations.html":{}}}],["loadarchivedbyid",{"_index":1933,"title":{},"body":{"injectables/CardEffects.html":{}}}],["loadarchivedcard",{"_index":450,"title":{"classes/LoadArchivedCard.html":{}},"body":{"classes/AddActionsAppear.html":{},"injectables/CardEffects.html":{},"injectables/CardService.html":{},"classes/ClearCard.html":{},"injectables/CustomRouterEffects.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/LoadArchivedCard.html":{},"classes/LoadArchivedCardFailure.html":{},"classes/LoadArchivedCardSuccess.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["loadarchivedcard(id",{"_index":2093,"title":{},"body":{"injectables/CardService.html":{}}}],["loadarchivedcard({id",{"_index":2352,"title":{},"body":{"injectables/CustomRouterEffects.html":{}}}],["loadarchivedcardfailure",{"_index":453,"title":{"classes/LoadArchivedCardFailure.html":{}},"body":{"classes/AddActionsAppear.html":{},"injectables/CardEffects.html":{},"classes/ClearCard.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/LoadArchivedCard.html":{},"classes/LoadArchivedCardFailure.html":{},"classes/LoadArchivedCardSuccess.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["loadarchivedcardfailure(err",{"_index":1944,"title":{},"body":{"injectables/CardEffects.html":{}}}],["loadarchivedcardsuccess",{"_index":452,"title":{"classes/LoadArchivedCardSuccess.html":{}},"body":{"classes/AddActionsAppear.html":{},"injectables/CardEffects.html":{},"classes/ClearCard.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/LoadArchivedCard.html":{},"classes/LoadArchivedCardFailure.html":{},"classes/LoadArchivedCardSuccess.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["loadarchivedcardsuccess({card",{"_index":1942,"title":{},"body":{"injectables/CardEffects.html":{}}}],["loadbyid",{"_index":1934,"title":{},"body":{"injectables/CardEffects.html":{}}}],["loadcard",{"_index":445,"title":{"classes/LoadCard.html":{}},"body":{"classes/AddActionsAppear.html":{},"injectables/CardEffects.html":{},"injectables/CardOperationEffects.html":{},"injectables/CardService.html":{},"classes/ClearCard.html":{},"injectables/CustomRouterEffects.html":{},"classes/HandleUnexpectedError-1.html":{},"injectables/LightCardEffects.html":{},"classes/LoadArchivedCard.html":{},"classes/LoadArchivedCardFailure.html":{},"classes/LoadArchivedCardSuccess.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["loadcard(id",{"_index":2095,"title":{},"body":{"injectables/CardService.html":{}}}],["loadcard({id",{"_index":2038,"title":{},"body":{"injectables/CardOperationEffects.html":{},"injectables/CustomRouterEffects.html":{}}}],["loadcardfailure",{"_index":448,"title":{"classes/LoadCardFailure.html":{}},"body":{"classes/AddActionsAppear.html":{},"injectables/CardEffects.html":{},"classes/ClearCard.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/LoadArchivedCard.html":{},"classes/LoadArchivedCardFailure.html":{},"classes/LoadArchivedCardSuccess.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["loadcardfailure(err",{"_index":1949,"title":{},"body":{"injectables/CardEffects.html":{}}}],["loadcardsuccess",{"_index":447,"title":{"classes/LoadCardSuccess.html":{}},"body":{"classes/AddActionsAppear.html":{},"injectables/CardEffects.html":{},"classes/ClearCard.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/LoadArchivedCard.html":{},"classes/LoadArchivedCardFailure.html":{},"classes/LoadArchivedCardSuccess.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["loadcardsuccess({card",{"_index":1948,"title":{},"body":{"injectables/CardEffects.html":{}}}],["loadchildren",{"_index":728,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["loadconfig",{"_index":591,"title":{"classes/LoadConfig.html":{}},"body":{"components/AppComponent.html":{},"injectables/ConfigEffects.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/LoadConfig.html":{},"classes/LoadConfigFailure.html":{},"classes/LoadConfigSuccess.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["loadconfigfailure",{"_index":2216,"title":{"classes/LoadConfigFailure.html":{}},"body":{"injectables/ConfigEffects.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/LoadConfig.html":{},"classes/LoadConfigFailure.html":{},"classes/LoadConfigSuccess.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["loadconfigfailure(err",{"_index":2206,"title":{},"body":{"injectables/ConfigEffects.html":{}}}],["loadconfigsuccess",{"_index":1541,"title":{"classes/LoadConfigSuccess.html":{}},"body":{"injectables/AuthenticationEffects.html":{},"injectables/ConfigEffects.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/LoadConfig.html":{},"classes/LoadConfigFailure.html":{},"classes/LoadConfigSuccess.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["loadconfigsuccess({config",{"_index":2205,"title":{},"body":{"injectables/ConfigEffects.html":{}}}],["loadconfigsuccess.payload.config.security.oauth2.flow.mode",{"_index":1543,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["loadconfiguration",{"_index":2197,"title":{},"body":{"injectables/ConfigEffects.html":{}}}],["loaded",{"_index":614,"title":{},"body":{"components/AppComponent.html":{},"interfaces/ConfigState.html":{},"components/CustomLogoComponent.html":{},"classes/RefreshTranslation.html":{},"modules/ServicesModule.html":{},"interfaces/SettingsState.html":{},"classes/TranslationUpToDate.html":{},"classes/UpdateTranslation.html":{},"classes/UpdateTranslationFailed.html":{},"classes/UpdateTranslationSuccessful.html":{},"miscellaneous/enumerations.html":{}}}],["loadedcardaction.payload.lightcards",{"_index":4657,"title":{},"body":{"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["loader",{"_index":4993,"title":{},"body":{"dependencies.html":{}}}],["loadfeedfilteronauthenticationsuccess",{"_index":2849,"title":{},"body":{"injectables/FeedFiltersEffects.html":{}}}],["loadi18nformenuentries",{"_index":4244,"title":{},"body":{"classes/ThirdsServiceMock.html":{}}}],["loadi18nformenuentries(){return",{"_index":4261,"title":{},"body":{"classes/ThirdsServiceMock.html":{}}}],["loading",{"_index":624,"title":{},"body":{"components/AppComponent.html":{},"interfaces/ArchiveState.html":{},"interfaces/CardFeedState.html":{},"interfaces/CardState.html":{},"interfaces/ConfigState.html":{},"interfaces/MenuState.html":{},"interfaces/SettingsState.html":{},"interfaces/TimelineState.html":{},"interfaces/TranslationState.html":{}}}],["loading:boolean",{"_index":4755,"title":{},"body":{"interfaces/TranslationState.html":{}}}],["loading:false",{"_index":4758,"title":{},"body":{"interfaces/TranslationState.html":{}}}],["loadlightcards",{"_index":485,"title":{"classes/LoadLightCards.html":{}},"body":{"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"classes/ClearLightCardSelection.html":{},"classes/DelayedLightCardUpdate.html":{},"classes/EmptyLightCards.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/LightCardAlreadyUpdated.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/RemoveLightCard.html":{},"classes/SelectLightCard.html":{},"classes/ThirdActionAlreadyLoaded.html":{},"classes/ThirdActionAlreadyUpdated.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateAnActionFailure.html":{},"classes/UpdatedSubscription.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["loadlightcardsextendeddata",{"_index":490,"title":{"classes/LoadLightCardsExtendedData.html":{}},"body":{"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"classes/ClearLightCardSelection.html":{},"classes/DelayedLightCardUpdate.html":{},"classes/EmptyLightCards.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/LightCardAlreadyUpdated.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/RemoveLightCard.html":{},"classes/SelectLightCard.html":{},"classes/ThirdActionAlreadyLoaded.html":{},"classes/ThirdActionAlreadyUpdated.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateAnActionFailure.html":{},"classes/UpdatedSubscription.html":{},"miscellaneous/enumerations.html":{}}}],["loadlightcardsfailure",{"_index":493,"title":{"classes/LoadLightCardsFailure.html":{}},"body":{"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"classes/ClearLightCardSelection.html":{},"classes/DelayedLightCardUpdate.html":{},"classes/EmptyLightCards.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/LightCardAlreadyUpdated.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/RemoveLightCard.html":{},"classes/SelectLightCard.html":{},"classes/ThirdActionAlreadyLoaded.html":{},"classes/ThirdActionAlreadyUpdated.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateAnActionFailure.html":{},"classes/UpdatedSubscription.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["loadlightcardssuccess",{"_index":489,"title":{"classes/LoadLightCardsSuccess.html":{}},"body":{"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"injectables/CardOperationEffects.html":{},"classes/ClearLightCardSelection.html":{},"classes/DelayedLightCardUpdate.html":{},"classes/EmptyLightCards.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/LightCardAlreadyUpdated.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/RemoveLightCard.html":{},"classes/SelectLightCard.html":{},"classes/ThirdActionAlreadyLoaded.html":{},"classes/ThirdActionAlreadyUpdated.html":{},"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateAnActionFailure.html":{},"classes/UpdatedSubscription.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["loadlightcardssuccess({lightcards",{"_index":2050,"title":{},"body":{"injectables/CardOperationEffects.html":{}}}],["loadmenu",{"_index":3083,"title":{"classes/LoadMenu.html":{}},"body":{"classes/HandleUnexpectedError-4.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"injectables/MenuEffects.html":{},"components/NavbarComponent.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["loadmenufailure",{"_index":3085,"title":{"classes/LoadMenuFailure.html":{}},"body":{"classes/HandleUnexpectedError-4.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"injectables/MenuEffects.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["loadmenufailure(err",{"_index":3592,"title":{},"body":{"injectables/MenuEffects.html":{}}}],["loadmenusuccess",{"_index":3084,"title":{"classes/LoadMenuSuccess.html":{}},"body":{"classes/HandleUnexpectedError-4.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"injectables/MenuEffects.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{},"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["loadmenusuccess({menu",{"_index":3591,"title":{},"body":{"injectables/MenuEffects.html":{}}}],["loads",{"_index":2042,"title":{},"body":{"injectables/CardOperationEffects.html":{},"injectables/FeedFiltersEffects.html":{}}}],["loadsettings",{"_index":3107,"title":{"classes/LoadSettings.html":{}},"body":{"classes/HandleUnexpectedError-5.html":{},"classes/LoadSettings.html":{},"classes/LoadSettingsFailure.html":{},"classes/LoadSettingsSuccess.html":{},"classes/PatchSettings.html":{},"classes/PatchSettingsFailure.html":{},"classes/PatchSettingsSuccess.html":{},"injectables/SettingsEffects.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["loadsettingsfailure",{"_index":3108,"title":{"classes/LoadSettingsFailure.html":{}},"body":{"classes/HandleUnexpectedError-5.html":{},"classes/LoadSettings.html":{},"classes/LoadSettingsFailure.html":{},"classes/LoadSettingsSuccess.html":{},"classes/PatchSettings.html":{},"classes/PatchSettingsFailure.html":{},"classes/PatchSettingsSuccess.html":{},"injectables/SettingsEffects.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["loadsettingsfailure(err",{"_index":3926,"title":{},"body":{"injectables/SettingsEffects.html":{}}}],["loadsettingsonlogin",{"_index":3920,"title":{},"body":{"injectables/SettingsEffects.html":{}}}],["loadsettingssuccess",{"_index":2900,"title":{"classes/LoadSettingsSuccess.html":{}},"body":{"injectables/FeedFiltersEffects.html":{},"classes/HandleUnexpectedError-5.html":{},"classes/LoadSettings.html":{},"classes/LoadSettingsFailure.html":{},"classes/LoadSettingsSuccess.html":{},"classes/PatchSettings.html":{},"classes/PatchSettingsFailure.html":{},"classes/PatchSettingsSuccess.html":{},"injectables/SettingsEffects.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["loadsettingssuccess({settings",{"_index":3925,"title":{},"body":{"injectables/SettingsEffects.html":{}}}],["loaduserdata(auth",{"_index":1284,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["local",{"_index":2610,"title":{},"body":{"components/DetailComponent.html":{}}}],["locale",{"_index":3147,"title":{},"body":{"injectables/HandlebarsService.html":{},"injectables/I18nService.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["locales",{"_index":198,"title":{},"body":{"classes/Action.html":{},"classes/ActionStatus.html":{},"classes/Input.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"components/SettingsComponent.html":{},"interfaces/SettingsInputs.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["locales.map(locale",{"_index":4637,"title":{},"body":{"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["localestorage",{"_index":1299,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["localstorage",{"_index":1294,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["localstorage.clear",{"_index":1313,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["localstorage.getitem(localstorageauthcontent.expirationdate",{"_index":1304,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["localstorage.getitem(localstorageauthcontent.identifier",{"_index":1331,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["localstorage.getitem(localstorageauthcontent.token",{"_index":1333,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["localstorage.setitem(localstorageauthcontent.clientid",{"_index":1326,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["localstorage.setitem(localstorageauthcontent.expirationdate",{"_index":1324,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["localstorage.setitem(localstorageauthcontent.identifier",{"_index":1320,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["localstorage.setitem(localstorageauthcontent.token",{"_index":1322,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["localstorageauthcontent",{"_index":1156,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"miscellaneous/enumerations.html":{}}}],["location.href",{"_index":604,"title":{},"body":{"components/AppComponent.html":{}}}],["location.origin",{"_index":1387,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["location.pathname",{"_index":1390,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["location.pathname.length",{"_index":1389,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["locationstrategy",{"_index":667,"title":{},"body":{"modules/AppModule.html":{}}}],["lockaction",{"_index":178,"title":{},"body":{"classes/Action.html":{},"classes/ActionStatus.html":{},"classes/Input.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{}}}],["lockcard",{"_index":179,"title":{},"body":{"classes/Action.html":{},"classes/ActionStatus.html":{},"classes/Input.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{}}}],["lodash",{"_index":228,"title":{},"body":{"classes/Action.html":{},"classes/ActionStatus.html":{},"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"components/BaseSettingComponent.html":{},"classes/CheckTokenResponse.html":{},"injectables/FilterService.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/Input.html":{},"injectables/LightCardEffects.html":{},"components/NavbarComponent.html":{},"classes/ParameterListItem.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"classes/Process.html":{},"classes/State.html":{},"components/TagsFilterComponent.html":{},"classes/Third.html":{},"injectables/ThirdActionService.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{},"components/TypeFilterComponent.html":{},"dependencies.html":{}}}],["log",{"_index":70,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckImplicitFlowAuthenticationStatus.html":{},"classes/ImplicitlyAuthenticated.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"classes/UnAuthenticationFromImplicitFlow.html":{},"classes/UselessAuthAction.html":{},"miscellaneous/enumerations.html":{}}}],["login",{"_index":125,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/AuthObject.html":{},"injectables/AuthenticationEffects.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckImplicitFlowAuthenticationStatus.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/ImplicitlyAuthenticated.html":{},"classes/InitAuthStatus.html":{},"components/LoginComponent.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"classes/UnAuthenticationFromImplicitFlow.html":{},"classes/UselessAuthAction.html":{},"classes/User.html":{},"classes/UserContext.html":{}}}],["login'},{'name",{"_index":402,"title":{},"body":{"components/ActionComponent.html":{},"components/AppComponent.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/ConfirmModalComponent.html":{},"components/CustomLogoComponent.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MenuLinkComponent.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/ResizableComponent.html":{},"components/SettingsComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{}}}],["login.component.html",{"_index":3539,"title":{},"body":{"components/LoginComponent.html":{}}}],["login.error.${category",{"_index":1590,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["login.error.unavailable",{"_index":1594,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["login.error.unexpected",{"_index":1595,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["login.login",{"_index":3575,"title":{},"body":{"components/LoginComponent.html":{}}}],["login.password",{"_index":3576,"title":{},"body":{"components/LoginComponent.html":{}}}],["login.reset",{"_index":3578,"title":{},"body":{"components/LoginComponent.html":{}}}],["login.submit.code",{"_index":3579,"title":{},"body":{"components/LoginComponent.html":{}}}],["login.submit.password",{"_index":3577,"title":{},"body":{"components/LoginComponent.html":{}}}],["login/password",{"_index":118,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckImplicitFlowAuthenticationStatus.html":{},"classes/ImplicitlyAuthenticated.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"classes/UnAuthenticationFromImplicitFlow.html":{},"classes/UselessAuthAction.html":{}}}],["login:id",{"_index":1690,"title":{},"body":{"components/BaseSettingComponent.html":{}}}],["login:string",{"_index":4847,"title":{},"body":{"classes/User.html":{},"classes/UserContext.html":{}}}],["loginclaim",{"_index":1167,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["logincomponent",{"_index":121,"title":{"components/LoginComponent.html":{}},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"components/ActionComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckImplicitFlowAuthenticationStatus.html":{},"components/ConfirmModalComponent.html":{},"components/CustomLogoComponent.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"classes/ImplicitlyAuthenticated.html":{},"components/InfoComponent.html":{},"classes/InitAuthStatus.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MenuLinkComponent.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"components/ResizableComponent.html":{},"components/SettingsComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"classes/UnAuthenticationFromImplicitFlow.html":{},"classes/UselessAuthAction.html":{},"index.html":{}}}],["loginmessage",{"_index":3542,"title":{},"body":{"components/LoginComponent.html":{}}}],["loginmessage.i18n.key|translate:loginmessage.i18n.parameters",{"_index":3580,"title":{},"body":{"components/LoginComponent.html":{}}}],["logo",{"_index":2285,"title":{},"body":{"components/CustomLogoComponent.html":{}}}],["logo'},{'name",{"_index":379,"title":{},"body":{"components/ActionComponent.html":{},"components/AppComponent.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/ConfirmModalComponent.html":{},"components/CustomLogoComponent.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MenuLinkComponent.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/ResizableComponent.html":{},"components/SettingsComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{}}}],["logo.component",{"_index":704,"title":{},"body":{"modules/AppModule.html":{}}}],["logo.component.css",{"_index":2286,"title":{},"body":{"components/CustomLogoComponent.html":{}}}],["logo.component.html",{"_index":2287,"title":{},"body":{"components/CustomLogoComponent.html":{}}}],["logo.component.ts",{"_index":2284,"title":{},"body":{"components/CustomLogoComponent.html":{}}}],["logo.component.ts:18",{"_index":2300,"title":{},"body":{"components/CustomLogoComponent.html":{}}}],["logo.component.ts:20",{"_index":2302,"title":{},"body":{"components/CustomLogoComponent.html":{}}}],["logo.component.ts:21",{"_index":2301,"title":{},"body":{"components/CustomLogoComponent.html":{}}}],["logo.component.ts:22",{"_index":2303,"title":{},"body":{"components/CustomLogoComponent.html":{}}}],["logo.component.ts:24",{"_index":2308,"title":{},"body":{"components/CustomLogoComponent.html":{}}}],["logo.component.ts:25",{"_index":2309,"title":{},"body":{"components/CustomLogoComponent.html":{}}}],["logo.component.ts:27",{"_index":2311,"title":{},"body":{"components/CustomLogoComponent.html":{}}}],["logo.component.ts:28",{"_index":2299,"title":{},"body":{"components/CustomLogoComponent.html":{}}}],["logo.component.ts:30",{"_index":2310,"title":{},"body":{"components/CustomLogoComponent.html":{}}}],["logo.component.ts:38",{"_index":2306,"title":{},"body":{"components/CustomLogoComponent.html":{}}}],["logo.component.ts:53",{"_index":2307,"title":{},"body":{"components/CustomLogoComponent.html":{}}}],["logo.component.ts:63",{"_index":2304,"title":{},"body":{"components/CustomLogoComponent.html":{}}}],["logo/custom",{"_index":703,"title":{},"body":{"modules/AppModule.html":{},"components/CustomLogoComponent.html":{}}}],["logout",{"_index":131,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"injectables/AuthenticationEffects.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckImplicitFlowAuthenticationStatus.html":{},"classes/ImplicitlyAuthenticated.html":{},"classes/InitAuthStatus.html":{},"components/NavbarComponent.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"classes/UnAuthenticationFromImplicitFlow.html":{},"classes/UselessAuthAction.html":{}}}],["longtext",{"_index":269,"title":{},"body":{"classes/Action.html":{},"classes/ActionStatus.html":{},"classes/Input.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"miscellaneous/enumerations.html":{}}}],["loop",{"_index":4675,"title":{},"body":{"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["lttd",{"_index":1796,"title":{},"body":{"classes/Card.html":{},"components/CardComponent.html":{},"classes/Detail.html":{},"classes/LightCard.html":{},"classes/TimeSpan.html":{}}}],["lvalue",{"_index":3230,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["m",{"_index":3242,"title":{},"body":{"injectables/HandlebarsService.html":{},"components/LoginComponent.html":{},"components/TimeLineComponent.html":{}}}],["m.format(options.hash.format",{"_index":3246,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["m.level",{"_index":3560,"title":{},"body":{"components/LoginComponent.html":{}}}],["m.locale(this._locale",{"_index":3245,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["mainrecipient",{"_index":1794,"title":{},"body":{"classes/Card.html":{},"classes/Detail.html":{},"classes/LightCard.html":{},"classes/TimeSpan.html":{}}}],["make",{"_index":3846,"title":{},"body":{"components/ResizableComponent.html":{}}}],["makes",{"_index":1758,"title":{},"body":{"directives/CalcHeightDirective.html":{}}}],["manage",{"_index":738,"title":{},"body":{"modules/AppRoutingModule.html":{},"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["managed",{"_index":4288,"title":{},"body":{"injectables/TimeEffects.html":{}}}],["management",{"_index":92,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"injectables/AuthenticationEffects.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckImplicitFlowAuthenticationStatus.html":{},"classes/ImplicitlyAuthenticated.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"classes/UnAuthenticationFromImplicitFlow.html":{},"classes/UselessAuthAction.html":{}}}],["manager",{"_index":1475,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["manages",{"_index":2208,"title":{},"body":{"injectables/ConfigEffects.html":{},"injectables/SettingsEffects.html":{}}}],["managment",{"_index":97,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckImplicitFlowAuthenticationStatus.html":{},"classes/ImplicitlyAuthenticated.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"classes/UnAuthenticationFromImplicitFlow.html":{},"classes/UselessAuthAction.html":{},"miscellaneous/enumerations.html":{}}}],["mandatory",{"_index":271,"title":{},"body":{"classes/Action.html":{},"classes/ActionStatus.html":{},"classes/Input.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{}}}],["map",{"_index":190,"title":{"classes/Map.html":{}},"body":{"classes/Action.html":{},"classes/ActionStatus.html":{},"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"classes/ApplyFilter.html":{},"injectables/ArchiveEffects.html":{},"components/ArchiveFiltersComponent.html":{},"classes/ArchiveQuerySuccess.html":{},"interfaces/ArchiveState.html":{},"components/ArchivesComponent.html":{},"classes/AuthObject.html":{},"injectables/AuthenticationEffects.html":{},"interfaces/AuthenticationModeHandler.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"injectables/CardEffects.html":{},"interfaces/CardFeedState.html":{},"injectables/CardOperationEffects.html":{},"injectables/CardService.html":{},"classes/CheckTokenResponse.html":{},"classes/ClearLightCardSelection.html":{},"injectables/ConfigEffects.html":{},"injectables/CustomRouterEffects.html":{},"classes/DelayedLightCardUpdate.html":{},"classes/EmptyLightCards.html":{},"injectables/FeedFiltersEffects.html":{},"injectables/FilterService.html":{},"classes/HandleUnexpectedError.html":{},"classes/HandleUnexpectedError-3.html":{},"injectables/HandlebarsService.html":{},"classes/I18n.html":{},"classes/ImplicitAuthenticationHandler.html":{},"components/InfoComponent.html":{},"classes/InitFilters.html":{},"classes/Input.html":{},"classes/LightCard.html":{},"classes/LightCardAlreadyUpdated.html":{},"injectables/LightCardEffects.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"components/LoginComponent.html":{},"classes/Map.html":{},"injectables/MenuEffects.html":{},"classes/ParameterListItem.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"classes/Process.html":{},"classes/RefreshTranslation.html":{},"classes/RemoveLightCard.html":{},"classes/SelectArchivedLightCard.html":{},"classes/SelectLightCard.html":{},"classes/SendArchiveQuery.html":{},"injectables/SettingsEffects.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdActionAlreadyLoaded.html":{},"classes/ThirdActionAlreadyUpdated.html":{},"injectables/ThirdActionService.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"injectables/TimeEffects.html":{},"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{},"interfaces/TranslationState.html":{},"classes/TranslationUpToDate.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateAnActionFailure.html":{},"classes/UpdateArchiveFilter.html":{},"classes/UpdateArchivePage.html":{},"classes/UpdateTranslation.html":{},"classes/UpdateTranslationFailed.html":{},"classes/UpdateTranslationSuccessful.html":{},"classes/UpdatedSubscription.html":{},"injectables/UserEffects.html":{}}}],["map(([action",{"_index":916,"title":{},"body":{"injectables/ArchiveEffects.html":{}}}],["map(([action,configtags",{"_index":2860,"title":{},"body":{"injectables/FeedFiltersEffects.html":{}}}],["map(([elapsedsincelast",{"_index":2898,"title":{},"body":{"injectables/FeedFiltersEffects.html":{}}}],["map(([haschanged",{"_index":4081,"title":{},"body":{"injectables/ThirdActionService.html":{}}}],["map((a",{"_index":2029,"title":{},"body":{"injectables/CardOperationEffects.html":{}}}],["map((action",{"_index":2874,"title":{},"body":{"injectables/FeedFiltersEffects.html":{},"injectables/LightCardEffects.html":{},"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{},"injectables/UserEffects.html":{}}}],["map((auth",{"_index":1279,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["map((card",{"_index":1941,"title":{},"body":{"injectables/CardEffects.html":{},"injectables/LightCardEffects.html":{}}}],["map((cards",{"_index":4659,"title":{},"body":{"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["map((config",{"_index":2204,"title":{},"body":{"injectables/ConfigEffects.html":{}}}],["map((loadconfigsuccess",{"_index":1540,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["map((loadedcardaction",{"_index":4656,"title":{},"body":{"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["map((loadedmenusaction:loadmenusuccess)=>loadedmenusaction.payload.menu",{"_index":4681,"title":{},"body":{"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["map((menus:thirdmenu[])=>translateeffects.extractpublisherassociatedwithdistinctversionsfrom(menus",{"_index":4682,"title":{},"body":{"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["map((publisherandversion",{"_index":4664,"title":{},"body":{"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["map((publisherandversions:map>)=>translateeffects.sendtranslateaction(publisherandversions",{"_index":4684,"title":{},"body":{"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["map((referencedtranslation",{"_index":4668,"title":{},"body":{"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["map((resultpage",{"_index":907,"title":{},"body":{"injectables/ArchiveEffects.html":{}}}],["map((settings",{"_index":3924,"title":{},"body":{"injectables/SettingsEffects.html":{}}}],["map((storedcard",{"_index":3427,"title":{},"body":{"injectables/LightCardEffects.html":{}}}],["map((user",{"_index":4865,"title":{},"body":{"injectables/UserEffects.html":{}}}],["map(a=>new",{"_index":3928,"title":{},"body":{"injectables/SettingsEffects.html":{}}}],["map(auth",{"_index":1520,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["map(authenticationinfo",{"_index":1508,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["map(check",{"_index":1248,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["map(currentstatus",{"_index":4072,"title":{},"body":{"injectables/ThirdActionService.html":{}}}],["map(currentuser",{"_index":4880,"title":{},"body":{"injectables/UserEffects.html":{}}}],["map(data",{"_index":1277,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["map(elem",{"_index":4629,"title":{},"body":{"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["map(id=>{return",{"_index":1689,"title":{},"body":{"components/BaseSettingComponent.html":{}}}],["map(isinthefuture",{"_index":1452,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["map(lightcard",{"_index":2037,"title":{},"body":{"injectables/CardOperationEffects.html":{}}}],["map(menu",{"_index":3590,"title":{},"body":{"injectables/MenuEffects.html":{}}}],["map(menuentry",{"_index":4160,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["map(object.entries(obj",{"_index":4213,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["map(operation",{"_index":2047,"title":{},"body":{"injectables/CardOperationEffects.html":{}}}],["map(params",{"_index":906,"title":{},"body":{"injectables/ArchiveEffects.html":{}}}],["map(s=>handlebars.compile(s",{"_index":3209,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["map(settings",{"_index":3932,"title":{},"body":{"injectables/SettingsEffects.html":{}}}],["map(t",{"_index":4198,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["map(t=>t(context",{"_index":3200,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["map(this.convertjsontoi18nobject(locale",{"_index":4189,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["map(timeref",{"_index":4280,"title":{},"body":{"injectables/TimeEffects.html":{}}}],["map(u",{"_index":1287,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["map(url",{"_index":3598,"title":{},"body":{"injectables/MenuEffects.html":{}}}],["map(v=>new",{"_index":2870,"title":{},"body":{"injectables/FeedFiltersEffects.html":{}}}],["map(values",{"_index":3382,"title":{},"body":{"components/InfoComponent.html":{}}}],["map(x",{"_index":1771,"title":{},"body":{"directives/CalcHeightDirective.html":{}}}],["map>)=>this.extracti18ntoupdate(versions",{"_index":4683,"title":{},"body":{"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["maplanguages",{"_index":4733,"title":{},"body":{"injectables/TranslateEffects.html":{}}}],["maplanguages(thirdsandversions",{"_index":4635,"title":{},"body":{"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["mapped",{"_index":2866,"title":{},"body":{"injectables/FeedFiltersEffects.html":{}}}],["mapthirds",{"_index":4734,"title":{},"body":{"injectables/TranslateEffects.html":{}}}],["mapthirds(locale",{"_index":4641,"title":{},"body":{"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["mapversions",{"_index":4735,"title":{},"body":{"injectables/TranslateEffects.html":{}}}],["mapversions(locale",{"_index":4647,"title":{},"body":{"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["margin",{"_index":628,"title":{},"body":{"components/AppComponent.html":{},"components/ArchiveFiltersComponent.html":{},"components/CardComponent.html":{},"components/DatetimeFilterComponent.html":{},"components/LoginComponent.html":{},"components/TypeFilterComponent.html":{}}}],["matching",{"_index":163,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/Action.html":{},"components/ActionComponent.html":{},"classes/ActionStatus.html":{},"classes/AddActionsAppear.html":{},"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interfaces/AppState.html":{},"classes/ApplyFilter.html":{},"injectables/ArchiveEffects.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"classes/ArchiveQuerySuccess.html":{},"interfaces/ArchiveState.html":{},"components/ArchivesComponent.html":{},"modules/ArchivesModule.html":{},"modules/ArchivesRoutingModule.html":{},"classes/AuthObject.html":{},"interfaces/AuthState.html":{},"injectables/AuthenticationEffects.html":{},"interfaces/AuthenticationModeHandler.html":{},"components/BaseSettingComponent.html":{},"directives/CalcHeightDirective.html":{},"classes/Card.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"injectables/CardEffects.html":{},"interfaces/CardFeedState.html":{},"components/CardListComponent.html":{},"classes/CardOperation.html":{},"injectables/CardOperationEffects.html":{},"injectables/CardService.html":{},"interfaces/CardState.html":{},"modules/CardsModule.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckImplicitFlowAuthenticationStatus.html":{},"classes/CheckTokenResponse.html":{},"classes/ClearCard.html":{},"classes/ClearLightCardSelection.html":{},"injectables/ConfigEffects.html":{},"injectables/ConfigService.html":{},"interfaces/ConfigState.html":{},"components/ConfirmModalComponent.html":{},"classes/CreateUserApplication.html":{},"classes/CreateUserApplicationOnFailure.html":{},"classes/CreateUserApplicationOnSuccess.html":{},"components/CustomLogoComponent.html":{},"injectables/CustomRouterEffects.html":{},"classes/CustomRouterStateSerializer.html":{},"classes/DateTimeNgb.html":{},"components/DatetimeFilterComponent.html":{},"classes/DelayedLightCardUpdate.html":{},"classes/Detail.html":{},"components/DetailComponent.html":{},"classes/DetailContext.html":{},"components/DetailsComponent.html":{},"directives/DraggableDirective.html":{},"components/EmailSettingComponent.html":{},"classes/EmptyLightCards.html":{},"classes/FailToUpdateTimeReference.html":{},"components/FeedComponent.html":{},"injectables/FeedFiltersEffects.html":{},"modules/FeedModule.html":{},"modules/FeedRoutingModule.html":{},"classes/Filter.html":{},"injectables/FilterService.html":{},"components/FiltersComponent.html":{},"classes/GuidService.html":{},"classes/HandleUnexpectedError.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/HandleUnexpectedError-4.html":{},"classes/HandleUnexpectedError-5.html":{},"classes/HandleUnexpectedError-6.html":{},"injectables/HandlebarsService.html":{},"classes/I18n.html":{},"injectables/I18nService.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/ImplicitlyAuthenticated.html":{},"components/InfoComponent.html":{},"classes/InitAuthStatus.html":{},"classes/InitFilters.html":{},"classes/InitTimeline.html":{},"classes/Input.html":{},"classes/LightCard.html":{},"classes/LightCardAlreadyUpdated.html":{},"injectables/LightCardEffects.html":{},"components/ListSettingComponent.html":{},"classes/LoadArchivedCard.html":{},"classes/LoadArchivedCardFailure.html":{},"classes/LoadArchivedCardSuccess.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{},"classes/LoadConfig.html":{},"classes/LoadConfigFailure.html":{},"classes/LoadConfigSuccess.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/LoadSettings.html":{},"classes/LoadSettingsFailure.html":{},"classes/LoadSettingsSuccess.html":{},"components/LoginComponent.html":{},"classes/Map.html":{},"injectables/MenuEffects.html":{},"components/MenuLinkComponent.html":{},"interfaces/MenuState.html":{},"classes/Message.html":{},"directives/MouseWheelDirective.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"injectables/NotifyService.html":{},"classes/Page.html":{},"classes/ParameterListItem.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"classes/PatchSettings.html":{},"classes/PatchSettingsFailure.html":{},"classes/PatchSettingsSuccess.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/Process.html":{},"classes/RefreshTranslation.html":{},"classes/RejectLogIn.html":{},"classes/RemoveLightCard.html":{},"components/ResizableComponent.html":{},"classes/RouterStateUrl.html":{},"classes/SelectArchivedLightCard.html":{},"classes/SelectLightCard.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{},"classes/SendArchiveQuery.html":{},"modules/ServicesModule.html":{},"classes/SetCardDataTimeline.html":{},"components/SettingsComponent.html":{},"injectables/SettingsEffects.html":{},"interfaces/SettingsInputs.html":{},"modules/SettingsModule.html":{},"modules/SettingsRoutingModule.html":{},"injectables/SettingsService.html":{},"interfaces/SettingsState.html":{},"classes/State.html":{},"modules/StateModule.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"classes/Third.html":{},"classes/ThirdActionAlreadyLoaded.html":{},"classes/ThirdActionAlreadyUpdated.html":{},"injectables/ThirdActionService.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"modules/ThirdpartyModule.html":{},"modules/ThirdpartyRoutingModule.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"classes/ThirdsServiceMock.html":{},"classes/Tick.html":{},"classes/TickPayload.html":{},"injectables/TimeEffects.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"classes/TimeReference.html":{},"classes/TimeSpan.html":{},"interfaces/TimeState.html":{},"interfaces/TimelineState.html":{},"interceptors/TokenInjector.html":{},"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{},"interfaces/TranslationState.html":{},"classes/TranslationUpToDate.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"classes/UnAuthenticationFromImplicitFlow.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateAnActionFailure.html":{},"classes/UpdateArchiveFilter.html":{},"classes/UpdateArchivePage.html":{},"classes/UpdateTimeReference.html":{},"classes/UpdateTranslation.html":{},"classes/UpdateTranslationFailed.html":{},"classes/UpdateTranslationSuccessful.html":{},"classes/UpdatedSubscription.html":{},"classes/UselessAuthAction.html":{},"classes/User.html":{},"classes/UserApplicationNotRegistered.html":{},"classes/UserApplicationRegistered.html":{},"classes/UserContext.html":{},"injectables/UserEffects.html":{},"injectables/UserService.html":{},"interfaces/UserState.html":{},"modules/UtilitiesModule.html":{},"pipes/XAxisTickFormatPipe.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"modules.html":{},"routes.html":{},"miscellaneous/typealiases.html":{}}}],["materials",{"_index":3825,"title":{},"body":{"classes/RefreshTranslation.html":{},"classes/TranslationUpToDate.html":{},"classes/UpdateTranslation.html":{},"classes/UpdateTranslationFailed.html":{},"classes/UpdateTranslationSuccessful.html":{},"miscellaneous/enumerations.html":{}}}],["math.max",{"_index":3674,"title":{},"body":{"directives/MouseWheelDirective.html":{}}}],["math.min(1",{"_index":3675,"title":{},"body":{"directives/MouseWheelDirective.html":{}}}],["max",{"_index":1887,"title":{},"body":{"components/CardComponent.html":{}}}],["max_height",{"_index":2291,"title":{},"body":{"components/CustomLogoComponent.html":{}}}],["max_width",{"_index":2292,"title":{},"body":{"components/CustomLogoComponent.html":{}}}],["maxedretries",{"_index":553,"title":{},"body":{"components/AppComponent.html":{}}}],["maxlength",{"_index":272,"title":{},"body":{"classes/Action.html":{},"classes/ActionStatus.html":{},"classes/Input.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{}}}],["maxsize]=\"3",{"_index":1060,"title":{},"body":{"components/ArchiveListPageComponent.html":{}}}],["means",{"_index":4299,"title":{},"body":{"components/TimeFilterComponent.html":{}}}],["medium",{"_index":3324,"title":{},"body":{"components/IconComponent.html":{}}}],["member",{"_index":152,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"injectables/AuthenticationEffects.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckImplicitFlowAuthenticationStatus.html":{},"classes/HandleUnexpectedError-4.html":{},"classes/ImplicitlyAuthenticated.html":{},"classes/InitAuthStatus.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"classes/UnAuthenticationFromImplicitFlow.html":{},"classes/UselessAuthAction.html":{}}}],["members",{"_index":18,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckImplicitFlowAuthenticationStatus.html":{},"classes/ImplicitlyAuthenticated.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"classes/UnAuthenticationFromImplicitFlow.html":{},"classes/UselessAuthAction.html":{}}}],["menu",{"_index":404,"title":{},"body":{"components/ActionComponent.html":{},"components/AppComponent.html":{},"interfaces/AppState.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/ConfirmModalComponent.html":{},"components/CustomLogoComponent.html":{},"injectables/CustomRouterEffects.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"classes/HandleUnexpectedError-4.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"components/LoginComponent.html":{},"injectables/MenuEffects.html":{},"components/MenuLinkComponent.html":{},"interfaces/MenuState.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/ResizableComponent.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{},"components/SettingsComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"miscellaneous/enumerations.html":{}}}],["menu.'+link.path",{"_index":3755,"title":{},"body":{"components/NavbarComponent.html":{}}}],["menu.\\'+link.path",{"_index":3763,"title":{},"body":{"components/NavbarComponent.html":{}}}],["menu.id}}.{{menu.version}}.{{menuentry.label",{"_index":3628,"title":{},"body":{"components/MenuLinkComponent.html":{}}}],["menu.logout",{"_index":3764,"title":{},"body":{"components/NavbarComponent.html":{}}}],["menu.logout&nbsp",{"_index":3762,"title":{},"body":{"components/NavbarComponent.html":{}}}],["menu.settings",{"_index":3761,"title":{},"body":{"components/NavbarComponent.html":{}}}],["menu_entry_id",{"_index":3096,"title":{},"body":{"classes/HandleUnexpectedError-4.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{}}}],["menu_id",{"_index":3095,"title":{},"body":{"classes/HandleUnexpectedError-4.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{}}}],["menu_id/:menu_version/:menu_entry_id",{"_index":4114,"title":{},"body":{"modules/ThirdpartyRoutingModule.html":{}}}],["menu_version",{"_index":2362,"title":{},"body":{"injectables/CustomRouterEffects.html":{},"classes/HandleUnexpectedError-4.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{}}}],["menuactions",{"_index":3102,"title":{},"body":{"classes/HandleUnexpectedError-4.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{},"miscellaneous/typealiases.html":{}}}],["menuactiontypes",{"_index":3082,"title":{},"body":{"classes/HandleUnexpectedError-4.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"injectables/MenuEffects.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{},"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{},"miscellaneous/enumerations.html":{}}}],["menuactiontypes.handleunexpectederror",{"_index":3081,"title":{},"body":{"classes/HandleUnexpectedError-4.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{}}}],["menuactiontypes.loadmenu",{"_index":3088,"title":{},"body":{"classes/HandleUnexpectedError-4.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{}}}],["menuactiontypes.loadmenufailure",{"_index":3089,"title":{},"body":{"classes/HandleUnexpectedError-4.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{}}}],["menuactiontypes.loadmenusuccess",{"_index":3090,"title":{},"body":{"classes/HandleUnexpectedError-4.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{}}}],["menuactiontypes.selectmenulink",{"_index":3094,"title":{},"body":{"classes/HandleUnexpectedError-4.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"injectables/MenuEffects.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{}}}],["menuactiontypes.selectmenulinkfailure",{"_index":3101,"title":{},"body":{"classes/HandleUnexpectedError-4.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{}}}],["menuactiontypes.selectmenulinksuccess",{"_index":3098,"title":{},"body":{"classes/HandleUnexpectedError-4.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{}}}],["menueffects",{"_index":837,"title":{"injectables/MenuEffects.html":{}},"body":{"interfaces/AppState.html":{},"injectables/MenuEffects.html":{}}}],["menuentries",{"_index":199,"title":{},"body":{"classes/Action.html":{},"classes/ActionStatus.html":{},"classes/Input.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{}}}],["menuentry",{"_index":3611,"title":{},"body":{"components/MenuLinkComponent.html":{}}}],["menuentry.url",{"_index":4161,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["menuinitialstate",{"_index":3636,"title":{},"body":{"interfaces/MenuState.html":{}}}],["menulinkcomponent",{"_index":403,"title":{"components/MenuLinkComponent.html":{}},"body":{"components/ActionComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/ConfirmModalComponent.html":{},"components/CustomLogoComponent.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MenuLinkComponent.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/ResizableComponent.html":{},"components/SettingsComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"index.html":{}}}],["menureducer",{"_index":825,"title":{},"body":{"interfaces/AppState.html":{}}}],["menus",{"_index":4204,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"injectables/TranslateEffects.html":{}}}],["menus.map(menu",{"_index":4687,"title":{},"body":{"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["menus.push(menu",{"_index":4203,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["menusopeninboth",{"_index":3608,"title":{},"body":{"components/MenuLinkComponent.html":{}}}],["menusopeniniframes",{"_index":3609,"title":{},"body":{"components/MenuLinkComponent.html":{}}}],["menusopenintabs",{"_index":3610,"title":{},"body":{"components/MenuLinkComponent.html":{}}}],["menustate",{"_index":787,"title":{"interfaces/MenuState.html":{}},"body":{"interfaces/AppState.html":{},"interfaces/MenuState.html":{}}}],["merge",{"_index":89,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckImplicitFlowAuthenticationStatus.html":{},"classes/ImplicitlyAuthenticated.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"classes/UnAuthenticationFromImplicitFlow.html":{},"classes/UselessAuthAction.html":{}}}],["mergemap",{"_index":4618,"title":{},"body":{"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["mergemap((action",{"_index":4624,"title":{},"body":{"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["message",{"_index":55,"title":{"classes/Message.html":{}},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/AuthObject.html":{},"interfaces/AuthState.html":{},"injectables/AuthenticationEffects.html":{},"interfaces/AuthenticationModeHandler.html":{},"interfaces/CardFeedState.html":{},"injectables/CardService.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckImplicitFlowAuthenticationStatus.html":{},"classes/CheckTokenResponse.html":{},"injectables/ConfigEffects.html":{},"components/DatetimeFilterComponent.html":{},"classes/FailToUpdateTimeReference.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/ImplicitlyAuthenticated.html":{},"classes/InitAuthStatus.html":{},"components/LoginComponent.html":{},"classes/Message.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/Tick.html":{},"classes/TickPayload.html":{},"injectables/TimeEffects.html":{},"interfaces/TimeState.html":{},"interfaces/TimelineState.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"classes/UnAuthenticationFromImplicitFlow.html":{},"classes/UpdateTimeReference.html":{},"classes/UselessAuthAction.html":{}}}],["message('the",{"_index":1513,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["message(err",{"_index":1529,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["message(message",{"_index":1600,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["messagelevel",{"_index":1580,"title":{},"body":{"injectables/AuthenticationEffects.html":{},"components/LoginComponent.html":{},"classes/Message.html":{},"injectables/TimeEffects.html":{},"miscellaneous/enumerations.html":{}}}],["messagelevel.debug",{"_index":3642,"title":{},"body":{"classes/Message.html":{}}}],["messagelevel.error",{"_index":1514,"title":{},"body":{"injectables/AuthenticationEffects.html":{},"components/LoginComponent.html":{},"injectables/TimeEffects.html":{}}}],["messageplaceholder",{"_index":1632,"title":{},"body":{"components/BaseSettingComponent.html":{},"components/EmailSettingComponent.html":{},"components/ListSettingComponent.html":{},"components/MultiSettingsComponent.html":{},"components/TextSettingComponent.html":{},"components/TypeAheadSettingsComponent.html":{}}}],["metadata",{"_index":288,"title":{},"body":{"components/ActionComponent.html":{},"components/AppComponent.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseSettingComponent.html":{},"directives/CalcHeightDirective.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/ConfirmModalComponent.html":{},"components/CustomLogoComponent.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"directives/DraggableDirective.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MenuLinkComponent.html":{},"directives/MouseWheelDirective.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/ResizableComponent.html":{},"components/SettingsComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"pipes/XAxisTickFormatPipe.html":{}}}],["metareducer",{"_index":801,"title":{},"body":{"interfaces/AppState.html":{}}}],["metareducers",{"_index":873,"title":{},"body":{"interfaces/AppState.html":{}}}],["method",{"_index":23,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/Action.html":{},"classes/ActionStatus.html":{},"classes/AuthObject.html":{},"injectables/AuthenticationEffects.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckImplicitFlowAuthenticationStatus.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/ImplicitlyAuthenticated.html":{},"classes/InitAuthStatus.html":{},"classes/Input.html":{},"classes/ParameterListItem.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/Process.html":{},"classes/RejectLogIn.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"classes/UnAuthenticationFromImplicitFlow.html":{},"classes/UselessAuthAction.html":{}}}],["methods",{"_index":296,"title":{},"body":{"components/ActionComponent.html":{},"components/AppComponent.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"injectables/AuthenticationEffects.html":{},"interfaces/AuthenticationModeHandler.html":{},"components/BaseSettingComponent.html":{},"directives/CalcHeightDirective.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"classes/CardOperation.html":{},"injectables/CardService.html":{},"modules/CardsModule.html":{},"injectables/ConfigService.html":{},"components/ConfirmModalComponent.html":{},"components/CustomLogoComponent.html":{},"classes/CustomRouterStateSerializer.html":{},"classes/DateTimeNgb.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"classes/Filter.html":{},"injectables/FilterService.html":{},"components/FiltersComponent.html":{},"classes/GuidService.html":{},"injectables/HandlebarsService.html":{},"injectables/I18nService.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"classes/ImplicitAuthenticationHandler.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MenuLinkComponent.html":{},"directives/MouseWheelDirective.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"injectables/NotifyService.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"components/ResizableComponent.html":{},"modules/ServicesModule.html":{},"components/SettingsComponent.html":{},"injectables/SettingsService.html":{},"modules/StateModule.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"classes/Third.html":{},"injectables/ThirdActionService.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"classes/ThirdsServiceMock.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"classes/TimeReference.html":{},"interceptors/TokenInjector.html":{},"injectables/TranslateEffects.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"injectables/UserService.html":{},"pipes/XAxisTickFormatPipe.html":{}}}],["min",{"_index":4943,"title":{},"body":{"pipes/XAxisTickFormatPipe.html":{}}}],["minus",{"_index":638,"title":{},"body":{"components/AppComponent.html":{}}}],["minus2hour",{"_index":2117,"title":{},"body":{"injectables/CardService.html":{}}}],["minute",{"_index":2462,"title":{},"body":{"classes/DateTimeNgb.html":{},"components/DatetimeFilterComponent.html":{}}}],["minutes",{"_index":2911,"title":{},"body":{"injectables/FeedFiltersEffects.html":{}}}],["minutesonly",{"_index":4948,"title":{},"body":{"pipes/XAxisTickFormatPipe.html":{}}}],["miscellaneous",{"_index":5016,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["mmm",{"_index":4965,"title":{},"body":{"pipes/XAxisTickFormatPipe.html":{}}}],["modal",{"_index":375,"title":{},"body":{"components/ActionComponent.html":{},"components/AppComponent.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/ConfirmModalComponent.html":{},"components/CustomLogoComponent.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MenuLinkComponent.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/ResizableComponent.html":{},"components/SettingsComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"injectables/ThirdActionService.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{}}}],["modal.component",{"_index":2186,"title":{},"body":{"modules/CardsModule.html":{},"injectables/ThirdActionService.html":{}}}],["modal.component.html",{"_index":2241,"title":{},"body":{"components/ConfirmModalComponent.html":{}}}],["modal.component.ts",{"_index":2240,"title":{},"body":{"components/ConfirmModalComponent.html":{},"miscellaneous/enumerations.html":{}}}],["modal.component.ts:15",{"_index":2246,"title":{},"body":{"components/ConfirmModalComponent.html":{}}}],["modal.component.ts:16",{"_index":2250,"title":{},"body":{"components/ConfirmModalComponent.html":{}}}],["modal.component.ts:17",{"_index":2248,"title":{},"body":{"components/ConfirmModalComponent.html":{}}}],["modal.component.ts:21",{"_index":2249,"title":{},"body":{"components/ConfirmModalComponent.html":{}}}],["modal.component.ts:25",{"_index":2247,"title":{},"body":{"components/ConfirmModalComponent.html":{}}}],["modal/confirm",{"_index":2185,"title":{},"body":{"modules/CardsModule.html":{},"components/ConfirmModalComponent.html":{},"injectables/ThirdActionService.html":{},"miscellaneous/enumerations.html":{}}}],["modalservice",{"_index":4056,"title":{},"body":{"injectables/ThirdActionService.html":{}}}],["mode",{"_index":1172,"title":{},"body":{"classes/AuthObject.html":{},"injectables/AuthenticationEffects.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["mode.tolowercase",{"_index":1189,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["modern",{"_index":3852,"title":{},"body":{"components/ResizableComponent.html":{}}}],["modification",{"_index":1962,"title":{},"body":{"interfaces/CardFeedState.html":{},"interfaces/TimelineState.html":{}}}],["modify",{"_index":919,"title":{},"body":{"injectables/ArchiveEffects.html":{}}}],["module",{"_index":640,"title":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/ArchivesModule.html":{},"modules/ArchivesRoutingModule.html":{},"modules/CardsModule.html":{},"modules/FeedModule.html":{},"modules/FeedRoutingModule.html":{},"modules/ServicesModule.html":{},"modules/SettingsModule.html":{},"modules/SettingsRoutingModule.html":{},"modules/StateModule.html":{},"modules/ThirdpartyModule.html":{},"modules/ThirdpartyRoutingModule.html":{},"modules/UtilitiesModule.html":{}},"body":{"modules/AppModule.html":{},"modules/ArchivesModule.html":{},"modules/CardsModule.html":{},"modules/FeedModule.html":{},"modules/ServicesModule.html":{},"modules/SettingsModule.html":{},"modules/StateModule.html":{},"modules/ThirdpartyModule.html":{},"modules/UtilitiesModule.html":{},"index.html":{}}}],["modules",{"_index":642,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/ArchivesModule.html":{},"modules/ArchivesRoutingModule.html":{},"modules/CardsModule.html":{},"modules/FeedModule.html":{},"modules/FeedRoutingModule.html":{},"modules/ServicesModule.html":{},"modules/SettingsModule.html":{},"modules/SettingsRoutingModule.html":{},"modules/StateModule.html":{},"modules/ThirdpartyModule.html":{},"modules/ThirdpartyRoutingModule.html":{},"modules/UtilitiesModule.html":{},"index.html":{},"modules.html":{}}}],["modules/archives/archives.module#archivesmodule",{"_index":732,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["modules/cards/components/action/confirm",{"_index":4068,"title":{},"body":{"injectables/ThirdActionService.html":{}}}],["modules/feed/feed.module#feedmodule",{"_index":729,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["modules/settings/settings.module#settingsmodule",{"_index":736,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["modules/thirdparty/thirdparty.module#thirdpartymodule",{"_index":734,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["modules/utilities/utilities.module",{"_index":698,"title":{},"body":{"modules/AppModule.html":{}}}],["modulewithproviders",{"_index":2175,"title":{},"body":{"modules/CardsModule.html":{},"modules/ServicesModule.html":{},"modules/StateModule.html":{}}}],["moment",{"_index":1433,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"injectables/CardEffects.html":{},"classes/CheckTokenResponse.html":{},"injectables/ConfigEffects.html":{},"classes/FailToUpdateTimeReference.html":{},"components/FeedComponent.html":{},"injectables/HandlebarsService.html":{},"injectables/I18nService.html":{},"classes/ImplicitAuthenticationHandler.html":{},"components/InfoComponent.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"injectables/SettingsEffects.html":{},"classes/Tick.html":{},"classes/TickPayload.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"classes/TimeReference.html":{},"interfaces/TimeState.html":{},"classes/UpdateTimeReference.html":{},"pipes/XAxisTickFormatPipe.html":{},"dependencies.html":{}}}],["moment().hours(0).minutes(0).second(0).millisecond(0",{"_index":4390,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["moment().hours(0).minutes(0).second(0).millisecond(0).add(1",{"_index":4392,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["moment().minutes(0).second(0).millisecond(0).add(10",{"_index":4388,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["moment().minutes(0).second(0).millisecond(0).subtract(2",{"_index":4385,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["moment(currentmoment",{"_index":4361,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["moment(currentmoment.startof('month",{"_index":4371,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["moment(currentmoment.startof('week",{"_index":4366,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["moment(currentmoment.startof('year",{"_index":4376,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["moment(date).startof('year",{"_index":4961,"title":{},"body":{"pipes/XAxisTickFormatPipe.html":{}}}],["moment(new",{"_index":3243,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["moment(this.referencetime",{"_index":4551,"title":{},"body":{"classes/TimeReference.html":{}}}],["moment(value",{"_index":4942,"title":{},"body":{"pipes/XAxisTickFormatPipe.html":{}}}],["moment.duration(computedoffsetinmilliseconds",{"_index":4558,"title":{},"body":{"classes/TimeReference.html":{}}}],["moment.duration(realnowmoment.diff(ref",{"_index":4553,"title":{},"body":{"classes/TimeReference.html":{}}}],["moment.locale(this._locale",{"_index":3196,"title":{},"body":{"injectables/HandlebarsService.html":{},"injectables/I18nService.html":{}}}],["moment.moment",{"_index":2810,"title":{},"body":{"classes/FailToUpdateTimeReference.html":{},"classes/Tick.html":{},"classes/TickPayload.html":{},"components/TimeLineComponent.html":{},"classes/TimeReference.html":{},"interfaces/TimeState.html":{},"classes/UpdateTimeReference.html":{}}}],["moment.tz.setdefault(timezone",{"_index":3286,"title":{},"body":{"injectables/I18nService.html":{}}}],["moment.updatelocale('en",{"_index":2831,"title":{},"body":{"components/FeedComponent.html":{}}}],["momentnow",{"_index":4524,"title":{},"body":{"classes/TimeReference.html":{}}}],["mommentojb",{"_index":4336,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["mommentojb[0",{"_index":4480,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["mommentojb[1",{"_index":4482,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["mommentojb[2",{"_index":4484,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["mommentojb[3",{"_index":4486,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["mommentojb[4",{"_index":4488,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["mommentojb[5",{"_index":4490,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["mommentojb[6",{"_index":4492,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["mon",{"_index":4952,"title":{},"body":{"pipes/XAxisTickFormatPipe.html":{}}}],["mono.svg",{"_index":3329,"title":{},"body":{"components/IconComponent.html":{}}}],["month",{"_index":2442,"title":{},"body":{"classes/DateTimeNgb.html":{},"components/TimeLineComponent.html":{}}}],["more",{"_index":740,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["mouse",{"_index":3663,"title":{},"body":{"directives/MouseWheelDirective.html":{}}}],["mousewheel",{"_index":3645,"title":{},"body":{"directives/MouseWheelDirective.html":{}}}],["mousewheel(event",{"_index":3657,"title":{},"body":{"directives/MouseWheelDirective.html":{}}}],["mousewheeldirective",{"_index":432,"title":{"directives/MouseWheelDirective.html":{}},"body":{"components/ActionComponent.html":{},"components/AppComponent.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/ConfirmModalComponent.html":{},"components/CustomLogoComponent.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"modules/FeedModule.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MenuLinkComponent.html":{},"directives/MouseWheelDirective.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/ResizableComponent.html":{},"components/SettingsComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"index.html":{}}}],["mousewheeldown",{"_index":3649,"title":{},"body":{"directives/MouseWheelDirective.html":{}}}],["mousewheelfunc",{"_index":3648,"title":{},"body":{"directives/MouseWheelDirective.html":{}}}],["mousewheelfunc(event",{"_index":3661,"title":{},"body":{"directives/MouseWheelDirective.html":{}}}],["mousewheelup",{"_index":3650,"title":{},"body":{"directives/MouseWheelDirective.html":{}}}],["move",{"_index":1422,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"directives/DraggableDirective.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["movement",{"_index":2737,"title":{},"body":{"directives/DraggableDirective.html":{},"components/TimeLineComponent.html":{}}}],["movetocodeflowloginpage",{"_index":1360,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["movetoimplicitflowloginpage",{"_index":1365,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["mozilla",{"_index":337,"title":{},"body":{"components/ActionComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"modules/ArchivesModule.html":{},"modules/ArchivesRoutingModule.html":{},"components/CardComponent.html":{},"components/CardListComponent.html":{},"modules/CardsModule.html":{},"components/CustomLogoComponent.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailsComponent.html":{},"components/FeedComponent.html":{},"modules/FeedModule.html":{},"modules/FeedRoutingModule.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/MenuLinkComponent.html":{},"components/MultiFilterComponent.html":{},"components/NavbarComponent.html":{},"components/ResizableComponent.html":{},"modules/ServicesModule.html":{},"modules/SettingsModule.html":{},"modules/SettingsRoutingModule.html":{},"modules/StateModule.html":{},"components/TagsFilterComponent.html":{},"modules/ThirdpartyModule.html":{},"modules/ThirdpartyRoutingModule.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"modules/UtilitiesModule.html":{}}}],["mpl",{"_index":342,"title":{},"body":{"components/ActionComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"modules/ArchivesModule.html":{},"modules/ArchivesRoutingModule.html":{},"components/CardComponent.html":{},"components/CardListComponent.html":{},"modules/CardsModule.html":{},"components/CustomLogoComponent.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailsComponent.html":{},"components/FeedComponent.html":{},"modules/FeedModule.html":{},"modules/FeedRoutingModule.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/MenuLinkComponent.html":{},"components/MultiFilterComponent.html":{},"components/NavbarComponent.html":{},"components/ResizableComponent.html":{},"modules/ServicesModule.html":{},"modules/SettingsModule.html":{},"modules/SettingsRoutingModule.html":{},"modules/StateModule.html":{},"components/TagsFilterComponent.html":{},"modules/ThirdpartyModule.html":{},"modules/ThirdpartyRoutingModule.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"modules/UtilitiesModule.html":{}}}],["multi",{"_index":407,"title":{},"body":{"components/ActionComponent.html":{},"components/AppComponent.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/ConfirmModalComponent.html":{},"components/CustomLogoComponent.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MenuLinkComponent.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/ResizableComponent.html":{},"modules/ServicesModule.html":{},"components/SettingsComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{}}}],["multifiltercomponent",{"_index":406,"title":{"components/MultiFilterComponent.html":{}},"body":{"components/ActionComponent.html":{},"components/AppComponent.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"modules/ArchivesModule.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/ConfirmModalComponent.html":{},"components/CustomLogoComponent.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MenuLinkComponent.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/ResizableComponent.html":{},"components/SettingsComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"index.html":{}}}],["multisettingscomponent",{"_index":408,"title":{"components/MultiSettingsComponent.html":{}},"body":{"components/ActionComponent.html":{},"components/AppComponent.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/ConfirmModalComponent.html":{},"components/CustomLogoComponent.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MenuLinkComponent.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/ResizableComponent.html":{},"components/SettingsComponent.html":{},"modules/SettingsModule.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"index.html":{}}}],["multisettingscomponent:25",{"_index":4769,"title":{},"body":{"components/TypeAheadSettingsComponent.html":{}}}],["multisettingscomponent:27",{"_index":4767,"title":{},"body":{"components/TypeAheadSettingsComponent.html":{}}}],["multisettingscomponent:28",{"_index":4765,"title":{},"body":{"components/TypeAheadSettingsComponent.html":{}}}],["multisettingscomponent:29",{"_index":4766,"title":{},"body":{"components/TypeAheadSettingsComponent.html":{}}}],["multisettingscomponent:30",{"_index":4781,"title":{},"body":{"components/TypeAheadSettingsComponent.html":{}}}],["multisettingscomponent:31",{"_index":4782,"title":{},"body":{"components/TypeAheadSettingsComponent.html":{}}}],["multisettingscomponent:32",{"_index":4768,"title":{},"body":{"components/TypeAheadSettingsComponent.html":{}}}],["multisettingscomponent:33",{"_index":4780,"title":{},"body":{"components/TypeAheadSettingsComponent.html":{}}}],["multisettingscomponent:34",{"_index":4779,"title":{},"body":{"components/TypeAheadSettingsComponent.html":{}}}],["multisettingscomponent:39",{"_index":4770,"title":{},"body":{"components/TypeAheadSettingsComponent.html":{}}}],["multisettingscomponent:40",{"_index":4776,"title":{},"body":{"components/TypeAheadSettingsComponent.html":{}}}],["multisettingscomponent:70",{"_index":4775,"title":{},"body":{"components/TypeAheadSettingsComponent.html":{}}}],["multisettingscomponent:75",{"_index":4778,"title":{},"body":{"components/TypeAheadSettingsComponent.html":{}}}],["multisettingscomponent:79",{"_index":4773,"title":{},"body":{"components/TypeAheadSettingsComponent.html":{}}}],["multisettingscomponent:83",{"_index":4771,"title":{},"body":{"components/TypeAheadSettingsComponent.html":{}}}],["multisettingscomponent:88",{"_index":4772,"title":{},"body":{"components/TypeAheadSettingsComponent.html":{}}}],["multisettingscomponent:94",{"_index":4774,"title":{},"body":{"components/TypeAheadSettingsComponent.html":{}}}],["multisettingscomponent:98",{"_index":4777,"title":{},"body":{"components/TypeAheadSettingsComponent.html":{}}}],["mycardstimeline",{"_index":4459,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["mycardstimeline.push(mycardtimeline",{"_index":4477,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["mycardstimeline.push(mycardtimelinetimespans",{"_index":4472,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["mycardtimeline",{"_index":4475,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["mycardtimelinetimespans",{"_index":4463,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["name",{"_index":46,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/Action.html":{},"components/ActionComponent.html":{},"classes/ActionStatus.html":{},"classes/AddActionsAppear.html":{},"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"components/AppComponent.html":{},"classes/ApplyFilter.html":{},"injectables/ArchiveEffects.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"classes/ArchiveQuerySuccess.html":{},"components/ArchivesComponent.html":{},"classes/AuthObject.html":{},"injectables/AuthenticationEffects.html":{},"interfaces/AuthenticationModeHandler.html":{},"components/BaseSettingComponent.html":{},"directives/CalcHeightDirective.html":{},"classes/Card.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"injectables/CardEffects.html":{},"components/CardListComponent.html":{},"classes/CardOperation.html":{},"injectables/CardOperationEffects.html":{},"injectables/CardService.html":{},"classes/CheckTokenResponse.html":{},"injectables/ConfigEffects.html":{},"injectables/ConfigService.html":{},"components/ConfirmModalComponent.html":{},"classes/CreateUserApplication.html":{},"classes/CreateUserApplicationOnFailure.html":{},"classes/CreateUserApplicationOnSuccess.html":{},"components/CustomLogoComponent.html":{},"injectables/CustomRouterEffects.html":{},"classes/CustomRouterStateSerializer.html":{},"classes/DateTimeNgb.html":{},"components/DatetimeFilterComponent.html":{},"classes/DelayedLightCardUpdate.html":{},"classes/Detail.html":{},"components/DetailComponent.html":{},"classes/DetailContext.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"classes/FailToUpdateTimeReference.html":{},"components/FeedComponent.html":{},"injectables/FeedFiltersEffects.html":{},"classes/Filter.html":{},"components/FiltersComponent.html":{},"classes/HandleUnexpectedError.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/HandleUnexpectedError-4.html":{},"classes/HandleUnexpectedError-5.html":{},"classes/HandleUnexpectedError-6.html":{},"injectables/HandlebarsService.html":{},"classes/I18n.html":{},"injectables/I18nService.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"classes/ImplicitAuthenticationHandler.html":{},"components/InfoComponent.html":{},"classes/InitAuthStatus.html":{},"classes/InitFilters.html":{},"classes/InitTimeline.html":{},"classes/Input.html":{},"classes/LightCard.html":{},"injectables/LightCardEffects.html":{},"components/ListSettingComponent.html":{},"classes/LoadArchivedCard.html":{},"classes/LoadArchivedCardFailure.html":{},"classes/LoadArchivedCardSuccess.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{},"classes/LoadConfigFailure.html":{},"classes/LoadConfigSuccess.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/LoadSettingsFailure.html":{},"classes/LoadSettingsSuccess.html":{},"components/LoginComponent.html":{},"injectables/MenuEffects.html":{},"components/MenuLinkComponent.html":{},"classes/Message.html":{},"directives/MouseWheelDirective.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"injectables/NotifyService.html":{},"classes/Page.html":{},"classes/ParameterListItem.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"classes/PatchSettings.html":{},"classes/PatchSettingsFailure.html":{},"classes/PatchSettingsSuccess.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/Process.html":{},"classes/RejectLogIn.html":{},"classes/RemoveLightCard.html":{},"components/ResizableComponent.html":{},"classes/RouterStateUrl.html":{},"classes/SelectArchivedLightCard.html":{},"classes/SelectLightCard.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{},"classes/SendArchiveQuery.html":{},"classes/SetCardDataTimeline.html":{},"components/SettingsComponent.html":{},"injectables/SettingsEffects.html":{},"injectables/SettingsService.html":{},"classes/State.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"classes/Third.html":{},"injectables/ThirdActionService.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"classes/Tick.html":{},"classes/TickPayload.html":{},"injectables/TimeEffects.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"classes/TimeReference.html":{},"classes/TimeSpan.html":{},"interceptors/TokenInjector.html":{},"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{},"classes/TryToLogIn.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateArchiveFilter.html":{},"classes/UpdateArchivePage.html":{},"classes/UpdateTimeReference.html":{},"classes/UpdateTranslation.html":{},"classes/UpdateTranslationFailed.html":{},"classes/UpdateTranslationSuccessful.html":{},"classes/User.html":{},"classes/UserApplicationNotRegistered.html":{},"classes/UserApplicationRegistered.html":{},"classes/UserContext.html":{},"injectables/UserEffects.html":{},"injectables/UserService.html":{},"pipes/XAxisTickFormatPipe.html":{}}}],["navbar",{"_index":134,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"modules/AppRoutingModule.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckImplicitFlowAuthenticationStatus.html":{},"classes/ImplicitlyAuthenticated.html":{},"components/InfoComponent.html":{},"classes/InitAuthStatus.html":{},"components/NavbarComponent.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"classes/UnAuthenticationFromImplicitFlow.html":{},"classes/UselessAuthAction.html":{}}}],["navbar'},{'name",{"_index":410,"title":{},"body":{"components/ActionComponent.html":{},"components/AppComponent.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/ConfirmModalComponent.html":{},"components/CustomLogoComponent.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MenuLinkComponent.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/ResizableComponent.html":{},"components/SettingsComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{}}}],["navbar.component.html",{"_index":3702,"title":{},"body":{"components/NavbarComponent.html":{}}}],["navbar.component.scss",{"_index":3701,"title":{},"body":{"components/NavbarComponent.html":{}}}],["navbar.thirdmenus.type",{"_index":3625,"title":{},"body":{"components/MenuLinkComponent.html":{}}}],["navbarcollapsed",{"_index":3706,"title":{},"body":{"components/NavbarComponent.html":{}}}],["navbarcomponent",{"_index":132,"title":{"components/NavbarComponent.html":{}},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"components/ActionComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckImplicitFlowAuthenticationStatus.html":{},"components/ConfirmModalComponent.html":{},"components/CustomLogoComponent.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"classes/ImplicitlyAuthenticated.html":{},"components/InfoComponent.html":{},"classes/InitAuthStatus.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MenuLinkComponent.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"components/ResizableComponent.html":{},"components/SettingsComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"classes/UnAuthenticationFromImplicitFlow.html":{},"classes/UselessAuthAction.html":{},"index.html":{}}}],["navigate",{"_index":1495,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["navigateawayfromfeed",{"_index":2336,"title":{},"body":{"injectables/CustomRouterEffects.html":{}}}],["navigates",{"_index":3603,"title":{},"body":{"injectables/MenuEffects.html":{}}}],["navigatetoarchivedcard",{"_index":2337,"title":{},"body":{"injectables/CustomRouterEffects.html":{}}}],["navigatetocard",{"_index":2338,"title":{},"body":{"injectables/CustomRouterEffects.html":{}}}],["navigatetomenuurl",{"_index":2339,"title":{},"body":{"injectables/CustomRouterEffects.html":{},"classes/HandleUnexpectedError-4.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{}}}],["navigating",{"_index":2367,"title":{},"body":{"injectables/CustomRouterEffects.html":{}}}],["navigation",{"_index":3091,"title":{},"body":{"classes/HandleUnexpectedError-4.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{}}}],["navigationactiontiming",{"_index":3981,"title":{},"body":{"modules/StateModule.html":{}}}],["navigationactiontiming.postactivation",{"_index":3985,"title":{},"body":{"modules/StateModule.html":{}}}],["navigationid",{"_index":2395,"title":{},"body":{"classes/CustomRouterStateSerializer.html":{},"classes/RouterStateUrl.html":{}}}],["navigationroutes",{"_index":742,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/NavbarComponent.html":{}}}],["nb",{"_index":561,"title":{},"body":{"components/AppComponent.html":{}}}],["nbofpublishers",{"_index":4721,"title":{},"body":{"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["nbw",{"_index":4954,"title":{},"body":{"pipes/XAxisTickFormatPipe.html":{}}}],["necessary",{"_index":1876,"title":{},"body":{"components/CardComponent.html":{}}}],["need",{"_index":255,"title":{},"body":{"classes/Action.html":{},"classes/ActionStatus.html":{},"modules/AppRoutingModule.html":{},"classes/CustomRouterStateSerializer.html":{},"classes/Input.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/RefreshTranslation.html":{},"classes/RouterStateUrl.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"classes/TranslationUpToDate.html":{},"classes/UpdateTranslation.html":{},"classes/UpdateTranslationFailed.html":{},"classes/UpdateTranslationSuccessful.html":{},"miscellaneous/enumerations.html":{}}}],["needed",{"_index":238,"title":{},"body":{"classes/Action.html":{},"classes/ActionStatus.html":{},"classes/AddActionsAppear.html":{},"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthenticationEffects.html":{},"injectables/CardService.html":{},"classes/ClearCard.html":{},"classes/ClearLightCardSelection.html":{},"classes/CustomRouterStateSerializer.html":{},"classes/DelayedLightCardUpdate.html":{},"components/DetailComponent.html":{},"classes/EmptyLightCards.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/HandleUnexpectedError-4.html":{},"classes/HandleUnexpectedError-5.html":{},"classes/Input.html":{},"classes/LightCardAlreadyUpdated.html":{},"classes/LoadArchivedCard.html":{},"classes/LoadArchivedCardFailure.html":{},"classes/LoadArchivedCardSuccess.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{},"classes/LoadConfig.html":{},"classes/LoadConfigFailure.html":{},"classes/LoadConfigSuccess.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/LoadSettings.html":{},"classes/LoadSettingsFailure.html":{},"classes/LoadSettingsSuccess.html":{},"classes/ParameterListItem.html":{},"classes/PatchSettings.html":{},"classes/PatchSettingsFailure.html":{},"classes/PatchSettingsSuccess.html":{},"classes/Process.html":{},"classes/RemoveLightCard.html":{},"classes/RouterStateUrl.html":{},"classes/SelectLightCard.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdActionAlreadyLoaded.html":{},"classes/ThirdActionAlreadyUpdated.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateAnActionFailure.html":{},"classes/UpdatedSubscription.html":{}}}],["needing",{"_index":4661,"title":{},"body":{"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["needsconfirm",{"_index":182,"title":{},"body":{"classes/Action.html":{},"classes/ActionStatus.html":{},"classes/Input.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{}}}],["neutraltimereference",{"_index":4578,"title":{},"body":{"interfaces/TimeState.html":{}}}],["neutraltimereference:timereference=new",{"_index":4572,"title":{},"body":{"classes/TimeReference.html":{}}}],["new",{"_index":28,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/Action.html":{},"classes/ActionStatus.html":{},"injectables/ArchiveEffects.html":{},"components/ArchiveFiltersComponent.html":{},"interfaces/ArchiveState.html":{},"classes/AuthObject.html":{},"interfaces/AuthState.html":{},"injectables/AuthenticationEffects.html":{},"interfaces/AuthenticationModeHandler.html":{},"components/BaseSettingComponent.html":{},"directives/CalcHeightDirective.html":{},"components/CardComponent.html":{},"injectables/CardEffects.html":{},"interfaces/CardFeedState.html":{},"injectables/CardOperationEffects.html":{},"injectables/CardService.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckImplicitFlowAuthenticationStatus.html":{},"classes/CheckTokenResponse.html":{},"injectables/ConfigEffects.html":{},"components/ConfirmModalComponent.html":{},"injectables/CustomRouterEffects.html":{},"classes/CustomRouterStateSerializer.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailComponent.html":{},"directives/DraggableDirective.html":{},"components/EmailSettingComponent.html":{},"injectables/FeedFiltersEffects.html":{},"classes/Filter.html":{},"injectables/FilterService.html":{},"injectables/HandlebarsService.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/ImplicitlyAuthenticated.html":{},"classes/InitAuthStatus.html":{},"classes/Input.html":{},"injectables/LightCardEffects.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"injectables/MenuEffects.html":{},"directives/MouseWheelDirective.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"injectables/NotifyService.html":{},"classes/ParameterListItem.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/Process.html":{},"classes/RejectLogIn.html":{},"classes/RouterStateUrl.html":{},"modules/ServicesModule.html":{},"injectables/SettingsEffects.html":{},"classes/State.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"classes/Third.html":{},"injectables/ThirdActionService.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"classes/ThirdsServiceMock.html":{},"injectables/TimeEffects.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"classes/UnAuthenticationFromImplicitFlow.html":{},"classes/UselessAuthAction.html":{},"injectables/UserEffects.html":{}}}],["newdate",{"_index":4498,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["newdate.add(conf[key",{"_index":4504,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["newdate.startof(value",{"_index":4502,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["newdate.subtract(conf[key",{"_index":4505,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["newelapsedsofar",{"_index":2881,"title":{},"body":{"injectables/FeedFiltersEffects.html":{}}}],["newtitle",{"_index":575,"title":{},"body":{"components/AppComponent.html":{}}}],["next",{"_index":114,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/Action.html":{},"components/ActionComponent.html":{},"classes/ActionStatus.html":{},"classes/AddActionsAppear.html":{},"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"classes/ApplyFilter.html":{},"injectables/ArchiveEffects.html":{},"classes/ArchiveQuerySuccess.html":{},"injectables/AuthenticationEffects.html":{},"components/BaseSettingComponent.html":{},"directives/CalcHeightDirective.html":{},"classes/Card.html":{},"components/CardComponent.html":{},"injectables/CardEffects.html":{},"classes/CardOperation.html":{},"injectables/CardOperationEffects.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckImplicitFlowAuthenticationStatus.html":{},"classes/ClearCard.html":{},"classes/ClearLightCardSelection.html":{},"injectables/ConfigEffects.html":{},"classes/CreateUserApplication.html":{},"classes/CreateUserApplicationOnFailure.html":{},"classes/CreateUserApplicationOnSuccess.html":{},"classes/CustomRouterStateSerializer.html":{},"classes/DateTimeNgb.html":{},"components/DatetimeFilterComponent.html":{},"classes/DelayedLightCardUpdate.html":{},"classes/Detail.html":{},"classes/EmptyLightCards.html":{},"injectables/FeedFiltersEffects.html":{},"classes/Filter.html":{},"classes/HandleUnexpectedError.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/HandleUnexpectedError-4.html":{},"classes/HandleUnexpectedError-5.html":{},"classes/HandleUnexpectedError-6.html":{},"classes/I18n.html":{},"classes/ImplicitlyAuthenticated.html":{},"classes/InitAuthStatus.html":{},"classes/InitFilters.html":{},"classes/Input.html":{},"classes/LightCard.html":{},"classes/LightCardAlreadyUpdated.html":{},"injectables/LightCardEffects.html":{},"classes/LoadArchivedCard.html":{},"classes/LoadArchivedCardFailure.html":{},"classes/LoadArchivedCardSuccess.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{},"classes/LoadConfig.html":{},"classes/LoadConfigFailure.html":{},"classes/LoadConfigSuccess.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/LoadSettings.html":{},"classes/LoadSettingsFailure.html":{},"classes/LoadSettingsSuccess.html":{},"components/LoginComponent.html":{},"injectables/MenuEffects.html":{},"classes/Message.html":{},"classes/Page.html":{},"classes/ParameterListItem.html":{},"classes/PatchSettings.html":{},"classes/PatchSettingsFailure.html":{},"classes/PatchSettingsSuccess.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/Process.html":{},"classes/RejectLogIn.html":{},"classes/RemoveLightCard.html":{},"classes/RouterStateUrl.html":{},"classes/SelectArchivedLightCard.html":{},"classes/SelectLightCard.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{},"classes/SendArchiveQuery.html":{},"injectables/SettingsEffects.html":{},"classes/State.html":{},"components/TagsFilterComponent.html":{},"classes/Third.html":{},"classes/ThirdActionAlreadyLoaded.html":{},"classes/ThirdActionAlreadyUpdated.html":{},"injectables/ThirdActionService.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"components/TimeFilterComponent.html":{},"classes/TimeSpan.html":{},"interceptors/TokenInjector.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"components/TypeFilterComponent.html":{},"classes/UnAuthenticationFromImplicitFlow.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateAnActionFailure.html":{},"classes/UpdateArchiveFilter.html":{},"classes/UpdateArchivePage.html":{},"classes/UpdatedSubscription.html":{},"classes/UselessAuthAction.html":{},"classes/UserApplicationNotRegistered.html":{},"classes/UserApplicationRegistered.html":{}}}],["next.handle(this.addauthheadersifnecessary(request",{"_index":4602,"title":{},"body":{"interceptors/TokenInjector.html":{}}}],["next.length",{"_index":3002,"title":{},"body":{"classes/Filter.html":{}}}],["next.status.action",{"_index":4793,"title":{},"body":{"components/TypeFilterComponent.html":{}}}],["next.status.alarm",{"_index":4791,"title":{},"body":{"components/TypeFilterComponent.html":{}}}],["next.status.compliant",{"_index":4795,"title":{},"body":{"components/TypeFilterComponent.html":{}}}],["next.status.end",{"_index":4310,"title":{},"body":{"components/TimeFilterComponent.html":{}}}],["next.status.information",{"_index":4797,"title":{},"body":{"components/TypeFilterComponent.html":{}}}],["next.status.start",{"_index":4305,"title":{},"body":{"components/TimeFilterComponent.html":{}}}],["next[0].chainfilter(card,next.slice(1",{"_index":3003,"title":{},"body":{"classes/Filter.html":{}}}],["next||next.length",{"_index":3004,"title":{},"body":{"classes/Filter.html":{}}}],["ng",{"_index":317,"title":{},"body":{"components/ActionComponent.html":{},"modules/AppModule.html":{},"components/ArchiveFiltersComponent.html":{},"modules/ArchivesModule.html":{},"injectables/CardService.html":{},"modules/CardsModule.html":{},"components/ConfirmModalComponent.html":{},"classes/DateTimeNgb.html":{},"modules/FeedModule.html":{},"injectables/ThirdActionService.html":{},"dependencies.html":{}}}],["ng_validators",{"_index":2471,"title":{},"body":{"components/DatetimeFilterComponent.html":{}}}],["ng_value_accessor",{"_index":2468,"title":{},"body":{"components/DatetimeFilterComponent.html":{}}}],["ngafterviewinit",{"_index":1997,"title":{},"body":{"components/CardListComponent.html":{},"components/DetailsComponent.html":{},"components/FeedComponent.html":{},"components/ResizableComponent.html":{}}}],["ngb.model",{"_index":966,"title":{},"body":{"components/ArchiveFiltersComponent.html":{}}}],["ngb.model.ts",{"_index":2415,"title":{},"body":{"classes/DateTimeNgb.html":{}}}],["ngb.model.ts:23",{"_index":2422,"title":{},"body":{"classes/DateTimeNgb.html":{}}}],["ngb.model.ts:29",{"_index":2427,"title":{},"body":{"classes/DateTimeNgb.html":{}}}],["ngb.model.ts:42",{"_index":2423,"title":{},"body":{"classes/DateTimeNgb.html":{}}}],["ngb.model.ts:50",{"_index":2425,"title":{},"body":{"classes/DateTimeNgb.html":{}}}],["ngb.model.ts:56",{"_index":2424,"title":{},"body":{"classes/DateTimeNgb.html":{}}}],["ngbactivemodal",{"_index":2245,"title":{},"body":{"components/ConfirmModalComponent.html":{}}}],["ngbcollapse]=\"!expandedmenu[index",{"_index":3760,"title":{},"body":{"components/NavbarComponent.html":{}}}],["ngbdateparserformatter",{"_index":2416,"title":{},"body":{"classes/DateTimeNgb.html":{}}}],["ngbdatestruct",{"_index":967,"title":{},"body":{"components/ArchiveFiltersComponent.html":{},"classes/DateTimeNgb.html":{}}}],["ngbmodal",{"_index":303,"title":{},"body":{"components/ActionComponent.html":{},"injectables/ThirdActionService.html":{}}}],["ngbmodule",{"_index":673,"title":{},"body":{"modules/AppModule.html":{},"modules/ArchivesModule.html":{},"modules/CardsModule.html":{},"modules/FeedModule.html":{}}}],["ngbmodule.forroot",{"_index":2954,"title":{},"body":{"modules/FeedModule.html":{}}}],["ngbtimestruct",{"_index":968,"title":{},"body":{"components/ArchiveFiltersComponent.html":{},"classes/DateTimeNgb.html":{}}}],["ngmodule",{"_index":660,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/ArchivesModule.html":{},"modules/ArchivesRoutingModule.html":{},"modules/CardsModule.html":{},"modules/FeedModule.html":{},"modules/FeedRoutingModule.html":{},"modules/ServicesModule.html":{},"modules/SettingsModule.html":{},"modules/SettingsRoutingModule.html":{},"modules/StateModule.html":{},"modules/ThirdpartyModule.html":{},"modules/ThirdpartyRoutingModule.html":{},"modules/UtilitiesModule.html":{}}}],["ngonchanges",{"_index":2546,"title":{},"body":{"components/DetailComponent.html":{},"components/DetailsComponent.html":{}}}],["ngonchanges(changes",{"_index":2666,"title":{},"body":{"components/DetailsComponent.html":{}}}],["ngondestroy",{"_index":1629,"title":{},"body":{"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/EmailSettingComponent.html":{},"components/ListSettingComponent.html":{},"components/MultiSettingsComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{}}}],["ngoninit",{"_index":297,"title":{},"body":{"components/ActionComponent.html":{},"components/AppComponent.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/CustomLogoComponent.html":{},"components/DetailComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MenuLinkComponent.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/SettingsComponent.html":{},"interfaces/SettingsInputs.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{}}}],["ngrx",{"_index":461,"title":{},"body":{"classes/AddActionsAppear.html":{},"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"interfaces/AppState.html":{},"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ClearCard.html":{},"classes/ClearLightCardSelection.html":{},"classes/DelayedLightCardUpdate.html":{},"classes/EmptyLightCards.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/HandleUnexpectedError-4.html":{},"classes/HandleUnexpectedError-5.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/LightCardAlreadyUpdated.html":{},"classes/LoadArchivedCard.html":{},"classes/LoadArchivedCardFailure.html":{},"classes/LoadArchivedCardSuccess.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{},"classes/LoadConfig.html":{},"classes/LoadConfigFailure.html":{},"classes/LoadConfigSuccess.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/LoadSettings.html":{},"classes/LoadSettingsFailure.html":{},"classes/LoadSettingsSuccess.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"classes/PatchSettings.html":{},"classes/PatchSettingsFailure.html":{},"classes/PatchSettingsSuccess.html":{},"classes/RemoveLightCard.html":{},"classes/SelectLightCard.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{},"classes/ThirdActionAlreadyLoaded.html":{},"classes/ThirdActionAlreadyUpdated.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateAnActionFailure.html":{},"classes/UpdatedSubscription.html":{},"dependencies.html":{}}}],["ngrx/effects",{"_index":925,"title":{},"body":{"injectables/ArchiveEffects.html":{},"injectables/AuthenticationEffects.html":{},"injectables/CardEffects.html":{},"injectables/CardOperationEffects.html":{},"injectables/ConfigEffects.html":{},"injectables/CustomRouterEffects.html":{},"injectables/FeedFiltersEffects.html":{},"injectables/LightCardEffects.html":{},"injectables/MenuEffects.html":{},"injectables/SettingsEffects.html":{},"modules/StateModule.html":{},"injectables/TimeEffects.html":{},"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{},"injectables/UserEffects.html":{},"dependencies.html":{}}}],["ngrx/entity",{"_index":483,"title":{},"body":{"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"interfaces/CardFeedState.html":{},"classes/ClearLightCardSelection.html":{},"classes/DelayedLightCardUpdate.html":{},"classes/EmptyLightCards.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/LightCardAlreadyUpdated.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/RemoveLightCard.html":{},"classes/SelectLightCard.html":{},"classes/ThirdActionAlreadyLoaded.html":{},"classes/ThirdActionAlreadyUpdated.html":{},"interfaces/TimelineState.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateAnActionFailure.html":{},"classes/UpdatedSubscription.html":{},"dependencies.html":{}}}],["ngrx/router",{"_index":795,"title":{},"body":{"interfaces/AppState.html":{},"injectables/CustomRouterEffects.html":{},"classes/CustomRouterStateSerializer.html":{},"classes/RouterStateUrl.html":{},"modules/StateModule.html":{},"dependencies.html":{}}}],["ngrx/store",{"_index":52,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/AddActionsAppear.html":{},"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"components/AppComponent.html":{},"interfaces/AppState.html":{},"classes/ApplyFilter.html":{},"injectables/ArchiveEffects.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"classes/ArchiveQuerySuccess.html":{},"components/ArchivesComponent.html":{},"classes/AuthObject.html":{},"injectables/AuthenticationEffects.html":{},"interfaces/AuthenticationModeHandler.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"injectables/CardEffects.html":{},"components/CardListComponent.html":{},"injectables/CardOperationEffects.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckImplicitFlowAuthenticationStatus.html":{},"classes/CheckTokenResponse.html":{},"classes/ClearCard.html":{},"classes/ClearLightCardSelection.html":{},"injectables/ConfigEffects.html":{},"injectables/ConfigService.html":{},"classes/CreateUserApplication.html":{},"classes/CreateUserApplicationOnFailure.html":{},"classes/CreateUserApplicationOnSuccess.html":{},"injectables/CustomRouterEffects.html":{},"classes/DelayedLightCardUpdate.html":{},"components/DetailComponent.html":{},"components/EmailSettingComponent.html":{},"classes/EmptyLightCards.html":{},"classes/FailToUpdateTimeReference.html":{},"components/FeedComponent.html":{},"injectables/FeedFiltersEffects.html":{},"components/FiltersComponent.html":{},"classes/HandleUnexpectedError.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/HandleUnexpectedError-4.html":{},"classes/HandleUnexpectedError-5.html":{},"classes/HandleUnexpectedError-6.html":{},"injectables/HandlebarsService.html":{},"injectables/I18nService.html":{},"components/IframeDisplayComponent.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/ImplicitlyAuthenticated.html":{},"components/InfoComponent.html":{},"classes/InitAuthStatus.html":{},"classes/InitFilters.html":{},"classes/InitTimeline.html":{},"classes/LightCardAlreadyUpdated.html":{},"injectables/LightCardEffects.html":{},"components/ListSettingComponent.html":{},"classes/LoadArchivedCard.html":{},"classes/LoadArchivedCardFailure.html":{},"classes/LoadArchivedCardSuccess.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{},"classes/LoadConfig.html":{},"classes/LoadConfigFailure.html":{},"classes/LoadConfigSuccess.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/LoadSettings.html":{},"classes/LoadSettingsFailure.html":{},"classes/LoadSettingsSuccess.html":{},"components/LoginComponent.html":{},"injectables/MenuEffects.html":{},"components/MenuLinkComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"classes/PatchSettings.html":{},"classes/PatchSettingsFailure.html":{},"classes/PatchSettingsSuccess.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RefreshTranslation.html":{},"classes/RejectLogIn.html":{},"classes/RemoveLightCard.html":{},"classes/SelectArchivedLightCard.html":{},"classes/SelectLightCard.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{},"classes/SendArchiveQuery.html":{},"classes/SetCardDataTimeline.html":{},"components/SettingsComponent.html":{},"injectables/SettingsEffects.html":{},"interfaces/SettingsInputs.html":{},"injectables/SettingsService.html":{},"modules/StateModule.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"classes/ThirdActionAlreadyLoaded.html":{},"classes/ThirdActionAlreadyUpdated.html":{},"injectables/ThirdActionService.html":{},"classes/Tick.html":{},"classes/TickPayload.html":{},"injectables/TimeEffects.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{},"classes/TranslationUpToDate.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"classes/UnAuthenticationFromImplicitFlow.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateAnActionFailure.html":{},"classes/UpdateArchiveFilter.html":{},"classes/UpdateArchivePage.html":{},"classes/UpdateTimeReference.html":{},"classes/UpdateTranslation.html":{},"classes/UpdateTranslationFailed.html":{},"classes/UpdateTranslationSuccessful.html":{},"classes/UpdatedSubscription.html":{},"classes/UselessAuthAction.html":{},"classes/UserApplicationNotRegistered.html":{},"classes/UserApplicationRegistered.html":{},"injectables/UserEffects.html":{},"dependencies.html":{}}}],["ngunsubscribe",{"_index":1624,"title":{},"body":{"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/EmailSettingComponent.html":{},"components/ListSettingComponent.html":{},"components/MultiSettingsComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{}}}],["ngx",{"_index":681,"title":{},"body":{"modules/AppModule.html":{},"modules/ArchivesModule.html":{},"components/CardComponent.html":{},"modules/CardsModule.html":{},"components/DetailComponent.html":{},"modules/FeedModule.html":{},"injectables/HandlebarsService.html":{},"injectables/I18nService.html":{},"components/ListSettingComponent.html":{},"components/MultiFilterComponent.html":{},"modules/SettingsModule.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{},"dependencies.html":{}}}],["ngxchartsmodule",{"_index":2935,"title":{},"body":{"modules/FeedModule.html":{}}}],["nomarginrow",{"_index":1012,"title":{},"body":{"components/ArchiveFiltersComponent.html":{},"components/DatetimeFilterComponent.html":{}}}],["none",{"_index":1802,"title":{},"body":{"classes/Card.html":{},"components/CardComponent.html":{},"classes/Detail.html":{},"components/IframeDisplayComponent.html":{},"components/MenuLinkComponent.html":{},"components/TagsFilterComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"miscellaneous/enumerations.html":{}}}],["nopaddingrow",{"_index":1015,"title":{},"body":{"components/ArchiveFiltersComponent.html":{},"components/DatetimeFilterComponent.html":{}}}],["normal",{"_index":4545,"title":{},"body":{"classes/TimeReference.html":{}}}],["normalizedcurrentstatus",{"_index":4073,"title":{},"body":{"injectables/ThirdActionService.html":{}}}],["noselectioncomponent",{"_index":411,"title":{"components/NoSelectionComponent.html":{}},"body":{"components/ActionComponent.html":{},"components/AppComponent.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/ConfirmModalComponent.html":{},"components/CustomLogoComponent.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"modules/FeedModule.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MenuLinkComponent.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/ResizableComponent.html":{},"components/SettingsComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"index.html":{}}}],["notchecktokenrequest",{"_index":4604,"title":{},"body":{"interceptors/TokenInjector.html":{}}}],["nothing",{"_index":2785,"title":{},"body":{"classes/FailToUpdateTimeReference.html":{},"injectables/ThirdActionService.html":{},"classes/Tick.html":{},"classes/TickPayload.html":{},"classes/UpdateTimeReference.html":{}}}],["notif",{"_index":2842,"title":{},"body":{"components/FeedComponent.html":{}}}],["notification",{"_index":3781,"title":{},"body":{"injectables/NotifyService.html":{}}}],["notification(title",{"_index":3786,"title":{},"body":{"injectables/NotifyService.html":{}}}],["notification.requestpermission(status",{"_index":3783,"title":{},"body":{"injectables/NotifyService.html":{}}}],["notify",{"_index":136,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckImplicitFlowAuthenticationStatus.html":{},"classes/FailToUpdateTimeReference.html":{},"classes/ImplicitlyAuthenticated.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/Tick.html":{},"classes/TickPayload.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"classes/UnAuthenticationFromImplicitFlow.html":{},"classes/UpdateTimeReference.html":{},"classes/UselessAuthAction.html":{}}}],["notifyservice",{"_index":2084,"title":{"injectables/NotifyService.html":{}},"body":{"injectables/CardService.html":{},"components/FeedComponent.html":{},"injectables/NotifyService.html":{},"modules/ServicesModule.html":{},"index.html":{}}}],["now",{"_index":1756,"title":{},"body":{"directives/CalcHeightDirective.html":{}}}],["null",{"_index":210,"title":{},"body":{"classes/Action.html":{},"classes/ActionStatus.html":{},"interfaces/ArchiveState.html":{},"classes/AuthObject.html":{},"interfaces/AuthState.html":{},"interfaces/AuthenticationModeHandler.html":{},"components/BaseSettingComponent.html":{},"components/CardDetailsComponent.html":{},"interfaces/CardFeedState.html":{},"interfaces/CardState.html":{},"classes/CheckTokenResponse.html":{},"interfaces/ConfigState.html":{},"classes/DateTimeNgb.html":{},"components/DatetimeFilterComponent.html":{},"injectables/FeedFiltersEffects.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/Input.html":{},"components/LoginComponent.html":{},"interfaces/MenuState.html":{},"classes/ParameterListItem.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"classes/Process.html":{},"interfaces/SettingsState.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"classes/TimeReference.html":{},"interfaces/TimeState.html":{},"interfaces/TimelineState.html":{},"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{},"interfaces/UserState.html":{}}}],["number",{"_index":273,"title":{},"body":{"classes/Action.html":{},"classes/ActionStatus.html":{},"classes/ArchiveQuerySuccess.html":{},"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/Card.html":{},"components/CardComponent.html":{},"classes/CardOperation.html":{},"injectables/CardService.html":{},"classes/CheckTokenResponse.html":{},"injectables/ConfigEffects.html":{},"interfaces/ConfigState.html":{},"components/CustomLogoComponent.html":{},"classes/DateTimeNgb.html":{},"classes/Detail.html":{},"classes/FailToUpdateTimeReference.html":{},"injectables/FeedFiltersEffects.html":{},"classes/HandleUnexpectedError.html":{},"injectables/HandlebarsService.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/Input.html":{},"classes/LightCard.html":{},"components/NavbarComponent.html":{},"classes/Page.html":{},"classes/ParameterListItem.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"classes/Process.html":{},"classes/SelectArchivedLightCard.html":{},"classes/SendArchiveQuery.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"classes/Tick.html":{},"classes/TickPayload.html":{},"classes/TimeReference.html":{},"classes/TimeSpan.html":{},"interfaces/TimelineState.html":{},"classes/UpdateArchiveFilter.html":{},"classes/UpdateArchivePage.html":{},"classes/UpdateTimeReference.html":{}}}],["oauth",{"_index":1184,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["oauth2",{"_index":706,"title":{},"body":{"modules/AppModule.html":{},"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"components/LoginComponent.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"dependencies.html":{}}}],["oauth2.client",{"_index":1201,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["oauth2.flow.delagate",{"_index":1205,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["oauth2.flow.mode",{"_index":1220,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["oauth2conf",{"_index":1196,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["oauthevent",{"_index":1148,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["oauthmodule",{"_index":705,"title":{},"body":{"modules/AppModule.html":{}}}],["oauthmodule.forroot",{"_index":710,"title":{},"body":{"modules/AppModule.html":{}}}],["oauthservice",{"_index":1149,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"components/LoginComponent.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["oauthtype",{"_index":1146,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["obj",{"_index":3212,"title":{},"body":{"injectables/HandlebarsService.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"components/TimeLineComponent.html":{}}}],["obj.date",{"_index":4494,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["obj.day",{"_index":4485,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["obj.hour",{"_index":4487,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["obj.minute",{"_index":4489,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["obj.month",{"_index":4481,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["obj.second",{"_index":4491,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["obj.startof",{"_index":4493,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["obj.week",{"_index":4483,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["obj.year",{"_index":4479,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["object",{"_index":236,"title":{},"body":{"classes/Action.html":{},"classes/ActionStatus.html":{},"modules/AppRoutingModule.html":{},"components/BaseSettingComponent.html":{},"components/DatetimeFilterComponent.html":{},"components/EmailSettingComponent.html":{},"classes/Input.html":{},"components/ListSettingComponent.html":{},"components/MultiSettingsComponent.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"components/TextSettingComponent.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{}}}],["object.keys(cachedversions",{"_index":4699,"title":{},"body":{"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["object.keys(conf).foreach(key",{"_index":4500,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["object.keys(filters).foreach(key",{"_index":996,"title":{},"body":{"components/ArchiveFiltersComponent.html":{}}}],["object.keys(thirdsandversion",{"_index":4643,"title":{},"body":{"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["object.keys(this.domains).includes(domain",{"_index":4450,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["object.keys(translationreferencestoupdate).length",{"_index":4722,"title":{},"body":{"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["object.keys(untrackedversions).length",{"_index":4718,"title":{},"body":{"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["object.keys(versioninput",{"_index":4697,"title":{},"body":{"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["object.setprototypeof(params",{"_index":248,"title":{},"body":{"classes/Action.html":{},"classes/ActionStatus.html":{},"classes/Input.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{}}}],["object.setprototypeof(t",{"_index":4141,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["object.values(enumeration).includes(value",{"_index":982,"title":{},"body":{"components/ArchiveFiltersComponent.html":{}}}],["object[publisher",{"_index":4177,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["object[publisher][version",{"_index":4178,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["observable",{"_index":17,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"components/AppComponent.html":{},"injectables/ArchiveEffects.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"classes/AuthObject.html":{},"injectables/AuthenticationEffects.html":{},"interfaces/AuthenticationModeHandler.html":{},"injectables/CardEffects.html":{},"components/CardListComponent.html":{},"injectables/CardOperationEffects.html":{},"injectables/CardService.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckImplicitFlowAuthenticationStatus.html":{},"classes/CheckTokenResponse.html":{},"injectables/ConfigEffects.html":{},"injectables/ConfigService.html":{},"injectables/CustomRouterEffects.html":{},"components/FeedComponent.html":{},"injectables/FeedFiltersEffects.html":{},"components/FiltersComponent.html":{},"classes/HandleUnexpectedError-4.html":{},"injectables/HandlebarsService.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/ImplicitlyAuthenticated.html":{},"components/InfoComponent.html":{},"classes/InitAuthStatus.html":{},"injectables/LightCardEffects.html":{},"components/ListSettingComponent.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"components/LoginComponent.html":{},"injectables/MenuEffects.html":{},"components/MultiFilterComponent.html":{},"components/NavbarComponent.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{},"components/SettingsComponent.html":{},"injectables/SettingsEffects.html":{},"interfaces/SettingsInputs.html":{},"injectables/SettingsService.html":{},"components/TagsFilterComponent.html":{},"injectables/ThirdActionService.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"classes/ThirdsServiceMock.html":{},"injectables/TimeEffects.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"interceptors/TokenInjector.html":{},"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"components/TypeFilterComponent.html":{},"classes/UnAuthenticationFromImplicitFlow.html":{},"classes/UselessAuthAction.html":{},"injectables/UserEffects.html":{},"injectables/UserService.html":{}}}],["observable.create(observer",{"_index":2135,"title":{},"body":{"injectables/CardService.html":{}}}],["observer.error(error",{"_index":2149,"title":{},"body":{"injectables/CardService.html":{}}}],["observer.error(message",{"_index":2140,"title":{},"body":{"injectables/CardService.html":{}}}],["observer.next(json.parse(message.data",{"_index":2141,"title":{},"body":{"injectables/CardService.html":{}}}],["obtain",{"_index":344,"title":{},"body":{"components/ActionComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"modules/ArchivesModule.html":{},"modules/ArchivesRoutingModule.html":{},"components/CardComponent.html":{},"components/CardListComponent.html":{},"modules/CardsModule.html":{},"components/CustomLogoComponent.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailsComponent.html":{},"components/FeedComponent.html":{},"modules/FeedModule.html":{},"modules/FeedRoutingModule.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/MenuLinkComponent.html":{},"components/MultiFilterComponent.html":{},"components/NavbarComponent.html":{},"components/ResizableComponent.html":{},"modules/ServicesModule.html":{},"modules/SettingsModule.html":{},"modules/SettingsRoutingModule.html":{},"modules/StateModule.html":{},"components/TagsFilterComponent.html":{},"modules/ThirdpartyModule.html":{},"modules/ThirdpartyRoutingModule.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"modules/UtilitiesModule.html":{}}}],["oc",{"_index":3849,"title":{},"body":{"components/ResizableComponent.html":{},"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["occurred",{"_index":2145,"title":{},"body":{"injectables/CardService.html":{}}}],["of(0",{"_index":1054,"title":{},"body":{"components/ArchiveListPageComponent.html":{}}}],["of([]))).subscribe(d",{"_index":4448,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["of([new",{"_index":4247,"title":{},"body":{"classes/ThirdsServiceMock.html":{}}}],["of(auth",{"_index":1293,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["of(error",{"_index":1550,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["of(new",{"_index":1522,"title":{},"body":{"injectables/AuthenticationEffects.html":{},"injectables/LightCardEffects.html":{},"injectables/MenuEffects.html":{},"injectables/SettingsEffects.html":{},"injectables/TimeEffects.html":{},"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["of(null",{"_index":1252,"title":{},"body":{"classes/AuthObject.html":{},"injectables/AuthenticationEffects.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["of(template",{"_index":3207,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["of(third",{"_index":4138,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["of(this.handlerejectedlogin(new",{"_index":1512,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["of(true",{"_index":4262,"title":{},"body":{"classes/ThirdsServiceMock.html":{}}}],["of(v",{"_index":3483,"title":{},"body":{"components/ListSettingComponent.html":{},"components/MultiFilterComponent.html":{}}}],["of(v.label",{"_index":3486,"title":{},"body":{"components/ListSettingComponent.html":{},"components/MultiFilterComponent.html":{}}}],["ofactions/archive.actions",{"_index":934,"title":{},"body":{"injectables/ArchiveEffects.html":{},"components/ArchiveListPageComponent.html":{},"injectables/CustomRouterEffects.html":{}}}],["ofactions/authentication.actions",{"_index":1137,"title":{},"body":{"classes/AuthObject.html":{},"injectables/AuthenticationEffects.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["ofactions/card.actions",{"_index":1583,"title":{},"body":{"injectables/AuthenticationEffects.html":{},"injectables/CardEffects.html":{},"injectables/CardOperationEffects.html":{},"injectables/CustomRouterEffects.html":{},"injectables/LightCardEffects.html":{}}}],["ofactions/config.actions",{"_index":592,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthenticationEffects.html":{},"injectables/ConfigEffects.html":{}}}],["ofactions/feed.actions",{"_index":2066,"title":{},"body":{"injectables/CardOperationEffects.html":{},"injectables/FeedFiltersEffects.html":{},"components/TagsFilterComponent.html":{},"components/TimeFilterComponent.html":{},"components/TypeFilterComponent.html":{}}}],["ofactions/light",{"_index":1581,"title":{},"body":{"injectables/AuthenticationEffects.html":{},"injectables/CardOperationEffects.html":{},"injectables/CustomRouterEffects.html":{},"injectables/LightCardEffects.html":{},"injectables/ThirdActionService.html":{},"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["ofactions/menu.actions",{"_index":2379,"title":{},"body":{"injectables/CustomRouterEffects.html":{},"injectables/MenuEffects.html":{},"components/NavbarComponent.html":{},"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["ofactions/settings.actions",{"_index":1658,"title":{},"body":{"components/BaseSettingComponent.html":{},"injectables/FeedFiltersEffects.html":{},"injectables/SettingsEffects.html":{}}}],["ofactions/time.actions",{"_index":2902,"title":{},"body":{"injectables/FeedFiltersEffects.html":{},"injectables/TimeEffects.html":{}}}],["ofactions/timeline.actions",{"_index":4352,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["ofactions/translate.actions",{"_index":4619,"title":{},"body":{"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["ofeffects/archive.effects",{"_index":856,"title":{},"body":{"interfaces/AppState.html":{}}}],["ofeffects/authentication.effects",{"_index":811,"title":{},"body":{"interfaces/AppState.html":{}}}],["ofeffects/card",{"_index":809,"title":{},"body":{"interfaces/AppState.html":{}}}],["ofeffects/card.effects",{"_index":807,"title":{},"body":{"interfaces/AppState.html":{}}}],["ofeffects/config.effects",{"_index":846,"title":{},"body":{"interfaces/AppState.html":{}}}],["ofeffects/custom",{"_index":834,"title":{},"body":{"interfaces/AppState.html":{}}}],["ofeffects/feed",{"_index":842,"title":{},"body":{"interfaces/AppState.html":{}}}],["ofeffects/light",{"_index":839,"title":{},"body":{"interfaces/AppState.html":{}}}],["ofeffects/menu.effects",{"_index":838,"title":{},"body":{"interfaces/AppState.html":{}}}],["ofeffects/settings.effects",{"_index":850,"title":{},"body":{"interfaces/AppState.html":{}}}],["ofeffects/time.effects",{"_index":853,"title":{},"body":{"interfaces/AppState.html":{}}}],["ofeffects/translate.effects",{"_index":865,"title":{},"body":{"interfaces/AppState.html":{}}}],["ofeffects/user.effects",{"_index":861,"title":{},"body":{"interfaces/AppState.html":{}}}],["ofmap",{"_index":191,"title":{},"body":{"classes/Action.html":{},"classes/ActionStatus.html":{},"classes/Input.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{}}}],["ofmap.prototype",{"_index":249,"title":{},"body":{"classes/Action.html":{},"classes/ActionStatus.html":{},"classes/Input.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{}}}],["ofmodel/archive",{"_index":1078,"title":{},"body":{"interfaces/ArchiveState.html":{}}}],["ofmodel/card",{"_index":2069,"title":{},"body":{"injectables/CardOperationEffects.html":{},"injectables/CardService.html":{}}}],["ofmodel/card.model",{"_index":188,"title":{},"body":{"classes/Action.html":{},"classes/ActionStatus.html":{},"classes/AddActionsAppear.html":{},"components/CardDetailsComponent.html":{},"injectables/CardEffects.html":{},"injectables/CardService.html":{},"interfaces/CardState.html":{},"classes/ClearCard.html":{},"components/DetailComponent.html":{},"classes/DetailContext.html":{},"components/DetailsComponent.html":{},"classes/HandleUnexpectedError-1.html":{},"injectables/HandlebarsService.html":{},"classes/Input.html":{},"classes/LoadArchivedCard.html":{},"classes/LoadArchivedCardFailure.html":{},"classes/LoadArchivedCardSuccess.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["ofmodel/datetime",{"_index":965,"title":{},"body":{"components/ArchiveFiltersComponent.html":{}}}],["ofmodel/detail",{"_index":2581,"title":{},"body":{"components/DetailComponent.html":{},"injectables/HandlebarsService.html":{}}}],["ofmodel/feed",{"_index":879,"title":{},"body":{"classes/ApplyFilter.html":{},"interfaces/CardFeedState.html":{},"injectables/FilterService.html":{},"classes/InitFilters.html":{},"components/TagsFilterComponent.html":{},"components/TimeFilterComponent.html":{},"components/TypeFilterComponent.html":{}}}],["ofmodel/i18n.model",{"_index":189,"title":{},"body":{"classes/Action.html":{},"components/ActionComponent.html":{},"classes/ActionStatus.html":{},"injectables/AuthenticationEffects.html":{},"classes/Card.html":{},"classes/Detail.html":{},"components/DetailComponent.html":{},"classes/Input.html":{},"classes/LightCard.html":{},"components/ListSettingComponent.html":{},"classes/Message.html":{},"components/MultiFilterComponent.html":{},"classes/Page.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"injectables/TimeEffects.html":{},"classes/TimeSpan.html":{}}}],["ofmodel/light",{"_index":480,"title":{},"body":{"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"injectables/ArchiveEffects.html":{},"components/ArchiveListComponent.html":{},"classes/ArchiveQuerySuccess.html":{},"interfaces/ArchiveState.html":{},"components/ArchivesComponent.html":{},"classes/Card.html":{},"components/CardComponent.html":{},"interfaces/CardFeedState.html":{},"components/CardListComponent.html":{},"injectables/CardService.html":{},"classes/ClearLightCardSelection.html":{},"classes/DelayedLightCardUpdate.html":{},"classes/Detail.html":{},"classes/EmptyLightCards.html":{},"components/FeedComponent.html":{},"classes/Filter.html":{},"injectables/FilterService.html":{},"classes/HandleUnexpectedError.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/LightCardAlreadyUpdated.html":{},"injectables/LightCardEffects.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/Page.html":{},"classes/RemoveLightCard.html":{},"classes/SelectArchivedLightCard.html":{},"classes/SelectLightCard.html":{},"classes/SendArchiveQuery.html":{},"classes/ThirdActionAlreadyLoaded.html":{},"classes/ThirdActionAlreadyUpdated.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"components/TimeLineComponent.html":{},"interfaces/TimelineState.html":{},"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateAnActionFailure.html":{},"classes/UpdateArchiveFilter.html":{},"classes/UpdateArchivePage.html":{},"classes/UpdatedSubscription.html":{}}}],["ofmodel/map",{"_index":192,"title":{},"body":{"classes/Action.html":{},"classes/ActionStatus.html":{},"injectables/AuthenticationEffects.html":{},"injectables/HandlebarsService.html":{},"classes/I18n.html":{},"classes/Input.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/RefreshTranslation.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"injectables/TimeEffects.html":{},"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{},"interfaces/TranslationState.html":{},"classes/TranslationUpToDate.html":{},"classes/UpdateTranslation.html":{},"classes/UpdateTranslationFailed.html":{},"classes/UpdateTranslationSuccessful.html":{}}}],["ofmodel/message.model",{"_index":56,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"interfaces/AuthState.html":{},"injectables/AuthenticationEffects.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckImplicitFlowAuthenticationStatus.html":{},"classes/FailToUpdateTimeReference.html":{},"classes/ImplicitlyAuthenticated.html":{},"classes/InitAuthStatus.html":{},"components/LoginComponent.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/Tick.html":{},"classes/TickPayload.html":{},"injectables/TimeEffects.html":{},"interfaces/TimeState.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"classes/UnAuthenticationFromImplicitFlow.html":{},"classes/UpdateTimeReference.html":{},"classes/UselessAuthAction.html":{}}}],["ofmodel/page.model",{"_index":937,"title":{},"body":{"injectables/ArchiveEffects.html":{},"classes/ArchiveQuerySuccess.html":{},"interfaces/ArchiveState.html":{},"injectables/CardService.html":{},"classes/HandleUnexpectedError.html":{},"classes/SelectArchivedLightCard.html":{},"classes/SendArchiveQuery.html":{},"classes/UpdateArchiveFilter.html":{},"classes/UpdateArchivePage.html":{}}}],["ofmodel/thirds.model",{"_index":316,"title":{},"body":{"components/ActionComponent.html":{},"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"components/CardComponent.html":{},"classes/ClearLightCardSelection.html":{},"classes/DelayedLightCardUpdate.html":{},"components/DetailComponent.html":{},"classes/EmptyLightCards.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/HandleUnexpectedError-4.html":{},"classes/LightCard.html":{},"classes/LightCardAlreadyUpdated.html":{},"injectables/LightCardEffects.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"components/MenuLinkComponent.html":{},"interfaces/MenuState.html":{},"components/NavbarComponent.html":{},"classes/RemoveLightCard.html":{},"classes/SelectLightCard.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{},"classes/ThirdActionAlreadyLoaded.html":{},"classes/ThirdActionAlreadyUpdated.html":{},"injectables/ThirdActionService.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"classes/ThirdsServiceMock.html":{},"classes/TimeSpan.html":{},"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateAnActionFailure.html":{},"classes/UpdatedSubscription.html":{}}}],["ofmodel/time.model",{"_index":2791,"title":{},"body":{"classes/FailToUpdateTimeReference.html":{},"classes/Tick.html":{},"classes/TickPayload.html":{},"injectables/TimeEffects.html":{},"interfaces/TimeState.html":{},"classes/UpdateTimeReference.html":{}}}],["ofmodel/user",{"_index":2584,"title":{},"body":{"components/DetailComponent.html":{},"classes/DetailContext.html":{}}}],["ofmodel/user.model",{"_index":1144,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/CreateUserApplication.html":{},"classes/CreateUserApplicationOnFailure.html":{},"classes/CreateUserApplicationOnSuccess.html":{},"classes/HandleUnexpectedError-6.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"classes/UserApplicationNotRegistered.html":{},"classes/UserApplicationRegistered.html":{},"injectables/UserEffects.html":{},"injectables/UserService.html":{}}}],["ofselectors/archive.selectors",{"_index":936,"title":{},"body":{"injectables/ArchiveEffects.html":{},"components/ArchivesComponent.html":{}}}],["ofselectors/authentication.selectors",{"_index":1155,"title":{},"body":{"classes/AuthObject.html":{},"injectables/AuthenticationEffects.html":{},"interfaces/AuthenticationModeHandler.html":{},"components/BaseSettingComponent.html":{},"classes/CheckTokenResponse.html":{},"components/DetailComponent.html":{},"classes/ImplicitAuthenticationHandler.html":{},"components/InfoComponent.html":{},"components/LoginComponent.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"injectables/SettingsService.html":{}}}],["ofselectors/card.selectors",{"_index":2068,"title":{},"body":{"injectables/CardOperationEffects.html":{}}}],["ofselectors/config.selectors",{"_index":596,"title":{},"body":{"components/AppComponent.html":{},"components/ArchiveFiltersComponent.html":{},"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"classes/CheckTokenResponse.html":{},"injectables/ConfigEffects.html":{},"components/FeedComponent.html":{},"injectables/FeedFiltersEffects.html":{},"classes/ImplicitAuthenticationHandler.html":{},"components/LoginComponent.html":{},"components/MenuLinkComponent.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"components/SettingsComponent.html":{},"interfaces/SettingsInputs.html":{}}}],["ofselectors/feed.selectors",{"_index":2826,"title":{},"body":{"components/FeedComponent.html":{},"injectables/FeedFiltersEffects.html":{},"injectables/LightCardEffects.html":{},"components/TagsFilterComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeFilterComponent.html":{}}}],["ofselectors/menu.selectors",{"_index":3344,"title":{},"body":{"components/IframeDisplayComponent.html":{},"components/NavbarComponent.html":{}}}],["ofselectors/router.selectors",{"_index":589,"title":{},"body":{"components/AppComponent.html":{},"components/NavbarComponent.html":{}}}],["ofselectors/settings.selectors",{"_index":1660,"title":{},"body":{"components/BaseSettingComponent.html":{},"components/InfoComponent.html":{}}}],["ofselectors/settings.x.config.selectors",{"_index":3171,"title":{},"body":{"injectables/HandlebarsService.html":{},"injectables/I18nService.html":{},"components/InfoComponent.html":{}}}],["ofselectors/time.selectors",{"_index":3375,"title":{},"body":{"components/InfoComponent.html":{},"injectables/TimeEffects.html":{}}}],["ofselectors/translation.selectors",{"_index":4621,"title":{},"body":{"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["ofservices/authentication/auth",{"_index":1151,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["ofservices/authentication/authentication.service",{"_index":590,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthenticationEffects.html":{},"components/LoginComponent.html":{},"injectables/UserEffects.html":{}}}],["ofservices/card.service",{"_index":926,"title":{},"body":{"injectables/ArchiveEffects.html":{},"injectables/AuthenticationEffects.html":{},"injectables/CardEffects.html":{},"injectables/CardOperationEffects.html":{}}}],["ofservices/config.service",{"_index":2215,"title":{},"body":{"injectables/ConfigEffects.html":{},"modules/ServicesModule.html":{}}}],["ofservices/filter.service",{"_index":882,"title":{},"body":{"classes/ApplyFilter.html":{},"interfaces/CardFeedState.html":{},"injectables/CardOperationEffects.html":{},"injectables/FeedFiltersEffects.html":{},"classes/InitFilters.html":{},"modules/ServicesModule.html":{},"components/TagsFilterComponent.html":{},"components/TimeFilterComponent.html":{},"components/TypeFilterComponent.html":{}}}],["ofservices/guard.service",{"_index":1112,"title":{},"body":{"modules/ArchivesRoutingModule.html":{},"modules/FeedRoutingModule.html":{}}}],["ofservices/guid.service",{"_index":1139,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"injectables/CardService.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"modules/ServicesModule.html":{}}}],["ofservices/i18n.service",{"_index":597,"title":{},"body":{"components/AppComponent.html":{},"modules/ServicesModule.html":{}}}],["ofservices/notify.service",{"_index":2108,"title":{},"body":{"injectables/CardService.html":{},"components/FeedComponent.html":{},"modules/ServicesModule.html":{}}}],["ofservices/services.module",{"_index":674,"title":{},"body":{"modules/AppModule.html":{}}}],["ofservices/settings.service",{"_index":3890,"title":{},"body":{"modules/ServicesModule.html":{},"injectables/SettingsEffects.html":{}}}],["ofservices/third",{"_index":320,"title":{},"body":{"components/ActionComponent.html":{},"modules/ServicesModule.html":{}}}],["ofservices/thirds.service",{"_index":1914,"title":{},"body":{"components/CardDetailsComponent.html":{},"components/DetailComponent.html":{},"injectables/LightCardEffects.html":{},"injectables/MenuEffects.html":{},"modules/ServicesModule.html":{},"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["ofservices/time.service",{"_index":969,"title":{},"body":{"components/ArchiveFiltersComponent.html":{},"components/CardComponent.html":{},"injectables/CardService.html":{},"modules/FeedModule.html":{},"injectables/HandlebarsService.html":{},"components/InfoComponent.html":{},"modules/ServicesModule.html":{},"injectables/TimeEffects.html":{},"components/TimeFilterComponent.html":{},"pipes/XAxisTickFormatPipe.html":{}}}],["ofservices/user.service",{"_index":4895,"title":{},"body":{"injectables/UserEffects.html":{}}}],["ofstates/archive.state",{"_index":854,"title":{},"body":{"interfaces/AppState.html":{}}}],["ofstates/authentication.state",{"_index":831,"title":{},"body":{"interfaces/AppState.html":{}}}],["ofstates/card.state",{"_index":832,"title":{},"body":{"interfaces/AppState.html":{}}}],["ofstates/config.state",{"_index":844,"title":{},"body":{"interfaces/AppState.html":{},"injectables/ConfigEffects.html":{}}}],["ofstates/feed.state",{"_index":813,"title":{},"body":{"interfaces/AppState.html":{},"interfaces/TimelineState.html":{}}}],["ofstates/menu.state",{"_index":836,"title":{},"body":{"interfaces/AppState.html":{}}}],["ofstates/settings.state",{"_index":848,"title":{},"body":{"interfaces/AppState.html":{}}}],["ofstates/time.state",{"_index":851,"title":{},"body":{"interfaces/AppState.html":{}}}],["ofstates/timeline.state",{"_index":847,"title":{},"body":{"interfaces/AppState.html":{}}}],["ofstates/translation.state",{"_index":866,"title":{},"body":{"interfaces/AppState.html":{}}}],["ofstates/user.state",{"_index":859,"title":{},"body":{"interfaces/AppState.html":{}}}],["ofstore/actions/archive.actions",{"_index":963,"title":{},"body":{"components/ArchiveFiltersComponent.html":{}}}],["ofstore/actions/authentication.actions",{"_index":3936,"title":{},"body":{"injectables/SettingsEffects.html":{},"injectables/UserEffects.html":{}}}],["ofstore/actions/card.actions",{"_index":1843,"title":{},"body":{"components/CardComponent.html":{},"components/CardListComponent.html":{}}}],["ofstore/actions/light",{"_index":1915,"title":{},"body":{"components/CardDetailsComponent.html":{},"injectables/CardEffects.html":{}}}],["ofstore/actions/user.actions",{"_index":2072,"title":{},"body":{"injectables/CardOperationEffects.html":{},"injectables/FeedFiltersEffects.html":{},"injectables/SettingsEffects.html":{},"injectables/TimeEffects.html":{},"injectables/UserEffects.html":{}}}],["ofstore/index",{"_index":586,"title":{},"body":{"components/AppComponent.html":{},"injectables/ArchiveEffects.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"classes/AuthObject.html":{},"injectables/AuthenticationEffects.html":{},"interfaces/AuthenticationModeHandler.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"injectables/CardEffects.html":{},"components/CardListComponent.html":{},"injectables/CardOperationEffects.html":{},"classes/CheckTokenResponse.html":{},"injectables/ConfigEffects.html":{},"injectables/ConfigService.html":{},"injectables/CustomRouterEffects.html":{},"components/DetailComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"injectables/FeedFiltersEffects.html":{},"components/FiltersComponent.html":{},"injectables/HandlebarsService.html":{},"injectables/I18nService.html":{},"components/IframeDisplayComponent.html":{},"classes/ImplicitAuthenticationHandler.html":{},"components/InfoComponent.html":{},"injectables/LightCardEffects.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"injectables/MenuEffects.html":{},"components/MenuLinkComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"components/SettingsComponent.html":{},"injectables/SettingsEffects.html":{},"interfaces/SettingsInputs.html":{},"injectables/SettingsService.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"injectables/ThirdActionService.html":{},"injectables/TimeEffects.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"injectables/UserEffects.html":{}}}],["ofstore/reducers/archive.reducer",{"_index":830,"title":{},"body":{"interfaces/AppState.html":{}}}],["ofstore/reducers/authentication.reducer",{"_index":799,"title":{},"body":{"interfaces/AppState.html":{}}}],["ofstore/reducers/card.reducer",{"_index":820,"title":{},"body":{"interfaces/AppState.html":{}}}],["ofstore/reducers/config.reducer",{"_index":822,"title":{},"body":{"interfaces/AppState.html":{}}}],["ofstore/reducers/light",{"_index":817,"title":{},"body":{"interfaces/AppState.html":{}}}],["ofstore/reducers/menu.reducer",{"_index":826,"title":{},"body":{"interfaces/AppState.html":{}}}],["ofstore/reducers/settings.reducer",{"_index":824,"title":{},"body":{"interfaces/AppState.html":{}}}],["ofstore/reducers/time.reducer",{"_index":828,"title":{},"body":{"interfaces/AppState.html":{}}}],["ofstore/reducers/timeline.reducer",{"_index":815,"title":{},"body":{"interfaces/AppState.html":{}}}],["ofstore/reducers/translation.reducer",{"_index":863,"title":{},"body":{"interfaces/AppState.html":{}}}],["ofstore/reducers/user.reducer",{"_index":858,"title":{},"body":{"interfaces/AppState.html":{}}}],["ofstore/selectors/archive.selectors",{"_index":1029,"title":{},"body":{"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{}}}],["ofstore/selectors/card.selectors",{"_index":1845,"title":{},"body":{"components/CardComponent.html":{},"components/CardDetailsComponent.html":{}}}],["ofstore/selectors/config.selectors",{"_index":1049,"title":{},"body":{"components/ArchiveListPageComponent.html":{},"injectables/AuthenticationEffects.html":{},"components/FiltersComponent.html":{},"components/NavbarComponent.html":{},"components/TimeLineComponent.html":{}}}],["ofstore/selectors/router.selectors",{"_index":1842,"title":{},"body":{"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{}}}],["ofstore/state.module",{"_index":672,"title":{},"body":{"modules/AppModule.html":{}}}],["ofstore/states/router.state",{"_index":797,"title":{},"body":{"interfaces/AppState.html":{},"modules/StateModule.html":{}}}],["oftype",{"_index":924,"title":{},"body":{"injectables/ArchiveEffects.html":{},"injectables/AuthenticationEffects.html":{},"injectables/CardEffects.html":{},"injectables/CardOperationEffects.html":{},"injectables/ConfigEffects.html":{},"injectables/CustomRouterEffects.html":{},"injectables/FeedFiltersEffects.html":{},"injectables/LightCardEffects.html":{},"injectables/MenuEffects.html":{},"injectables/SettingsEffects.html":{},"injectables/TimeEffects.html":{},"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{},"injectables/UserEffects.html":{}}}],["oftype(archiveactiontypes.sendarchivequery",{"_index":900,"title":{},"body":{"injectables/ArchiveEffects.html":{}}}],["oftype(archiveactiontypes.updatearchivepage",{"_index":914,"title":{},"body":{"injectables/ArchiveEffects.html":{}}}],["oftype(authenticationactiontypes.acceptlogin",{"_index":4862,"title":{},"body":{"injectables/UserEffects.html":{}}}],["oftype(authenticationactiontypes.acceptlogout",{"_index":1490,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["oftype(authenticationactiontypes.checkauthenticationstatus",{"_index":1501,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["oftype(authenticationactiontypes.trytologin",{"_index":1561,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["oftype(authenticationactiontypes.trytologout",{"_index":1573,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["oftype(cardactiontypes.loadarchivedcard",{"_index":1938,"title":{},"body":{"injectables/CardEffects.html":{}}}],["oftype(cardactiontypes.loadcard",{"_index":1946,"title":{},"body":{"injectables/CardEffects.html":{},"injectables/LightCardEffects.html":{}}}],["oftype(configactiontypes.loadconfig",{"_index":2202,"title":{},"body":{"injectables/ConfigEffects.html":{}}}],["oftype(configactiontypes.loadconfigfailure",{"_index":2223,"title":{},"body":{"injectables/ConfigEffects.html":{}}}],["oftype(configactiontypes.loadconfigsuccess",{"_index":1539,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["oftype(feedactiontypes.applyfilter",{"_index":2058,"title":{},"body":{"injectables/CardOperationEffects.html":{}}}],["oftype(lightcardactiontypes.addthirdactions",{"_index":3450,"title":{},"body":{"injectables/LightCardEffects.html":{}}}],["oftype(lightcardactiontypes.clearlightcardselection",{"_index":1936,"title":{},"body":{"injectables/CardEffects.html":{}}}],["oftype(lightcardactiontypes.delayedlightcardupdate",{"_index":3423,"title":{},"body":{"injectables/LightCardEffects.html":{}}}],["oftype(lightcardactiontypes.loadlightcardssuccess",{"_index":2028,"title":{},"body":{"injectables/CardOperationEffects.html":{},"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["oftype(lightcardactiontypes.updateanaction",{"_index":3432,"title":{},"body":{"injectables/LightCardEffects.html":{}}}],["oftype(menuactiontypes.loadmenu",{"_index":3588,"title":{},"body":{"injectables/MenuEffects.html":{}}}],["oftype(menuactiontypes.loadmenusuccess",{"_index":4680,"title":{},"body":{"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["oftype(menuactiontypes.selectmenulink",{"_index":3594,"title":{},"body":{"injectables/MenuEffects.html":{}}}],["oftype(router_navigation",{"_index":2347,"title":{},"body":{"injectables/CustomRouterEffects.html":{}}}],["oftype(router_request",{"_index":2341,"title":{},"body":{"injectables/CustomRouterEffects.html":{}}}],["oftype(settingsactiontypes.loadsettings",{"_index":3922,"title":{},"body":{"injectables/SettingsEffects.html":{}}}],["oftype(settingsactiontypes.loadsettingssuccess",{"_index":2857,"title":{},"body":{"injectables/FeedFiltersEffects.html":{}}}],["oftype(settingsactiontypes.patchsettings",{"_index":3930,"title":{},"body":{"injectables/SettingsEffects.html":{}}}],["oftype(timeactiontypes.tick",{"_index":2880,"title":{},"body":{"injectables/FeedFiltersEffects.html":{}}}],["oftype(translateactionstypes.updatetranslation",{"_index":4623,"title":{},"body":{"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["oftype(translateactionstypes.updatetranslationsuccessful",{"_index":4653,"title":{},"body":{"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["oftype(useractionstypes.createuserapplication",{"_index":4877,"title":{},"body":{"injectables/UserEffects.html":{}}}],["oftype(useractionstypes.createuserapplicationonsuccess",{"_index":4893,"title":{},"body":{"injectables/UserEffects.html":{}}}],["oftype(useractionstypes.userapplicationnotregistered",{"_index":4887,"title":{},"body":{"injectables/UserEffects.html":{}}}],["oftype(useractionstypes.userapplicationregistered",{"_index":2044,"title":{},"body":{"injectables/CardOperationEffects.html":{},"injectables/FeedFiltersEffects.html":{},"injectables/SettingsEffects.html":{},"injectables/TimeEffects.html":{}}}],["oidc",{"_index":707,"title":{},"body":{"modules/AppModule.html":{},"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"components/LoginComponent.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"dependencies.html":{}}}],["ok",{"_index":1534,"title":{},"body":{"injectables/AuthenticationEffects.html":{},"injectables/CardOperationEffects.html":{},"components/ConfirmModalComponent.html":{},"injectables/FeedFiltersEffects.html":{},"miscellaneous/enumerations.html":{}}}],["old",{"_index":3857,"title":{},"body":{"components/ResizableComponent.html":{}}}],["omit",{"_index":222,"title":{},"body":{"classes/Action.html":{},"classes/ActionStatus.html":{},"classes/Input.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"miscellaneous/typealiases.html":{}}}],["once",{"_index":569,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthenticationEffects.html":{},"injectables/FeedFiltersEffects.html":{},"components/ResizableComponent.html":{}}}],["onchange",{"_index":2477,"title":{},"body":{"components/DatetimeFilterComponent.html":{}}}],["onchange(event",{"_index":2486,"title":{},"body":{"components/DatetimeFilterComponent.html":{}}}],["onchanges",{"_index":2478,"title":{},"body":{"components/DatetimeFilterComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{}}}],["ondestroy",{"_index":1620,"title":{},"body":{"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/EmailSettingComponent.html":{},"components/ListSettingComponent.html":{},"components/MultiSettingsComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{}}}],["ondragend(event",{"_index":2741,"title":{},"body":{"directives/DraggableDirective.html":{}}}],["one",{"_index":345,"title":{},"body":{"components/ActionComponent.html":{},"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"classes/ArchiveQuerySuccess.html":{},"components/ArchivesComponent.html":{},"modules/ArchivesModule.html":{},"modules/ArchivesRoutingModule.html":{},"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"directives/CalcHeightDirective.html":{},"components/CardComponent.html":{},"components/CardListComponent.html":{},"modules/CardsModule.html":{},"classes/CheckTokenResponse.html":{},"classes/ClearLightCardSelection.html":{},"components/CustomLogoComponent.html":{},"components/DatetimeFilterComponent.html":{},"classes/DelayedLightCardUpdate.html":{},"components/DetailsComponent.html":{},"classes/EmptyLightCards.html":{},"components/FeedComponent.html":{},"modules/FeedModule.html":{},"modules/FeedRoutingModule.html":{},"classes/HandleUnexpectedError.html":{},"classes/HandleUnexpectedError-3.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"classes/ImplicitAuthenticationHandler.html":{},"components/InfoComponent.html":{},"classes/LightCardAlreadyUpdated.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"components/MenuLinkComponent.html":{},"components/MultiFilterComponent.html":{},"components/NavbarComponent.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"classes/RemoveLightCard.html":{},"components/ResizableComponent.html":{},"classes/SelectArchivedLightCard.html":{},"classes/SelectLightCard.html":{},"classes/SendArchiveQuery.html":{},"modules/ServicesModule.html":{},"modules/SettingsModule.html":{},"modules/SettingsRoutingModule.html":{},"modules/StateModule.html":{},"components/TagsFilterComponent.html":{},"classes/ThirdActionAlreadyLoaded.html":{},"classes/ThirdActionAlreadyUpdated.html":{},"modules/ThirdpartyModule.html":{},"modules/ThirdpartyRoutingModule.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateAnActionFailure.html":{},"classes/UpdateArchiveFilter.html":{},"classes/UpdateArchivePage.html":{},"classes/UpdatedSubscription.html":{},"modules/UtilitiesModule.html":{},"pipes/XAxisTickFormatPipe.html":{},"miscellaneous/enumerations.html":{}}}],["one_second",{"_index":1157,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["ongoing",{"_index":1961,"title":{},"body":{"interfaces/CardFeedState.html":{},"interfaces/TimelineState.html":{}}}],["oninit",{"_index":287,"title":{},"body":{"components/ActionComponent.html":{},"components/AppComponent.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseSettingComponent.html":{},"directives/CalcHeightDirective.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/CustomLogoComponent.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MenuLinkComponent.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/SettingsComponent.html":{},"interfaces/SettingsInputs.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{}}}],["onmousewheel",{"_index":3652,"title":{},"body":{"directives/MouseWheelDirective.html":{}}}],["onmousewheel(event",{"_index":3659,"title":{},"body":{"directives/MouseWheelDirective.html":{}}}],["onmousewheelchrome(event",{"_index":3666,"title":{},"body":{"directives/MouseWheelDirective.html":{}}}],["onmousewheelfirefox(event",{"_index":3669,"title":{},"body":{"directives/MouseWheelDirective.html":{}}}],["onmousewheelie(event",{"_index":3671,"title":{},"body":{"directives/MouseWheelDirective.html":{}}}],["onpointerdown(event",{"_index":2724,"title":{},"body":{"directives/DraggableDirective.html":{}}}],["onpointermove(event",{"_index":2728,"title":{},"body":{"directives/DraggableDirective.html":{}}}],["onpointerup(event",{"_index":2731,"title":{},"body":{"directives/DraggableDirective.html":{}}}],["onresize",{"_index":1735,"title":{},"body":{"directives/CalcHeightDirective.html":{},"components/ResizableComponent.html":{}}}],["onsubmit",{"_index":122,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckImplicitFlowAuthenticationStatus.html":{},"classes/ImplicitlyAuthenticated.html":{},"classes/InitAuthStatus.html":{},"components/LoginComponent.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"classes/UnAuthenticationFromImplicitFlow.html":{},"classes/UselessAuthAction.html":{}}}],["ontouched",{"_index":2476,"title":{},"body":{"components/DatetimeFilterComponent.html":{}}}],["open",{"_index":1816,"title":{},"body":{"components/CardComponent.html":{}}}],["open(confirmmodalcomponent",{"_index":4087,"title":{},"body":{"injectables/ThirdActionService.html":{}}}],["operation",{"_index":2259,"title":{},"body":{"components/ConfirmModalComponent.html":{}}}],["operation.cardids",{"_index":2054,"title":{},"body":{"injectables/CardOperationEffects.html":{}}}],["operation.cards",{"_index":2051,"title":{},"body":{"injectables/CardOperationEffects.html":{}}}],["operation.effects",{"_index":810,"title":{},"body":{"interfaces/AppState.html":{}}}],["operation.effects.ts",{"_index":2025,"title":{},"body":{"injectables/CardOperationEffects.html":{}}}],["operation.effects.ts:33",{"_index":2027,"title":{},"body":{"injectables/CardOperationEffects.html":{}}}],["operation.effects.ts:42",{"_index":2057,"title":{},"body":{"injectables/CardOperationEffects.html":{}}}],["operation.effects.ts:74",{"_index":2065,"title":{},"body":{"injectables/CardOperationEffects.html":{}}}],["operation.effects.ts:93",{"_index":2041,"title":{},"body":{"injectables/CardOperationEffects.html":{}}}],["operation.model",{"_index":2070,"title":{},"body":{"injectables/CardOperationEffects.html":{},"injectables/CardService.html":{}}}],["operation.model.ts",{"_index":2010,"title":{},"body":{"classes/CardOperation.html":{},"miscellaneous/enumerations.html":{}}}],["operation.model.ts:11",{"_index":2016,"title":{},"body":{"classes/CardOperation.html":{}}}],["operation.model.ts:22",{"_index":2018,"title":{},"body":{"classes/CardOperation.html":{}}}],["operation.type",{"_index":2048,"title":{},"body":{"injectables/CardOperationEffects.html":{}}}],["operations",{"_index":2043,"title":{},"body":{"injectables/CardOperationEffects.html":{},"injectables/FeedFiltersEffects.html":{}}}],["operator",{"_index":3216,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["operatorfabric",{"_index":580,"title":{},"body":{"components/AppComponent.html":{},"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["option",{"_index":1762,"title":{},"body":{"directives/CalcHeightDirective.html":{}}}],["optional",{"_index":47,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/Action.html":{},"components/ActionComponent.html":{},"classes/ActionStatus.html":{},"classes/AddActionsAppear.html":{},"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"components/AppComponent.html":{},"classes/ApplyFilter.html":{},"injectables/ArchiveEffects.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"classes/ArchiveQuerySuccess.html":{},"components/ArchivesComponent.html":{},"classes/AuthObject.html":{},"injectables/AuthenticationEffects.html":{},"interfaces/AuthenticationModeHandler.html":{},"components/BaseSettingComponent.html":{},"directives/CalcHeightDirective.html":{},"classes/Card.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"injectables/CardEffects.html":{},"components/CardListComponent.html":{},"classes/CardOperation.html":{},"injectables/CardOperationEffects.html":{},"injectables/CardService.html":{},"classes/CheckTokenResponse.html":{},"injectables/ConfigEffects.html":{},"injectables/ConfigService.html":{},"components/ConfirmModalComponent.html":{},"classes/CreateUserApplication.html":{},"classes/CreateUserApplicationOnFailure.html":{},"classes/CreateUserApplicationOnSuccess.html":{},"components/CustomLogoComponent.html":{},"injectables/CustomRouterEffects.html":{},"classes/CustomRouterStateSerializer.html":{},"classes/DateTimeNgb.html":{},"components/DatetimeFilterComponent.html":{},"classes/DelayedLightCardUpdate.html":{},"classes/Detail.html":{},"components/DetailComponent.html":{},"classes/DetailContext.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"classes/FailToUpdateTimeReference.html":{},"components/FeedComponent.html":{},"injectables/FeedFiltersEffects.html":{},"classes/Filter.html":{},"components/FiltersComponent.html":{},"classes/HandleUnexpectedError.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/HandleUnexpectedError-4.html":{},"classes/HandleUnexpectedError-5.html":{},"classes/HandleUnexpectedError-6.html":{},"injectables/HandlebarsService.html":{},"classes/I18n.html":{},"injectables/I18nService.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"classes/ImplicitAuthenticationHandler.html":{},"components/InfoComponent.html":{},"classes/InitAuthStatus.html":{},"classes/InitFilters.html":{},"classes/InitTimeline.html":{},"classes/Input.html":{},"classes/LightCard.html":{},"injectables/LightCardEffects.html":{},"components/ListSettingComponent.html":{},"classes/LoadArchivedCard.html":{},"classes/LoadArchivedCardFailure.html":{},"classes/LoadArchivedCardSuccess.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{},"classes/LoadConfigFailure.html":{},"classes/LoadConfigSuccess.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/LoadSettingsFailure.html":{},"classes/LoadSettingsSuccess.html":{},"components/LoginComponent.html":{},"injectables/MenuEffects.html":{},"components/MenuLinkComponent.html":{},"classes/Message.html":{},"directives/MouseWheelDirective.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"injectables/NotifyService.html":{},"classes/Page.html":{},"classes/ParameterListItem.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"classes/PatchSettings.html":{},"classes/PatchSettingsFailure.html":{},"classes/PatchSettingsSuccess.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/Process.html":{},"classes/RejectLogIn.html":{},"classes/RemoveLightCard.html":{},"classes/RouterStateUrl.html":{},"classes/SelectArchivedLightCard.html":{},"classes/SelectLightCard.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{},"classes/SendArchiveQuery.html":{},"modules/ServicesModule.html":{},"classes/SetCardDataTimeline.html":{},"components/SettingsComponent.html":{},"injectables/SettingsEffects.html":{},"injectables/SettingsService.html":{},"classes/State.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"classes/Third.html":{},"injectables/ThirdActionService.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"classes/Tick.html":{},"classes/TickPayload.html":{},"injectables/TimeEffects.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"classes/TimeReference.html":{},"classes/TimeSpan.html":{},"interceptors/TokenInjector.html":{},"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{},"classes/TryToLogIn.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateArchiveFilter.html":{},"classes/UpdateArchivePage.html":{},"classes/UpdateTimeReference.html":{},"classes/UpdateTranslation.html":{},"classes/UpdateTranslationFailed.html":{},"classes/UpdateTranslationSuccessful.html":{},"classes/User.html":{},"classes/UserApplicationNotRegistered.html":{},"classes/UserApplicationRegistered.html":{},"classes/UserContext.html":{},"injectables/UserEffects.html":{},"injectables/UserService.html":{},"pipes/XAxisTickFormatPipe.html":{}}}],["options",{"_index":3218,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["options.hash",{"_index":3250,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["order",{"_index":232,"title":{},"body":{"classes/Action.html":{},"classes/ActionStatus.html":{},"classes/Input.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{}}}],["otherwise",{"_index":773,"title":{},"body":{"modules/AppRoutingModule.html":{},"classes/AuthObject.html":{},"injectables/AuthenticationEffects.html":{},"interfaces/AuthenticationModeHandler.html":{},"components/CardComponent.html":{},"classes/CheckTokenResponse.html":{},"classes/Filter.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["out",{"_index":76,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"modules/AppModule.html":{},"modules/ArchivesModule.html":{},"modules/CardsModule.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckImplicitFlowAuthenticationStatus.html":{},"modules/FeedModule.html":{},"classes/Filter.html":{},"classes/ImplicitlyAuthenticated.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"modules/ServicesModule.html":{},"modules/SettingsModule.html":{},"modules/StateModule.html":{},"modules/ThirdpartyModule.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"classes/UnAuthenticationFromImplicitFlow.html":{},"classes/UselessAuthAction.html":{},"modules/UtilitiesModule.html":{},"miscellaneous/enumerations.html":{},"index.html":{}}}],["output",{"_index":2722,"title":{},"body":{"directives/DraggableDirective.html":{},"directives/MouseWheelDirective.html":{}}}],["outputs",{"_index":2700,"title":{},"body":{"directives/DraggableDirective.html":{},"directives/MouseWheelDirective.html":{}}}],["over",{"_index":1309,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["overflow",{"_index":1031,"title":{},"body":{"components/ArchiveListComponent.html":{},"directives/CalcHeightDirective.html":{},"components/CardListComponent.html":{},"components/DetailsComponent.html":{}}}],["overflow:hidden",{"_index":2530,"title":{},"body":{"components/DatetimeFilterComponent.html":{}}}],["override",{"_index":4181,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["overview",{"_index":5039,"title":{"index.html":{}},"body":{"index.html":{}}}],["package",{"_index":4978,"title":{"dependencies.html":{}},"body":{}}],["padding",{"_index":639,"title":{},"body":{"components/AppComponent.html":{},"components/ArchiveFiltersComponent.html":{},"components/DatetimeFilterComponent.html":{},"components/MenuLinkComponent.html":{}}}],["padnumber(date.day",{"_index":2453,"title":{},"body":{"classes/DateTimeNgb.html":{}}}],["padnumber(date.month",{"_index":2451,"title":{},"body":{"classes/DateTimeNgb.html":{}}}],["padnumber(time.hour",{"_index":2457,"title":{},"body":{"classes/DateTimeNgb.html":{}}}],["padnumber(time.minute",{"_index":2459,"title":{},"body":{"classes/DateTimeNgb.html":{}}}],["padnumber(value",{"_index":2428,"title":{},"body":{"classes/DateTimeNgb.html":{}}}],["page",{"_index":127,"title":{"classes/Page.html":{}},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"modules/AppRoutingModule.html":{},"injectables/ArchiveEffects.html":{},"components/ArchiveListPageComponent.html":{},"classes/ArchiveQuerySuccess.html":{},"interfaces/ArchiveState.html":{},"injectables/AuthenticationEffects.html":{},"injectables/CardService.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckImplicitFlowAuthenticationStatus.html":{},"classes/HandleUnexpectedError.html":{},"classes/ImplicitlyAuthenticated.html":{},"classes/InitAuthStatus.html":{},"injectables/MenuEffects.html":{},"classes/Page.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/SelectArchivedLightCard.html":{},"classes/SendArchiveQuery.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"classes/UnAuthenticationFromImplicitFlow.html":{},"classes/UpdateArchiveFilter.html":{},"classes/UpdateArchivePage.html":{},"classes/UselessAuthAction.html":{},"miscellaneous/enumerations.html":{}}}],["page'},{'name",{"_index":362,"title":{},"body":{"components/ActionComponent.html":{},"components/AppComponent.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/ConfirmModalComponent.html":{},"components/CustomLogoComponent.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MenuLinkComponent.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/ResizableComponent.html":{},"components/SettingsComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{}}}],["page(1",{"_index":1080,"title":{},"body":{"interfaces/ArchiveState.html":{}}}],["page.component",{"_index":1101,"title":{},"body":{"modules/ArchivesModule.html":{}}}],["page.component.html",{"_index":1038,"title":{},"body":{"components/ArchiveListPageComponent.html":{}}}],["page.component.scss",{"_index":1037,"title":{},"body":{"components/ArchiveListPageComponent.html":{}}}],["page.component.ts",{"_index":1036,"title":{},"body":{"components/ArchiveListPageComponent.html":{}}}],["page.component.ts:25",{"_index":1046,"title":{},"body":{"components/ArchiveListPageComponent.html":{}}}],["page.component.ts:26",{"_index":1047,"title":{},"body":{"components/ArchiveListPageComponent.html":{}}}],["page.component.ts:27",{"_index":1041,"title":{},"body":{"components/ArchiveListPageComponent.html":{}}}],["page.component.ts:29",{"_index":1042,"title":{},"body":{"components/ArchiveListPageComponent.html":{}}}],["page.component.ts:38",{"_index":1044,"title":{},"body":{"components/ArchiveListPageComponent.html":{}}}],["page.tostring",{"_index":921,"title":{},"body":{"injectables/ArchiveEffects.html":{}}}],["page/archive",{"_index":1035,"title":{},"body":{"components/ArchiveListPageComponent.html":{},"modules/ArchivesModule.html":{}}}],["page]=\"first",{"_index":1058,"title":{},"body":{"components/ArchiveListPageComponent.html":{}}}],["pagechange)=\"updateresultpage($event",{"_index":1059,"title":{},"body":{"components/ArchiveListPageComponent.html":{}}}],["pair",{"_index":119,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckImplicitFlowAuthenticationStatus.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/ImplicitlyAuthenticated.html":{},"classes/InitAuthStatus.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"classes/UnAuthenticationFromImplicitFlow.html":{},"classes/UselessAuthAction.html":{}}}],["paload",{"_index":1570,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["pan",{"_index":5010,"title":{},"body":{"dependencies.html":{}}}],["param",{"_index":598,"title":{},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"classes/AuthObject.html":{},"injectables/AuthenticationEffects.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"directives/DraggableDirective.html":{},"classes/Filter.html":{},"classes/ImplicitAuthenticationHandler.html":{},"directives/MouseWheelDirective.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"components/TimeLineComponent.html":{},"injectables/UserService.html":{},"pipes/XAxisTickFormatPipe.html":{}}}],["parameterlistitem",{"_index":276,"title":{"classes/ParameterListItem.html":{}},"body":{"classes/Action.html":{},"classes/ActionStatus.html":{},"classes/Input.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{}}}],["parameters",{"_index":44,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/Action.html":{},"components/ActionComponent.html":{},"classes/ActionStatus.html":{},"classes/AddActionsAppear.html":{},"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"components/AppComponent.html":{},"classes/ApplyFilter.html":{},"injectables/ArchiveEffects.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"classes/ArchiveQuerySuccess.html":{},"components/ArchivesComponent.html":{},"classes/AuthObject.html":{},"injectables/AuthenticationEffects.html":{},"interfaces/AuthenticationModeHandler.html":{},"components/BaseSettingComponent.html":{},"directives/CalcHeightDirective.html":{},"classes/Card.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"injectables/CardEffects.html":{},"components/CardListComponent.html":{},"classes/CardOperation.html":{},"injectables/CardOperationEffects.html":{},"injectables/CardService.html":{},"classes/CheckTokenResponse.html":{},"injectables/ConfigEffects.html":{},"injectables/ConfigService.html":{},"components/ConfirmModalComponent.html":{},"classes/CreateUserApplication.html":{},"classes/CreateUserApplicationOnFailure.html":{},"classes/CreateUserApplicationOnSuccess.html":{},"components/CustomLogoComponent.html":{},"injectables/CustomRouterEffects.html":{},"classes/CustomRouterStateSerializer.html":{},"classes/DateTimeNgb.html":{},"components/DatetimeFilterComponent.html":{},"classes/DelayedLightCardUpdate.html":{},"classes/Detail.html":{},"components/DetailComponent.html":{},"classes/DetailContext.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"classes/FailToUpdateTimeReference.html":{},"components/FeedComponent.html":{},"injectables/FeedFiltersEffects.html":{},"classes/Filter.html":{},"components/FiltersComponent.html":{},"classes/HandleUnexpectedError.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/HandleUnexpectedError-4.html":{},"classes/HandleUnexpectedError-5.html":{},"classes/HandleUnexpectedError-6.html":{},"injectables/HandlebarsService.html":{},"classes/I18n.html":{},"injectables/I18nService.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"classes/ImplicitAuthenticationHandler.html":{},"components/InfoComponent.html":{},"classes/InitAuthStatus.html":{},"classes/InitFilters.html":{},"classes/InitTimeline.html":{},"classes/Input.html":{},"classes/LightCard.html":{},"injectables/LightCardEffects.html":{},"components/ListSettingComponent.html":{},"classes/LoadArchivedCard.html":{},"classes/LoadArchivedCardFailure.html":{},"classes/LoadArchivedCardSuccess.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{},"classes/LoadConfigFailure.html":{},"classes/LoadConfigSuccess.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/LoadSettingsFailure.html":{},"classes/LoadSettingsSuccess.html":{},"components/LoginComponent.html":{},"injectables/MenuEffects.html":{},"components/MenuLinkComponent.html":{},"classes/Message.html":{},"directives/MouseWheelDirective.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"injectables/NotifyService.html":{},"classes/Page.html":{},"classes/ParameterListItem.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"classes/PatchSettings.html":{},"classes/PatchSettingsFailure.html":{},"classes/PatchSettingsSuccess.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/Process.html":{},"classes/RejectLogIn.html":{},"classes/RemoveLightCard.html":{},"classes/RouterStateUrl.html":{},"classes/SelectArchivedLightCard.html":{},"classes/SelectLightCard.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{},"classes/SendArchiveQuery.html":{},"classes/SetCardDataTimeline.html":{},"components/SettingsComponent.html":{},"injectables/SettingsEffects.html":{},"injectables/SettingsService.html":{},"classes/State.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"classes/Third.html":{},"injectables/ThirdActionService.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"classes/Tick.html":{},"classes/TickPayload.html":{},"injectables/TimeEffects.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"classes/TimeReference.html":{},"classes/TimeSpan.html":{},"interceptors/TokenInjector.html":{},"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{},"classes/TryToLogIn.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateArchiveFilter.html":{},"classes/UpdateArchivePage.html":{},"classes/UpdateTimeReference.html":{},"classes/UpdateTranslation.html":{},"classes/UpdateTranslationFailed.html":{},"classes/UpdateTranslationSuccessful.html":{},"classes/User.html":{},"classes/UserApplicationNotRegistered.html":{},"classes/UserApplicationRegistered.html":{},"classes/UserContext.html":{},"injectables/UserEffects.html":{},"injectables/UserService.html":{},"pipes/XAxisTickFormatPipe.html":{}}}],["parameters['message",{"_index":1527,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["parametrization",{"_index":2961,"title":{},"body":{"classes/Filter.html":{}}}],["params",{"_index":246,"title":{},"body":{"classes/Action.html":{},"classes/ActionStatus.html":{},"injectables/ArchiveEffects.html":{},"components/ArchiveFiltersComponent.html":{},"classes/ArchiveQuerySuccess.html":{},"classes/AuthObject.html":{},"injectables/AuthenticationEffects.html":{},"interfaces/AuthenticationModeHandler.html":{},"injectables/CardService.html":{},"classes/CheckTokenResponse.html":{},"classes/CustomRouterStateSerializer.html":{},"classes/HandleUnexpectedError.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/Input.html":{},"classes/ParameterListItem.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"classes/Process.html":{},"classes/RouterStateUrl.html":{},"classes/SelectArchivedLightCard.html":{},"classes/SendArchiveQuery.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"classes/UpdateArchiveFilter.html":{},"classes/UpdateArchivePage.html":{}}}],["params.append('client_secret",{"_index":1274,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["params.append('clientid",{"_index":1266,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["params.append('code",{"_index":1261,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["params.append('grant_type",{"_index":1262,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["params.append('password",{"_index":1273,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["params.append('redirect_uri",{"_index":1267,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["params.append('username",{"_index":1272,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["params.append(key",{"_index":2157,"title":{},"body":{"injectables/CardService.html":{}}}],["params.set('page",{"_index":1009,"title":{},"body":{"components/ArchiveFiltersComponent.html":{}}}],["params.set('size",{"_index":1006,"title":{},"body":{"components/ArchiveFiltersComponent.html":{}}}],["params.set('version",{"_index":4187,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["params.set(key",{"_index":1001,"title":{},"body":{"components/ArchiveFiltersComponent.html":{}}}],["params.tostring",{"_index":1270,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["params['error",{"_index":1596,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["parent",{"_index":1737,"title":{},"body":{"directives/CalcHeightDirective.html":{},"components/ResizableComponent.html":{}}}],["parent.clientheight",{"_index":1780,"title":{},"body":{"directives/CalcHeightDirective.html":{}}}],["parent.getelementsbyclassname(calcheightclass",{"_index":1766,"title":{},"body":{"directives/CalcHeightDirective.html":{}}}],["parent.getelementsbyclassname(fixedheightclass",{"_index":1754,"title":{},"body":{"directives/CalcHeightDirective.html":{}}}],["parentform",{"_index":3679,"title":{},"body":{"components/MultiFilterComponent.html":{}}}],["parentid",{"_index":1712,"title":{},"body":{"directives/CalcHeightDirective.html":{}}}],["parentmodule",{"_index":3892,"title":{},"body":{"modules/ServicesModule.html":{}}}],["parse",{"_index":2420,"title":{},"body":{"classes/DateTimeNgb.html":{},"modules/StateModule.html":{}}}],["parse(value",{"_index":2426,"title":{},"body":{"classes/DateTimeNgb.html":{}}}],["parseint(`${value",{"_index":2432,"title":{},"body":{"classes/DateTimeNgb.html":{}}}],["part",{"_index":1221,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["party",{"_index":2370,"title":{},"body":{"injectables/CustomRouterEffects.html":{},"classes/HandleUnexpectedError-4.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{}}}],["pass",{"_index":2971,"title":{},"body":{"classes/Filter.html":{},"components/TimeLineComponent.html":{}}}],["passes",{"_index":2981,"title":{},"body":{"classes/Filter.html":{}}}],["password",{"_index":90,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckImplicitFlowAuthenticationStatus.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/ImplicitlyAuthenticated.html":{},"classes/InitAuthStatus.html":{},"components/LoginComponent.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"classes/UnAuthenticationFromImplicitFlow.html":{},"classes/UselessAuthAction.html":{}}}],["passwordorcodeauthenticationhandler",{"_index":1442,"title":{"classes/PasswordOrCodeAuthenticationHandler.html":{}},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["passwordorcodeauthenticationhandler(this",{"_index":1193,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["patch",{"_index":3109,"title":{},"body":{"classes/HandleUnexpectedError-5.html":{},"classes/LoadSettings.html":{},"classes/LoadSettingsFailure.html":{},"classes/LoadSettingsSuccess.html":{},"classes/PatchSettings.html":{},"classes/PatchSettingsFailure.html":{},"classes/PatchSettingsSuccess.html":{},"miscellaneous/enumerations.html":{}}}],["patchsettings",{"_index":1657,"title":{"classes/PatchSettings.html":{}},"body":{"components/BaseSettingComponent.html":{},"classes/HandleUnexpectedError-5.html":{},"classes/LoadSettings.html":{},"classes/LoadSettingsFailure.html":{},"classes/LoadSettingsSuccess.html":{},"classes/PatchSettings.html":{},"classes/PatchSettingsFailure.html":{},"classes/PatchSettingsSuccess.html":{},"injectables/SettingsEffects.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["patchsettings({settings",{"_index":1701,"title":{},"body":{"components/BaseSettingComponent.html":{}}}],["patchsettingsfailure",{"_index":3111,"title":{"classes/PatchSettingsFailure.html":{}},"body":{"classes/HandleUnexpectedError-5.html":{},"classes/LoadSettings.html":{},"classes/LoadSettingsFailure.html":{},"classes/LoadSettingsSuccess.html":{},"classes/PatchSettings.html":{},"classes/PatchSettingsFailure.html":{},"classes/PatchSettingsSuccess.html":{},"injectables/SettingsEffects.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["patchsettingsfailure(err",{"_index":3934,"title":{},"body":{"injectables/SettingsEffects.html":{}}}],["patchsettingssuccess",{"_index":3110,"title":{"classes/PatchSettingsSuccess.html":{}},"body":{"classes/HandleUnexpectedError-5.html":{},"classes/LoadSettings.html":{},"classes/LoadSettingsFailure.html":{},"classes/LoadSettingsSuccess.html":{},"classes/PatchSettings.html":{},"classes/PatchSettingsFailure.html":{},"classes/PatchSettingsSuccess.html":{},"injectables/SettingsEffects.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["patchsettingssuccess({settings:settings",{"_index":3933,"title":{},"body":{"injectables/SettingsEffects.html":{}}}],["patchusersettings",{"_index":3957,"title":{},"body":{"injectables/SettingsService.html":{}}}],["patchusersettings(settings",{"_index":3960,"title":{},"body":{"injectables/SettingsService.html":{}}}],["patchusersettings(settings:any",{"_index":3967,"title":{},"body":{"injectables/SettingsService.html":{}}}],["path",{"_index":727,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/ArchivesRoutingModule.html":{},"modules/FeedRoutingModule.html":{},"modules/SettingsRoutingModule.html":{},"modules/ThirdpartyRoutingModule.html":{}}}],["pathend",{"_index":1388,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["pathmatch",{"_index":1118,"title":{},"body":{"modules/ArchivesRoutingModule.html":{},"modules/FeedRoutingModule.html":{}}}],["pathname",{"_index":754,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["pathname.length",{"_index":757,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["pathname.substr(1",{"_index":759,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["pattern",{"_index":2746,"title":{},"body":{"components/EmailSettingComponent.html":{},"components/TextSettingComponent.html":{}}}],["payload",{"_index":37,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/AddActionsAppear.html":{},"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"classes/ApplyFilter.html":{},"classes/ArchiveQuerySuccess.html":{},"classes/AuthObject.html":{},"injectables/AuthenticationEffects.html":{},"interfaces/AuthenticationModeHandler.html":{},"injectables/CardOperationEffects.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckImplicitFlowAuthenticationStatus.html":{},"classes/CheckTokenResponse.html":{},"classes/ClearCard.html":{},"classes/ClearLightCardSelection.html":{},"classes/CreateUserApplication.html":{},"classes/CreateUserApplicationOnFailure.html":{},"classes/CreateUserApplicationOnSuccess.html":{},"injectables/CustomRouterEffects.html":{},"classes/DelayedLightCardUpdate.html":{},"classes/EmptyLightCards.html":{},"classes/FailToUpdateTimeReference.html":{},"classes/HandleUnexpectedError.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/HandleUnexpectedError-4.html":{},"classes/HandleUnexpectedError-5.html":{},"classes/HandleUnexpectedError-6.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/ImplicitlyAuthenticated.html":{},"classes/InitAuthStatus.html":{},"classes/InitFilters.html":{},"classes/InitTimeline.html":{},"classes/LightCardAlreadyUpdated.html":{},"classes/LoadArchivedCard.html":{},"classes/LoadArchivedCardFailure.html":{},"classes/LoadArchivedCardSuccess.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{},"classes/LoadConfig.html":{},"classes/LoadConfigFailure.html":{},"classes/LoadConfigSuccess.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/LoadSettings.html":{},"classes/LoadSettingsFailure.html":{},"classes/LoadSettingsSuccess.html":{},"injectables/MenuEffects.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"classes/PatchSettings.html":{},"classes/PatchSettingsFailure.html":{},"classes/PatchSettingsSuccess.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RefreshTranslation.html":{},"classes/RejectLogIn.html":{},"classes/RemoveLightCard.html":{},"classes/SelectArchivedLightCard.html":{},"classes/SelectLightCard.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{},"classes/SendArchiveQuery.html":{},"classes/SetCardDataTimeline.html":{},"classes/ThirdActionAlreadyLoaded.html":{},"classes/ThirdActionAlreadyUpdated.html":{},"classes/Tick.html":{},"classes/TickPayload.html":{},"classes/TranslationUpToDate.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"classes/UnAuthenticationFromImplicitFlow.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateAnActionFailure.html":{},"classes/UpdateArchiveFilter.html":{},"classes/UpdateArchivePage.html":{},"classes/UpdateTimeReference.html":{},"classes/UpdateTranslation.html":{},"classes/UpdateTranslationFailed.html":{},"classes/UpdateTranslationSuccessful.html":{},"classes/UpdatedSubscription.html":{},"classes/UselessAuthAction.html":{},"classes/UserApplicationNotRegistered.html":{},"classes/UserApplicationRegistered.html":{}}}],["payload.access_token",{"_index":1345,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["payload.clientid",{"_index":1344,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["payload.clientid.tostring",{"_index":1327,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["payload.expirationdate.gettime().tostring",{"_index":1325,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["payload.expires_in",{"_index":1340,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["payload.identifier",{"_index":1321,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["payload.password).pipe",{"_index":1563,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["payload.token",{"_index":1323,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["payload:tickpayload",{"_index":2807,"title":{},"body":{"classes/FailToUpdateTimeReference.html":{},"classes/Tick.html":{},"classes/TickPayload.html":{},"classes/UpdateTimeReference.html":{}}}],["payload:{cardstimeline",{"_index":3403,"title":{},"body":{"classes/InitTimeline.html":{},"classes/SetCardDataTimeline.html":{}}}],["payload:{code",{"_index":115,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckImplicitFlowAuthenticationStatus.html":{},"classes/ImplicitlyAuthenticated.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"classes/UnAuthenticationFromImplicitFlow.html":{},"classes/UselessAuthAction.html":{}}}],["payload:{data",{"_index":3401,"title":{},"body":{"classes/InitTimeline.html":{},"classes/SetCardDataTimeline.html":{}}}],["payload:{filters",{"_index":890,"title":{},"body":{"classes/ApplyFilter.html":{},"classes/InitFilters.html":{}}}],["payload:{name",{"_index":886,"title":{},"body":{"classes/ApplyFilter.html":{},"classes/InitFilters.html":{}}}],["payload:{timereference:timereference",{"_index":2814,"title":{},"body":{"classes/FailToUpdateTimeReference.html":{},"classes/Tick.html":{},"classes/TickPayload.html":{},"classes/UpdateTimeReference.html":{}}}],["payloadforsuccessfulauthentication",{"_index":41,"title":{"classes/PayloadForSuccessfulAuthentication.html":{}},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckImplicitFlowAuthenticationStatus.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/ImplicitlyAuthenticated.html":{},"classes/InitAuthStatus.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"classes/UnAuthenticationFromImplicitFlow.html":{},"classes/UselessAuthAction.html":{}}}],["payloadforsuccessfulauthentication(identifier",{"_index":1405,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["payloadforsuccessfulauthentication(jwt[this.loginclaim",{"_index":1343,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["perform",{"_index":2258,"title":{},"body":{"components/ConfirmModalComponent.html":{}}}],["performpost",{"_index":4089,"title":{},"body":{"injectables/ThirdActionService.html":{}}}],["periodstarttoend",{"_index":4331,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["periodstarttoend(conf",{"_index":4339,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["permission",{"_index":3771,"title":{},"body":{"injectables/NotifyService.html":{}}}],["pertinent",{"_index":2397,"title":{},"body":{"classes/CustomRouterStateSerializer.html":{},"classes/RouterStateUrl.html":{}}}],["pick",{"_index":223,"title":{},"body":{"classes/Action.html":{},"classes/ActionStatus.html":{},"classes/Input.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"miscellaneous/typealiases.html":{}}}],["picture",{"_index":2324,"title":{},"body":{"components/CustomLogoComponent.html":{}}}],["pieces",{"_index":3994,"title":{},"body":{"modules/StateModule.html":{}}}],["pipe",{"_index":1286,"title":{"pipes/XAxisTickFormatPipe.html":{}},"body":{"classes/AuthObject.html":{},"injectables/AuthenticationEffects.html":{},"interfaces/AuthenticationModeHandler.html":{},"components/BaseSettingComponent.html":{},"injectables/CardOperationEffects.html":{},"classes/CheckTokenResponse.html":{},"injectables/ConfigEffects.html":{},"injectables/FeedFiltersEffects.html":{},"classes/ImplicitAuthenticationHandler.html":{},"components/InfoComponent.html":{},"injectables/LightCardEffects.html":{},"injectables/MenuEffects.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"injectables/SettingsEffects.html":{},"components/TagsFilterComponent.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"injectables/TimeEffects.html":{},"components/TimeFilterComponent.html":{},"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{},"components/TypeFilterComponent.html":{},"injectables/UserEffects.html":{},"pipes/XAxisTickFormatPipe.html":{},"index.html":{}}}],["pipe(catcherror",{"_index":1503,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["pipe(concatall",{"_index":4640,"title":{},"body":{"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["pipe(filter(e",{"_index":1376,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["pipe(first",{"_index":1678,"title":{},"body":{"components/BaseSettingComponent.html":{}}}],["pipe(map((actions",{"_index":3458,"title":{},"body":{"injectables/LightCardEffects.html":{}}}],["pipe(map((json",{"_index":4211,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["pipe(map(config",{"_index":1854,"title":{},"body":{"components/CardComponent.html":{}}}],["pipe(map(i18n",{"_index":4650,"title":{},"body":{"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["pipe(map(pulse",{"_index":4276,"title":{},"body":{"injectables/TimeEffects.html":{}}}],["pipe(oftype(authenticationactiontypes.checkimplicitflowauthenticationstatus",{"_index":1547,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["pipe(takeuntil(this.ngunsubscribe",{"_index":1675,"title":{},"body":{"components/BaseSettingComponent.html":{},"components/CardComponent.html":{}}}],["pipe(tap(menus",{"_index":3732,"title":{},"body":{"components/NavbarComponent.html":{}}}],["pipe/x",{"_index":2942,"title":{},"body":{"modules/FeedModule.html":{},"pipes/XAxisTickFormatPipe.html":{}}}],["pipes",{"_index":4921,"title":{},"body":{"pipes/XAxisTickFormatPipe.html":{}}}],["pipetransform",{"_index":4941,"title":{},"body":{"pipes/XAxisTickFormatPipe.html":{}}}],["place",{"_index":747,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["placeholder",{"_index":1626,"title":{},"body":{"components/BaseSettingComponent.html":{},"components/EmailSettingComponent.html":{},"components/ListSettingComponent.html":{},"components/MultiSettingsComponent.html":{},"components/TextSettingComponent.html":{},"components/TypeAheadSettingsComponent.html":{}}}],["platformlocation",{"_index":3298,"title":{},"body":{"components/IconComponent.html":{}}}],["platformlocation.getbasehreffromdom",{"_index":3316,"title":{},"body":{"components/IconComponent.html":{}}}],["please",{"_index":625,"title":{},"body":{"components/AppComponent.html":{}}}],["plus48hours",{"_index":2121,"title":{},"body":{"injectables/CardService.html":{}}}],["point",{"_index":2399,"title":{},"body":{"classes/CustomRouterStateSerializer.html":{},"classes/RouterStateUrl.html":{}}}],["pointerdown",{"_index":2704,"title":{},"body":{"directives/DraggableDirective.html":{}}}],["pointerdown(event",{"_index":2712,"title":{},"body":{"directives/DraggableDirective.html":{}}}],["pointerevent",{"_index":2713,"title":{},"body":{"directives/DraggableDirective.html":{}}}],["pointermove",{"_index":2705,"title":{},"body":{"directives/DraggableDirective.html":{}}}],["pointermove(event",{"_index":2717,"title":{},"body":{"directives/DraggableDirective.html":{}}}],["pointerup",{"_index":2706,"title":{},"body":{"directives/DraggableDirective.html":{}}}],["pointerup(event",{"_index":2719,"title":{},"body":{"directives/DraggableDirective.html":{}}}],["popover",{"_index":4820,"title":{},"body":{"components/TypeFilterComponent.html":{}}}],["position:absolute",{"_index":2525,"title":{},"body":{"components/DatetimeFilterComponent.html":{}}}],["possible",{"_index":138,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckImplicitFlowAuthenticationStatus.html":{},"classes/ImplicitlyAuthenticated.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"classes/UnAuthenticationFromImplicitFlow.html":{},"classes/UselessAuthAction.html":{}}}],["postaction",{"_index":4053,"title":{},"body":{"injectables/ThirdActionService.html":{}}}],["postaction$.subscribe",{"_index":4086,"title":{},"body":{"injectables/ThirdActionService.html":{}}}],["postactionandupdateifnecessary",{"_index":4050,"title":{},"body":{"injectables/ThirdActionService.html":{}}}],["postactionandupdateifnecessary(lightcardid",{"_index":4064,"title":{},"body":{"injectables/ThirdActionService.html":{}}}],["postdata",{"_index":1234,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["postdata.append('token",{"_index":1237,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["postdata.tostring",{"_index":1246,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["preloadallmodules",{"_index":718,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["preloadingstrategy",{"_index":769,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["preparedlist",{"_index":3468,"title":{},"body":{"components/ListSettingComponent.html":{},"components/MultiFilterComponent.html":{}}}],["present",{"_index":1432,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/DateTimeNgb.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["prev",{"_index":1774,"title":{},"body":{"directives/CalcHeightDirective.html":{}}}],["previous",{"_index":2802,"title":{},"body":{"classes/FailToUpdateTimeReference.html":{},"classes/Tick.html":{},"classes/TickPayload.html":{},"classes/UpdateTimeReference.html":{}}}],["primary",{"_index":3538,"title":{},"body":{"components/LoginComponent.html":{}}}],["private",{"_index":294,"title":{},"body":{"components/ActionComponent.html":{},"components/AppComponent.html":{},"injectables/ArchiveEffects.html":{},"components/ArchiveFiltersComponent.html":{},"classes/AuthObject.html":{},"injectables/AuthenticationEffects.html":{},"interfaces/AuthenticationModeHandler.html":{},"components/BaseSettingComponent.html":{},"directives/CalcHeightDirective.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"injectables/CardEffects.html":{},"injectables/CardOperationEffects.html":{},"injectables/CardService.html":{},"classes/CheckTokenResponse.html":{},"injectables/ConfigEffects.html":{},"injectables/ConfigService.html":{},"components/CustomLogoComponent.html":{},"injectables/CustomRouterEffects.html":{},"classes/CustomRouterStateSerializer.html":{},"classes/DateTimeNgb.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"directives/DraggableDirective.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"injectables/FeedFiltersEffects.html":{},"injectables/FilterService.html":{},"classes/GuidService.html":{},"injectables/HandlebarsService.html":{},"injectables/I18nService.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"classes/ImplicitAuthenticationHandler.html":{},"components/InfoComponent.html":{},"injectables/LightCardEffects.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"injectables/MenuEffects.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"classes/RouterStateUrl.html":{},"injectables/SettingsEffects.html":{},"injectables/SettingsService.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"injectables/ThirdActionService.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"injectables/TimeEffects.html":{},"components/TimeFilterComponent.html":{},"classes/TimeReference.html":{},"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"injectables/UserEffects.html":{}}}],["process",{"_index":206,"title":{"classes/Process.html":{}},"body":{"classes/Action.html":{},"classes/ActionStatus.html":{},"components/ArchiveFiltersComponent.html":{},"classes/Card.html":{},"injectables/CardOperationEffects.html":{},"classes/Detail.html":{},"classes/Input.html":{},"classes/LightCard.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"classes/TimeSpan.html":{}}}],["process.states[card.state",{"_index":208,"title":{},"body":{"classes/Action.html":{},"classes/ActionStatus.html":{},"classes/Input.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{}}}],["processes",{"_index":201,"title":{},"body":{"classes/Action.html":{},"classes/ActionStatus.html":{},"components/ArchiveFiltersComponent.html":{},"classes/Input.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{}}}],["processid",{"_index":1795,"title":{},"body":{"classes/Card.html":{},"classes/Detail.html":{},"classes/LightCard.html":{},"classes/TimeSpan.html":{}}}],["processing",{"_index":1964,"title":{},"body":{"interfaces/CardFeedState.html":{},"interfaces/TimelineState.html":{}}}],["promise.resolve",{"_index":1374,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["proper",{"_index":256,"title":{},"body":{"classes/Action.html":{},"classes/ActionStatus.html":{},"classes/Input.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{}}}],["properties",{"_index":35,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"components/ActionComponent.html":{},"classes/AddActionsAppear.html":{},"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"components/AppComponent.html":{},"interfaces/AppState.html":{},"classes/ApplyFilter.html":{},"injectables/ArchiveEffects.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListPageComponent.html":{},"classes/ArchiveQuerySuccess.html":{},"interfaces/ArchiveState.html":{},"components/ArchivesComponent.html":{},"classes/AuthObject.html":{},"interfaces/AuthState.html":{},"injectables/AuthenticationEffects.html":{},"components/BaseSettingComponent.html":{},"directives/CalcHeightDirective.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"injectables/CardEffects.html":{},"interfaces/CardFeedState.html":{},"components/CardListComponent.html":{},"injectables/CardOperationEffects.html":{},"injectables/CardService.html":{},"interfaces/CardState.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckImplicitFlowAuthenticationStatus.html":{},"classes/CheckTokenResponse.html":{},"classes/ClearCard.html":{},"classes/ClearLightCardSelection.html":{},"injectables/ConfigEffects.html":{},"injectables/ConfigService.html":{},"interfaces/ConfigState.html":{},"components/ConfirmModalComponent.html":{},"classes/CreateUserApplication.html":{},"classes/CreateUserApplicationOnFailure.html":{},"classes/CreateUserApplicationOnSuccess.html":{},"components/CustomLogoComponent.html":{},"injectables/CustomRouterEffects.html":{},"components/DatetimeFilterComponent.html":{},"classes/DelayedLightCardUpdate.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"directives/DraggableDirective.html":{},"components/EmailSettingComponent.html":{},"classes/EmptyLightCards.html":{},"classes/FailToUpdateTimeReference.html":{},"components/FeedComponent.html":{},"injectables/FeedFiltersEffects.html":{},"classes/Filter.html":{},"injectables/FilterService.html":{},"components/FiltersComponent.html":{},"classes/GuidService.html":{},"classes/HandleUnexpectedError.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/HandleUnexpectedError-4.html":{},"classes/HandleUnexpectedError-5.html":{},"classes/HandleUnexpectedError-6.html":{},"injectables/HandlebarsService.html":{},"injectables/I18nService.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"classes/ImplicitlyAuthenticated.html":{},"components/InfoComponent.html":{},"classes/InitAuthStatus.html":{},"classes/InitFilters.html":{},"classes/InitTimeline.html":{},"classes/LightCardAlreadyUpdated.html":{},"injectables/LightCardEffects.html":{},"components/ListSettingComponent.html":{},"classes/LoadArchivedCard.html":{},"classes/LoadArchivedCardFailure.html":{},"classes/LoadArchivedCardSuccess.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{},"classes/LoadConfig.html":{},"classes/LoadConfigFailure.html":{},"classes/LoadConfigSuccess.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/LoadSettings.html":{},"classes/LoadSettingsFailure.html":{},"classes/LoadSettingsSuccess.html":{},"components/LoginComponent.html":{},"injectables/MenuEffects.html":{},"components/MenuLinkComponent.html":{},"interfaces/MenuState.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"injectables/NotifyService.html":{},"classes/PatchSettings.html":{},"classes/PatchSettingsFailure.html":{},"classes/PatchSettingsSuccess.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RefreshTranslation.html":{},"classes/RejectLogIn.html":{},"classes/RemoveLightCard.html":{},"components/ResizableComponent.html":{},"classes/SelectArchivedLightCard.html":{},"classes/SelectLightCard.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{},"classes/SendArchiveQuery.html":{},"classes/SetCardDataTimeline.html":{},"components/SettingsComponent.html":{},"injectables/SettingsEffects.html":{},"interfaces/SettingsInputs.html":{},"injectables/SettingsService.html":{},"interfaces/SettingsState.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"classes/ThirdActionAlreadyLoaded.html":{},"classes/ThirdActionAlreadyUpdated.html":{},"injectables/ThirdActionService.html":{},"injectables/ThirdsService.html":{},"classes/Tick.html":{},"classes/TickPayload.html":{},"injectables/TimeEffects.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"interfaces/TimeState.html":{},"interfaces/TimelineState.html":{},"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{},"interfaces/TranslationState.html":{},"classes/TranslationUpToDate.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"classes/UnAuthenticationFromImplicitFlow.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateAnActionFailure.html":{},"classes/UpdateArchiveFilter.html":{},"classes/UpdateArchivePage.html":{},"classes/UpdateTimeReference.html":{},"classes/UpdateTranslation.html":{},"classes/UpdateTranslationFailed.html":{},"classes/UpdateTranslationSuccessful.html":{},"classes/UpdatedSubscription.html":{},"classes/UselessAuthAction.html":{},"classes/UserApplicationNotRegistered.html":{},"classes/UserApplicationRegistered.html":{},"injectables/UserEffects.html":{},"injectables/UserService.html":{},"interfaces/UserState.html":{}}}],["property",{"_index":2906,"title":{},"body":{"injectables/FeedFiltersEffects.html":{},"classes/Filter.html":{},"components/MenuLinkComponent.html":{}}}],["protected",{"_index":1625,"title":{},"body":{"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/EmailSettingComponent.html":{},"components/ListSettingComponent.html":{},"components/MultiSettingsComponent.html":{},"components/TextSettingComponent.html":{},"components/TypeAheadSettingsComponent.html":{}}}],["prototype",{"_index":257,"title":{},"body":{"classes/Action.html":{},"classes/ActionStatus.html":{},"classes/Input.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{}}}],["provide",{"_index":714,"title":{},"body":{"modules/AppModule.html":{},"components/DatetimeFilterComponent.html":{},"modules/FeedModule.html":{},"modules/ServicesModule.html":{},"modules/StateModule.html":{}}}],["provided",{"_index":1740,"title":{},"body":{"directives/CalcHeightDirective.html":{},"modules/StateModule.html":{}}}],["providedin",{"_index":3017,"title":{},"body":{"injectables/FilterService.html":{},"classes/GuidService.html":{}}}],["providepayloadforsuccessfulauthenticationfromimplicitflow",{"_index":1400,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["provider",{"_index":3566,"title":{},"body":{"components/LoginComponent.html":{}}}],["providers",{"_index":645,"title":{},"body":{"modules/AppModule.html":{},"modules/ArchivesModule.html":{},"modules/CardsModule.html":{},"components/DatetimeFilterComponent.html":{},"modules/FeedModule.html":{},"modules/ServicesModule.html":{},"modules/SettingsModule.html":{},"modules/StateModule.html":{},"modules/ThirdpartyModule.html":{},"modules/UtilitiesModule.html":{},"index.html":{}}}],["providers:[{provide:'configretrydelay',usevalue:5000",{"_index":3989,"title":{},"body":{"modules/StateModule.html":{}}}],["public",{"_index":36,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/Action.html":{},"components/ActionComponent.html":{},"classes/ActionStatus.html":{},"classes/AddActionsAppear.html":{},"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"classes/ApplyFilter.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"classes/ArchiveQuerySuccess.html":{},"components/ArchivesComponent.html":{},"modules/ArchivesModule.html":{},"modules/ArchivesRoutingModule.html":{},"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardListComponent.html":{},"injectables/CardService.html":{},"modules/CardsModule.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckImplicitFlowAuthenticationStatus.html":{},"classes/CheckTokenResponse.html":{},"components/ConfirmModalComponent.html":{},"classes/CreateUserApplication.html":{},"classes/CreateUserApplicationOnFailure.html":{},"classes/CreateUserApplicationOnSuccess.html":{},"components/CustomLogoComponent.html":{},"components/DatetimeFilterComponent.html":{},"classes/DelayedLightCardUpdate.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"classes/FailToUpdateTimeReference.html":{},"components/FeedComponent.html":{},"modules/FeedModule.html":{},"modules/FeedRoutingModule.html":{},"classes/Filter.html":{},"injectables/FilterService.html":{},"classes/HandleUnexpectedError.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/HandleUnexpectedError-4.html":{},"classes/HandleUnexpectedError-5.html":{},"classes/HandleUnexpectedError-6.html":{},"injectables/HandlebarsService.html":{},"injectables/I18nService.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/ImplicitlyAuthenticated.html":{},"components/InfoComponent.html":{},"classes/InitAuthStatus.html":{},"classes/InitFilters.html":{},"classes/InitTimeline.html":{},"classes/Input.html":{},"classes/LoadArchivedCard.html":{},"classes/LoadArchivedCardFailure.html":{},"classes/LoadArchivedCardSuccess.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{},"classes/LoadConfigFailure.html":{},"classes/LoadConfigSuccess.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/LoadSettingsFailure.html":{},"classes/LoadSettingsSuccess.html":{},"components/MenuLinkComponent.html":{},"components/MultiFilterComponent.html":{},"components/NavbarComponent.html":{},"classes/ParameterListItem.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"classes/PatchSettings.html":{},"classes/PatchSettingsFailure.html":{},"classes/PatchSettingsSuccess.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/Process.html":{},"classes/RejectLogIn.html":{},"classes/RemoveLightCard.html":{},"components/ResizableComponent.html":{},"classes/SelectArchivedLightCard.html":{},"classes/SelectLightCard.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{},"classes/SendArchiveQuery.html":{},"modules/ServicesModule.html":{},"classes/SetCardDataTimeline.html":{},"modules/SettingsModule.html":{},"modules/SettingsRoutingModule.html":{},"classes/State.html":{},"modules/StateModule.html":{},"components/TagsFilterComponent.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"modules/ThirdpartyModule.html":{},"modules/ThirdpartyRoutingModule.html":{},"classes/Tick.html":{},"classes/TickPayload.html":{},"components/TimeLineComponent.html":{},"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"classes/UnAuthenticationFromImplicitFlow.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateArchiveFilter.html":{},"classes/UpdateArchivePage.html":{},"classes/UpdateTimeReference.html":{},"classes/UpdateTranslation.html":{},"classes/UpdateTranslationFailed.html":{},"classes/UpdateTranslationSuccessful.html":{},"classes/UselessAuthAction.html":{},"classes/User.html":{},"classes/UserApplicationNotRegistered.html":{},"classes/UserApplicationRegistered.html":{},"modules/UtilitiesModule.html":{}}}],["publication",{"_index":1867,"title":{},"body":{"components/CardComponent.html":{}}}],["publicationdate",{"_index":2013,"title":{},"body":{"classes/CardOperation.html":{}}}],["publish_date_from_param",{"_index":971,"title":{},"body":{"components/ArchiveFiltersComponent.html":{},"miscellaneous/enumerations.html":{}}}],["publish_date_to_param",{"_index":973,"title":{},"body":{"components/ArchiveFiltersComponent.html":{},"miscellaneous/enumerations.html":{}}}],["publishdate",{"_index":1790,"title":{},"body":{"classes/Card.html":{},"classes/Detail.html":{},"classes/LightCard.html":{},"components/TimeLineComponent.html":{},"classes/TimeSpan.html":{}}}],["publishdatefrom",{"_index":972,"title":{},"body":{"components/ArchiveFiltersComponent.html":{},"miscellaneous/enumerations.html":{}}}],["publishdateto",{"_index":974,"title":{},"body":{"components/ArchiveFiltersComponent.html":{},"miscellaneous/enumerations.html":{}}}],["publisher",{"_index":1788,"title":{},"body":{"classes/Card.html":{},"classes/Detail.html":{},"components/DetailComponent.html":{},"injectables/HandlebarsService.html":{},"classes/LightCard.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"components/TimeLineComponent.html":{},"classes/TimeSpan.html":{},"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["publisher/${card.publisher}/process/${card.processid}/states/${card.state}/actions",{"_index":1860,"title":{},"body":{"components/CardComponent.html":{}}}],["publisherversion",{"_index":1789,"title":{},"body":{"classes/Card.html":{},"classes/Detail.html":{},"components/DetailComponent.html":{},"classes/LightCard.html":{},"components/TimeLineComponent.html":{},"classes/TimeSpan.html":{}}}],["publisher}.${version}.${name}.${locale",{"_index":3204,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["purpose",{"_index":86,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckImplicitFlowAuthenticationStatus.html":{},"classes/ImplicitlyAuthenticated.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"classes/UnAuthenticationFromImplicitFlow.html":{},"classes/UselessAuthAction.html":{},"miscellaneous/enumerations.html":{}}}],["push",{"_index":117,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckImplicitFlowAuthenticationStatus.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/ImplicitlyAuthenticated.html":{},"classes/InitAuthStatus.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"classes/UnAuthenticationFromImplicitFlow.html":{},"classes/UselessAuthAction.html":{}}}],["pushed",{"_index":2139,"title":{},"body":{"injectables/CardService.html":{}}}],["put",{"_index":1351,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"modules/UtilitiesModule.html":{}}}],["query",{"_index":1066,"title":{},"body":{"classes/ArchiveQuerySuccess.html":{},"classes/CustomRouterStateSerializer.html":{},"classes/HandleUnexpectedError.html":{},"classes/RouterStateUrl.html":{},"classes/SelectArchivedLightCard.html":{},"classes/SendArchiveQuery.html":{},"classes/UpdateArchiveFilter.html":{},"classes/UpdateArchivePage.html":{},"miscellaneous/enumerations.html":{}}}],["queryarchivedcards",{"_index":895,"title":{},"body":{"injectables/ArchiveEffects.html":{}}}],["queryarchivedcardspage",{"_index":896,"title":{},"body":{"injectables/ArchiveEffects.html":{}}}],["querylist",{"_index":2672,"title":{},"body":{"components/DetailsComponent.html":{}}}],["querymenuentryurl",{"_index":4223,"title":{},"body":{"injectables/ThirdsService.html":{}}}],["querymenuentryurl(thirdmenuid",{"_index":4147,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["queryparams",{"_index":2394,"title":{},"body":{"classes/CustomRouterStateSerializer.html":{},"classes/RouterStateUrl.html":{}}}],["querytemplate",{"_index":3127,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["querytemplate(publisher",{"_index":3151,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["querytemplate(publisher:string",{"_index":3201,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["querythird",{"_index":4224,"title":{},"body":{"injectables/ThirdsService.html":{}}}],["querythird(thirdname",{"_index":4135,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["querythirdfromcard",{"_index":4225,"title":{},"body":{"injectables/ThirdsService.html":{}}}],["querythirdfromcard(card",{"_index":4132,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["r",{"_index":4176,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["radius",{"_index":1017,"title":{},"body":{"components/ArchiveFiltersComponent.html":{}}}],["radius:5px",{"_index":1019,"title":{},"body":{"components/ArchiveFiltersComponent.html":{}}}],["raise",{"_index":4876,"title":{},"body":{"injectables/UserEffects.html":{}}}],["rangeend",{"_index":2099,"title":{},"body":{"injectables/CardService.html":{}}}],["rangestart",{"_index":2101,"title":{},"body":{"injectables/CardService.html":{}}}],["reactiveformsmodule",{"_index":670,"title":{},"body":{"modules/AppModule.html":{},"modules/ArchivesModule.html":{},"modules/FeedModule.html":{},"modules/SettingsModule.html":{}}}],["readonly",{"_index":38,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/Action.html":{},"classes/ActionStatus.html":{},"classes/AddActionsAppear.html":{},"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"components/AppComponent.html":{},"classes/ApplyFilter.html":{},"classes/ArchiveQuerySuccess.html":{},"classes/Card.html":{},"classes/CardOperation.html":{},"injectables/CardService.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckImplicitFlowAuthenticationStatus.html":{},"classes/ClearCard.html":{},"classes/ClearLightCardSelection.html":{},"classes/CreateUserApplication.html":{},"classes/CreateUserApplicationOnFailure.html":{},"classes/CreateUserApplicationOnSuccess.html":{},"classes/CustomRouterStateSerializer.html":{},"classes/DelayedLightCardUpdate.html":{},"classes/Detail.html":{},"components/DetailComponent.html":{},"classes/DetailContext.html":{},"classes/EmptyLightCards.html":{},"classes/FailToUpdateTimeReference.html":{},"classes/Filter.html":{},"classes/GuidService.html":{},"classes/HandleUnexpectedError.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/HandleUnexpectedError-4.html":{},"classes/HandleUnexpectedError-5.html":{},"classes/HandleUnexpectedError-6.html":{},"classes/I18n.html":{},"classes/ImplicitlyAuthenticated.html":{},"classes/InitAuthStatus.html":{},"classes/InitFilters.html":{},"classes/InitTimeline.html":{},"classes/Input.html":{},"classes/LightCard.html":{},"classes/LightCardAlreadyUpdated.html":{},"classes/LoadArchivedCard.html":{},"classes/LoadArchivedCardFailure.html":{},"classes/LoadArchivedCardSuccess.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{},"classes/LoadConfig.html":{},"classes/LoadConfigFailure.html":{},"classes/LoadConfigSuccess.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/LoadSettings.html":{},"classes/LoadSettingsFailure.html":{},"classes/LoadSettingsSuccess.html":{},"classes/Message.html":{},"classes/Page.html":{},"classes/ParameterListItem.html":{},"classes/PatchSettings.html":{},"classes/PatchSettingsFailure.html":{},"classes/PatchSettingsSuccess.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/Process.html":{},"classes/RefreshTranslation.html":{},"classes/RejectLogIn.html":{},"classes/RemoveLightCard.html":{},"classes/RouterStateUrl.html":{},"classes/SelectArchivedLightCard.html":{},"classes/SelectLightCard.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{},"classes/SendArchiveQuery.html":{},"classes/SetCardDataTimeline.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdActionAlreadyLoaded.html":{},"classes/ThirdActionAlreadyUpdated.html":{},"injectables/ThirdActionService.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"classes/Tick.html":{},"classes/TickPayload.html":{},"classes/TimeReference.html":{},"classes/TimeSpan.html":{},"classes/TranslationUpToDate.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"classes/UnAuthenticationFromImplicitFlow.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateAnActionFailure.html":{},"classes/UpdateArchiveFilter.html":{},"classes/UpdateArchivePage.html":{},"classes/UpdateTimeReference.html":{},"classes/UpdateTranslation.html":{},"classes/UpdateTranslationFailed.html":{},"classes/UpdateTranslationSuccessful.html":{},"classes/UpdatedSubscription.html":{},"classes/UselessAuthAction.html":{},"classes/User.html":{},"classes/UserApplicationNotRegistered.html":{},"classes/UserApplicationRegistered.html":{},"classes/UserContext.html":{},"injectables/UserService.html":{}}}],["ready",{"_index":1546,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["real",{"_index":4544,"title":{},"body":{"classes/TimeReference.html":{}}}],["realm",{"_index":1603,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["realnow",{"_index":4527,"title":{},"body":{"classes/TimeReference.html":{}}}],["realnowmoment",{"_index":4530,"title":{},"body":{"classes/TimeReference.html":{}}}],["realnowmoment=moment(realnow",{"_index":4541,"title":{},"body":{"classes/TimeReference.html":{}}}],["realnowmoment=realnow",{"_index":4540,"title":{},"body":{"classes/TimeReference.html":{}}}],["realtimebar",{"_index":4414,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["reason",{"_index":2970,"title":{},"body":{"classes/Filter.html":{}}}],["reasons",{"_index":227,"title":{},"body":{"classes/Action.html":{},"classes/ActionStatus.html":{},"classes/Input.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{}}}],["received",{"_index":4453,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["receivedcard",{"_index":3424,"title":{},"body":{"injectables/LightCardEffects.html":{}}}],["recipient_filter",{"_index":3044,"title":{},"body":{"injectables/FilterService.html":{},"miscellaneous/enumerations.html":{}}}],["recursion",{"_index":2986,"title":{},"body":{"classes/Filter.html":{}}}],["recursively",{"_index":2985,"title":{},"body":{"classes/Filter.html":{}}}],["redirect",{"_index":745,"title":{},"body":{"modules/AppRoutingModule.html":{},"injectables/AuthenticationEffects.html":{},"injectables/MenuEffects.html":{}}}],["redirectto",{"_index":737,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/ArchivesRoutingModule.html":{},"modules/FeedRoutingModule.html":{}}}],["redirecttocurrentlocation",{"_index":1584,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["redirecttocurrentlocation(currentrouter",{"_index":753,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["redirecttocurrentlocation(this.router",{"_index":1507,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["reduce",{"_index":4125,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["reduce((menus",{"_index":4202,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["reducer",{"_index":25,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"interfaces/AppState.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckImplicitFlowAuthenticationStatus.html":{},"classes/ImplicitlyAuthenticated.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"classes/UnAuthenticationFromImplicitFlow.html":{},"classes/UselessAuthAction.html":{}}}],["ref",{"_index":4550,"title":{},"body":{"classes/TimeReference.html":{}}}],["refactor",{"_index":3191,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["reference",{"_index":2797,"title":{},"body":{"classes/FailToUpdateTimeReference.html":{},"classes/Tick.html":{},"classes/TickPayload.html":{},"injectables/TimeEffects.html":{},"classes/UpdateTimeReference.html":{},"miscellaneous/enumerations.html":{}}}],["referencedtranslation",{"_index":4670,"title":{},"body":{"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["referencetime",{"_index":4518,"title":{},"body":{"classes/TimeReference.html":{}}}],["refresh",{"_index":749,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/CardComponent.html":{},"injectables/CardOperationEffects.html":{}}}],["refreshed",{"_index":2907,"title":{},"body":{"injectables/FeedFiltersEffects.html":{},"classes/RefreshTranslation.html":{},"classes/TranslationUpToDate.html":{},"classes/UpdateTranslation.html":{},"classes/UpdateTranslationFailed.html":{},"classes/UpdateTranslationSuccessful.html":{},"miscellaneous/enumerations.html":{}}}],["refreshifselectedcard",{"_index":2026,"title":{},"body":{"injectables/CardOperationEffects.html":{}}}],["refreshlanguageusedbytranslation",{"_index":4652,"title":{},"body":{"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["refreshthreshold",{"_index":2850,"title":{},"body":{"injectables/FeedFiltersEffects.html":{}}}],["refreshtranslation",{"_index":3814,"title":{"classes/RefreshTranslation.html":{}},"body":{"classes/RefreshTranslation.html":{},"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{},"classes/TranslationUpToDate.html":{},"classes/UpdateTranslation.html":{},"classes/UpdateTranslationFailed.html":{},"classes/UpdateTranslationSuccessful.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["regarding",{"_index":1431,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["registerarrayatindex",{"_index":3128,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["registerarrayatindexlength",{"_index":3129,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["registerbool",{"_index":3130,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["registercardaction",{"_index":3131,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["registerdateformat",{"_index":3132,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["registered",{"_index":1256,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/CreateUserApplication.html":{},"classes/CreateUserApplicationOnFailure.html":{},"classes/CreateUserApplicationOnSuccess.html":{},"classes/HandleUnexpectedError-6.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"classes/UserApplicationNotRegistered.html":{},"classes/UserApplicationRegistered.html":{},"injectables/UserEffects.html":{},"interfaces/UserState.html":{},"miscellaneous/enumerations.html":{}}}],["registeri18n",{"_index":3133,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["registerjson",{"_index":3134,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["registermath",{"_index":3135,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["registernow",{"_index":3136,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["registernumberformat",{"_index":3137,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["registeronchange",{"_index":2479,"title":{},"body":{"components/DatetimeFilterComponent.html":{}}}],["registeronchange(fn",{"_index":2489,"title":{},"body":{"components/DatetimeFilterComponent.html":{}}}],["registerontouched",{"_index":2480,"title":{},"body":{"components/DatetimeFilterComponent.html":{}}}],["registerontouched(fn",{"_index":2492,"title":{},"body":{"components/DatetimeFilterComponent.html":{}}}],["registerpreservespace",{"_index":3138,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["registerslice",{"_index":3139,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["registersort",{"_index":3140,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["registersplit",{"_index":3141,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["registersvg",{"_index":3142,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["reinsertscripts",{"_index":2547,"title":{},"body":{"components/DetailComponent.html":{}}}],["reject",{"_index":73,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckImplicitFlowAuthenticationStatus.html":{},"classes/ImplicitlyAuthenticated.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"classes/UnAuthenticationFromImplicitFlow.html":{},"classes/UselessAuthAction.html":{},"miscellaneous/enumerations.html":{}}}],["rejectedlogin",{"_index":1536,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["rejection",{"_index":144,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckImplicitFlowAuthenticationStatus.html":{},"classes/ImplicitlyAuthenticated.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"classes/UnAuthenticationFromImplicitFlow.html":{},"classes/UselessAuthAction.html":{}}}],["rejectlogin",{"_index":72,"title":{"classes/RejectLogIn.html":{}},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"injectables/AuthenticationEffects.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckImplicitFlowAuthenticationStatus.html":{},"classes/ImplicitlyAuthenticated.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"classes/UnAuthenticationFromImplicitFlow.html":{},"classes/UselessAuthAction.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["rejectlogin({error",{"_index":1599,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["rejectloginattempt",{"_index":150,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"injectables/AuthenticationEffects.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckImplicitFlowAuthenticationStatus.html":{},"classes/ImplicitlyAuthenticated.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"classes/UnAuthenticationFromImplicitFlow.html":{},"classes/UselessAuthAction.html":{}}}],["related",{"_index":457,"title":{},"body":{"classes/AddActionsAppear.html":{},"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"classes/ArchiveQuerySuccess.html":{},"classes/ClearCard.html":{},"classes/ClearLightCardSelection.html":{},"classes/CreateUserApplication.html":{},"classes/CreateUserApplicationOnFailure.html":{},"classes/CreateUserApplicationOnSuccess.html":{},"classes/DelayedLightCardUpdate.html":{},"classes/EmptyLightCards.html":{},"classes/HandleUnexpectedError.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/HandleUnexpectedError-5.html":{},"classes/HandleUnexpectedError-6.html":{},"classes/LightCardAlreadyUpdated.html":{},"classes/LoadArchivedCard.html":{},"classes/LoadArchivedCardFailure.html":{},"classes/LoadArchivedCardSuccess.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{},"classes/LoadConfig.html":{},"classes/LoadConfigFailure.html":{},"classes/LoadConfigSuccess.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/LoadSettings.html":{},"classes/LoadSettingsFailure.html":{},"classes/LoadSettingsSuccess.html":{},"classes/PatchSettings.html":{},"classes/PatchSettingsFailure.html":{},"classes/PatchSettingsSuccess.html":{},"classes/RemoveLightCard.html":{},"classes/SelectArchivedLightCard.html":{},"classes/SelectLightCard.html":{},"classes/SendArchiveQuery.html":{},"classes/ThirdActionAlreadyLoaded.html":{},"classes/ThirdActionAlreadyUpdated.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateAnActionFailure.html":{},"classes/UpdateArchiveFilter.html":{},"classes/UpdateArchivePage.html":{},"classes/UpdatedSubscription.html":{},"classes/UserApplicationNotRegistered.html":{},"classes/UserApplicationRegistered.html":{},"miscellaneous/enumerations.html":{}}}],["relevant",{"_index":1328,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["reload",{"_index":626,"title":{},"body":{"components/AppComponent.html":{}}}],["remove",{"_index":154,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckImplicitFlowAuthenticationStatus.html":{},"classes/ClearLightCardSelection.html":{},"classes/DelayedLightCardUpdate.html":{},"classes/EmptyLightCards.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/ImplicitlyAuthenticated.html":{},"classes/InitAuthStatus.html":{},"classes/LightCardAlreadyUpdated.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/RemoveLightCard.html":{},"classes/SelectLightCard.html":{},"classes/ThirdActionAlreadyLoaded.html":{},"classes/ThirdActionAlreadyUpdated.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"classes/UnAuthenticationFromImplicitFlow.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateAnActionFailure.html":{},"classes/UpdatedSubscription.html":{},"classes/UselessAuthAction.html":{},"miscellaneous/enumerations.html":{}}}],["removelightcard",{"_index":501,"title":{"classes/RemoveLightCard.html":{}},"body":{"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"injectables/CardOperationEffects.html":{},"classes/ClearLightCardSelection.html":{},"classes/DelayedLightCardUpdate.html":{},"classes/EmptyLightCards.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/LightCardAlreadyUpdated.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/RemoveLightCard.html":{},"classes/SelectLightCard.html":{},"classes/ThirdActionAlreadyLoaded.html":{},"classes/ThirdActionAlreadyUpdated.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateAnActionFailure.html":{},"classes/UpdatedSubscription.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["removelightcard({cards",{"_index":2053,"title":{},"body":{"injectables/CardOperationEffects.html":{}}}],["removes",{"_index":147,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckImplicitFlowAuthenticationStatus.html":{},"classes/ImplicitlyAuthenticated.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"classes/UnAuthenticationFromImplicitFlow.html":{},"classes/UselessAuthAction.html":{}}}],["rendered",{"_index":1966,"title":{},"body":{"interfaces/CardFeedState.html":{}}}],["rendering",{"_index":2602,"title":{},"body":{"components/DetailComponent.html":{}}}],["replication",{"_index":2965,"title":{},"body":{"classes/Filter.html":{}}}],["reported",{"_index":2786,"title":{},"body":{"classes/FailToUpdateTimeReference.html":{},"classes/Tick.html":{},"classes/TickPayload.html":{},"classes/UpdateTimeReference.html":{}}}],["request",{"_index":1479,"title":{},"body":{"injectables/AuthenticationEffects.html":{},"injectables/CardService.html":{},"injectables/ConfigEffects.html":{},"injectables/SettingsEffects.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"interceptors/TokenInjector.html":{}}}],["request.clone(update",{"_index":4610,"title":{},"body":{"interceptors/TokenInjector.html":{}}}],["request.url",{"_index":4603,"title":{},"body":{"interceptors/TokenInjector.html":{}}}],["requestpermission",{"_index":3774,"title":{},"body":{"injectables/NotifyService.html":{}}}],["required",{"_index":4381,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["requiredfield",{"_index":1633,"title":{},"body":{"components/BaseSettingComponent.html":{},"components/EmailSettingComponent.html":{},"components/ListSettingComponent.html":{},"components/MultiSettingsComponent.html":{},"components/TextSettingComponent.html":{},"components/TypeAheadSettingsComponent.html":{}}}],["rerouting",{"_index":1553,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["reset",{"_index":656,"title":{},"body":{"modules/AppModule.html":{},"modules/ArchivesModule.html":{},"modules/CardsModule.html":{},"modules/FeedModule.html":{},"modules/ServicesModule.html":{},"modules/SettingsModule.html":{},"modules/StateModule.html":{},"modules/ThirdpartyModule.html":{},"modules/UtilitiesModule.html":{},"index.html":{}}}],["resetform",{"_index":3546,"title":{},"body":{"components/LoginComponent.html":{}}}],["resetstate",{"_index":1472,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["resizable",{"_index":3839,"title":{},"body":{"components/ResizableComponent.html":{}}}],["resizable'},{'name",{"_index":414,"title":{},"body":{"components/ActionComponent.html":{},"components/AppComponent.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/ConfirmModalComponent.html":{},"components/CustomLogoComponent.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MenuLinkComponent.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/ResizableComponent.html":{},"components/SettingsComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{}}}],["resizable.component.css",{"_index":3840,"title":{},"body":{"components/ResizableComponent.html":{}}}],["resizable.component.html",{"_index":3841,"title":{},"body":{"components/ResizableComponent.html":{}}}],["resizablecomponent",{"_index":413,"title":{"components/ResizableComponent.html":{}},"body":{"components/ActionComponent.html":{},"components/AppComponent.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/ConfirmModalComponent.html":{},"components/CustomLogoComponent.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MenuLinkComponent.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/ResizableComponent.html":{},"components/SettingsComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"modules/UtilitiesModule.html":{},"index.html":{}}}],["resizablecomponent:17",{"_index":2003,"title":{},"body":{"components/CardListComponent.html":{},"components/DetailsComponent.html":{}}}],["resizablecomponent:19",{"_index":2002,"title":{},"body":{"components/CardListComponent.html":{},"components/DetailsComponent.html":{}}}],["resizablecomponent:34",{"_index":2000,"title":{},"body":{"components/CardListComponent.html":{},"components/DetailsComponent.html":{}}}],["resize",{"_index":3845,"title":{},"body":{"components/ResizableComponent.html":{}}}],["resized",{"_index":1996,"title":{},"body":{"components/CardListComponent.html":{},"components/DetailsComponent.html":{},"components/ResizableComponent.html":{}}}],["resolvethirdpartylink",{"_index":3586,"title":{},"body":{"injectables/MenuEffects.html":{}}}],["resource",{"_index":2608,"title":{},"body":{"components/DetailComponent.html":{}}}],["resourceurl",{"_index":4170,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["resourceurl}?${versionparam.tostring",{"_index":4174,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["response",{"_index":1427,"title":{},"body":{"classes/AuthObject.html":{},"injectables/AuthenticationEffects.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["responsetype",{"_index":4165,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["result",{"_index":162,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/Action.html":{},"components/ActionComponent.html":{},"classes/ActionStatus.html":{},"classes/AddActionsAppear.html":{},"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interfaces/AppState.html":{},"classes/ApplyFilter.html":{},"injectables/ArchiveEffects.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"classes/ArchiveQuerySuccess.html":{},"interfaces/ArchiveState.html":{},"components/ArchivesComponent.html":{},"modules/ArchivesModule.html":{},"modules/ArchivesRoutingModule.html":{},"classes/AuthObject.html":{},"interfaces/AuthState.html":{},"injectables/AuthenticationEffects.html":{},"interfaces/AuthenticationModeHandler.html":{},"components/BaseSettingComponent.html":{},"directives/CalcHeightDirective.html":{},"classes/Card.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"injectables/CardEffects.html":{},"interfaces/CardFeedState.html":{},"components/CardListComponent.html":{},"classes/CardOperation.html":{},"injectables/CardOperationEffects.html":{},"injectables/CardService.html":{},"interfaces/CardState.html":{},"modules/CardsModule.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckImplicitFlowAuthenticationStatus.html":{},"classes/CheckTokenResponse.html":{},"classes/ClearCard.html":{},"classes/ClearLightCardSelection.html":{},"injectables/ConfigEffects.html":{},"injectables/ConfigService.html":{},"interfaces/ConfigState.html":{},"components/ConfirmModalComponent.html":{},"classes/CreateUserApplication.html":{},"classes/CreateUserApplicationOnFailure.html":{},"classes/CreateUserApplicationOnSuccess.html":{},"components/CustomLogoComponent.html":{},"injectables/CustomRouterEffects.html":{},"classes/CustomRouterStateSerializer.html":{},"classes/DateTimeNgb.html":{},"components/DatetimeFilterComponent.html":{},"classes/DelayedLightCardUpdate.html":{},"classes/Detail.html":{},"components/DetailComponent.html":{},"classes/DetailContext.html":{},"components/DetailsComponent.html":{},"directives/DraggableDirective.html":{},"components/EmailSettingComponent.html":{},"classes/EmptyLightCards.html":{},"classes/FailToUpdateTimeReference.html":{},"components/FeedComponent.html":{},"injectables/FeedFiltersEffects.html":{},"modules/FeedModule.html":{},"modules/FeedRoutingModule.html":{},"classes/Filter.html":{},"injectables/FilterService.html":{},"components/FiltersComponent.html":{},"classes/GuidService.html":{},"classes/HandleUnexpectedError.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/HandleUnexpectedError-4.html":{},"classes/HandleUnexpectedError-5.html":{},"classes/HandleUnexpectedError-6.html":{},"injectables/HandlebarsService.html":{},"classes/I18n.html":{},"injectables/I18nService.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/ImplicitlyAuthenticated.html":{},"components/InfoComponent.html":{},"classes/InitAuthStatus.html":{},"classes/InitFilters.html":{},"classes/InitTimeline.html":{},"classes/Input.html":{},"classes/LightCard.html":{},"classes/LightCardAlreadyUpdated.html":{},"injectables/LightCardEffects.html":{},"components/ListSettingComponent.html":{},"classes/LoadArchivedCard.html":{},"classes/LoadArchivedCardFailure.html":{},"classes/LoadArchivedCardSuccess.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{},"classes/LoadConfig.html":{},"classes/LoadConfigFailure.html":{},"classes/LoadConfigSuccess.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/LoadSettings.html":{},"classes/LoadSettingsFailure.html":{},"classes/LoadSettingsSuccess.html":{},"components/LoginComponent.html":{},"classes/Map.html":{},"injectables/MenuEffects.html":{},"components/MenuLinkComponent.html":{},"interfaces/MenuState.html":{},"classes/Message.html":{},"directives/MouseWheelDirective.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"injectables/NotifyService.html":{},"classes/Page.html":{},"classes/ParameterListItem.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"classes/PatchSettings.html":{},"classes/PatchSettingsFailure.html":{},"classes/PatchSettingsSuccess.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/Process.html":{},"classes/RefreshTranslation.html":{},"classes/RejectLogIn.html":{},"classes/RemoveLightCard.html":{},"components/ResizableComponent.html":{},"classes/RouterStateUrl.html":{},"classes/SelectArchivedLightCard.html":{},"classes/SelectLightCard.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{},"classes/SendArchiveQuery.html":{},"modules/ServicesModule.html":{},"classes/SetCardDataTimeline.html":{},"components/SettingsComponent.html":{},"injectables/SettingsEffects.html":{},"interfaces/SettingsInputs.html":{},"modules/SettingsModule.html":{},"modules/SettingsRoutingModule.html":{},"injectables/SettingsService.html":{},"interfaces/SettingsState.html":{},"classes/State.html":{},"modules/StateModule.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"classes/Third.html":{},"classes/ThirdActionAlreadyLoaded.html":{},"classes/ThirdActionAlreadyUpdated.html":{},"injectables/ThirdActionService.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"modules/ThirdpartyModule.html":{},"modules/ThirdpartyRoutingModule.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"classes/ThirdsServiceMock.html":{},"classes/Tick.html":{},"classes/TickPayload.html":{},"injectables/TimeEffects.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"classes/TimeReference.html":{},"classes/TimeSpan.html":{},"interfaces/TimeState.html":{},"interfaces/TimelineState.html":{},"interceptors/TokenInjector.html":{},"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{},"interfaces/TranslationState.html":{},"classes/TranslationUpToDate.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"classes/UnAuthenticationFromImplicitFlow.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateAnActionFailure.html":{},"classes/UpdateArchiveFilter.html":{},"classes/UpdateArchivePage.html":{},"classes/UpdateTimeReference.html":{},"classes/UpdateTranslation.html":{},"classes/UpdateTranslationFailed.html":{},"classes/UpdateTranslationSuccessful.html":{},"classes/UpdatedSubscription.html":{},"classes/UselessAuthAction.html":{},"classes/User.html":{},"classes/UserApplicationNotRegistered.html":{},"classes/UserApplicationRegistered.html":{},"classes/UserContext.html":{},"injectables/UserEffects.html":{},"injectables/UserService.html":{},"interfaces/UserState.html":{},"modules/UtilitiesModule.html":{},"pipes/XAxisTickFormatPipe.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"modules.html":{},"routes.html":{},"miscellaneous/typealiases.html":{}}}],["result[u.third",{"_index":4691,"title":{},"body":{"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["resultpage",{"_index":1072,"title":{},"body":{"classes/ArchiveQuerySuccess.html":{},"interfaces/ArchiveState.html":{},"classes/HandleUnexpectedError.html":{},"classes/SelectArchivedLightCard.html":{},"classes/SendArchiveQuery.html":{},"classes/UpdateArchiveFilter.html":{},"classes/UpdateArchivePage.html":{}}}],["results",{"_index":164,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/Action.html":{},"components/ActionComponent.html":{},"classes/ActionStatus.html":{},"classes/AddActionsAppear.html":{},"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interfaces/AppState.html":{},"classes/ApplyFilter.html":{},"injectables/ArchiveEffects.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"classes/ArchiveQuerySuccess.html":{},"interfaces/ArchiveState.html":{},"components/ArchivesComponent.html":{},"modules/ArchivesModule.html":{},"modules/ArchivesRoutingModule.html":{},"classes/AuthObject.html":{},"interfaces/AuthState.html":{},"injectables/AuthenticationEffects.html":{},"interfaces/AuthenticationModeHandler.html":{},"components/BaseSettingComponent.html":{},"directives/CalcHeightDirective.html":{},"classes/Card.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"injectables/CardEffects.html":{},"interfaces/CardFeedState.html":{},"components/CardListComponent.html":{},"classes/CardOperation.html":{},"injectables/CardOperationEffects.html":{},"injectables/CardService.html":{},"interfaces/CardState.html":{},"modules/CardsModule.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckImplicitFlowAuthenticationStatus.html":{},"classes/CheckTokenResponse.html":{},"classes/ClearCard.html":{},"classes/ClearLightCardSelection.html":{},"injectables/ConfigEffects.html":{},"injectables/ConfigService.html":{},"interfaces/ConfigState.html":{},"components/ConfirmModalComponent.html":{},"classes/CreateUserApplication.html":{},"classes/CreateUserApplicationOnFailure.html":{},"classes/CreateUserApplicationOnSuccess.html":{},"components/CustomLogoComponent.html":{},"injectables/CustomRouterEffects.html":{},"classes/CustomRouterStateSerializer.html":{},"classes/DateTimeNgb.html":{},"components/DatetimeFilterComponent.html":{},"classes/DelayedLightCardUpdate.html":{},"classes/Detail.html":{},"components/DetailComponent.html":{},"classes/DetailContext.html":{},"components/DetailsComponent.html":{},"directives/DraggableDirective.html":{},"components/EmailSettingComponent.html":{},"classes/EmptyLightCards.html":{},"classes/FailToUpdateTimeReference.html":{},"components/FeedComponent.html":{},"injectables/FeedFiltersEffects.html":{},"modules/FeedModule.html":{},"modules/FeedRoutingModule.html":{},"classes/Filter.html":{},"injectables/FilterService.html":{},"components/FiltersComponent.html":{},"classes/GuidService.html":{},"classes/HandleUnexpectedError.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/HandleUnexpectedError-4.html":{},"classes/HandleUnexpectedError-5.html":{},"classes/HandleUnexpectedError-6.html":{},"injectables/HandlebarsService.html":{},"classes/I18n.html":{},"injectables/I18nService.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/ImplicitlyAuthenticated.html":{},"components/InfoComponent.html":{},"classes/InitAuthStatus.html":{},"classes/InitFilters.html":{},"classes/InitTimeline.html":{},"classes/Input.html":{},"classes/LightCard.html":{},"classes/LightCardAlreadyUpdated.html":{},"injectables/LightCardEffects.html":{},"components/ListSettingComponent.html":{},"classes/LoadArchivedCard.html":{},"classes/LoadArchivedCardFailure.html":{},"classes/LoadArchivedCardSuccess.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{},"classes/LoadConfig.html":{},"classes/LoadConfigFailure.html":{},"classes/LoadConfigSuccess.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/LoadSettings.html":{},"classes/LoadSettingsFailure.html":{},"classes/LoadSettingsSuccess.html":{},"components/LoginComponent.html":{},"classes/Map.html":{},"injectables/MenuEffects.html":{},"components/MenuLinkComponent.html":{},"interfaces/MenuState.html":{},"classes/Message.html":{},"directives/MouseWheelDirective.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"injectables/NotifyService.html":{},"classes/Page.html":{},"classes/ParameterListItem.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"classes/PatchSettings.html":{},"classes/PatchSettingsFailure.html":{},"classes/PatchSettingsSuccess.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/Process.html":{},"classes/RefreshTranslation.html":{},"classes/RejectLogIn.html":{},"classes/RemoveLightCard.html":{},"components/ResizableComponent.html":{},"classes/RouterStateUrl.html":{},"classes/SelectArchivedLightCard.html":{},"classes/SelectLightCard.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{},"classes/SendArchiveQuery.html":{},"modules/ServicesModule.html":{},"classes/SetCardDataTimeline.html":{},"components/SettingsComponent.html":{},"injectables/SettingsEffects.html":{},"interfaces/SettingsInputs.html":{},"modules/SettingsModule.html":{},"modules/SettingsRoutingModule.html":{},"injectables/SettingsService.html":{},"interfaces/SettingsState.html":{},"classes/State.html":{},"modules/StateModule.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"classes/Third.html":{},"classes/ThirdActionAlreadyLoaded.html":{},"classes/ThirdActionAlreadyUpdated.html":{},"injectables/ThirdActionService.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"modules/ThirdpartyModule.html":{},"modules/ThirdpartyRoutingModule.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"classes/ThirdsServiceMock.html":{},"classes/Tick.html":{},"classes/TickPayload.html":{},"injectables/TimeEffects.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"classes/TimeReference.html":{},"classes/TimeSpan.html":{},"interfaces/TimeState.html":{},"interfaces/TimelineState.html":{},"interceptors/TokenInjector.html":{},"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{},"interfaces/TranslationState.html":{},"classes/TranslationUpToDate.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"classes/UnAuthenticationFromImplicitFlow.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateAnActionFailure.html":{},"classes/UpdateArchiveFilter.html":{},"classes/UpdateArchivePage.html":{},"classes/UpdateTimeReference.html":{},"classes/UpdateTranslation.html":{},"classes/UpdateTranslationFailed.html":{},"classes/UpdateTranslationSuccessful.html":{},"classes/UpdatedSubscription.html":{},"classes/UselessAuthAction.html":{},"classes/User.html":{},"classes/UserApplicationNotRegistered.html":{},"classes/UserApplicationRegistered.html":{},"classes/UserContext.html":{},"injectables/UserEffects.html":{},"injectables/UserService.html":{},"interfaces/UserState.html":{},"modules/UtilitiesModule.html":{},"pipes/XAxisTickFormatPipe.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"modules.html":{},"routes.html":{},"miscellaneous/typealiases.html":{}}}],["retrieve",{"_index":2031,"title":{},"body":{"injectables/CardOperationEffects.html":{}}}],["retry",{"_index":2211,"title":{},"body":{"injectables/ConfigEffects.html":{},"interfaces/ConfigState.html":{}}}],["retryconfigurationloading",{"_index":2198,"title":{},"body":{"injectables/ConfigEffects.html":{}}}],["retrydelay",{"_index":2200,"title":{},"body":{"injectables/ConfigEffects.html":{}}}],["return",{"_index":209,"title":{},"body":{"classes/Action.html":{},"classes/ActionStatus.html":{},"injectables/ArchiveEffects.html":{},"components/ArchiveFiltersComponent.html":{},"classes/AuthObject.html":{},"injectables/AuthenticationEffects.html":{},"interfaces/AuthenticationModeHandler.html":{},"components/BaseSettingComponent.html":{},"directives/CalcHeightDirective.html":{},"components/CardComponent.html":{},"injectables/CardEffects.html":{},"interfaces/CardFeedState.html":{},"classes/CardOperation.html":{},"injectables/CardOperationEffects.html":{},"injectables/CardService.html":{},"modules/CardsModule.html":{},"classes/CheckTokenResponse.html":{},"injectables/ConfigEffects.html":{},"injectables/ConfigService.html":{},"components/CustomLogoComponent.html":{},"injectables/CustomRouterEffects.html":{},"classes/CustomRouterStateSerializer.html":{},"classes/DateTimeNgb.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"directives/DraggableDirective.html":{},"components/EmailSettingComponent.html":{},"injectables/FeedFiltersEffects.html":{},"classes/Filter.html":{},"injectables/FilterService.html":{},"classes/GuidService.html":{},"injectables/HandlebarsService.html":{},"injectables/I18nService.html":{},"components/IframeDisplayComponent.html":{},"classes/ImplicitAuthenticationHandler.html":{},"components/InfoComponent.html":{},"classes/Input.html":{},"classes/LightCard.html":{},"injectables/LightCardEffects.html":{},"components/ListSettingComponent.html":{},"injectables/MenuEffects.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"injectables/NotifyService.html":{},"classes/ParameterListItem.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"classes/Process.html":{},"classes/RouterStateUrl.html":{},"modules/ServicesModule.html":{},"injectables/SettingsEffects.html":{},"injectables/SettingsService.html":{},"classes/State.html":{},"modules/StateModule.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"classes/Third.html":{},"injectables/ThirdActionService.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"classes/ThirdsServiceMock.html":{},"injectables/TimeEffects.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"classes/TimeReference.html":{},"classes/TimeSpan.html":{},"interceptors/TokenInjector.html":{},"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{},"components/TypeFilterComponent.html":{},"injectables/UserEffects.html":{},"injectables/UserService.html":{},"pipes/XAxisTickFormatPipe.html":{}}}],["returned",{"_index":2404,"title":{},"body":{"classes/CustomRouterStateSerializer.html":{},"classes/RouterStateUrl.html":{}}}],["returns",{"_index":312,"title":{},"body":{"components/ActionComponent.html":{},"components/AppComponent.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"injectables/AuthenticationEffects.html":{},"interfaces/AuthenticationModeHandler.html":{},"components/BaseSettingComponent.html":{},"directives/CalcHeightDirective.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"classes/CardOperation.html":{},"injectables/CardService.html":{},"modules/CardsModule.html":{},"injectables/ConfigService.html":{},"components/ConfirmModalComponent.html":{},"components/CustomLogoComponent.html":{},"classes/CustomRouterStateSerializer.html":{},"classes/DateTimeNgb.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"classes/Filter.html":{},"injectables/FilterService.html":{},"components/FiltersComponent.html":{},"classes/GuidService.html":{},"injectables/HandlebarsService.html":{},"injectables/I18nService.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"classes/ImplicitAuthenticationHandler.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MenuLinkComponent.html":{},"directives/MouseWheelDirective.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"injectables/NotifyService.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"components/ResizableComponent.html":{},"classes/RouterStateUrl.html":{},"modules/ServicesModule.html":{},"components/SettingsComponent.html":{},"injectables/SettingsService.html":{},"modules/StateModule.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"classes/Third.html":{},"injectables/ThirdActionService.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"classes/ThirdsServiceMock.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"classes/TimeReference.html":{},"interceptors/TokenInjector.html":{},"injectables/TranslateEffects.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"injectables/UserService.html":{},"pipes/XAxisTickFormatPipe.html":{}}}],["reverse",{"_index":2437,"title":{},"body":{"classes/DateTimeNgb.html":{}}}],["right",{"_index":629,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthenticationEffects.html":{},"components/LoginComponent.html":{},"components/TypeFilterComponent.html":{}}}],["right:0",{"_index":1014,"title":{},"body":{"components/ArchiveFiltersComponent.html":{},"components/DatetimeFilterComponent.html":{}}}],["right:7px",{"_index":1016,"title":{},"body":{"components/ArchiveFiltersComponent.html":{}}}],["root",{"_index":546,"title":{},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"injectables/FilterService.html":{},"classes/GuidService.html":{}}}],["root'},{'name",{"_index":355,"title":{},"body":{"components/ActionComponent.html":{},"components/AppComponent.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/ConfirmModalComponent.html":{},"components/CustomLogoComponent.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MenuLinkComponent.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/ResizableComponent.html":{},"components/SettingsComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{}}}],["rotate]=\"true",{"_index":1061,"title":{},"body":{"components/ArchiveListPageComponent.html":{}}}],["route",{"_index":2374,"title":{},"body":{"injectables/CustomRouterEffects.html":{},"classes/CustomRouterStateSerializer.html":{},"classes/HandleUnexpectedError-4.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/RouterStateUrl.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{}}}],["router",{"_index":719,"title":{},"body":{"modules/AppRoutingModule.html":{},"interfaces/AppState.html":{},"injectables/AuthenticationEffects.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"classes/CustomRouterStateSerializer.html":{},"injectables/MenuEffects.html":{},"classes/RouterStateUrl.html":{},"modules/StateModule.html":{},"dependencies.html":{}}}],["router.effects",{"_index":835,"title":{},"body":{"interfaces/AppState.html":{}}}],["router.effects.ts",{"_index":2335,"title":{},"body":{"injectables/CustomRouterEffects.html":{}}}],["router.effects.ts:28",{"_index":2340,"title":{},"body":{"injectables/CustomRouterEffects.html":{}}}],["router.effects.ts:35",{"_index":2358,"title":{},"body":{"injectables/CustomRouterEffects.html":{}}}],["router.effects.ts:50",{"_index":2355,"title":{},"body":{"injectables/CustomRouterEffects.html":{}}}],["router.effects.ts:72",{"_index":2365,"title":{},"body":{"injectables/CustomRouterEffects.html":{}}}],["router.effects.ts:86",{"_index":2346,"title":{},"body":{"injectables/CustomRouterEffects.html":{}}}],["router_navigated",{"_index":2377,"title":{},"body":{"injectables/CustomRouterEffects.html":{}}}],["router_navigation",{"_index":2366,"title":{},"body":{"injectables/CustomRouterEffects.html":{}}}],["router_request",{"_index":2378,"title":{},"body":{"injectables/CustomRouterEffects.html":{}}}],["routereffects",{"_index":812,"title":{},"body":{"interfaces/AppState.html":{}}}],["routermodule",{"_index":720,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/ArchivesRoutingModule.html":{},"modules/FeedRoutingModule.html":{},"modules/SettingsRoutingModule.html":{},"modules/ThirdpartyRoutingModule.html":{}}}],["routermodule.forchild(routes",{"_index":1122,"title":{},"body":{"modules/ArchivesRoutingModule.html":{},"modules/FeedRoutingModule.html":{},"modules/SettingsRoutingModule.html":{},"modules/ThirdpartyRoutingModule.html":{}}}],["routermodule.forroot(routes",{"_index":767,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routernavigationaction",{"_index":2348,"title":{},"body":{"injectables/CustomRouterEffects.html":{}}}],["routerreducerstate",{"_index":788,"title":{},"body":{"interfaces/AppState.html":{}}}],["routerrequestaction",{"_index":2343,"title":{},"body":{"injectables/CustomRouterEffects.html":{}}}],["routerstate",{"_index":2391,"title":{},"body":{"classes/CustomRouterStateSerializer.html":{},"classes/RouterStateUrl.html":{}}}],["routerstate.params['cid",{"_index":2353,"title":{},"body":{"injectables/CustomRouterEffects.html":{}}}],["routerstate.params['menu_entry_id",{"_index":2364,"title":{},"body":{"injectables/CustomRouterEffects.html":{}}}],["routerstate.params['menu_id",{"_index":2361,"title":{},"body":{"injectables/CustomRouterEffects.html":{}}}],["routerstate.params['menu_version'],menu_entry_id",{"_index":2363,"title":{},"body":{"injectables/CustomRouterEffects.html":{}}}],["routerstate.root.queryparams",{"_index":2408,"title":{},"body":{"classes/CustomRouterStateSerializer.html":{},"classes/RouterStateUrl.html":{}}}],["routerstate:any",{"_index":2350,"title":{},"body":{"injectables/CustomRouterEffects.html":{}}}],["routerstateserializer",{"_index":2382,"title":{},"body":{"classes/CustomRouterStateSerializer.html":{},"classes/RouterStateUrl.html":{},"modules/StateModule.html":{}}}],["routerstatesnapshot",{"_index":2389,"title":{},"body":{"classes/CustomRouterStateSerializer.html":{},"classes/RouterStateUrl.html":{},"modules/StateModule.html":{}}}],["routerstateurl",{"_index":796,"title":{"classes/RouterStateUrl.html":{}},"body":{"interfaces/AppState.html":{},"classes/CustomRouterStateSerializer.html":{},"classes/RouterStateUrl.html":{}}}],["routerstateurl(url",{"_index":2409,"title":{},"body":{"classes/CustomRouterStateSerializer.html":{},"classes/RouterStateUrl.html":{}}}],["routes",{"_index":721,"title":{"routes.html":{}},"body":{"modules/AppRoutingModule.html":{},"modules/ArchivesRoutingModule.html":{},"modules/FeedRoutingModule.html":{},"modules/SettingsRoutingModule.html":{},"modules/ThirdpartyRoutingModule.html":{},"index.html":{},"routes.html":{}}}],["routes.slice(0",{"_index":743,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routing.module",{"_index":675,"title":{},"body":{"modules/AppModule.html":{},"modules/ArchivesModule.html":{},"injectables/AuthenticationEffects.html":{},"modules/FeedModule.html":{},"components/NavbarComponent.html":{},"modules/SettingsModule.html":{},"modules/ThirdpartyModule.html":{}}}],["routing.module.ts",{"_index":717,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/ArchivesRoutingModule.html":{},"modules/FeedRoutingModule.html":{},"modules/SettingsRoutingModule.html":{},"modules/ThirdpartyRoutingModule.html":{}}}],["row",{"_index":4819,"title":{},"body":{"components/TypeFilterComponent.html":{}}}],["rows",{"_index":274,"title":{},"body":{"classes/Action.html":{},"classes/ActionStatus.html":{},"classes/Input.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{}}}],["rte",{"_index":332,"title":{},"body":{"components/ActionComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"modules/ArchivesModule.html":{},"modules/ArchivesRoutingModule.html":{},"components/CardComponent.html":{},"components/CardListComponent.html":{},"modules/CardsModule.html":{},"components/CustomLogoComponent.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailsComponent.html":{},"components/FeedComponent.html":{},"modules/FeedModule.html":{},"modules/FeedRoutingModule.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/MenuLinkComponent.html":{},"components/MultiFilterComponent.html":{},"components/NavbarComponent.html":{},"components/ResizableComponent.html":{},"modules/ServicesModule.html":{},"modules/SettingsModule.html":{},"modules/SettingsRoutingModule.html":{},"modules/StateModule.html":{},"components/TagsFilterComponent.html":{},"modules/ThirdpartyModule.html":{},"modules/ThirdpartyRoutingModule.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"modules/UtilitiesModule.html":{}}}],["rules",{"_index":1478,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["running",{"_index":1301,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["rvalue",{"_index":3228,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["rxjs",{"_index":584,"title":{},"body":{"components/AppComponent.html":{},"injectables/ArchiveEffects.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"classes/AuthObject.html":{},"injectables/AuthenticationEffects.html":{},"interfaces/AuthenticationModeHandler.html":{},"components/BaseSettingComponent.html":{},"directives/CalcHeightDirective.html":{},"components/CardComponent.html":{},"injectables/CardEffects.html":{},"components/CardListComponent.html":{},"injectables/CardOperationEffects.html":{},"injectables/CardService.html":{},"classes/CheckTokenResponse.html":{},"injectables/ConfigEffects.html":{},"injectables/ConfigService.html":{},"injectables/CustomRouterEffects.html":{},"components/DetailComponent.html":{},"components/FeedComponent.html":{},"injectables/FeedFiltersEffects.html":{},"components/FiltersComponent.html":{},"injectables/HandlebarsService.html":{},"injectables/I18nService.html":{},"classes/ImplicitAuthenticationHandler.html":{},"components/InfoComponent.html":{},"injectables/LightCardEffects.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"injectables/MenuEffects.html":{},"components/MultiFilterComponent.html":{},"components/NavbarComponent.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"components/SettingsComponent.html":{},"injectables/SettingsEffects.html":{},"interfaces/SettingsInputs.html":{},"injectables/SettingsService.html":{},"components/TagsFilterComponent.html":{},"injectables/ThirdActionService.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"classes/ThirdsServiceMock.html":{},"injectables/TimeEffects.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"interceptors/TokenInjector.html":{},"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{},"components/TypeFilterComponent.html":{},"injectables/UserEffects.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["rxjs/operators",{"_index":930,"title":{},"body":{"injectables/ArchiveEffects.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"classes/AuthObject.html":{},"injectables/AuthenticationEffects.html":{},"interfaces/AuthenticationModeHandler.html":{},"components/BaseSettingComponent.html":{},"directives/CalcHeightDirective.html":{},"components/CardComponent.html":{},"injectables/CardEffects.html":{},"injectables/CardOperationEffects.html":{},"classes/CheckTokenResponse.html":{},"injectables/ConfigEffects.html":{},"injectables/CustomRouterEffects.html":{},"components/FeedComponent.html":{},"injectables/FeedFiltersEffects.html":{},"injectables/HandlebarsService.html":{},"classes/ImplicitAuthenticationHandler.html":{},"components/InfoComponent.html":{},"injectables/LightCardEffects.html":{},"components/LoginComponent.html":{},"injectables/MenuEffects.html":{},"components/NavbarComponent.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"injectables/SettingsEffects.html":{},"components/TagsFilterComponent.html":{},"injectables/ThirdActionService.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"injectables/TimeEffects.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{},"components/TypeFilterComponent.html":{},"injectables/UserEffects.html":{}}}],["safe",{"_index":2607,"title":{},"body":{"components/DetailComponent.html":{}}}],["safecssurl",{"_index":2603,"title":{},"body":{"components/DetailComponent.html":{}}}],["safecssurl.tolocalestring",{"_index":2611,"title":{},"body":{"components/DetailComponent.html":{}}}],["safecssurl.tostring",{"_index":2609,"title":{},"body":{"components/DetailComponent.html":{}}}],["safehtml",{"_index":2569,"title":{},"body":{"components/DetailComponent.html":{}}}],["saferesourceurl",{"_index":2578,"title":{},"body":{"components/DetailComponent.html":{}}}],["safeurl",{"_index":2305,"title":{},"body":{"components/CustomLogoComponent.html":{},"components/IframeDisplayComponent.html":{}}}],["same",{"_index":746,"title":{},"body":{"modules/AppRoutingModule.html":{},"directives/CalcHeightDirective.html":{},"components/TimeLineComponent.html":{}}}],["sanitizer",{"_index":2552,"title":{},"body":{"components/DetailComponent.html":{},"components/IframeDisplayComponent.html":{}}}],["saturday",{"_index":2835,"title":{},"body":{"components/FeedComponent.html":{}}}],["save",{"_index":1316,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"components/ConfirmModalComponent.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"injectables/ThirdActionService.html":{}}}],["saveauthenticationinformation(payload",{"_index":1319,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["scope",{"_index":2967,"title":{},"body":{"classes/Filter.html":{}}}],["scripts",{"_index":2621,"title":{},"body":{"components/DetailComponent.html":{}}}],["scripts.length",{"_index":2624,"title":{},"body":{"components/DetailComponent.html":{}}}],["scriptsinitiallength",{"_index":2623,"title":{},"body":{"components/DetailComponent.html":{}}}],["sea",{"_index":4382,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["search",{"_index":1741,"title":{},"body":{"directives/CalcHeightDirective.html":{}}}],["searchcodestring",{"_index":1444,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["searchcodestring.length",{"_index":1450,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["searches",{"_index":761,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["sec",{"_index":4944,"title":{},"body":{"pipes/XAxisTickFormatPipe.html":{}}}],["second",{"_index":2463,"title":{},"body":{"classes/DateTimeNgb.html":{}}}],["secondedsonly",{"_index":4958,"title":{},"body":{"pipes/XAxisTickFormatPipe.html":{}}}],["secret",{"_index":1203,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["security",{"_index":2124,"title":{},"body":{"injectables/CardService.html":{}}}],["securityheader",{"_index":4608,"title":{},"body":{"interceptors/TokenInjector.html":{}}}],["see",{"_index":3848,"title":{},"body":{"components/ResizableComponent.html":{},"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["select",{"_index":495,"title":{},"body":{"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"components/AppComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"classes/ArchiveQuerySuccess.html":{},"components/ArchivesComponent.html":{},"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"components/CardComponent.html":{},"classes/CheckTokenResponse.html":{},"classes/ClearLightCardSelection.html":{},"classes/DelayedLightCardUpdate.html":{},"directives/DraggableDirective.html":{},"classes/EmptyLightCards.html":{},"components/FeedComponent.html":{},"classes/HandleUnexpectedError.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/HandleUnexpectedError-4.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/LightCardAlreadyUpdated.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"classes/RemoveLightCard.html":{},"classes/SelectArchivedLightCard.html":{},"classes/SelectLightCard.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{},"classes/SendArchiveQuery.html":{},"classes/ThirdActionAlreadyLoaded.html":{},"classes/ThirdActionAlreadyUpdated.html":{},"components/TimeLineComponent.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateAnActionFailure.html":{},"classes/UpdateArchiveFilter.html":{},"classes/UpdateArchivePage.html":{},"classes/UpdatedSubscription.html":{},"miscellaneous/enumerations.html":{}}}],["select(feedselectors.selectfilteredfeed",{"_index":2827,"title":{},"body":{"components/FeedComponent.html":{}}}],["select(selectarchivecount",{"_index":1052,"title":{},"body":{"components/ArchiveListPageComponent.html":{}}}],["select(selectarchivelightcards",{"_index":1090,"title":{},"body":{"components/ArchivesComponent.html":{}}}],["select(selectconfigloaded",{"_index":611,"title":{},"body":{"components/AppComponent.html":{}}}],["select(selectmaxedretries",{"_index":615,"title":{},"body":{"components/AppComponent.html":{}}}],["selectarchivecount",{"_index":1048,"title":{},"body":{"components/ArchiveListPageComponent.html":{}}}],["selectarchivedlightcard",{"_index":1068,"title":{"classes/SelectArchivedLightCard.html":{}},"body":{"classes/ArchiveQuerySuccess.html":{},"injectables/CustomRouterEffects.html":{},"classes/HandleUnexpectedError.html":{},"classes/SelectArchivedLightCard.html":{},"classes/SendArchiveQuery.html":{},"classes/UpdateArchiveFilter.html":{},"classes/UpdateArchivePage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["selectarchivedlightcard({selectedcardid",{"_index":2354,"title":{},"body":{"injectables/CustomRouterEffects.html":{}}}],["selectarchivefilters",{"_index":935,"title":{},"body":{"injectables/ArchiveEffects.html":{}}}],["selectarchivelightcards",{"_index":1028,"title":{},"body":{"components/ArchiveListComponent.html":{},"components/ArchivesComponent.html":{}}}],["selectarchivelightcardselection",{"_index":1088,"title":{},"body":{"components/ArchivesComponent.html":{}}}],["selectauthenticationstate",{"_index":2583,"title":{},"body":{"components/DetailComponent.html":{}}}],["selectcardactionsappearstate",{"_index":1844,"title":{},"body":{"components/CardComponent.html":{}}}],["selectcardstateselectedid",{"_index":2067,"title":{},"body":{"injectables/CardOperationEffects.html":{}}}],["selectcode",{"_index":1579,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["selectconfigloaded",{"_index":594,"title":{},"body":{"components/AppComponent.html":{}}}],["selectconfigretry",{"_index":2217,"title":{},"body":{"injectables/ConfigEffects.html":{}}}],["selectcurrentdate",{"_index":3374,"title":{},"body":{"components/InfoComponent.html":{}}}],["selectcurrenturl",{"_index":587,"title":{},"body":{"components/AppComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/NavbarComponent.html":{}}}],["selectdetail",{"_index":2661,"title":{},"body":{"components/DetailsComponent.html":{}}}],["selectdetail(detail",{"_index":2669,"title":{},"body":{"components/DetailsComponent.html":{}}}],["selected",{"_index":509,"title":{},"body":{"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"interfaces/CardFeedState.html":{},"injectables/CardOperationEffects.html":{},"interfaces/CardState.html":{},"classes/ClearLightCardSelection.html":{},"classes/DelayedLightCardUpdate.html":{},"classes/EmptyLightCards.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/LightCardAlreadyUpdated.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/RemoveLightCard.html":{},"classes/SelectLightCard.html":{},"classes/ThirdActionAlreadyLoaded.html":{},"classes/ThirdActionAlreadyUpdated.html":{},"interfaces/TimelineState.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateAnActionFailure.html":{},"classes/UpdatedSubscription.html":{},"miscellaneous/enumerations.html":{}}}],["selected_iframe_url",{"_index":3634,"title":{},"body":{"interfaces/MenuState.html":{}}}],["selectedcardid",{"_index":526,"title":{},"body":{"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"classes/ArchiveQuerySuccess.html":{},"interfaces/ArchiveState.html":{},"interfaces/CardFeedState.html":{},"injectables/CardOperationEffects.html":{},"classes/ClearLightCardSelection.html":{},"classes/DelayedLightCardUpdate.html":{},"classes/EmptyLightCards.html":{},"classes/HandleUnexpectedError.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/LightCardAlreadyUpdated.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/RemoveLightCard.html":{},"classes/SelectArchivedLightCard.html":{},"classes/SelectLightCard.html":{},"classes/SendArchiveQuery.html":{},"classes/ThirdActionAlreadyLoaded.html":{},"classes/ThirdActionAlreadyUpdated.html":{},"interfaces/TimelineState.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateAnActionFailure.html":{},"classes/UpdateArchiveFilter.html":{},"classes/UpdateArchivePage.html":{},"classes/UpdatedSubscription.html":{}}}],["selectediframeurl",{"_index":3338,"title":{},"body":{"components/IframeDisplayComponent.html":{}}}],["selectedvalues",{"_index":277,"title":{},"body":{"classes/Action.html":{},"classes/ActionStatus.html":{},"classes/Input.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{}}}],["selectexpirationtime",{"_index":1153,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["selecti18nuploaded",{"_index":4620,"title":{},"body":{"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["selectidentifier",{"_index":1665,"title":{},"body":{"components/BaseSettingComponent.html":{},"injectables/SettingsService.html":{}}}],["selection",{"_index":498,"title":{},"body":{"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"components/ArchiveListComponent.html":{},"components/ArchivesComponent.html":{},"components/CardListComponent.html":{},"classes/ClearLightCardSelection.html":{},"classes/DelayedLightCardUpdate.html":{},"classes/EmptyLightCards.html":{},"components/FeedComponent.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/LightCardAlreadyUpdated.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"components/NoSelectionComponent.html":{},"classes/RemoveLightCard.html":{},"classes/SelectLightCard.html":{},"classes/ThirdActionAlreadyLoaded.html":{},"classes/ThirdActionAlreadyUpdated.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateAnActionFailure.html":{},"classes/UpdatedSubscription.html":{},"miscellaneous/enumerations.html":{}}}],["selection'},{'name",{"_index":412,"title":{},"body":{"components/ActionComponent.html":{},"components/AppComponent.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/ConfirmModalComponent.html":{},"components/CustomLogoComponent.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MenuLinkComponent.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/ResizableComponent.html":{},"components/SettingsComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{}}}],["selection.component",{"_index":2924,"title":{},"body":{"modules/FeedModule.html":{}}}],["selection.component.html",{"_index":3767,"title":{},"body":{"components/NoSelectionComponent.html":{}}}],["selection.component.ts",{"_index":3766,"title":{},"body":{"components/NoSelectionComponent.html":{}}}],["selection.component.ts:15",{"_index":3768,"title":{},"body":{"components/NoSelectionComponent.html":{}}}],["selection.component.ts:19",{"_index":3769,"title":{},"body":{"components/NoSelectionComponent.html":{}}}],["selection/no",{"_index":2923,"title":{},"body":{"modules/FeedModule.html":{},"components/NoSelectionComponent.html":{}}}],["selections",{"_index":4814,"title":{},"body":{"components/TypeFilterComponent.html":{}}}],["selectisimplicitlyauthenticated",{"_index":1154,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["selectlightcard",{"_index":494,"title":{"classes/SelectLightCard.html":{}},"body":{"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"classes/ClearLightCardSelection.html":{},"injectables/CustomRouterEffects.html":{},"classes/DelayedLightCardUpdate.html":{},"classes/EmptyLightCards.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/LightCardAlreadyUpdated.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/RemoveLightCard.html":{},"classes/SelectLightCard.html":{},"classes/ThirdActionAlreadyLoaded.html":{},"classes/ThirdActionAlreadyUpdated.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateAnActionFailure.html":{},"classes/UpdatedSubscription.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["selectlightcard({selectedcardid",{"_index":2357,"title":{},"body":{"injectables/CustomRouterEffects.html":{}}}],["selectmaxedretries",{"_index":595,"title":{},"body":{"components/AppComponent.html":{}}}],["selectmenulink",{"_index":2373,"title":{"classes/SelectMenuLink.html":{}},"body":{"injectables/CustomRouterEffects.html":{},"classes/HandleUnexpectedError-4.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"injectables/MenuEffects.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["selectmenulink({menu_id",{"_index":2360,"title":{},"body":{"injectables/CustomRouterEffects.html":{}}}],["selectmenulinkfailure",{"_index":3087,"title":{"classes/SelectMenuLinkFailure.html":{}},"body":{"classes/HandleUnexpectedError-4.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"injectables/MenuEffects.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["selectmenulinkfailure(err",{"_index":3600,"title":{},"body":{"injectables/MenuEffects.html":{}}}],["selectmenulinksuccess",{"_index":3086,"title":{"classes/SelectMenuLinkSuccess.html":{}},"body":{"classes/HandleUnexpectedError-4.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"injectables/MenuEffects.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["selectmenulinksuccess({iframe_url",{"_index":3599,"title":{},"body":{"injectables/MenuEffects.html":{}}}],["selectmenustatemenu",{"_index":3727,"title":{},"body":{"components/NavbarComponent.html":{}}}],["selectmenustateselectediframeurl",{"_index":3343,"title":{},"body":{"components/IframeDisplayComponent.html":{}}}],["selectmessage",{"_index":3556,"title":{},"body":{"components/LoginComponent.html":{}}}],["selector",{"_index":289,"title":{},"body":{"components/ActionComponent.html":{},"components/AppComponent.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseSettingComponent.html":{},"directives/CalcHeightDirective.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/ConfirmModalComponent.html":{},"components/CustomLogoComponent.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"directives/DraggableDirective.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MenuLinkComponent.html":{},"directives/MouseWheelDirective.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/ResizableComponent.html":{},"components/SettingsComponent.html":{},"interfaces/SettingsInputs.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{}}}],["selector:'confirm",{"_index":2251,"title":{},"body":{"components/ConfirmModalComponent.html":{}}}],["selectrouterstate",{"_index":588,"title":{},"body":{"components/AppComponent.html":{}}}],["selecttimereference",{"_index":4289,"title":{},"body":{"injectables/TimeEffects.html":{}}}],["selectusernameoridentifier",{"_index":3373,"title":{},"body":{"components/InfoComponent.html":{}}}],["send",{"_index":572,"title":{},"body":{"components/AppComponent.html":{},"classes/ArchiveQuerySuccess.html":{},"components/ConfirmModalComponent.html":{},"classes/HandleUnexpectedError.html":{},"classes/SelectArchivedLightCard.html":{},"classes/SendArchiveQuery.html":{},"injectables/TimeEffects.html":{},"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{},"classes/UpdateArchiveFilter.html":{},"classes/UpdateArchivePage.html":{},"miscellaneous/enumerations.html":{}}}],["sendarchivequery",{"_index":902,"title":{"classes/SendArchiveQuery.html":{}},"body":{"injectables/ArchiveEffects.html":{},"components/ArchiveFiltersComponent.html":{},"classes/ArchiveQuerySuccess.html":{},"classes/HandleUnexpectedError.html":{},"classes/SelectArchivedLightCard.html":{},"classes/SendArchiveQuery.html":{},"classes/UpdateArchiveFilter.html":{},"classes/UpdateArchivePage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["sendarchivequery({params",{"_index":922,"title":{},"body":{"injectables/ArchiveEffects.html":{},"components/ArchiveFiltersComponent.html":{}}}],["sendquery",{"_index":949,"title":{},"body":{"components/ArchiveFiltersComponent.html":{}}}],["sendtranslateaction",{"_index":4736,"title":{},"body":{"injectables/TranslateEffects.html":{}}}],["sendtranslateaction(versiontoupdate",{"_index":4723,"title":{},"body":{"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["sense",{"_index":1759,"title":{},"body":{"directives/CalcHeightDirective.html":{}}}],["sent",{"_index":2897,"title":{},"body":{"injectables/FeedFiltersEffects.html":{}}}],["sequentially",{"_index":2989,"title":{},"body":{"classes/Filter.html":{}}}],["serialize",{"_index":2384,"title":{},"body":{"classes/CustomRouterStateSerializer.html":{}}}],["serialize(routerstate",{"_index":2388,"title":{},"body":{"classes/CustomRouterStateSerializer.html":{},"classes/RouterStateUrl.html":{}}}],["serializer",{"_index":3986,"title":{},"body":{"modules/StateModule.html":{}}}],["service",{"_index":120,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"injectables/ArchiveEffects.html":{},"classes/AuthObject.html":{},"injectables/AuthenticationEffects.html":{},"interfaces/AuthenticationModeHandler.html":{},"injectables/CardEffects.html":{},"injectables/CardOperationEffects.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckImplicitFlowAuthenticationStatus.html":{},"classes/CheckTokenResponse.html":{},"injectables/ConfigEffects.html":{},"injectables/FeedFiltersEffects.html":{},"injectables/HandlebarsService.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/ImplicitlyAuthenticated.html":{},"classes/InitAuthStatus.html":{},"components/LoginComponent.html":{},"injectables/MenuEffects.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"injectables/SettingsEffects.html":{},"injectables/TimeEffects.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"classes/UnAuthenticationFromImplicitFlow.html":{},"classes/UselessAuthAction.html":{},"injectables/UserService.html":{}}}],["services/handlebars.service",{"_index":2181,"title":{},"body":{"modules/CardsModule.html":{},"components/DetailComponent.html":{}}}],["services/thirds.service",{"_index":2180,"title":{},"body":{"modules/CardsModule.html":{},"injectables/HandlebarsService.html":{}}}],["servicesmodule",{"_index":652,"title":{"modules/ServicesModule.html":{}},"body":{"modules/AppModule.html":{},"modules/ServicesModule.html":{},"index.html":{},"modules.html":{}}}],["servicesmodule.forroot",{"_index":712,"title":{},"body":{"modules/AppModule.html":{}}}],["session",{"_index":1381,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["session_terminated",{"_index":1378,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["sessionstorage",{"_index":1192,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["sessionstorage.clear",{"_index":1314,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["sessionstorage.setitem('flow",{"_index":1368,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["set",{"_index":2684,"title":{},"body":{"components/DetailsComponent.html":{},"directives/DraggableDirective.html":{},"injectables/FeedFiltersEffects.html":{},"components/IconComponent.html":{},"classes/InitTimeline.html":{},"components/NavbarComponent.html":{},"classes/SetCardDataTimeline.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{},"components/TypeFilterComponent.html":{},"injectables/UserEffects.html":{},"miscellaneous/enumerations.html":{}}}],["set(\"locale",{"_index":4163,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["set(\"version",{"_index":4145,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["set([u.version",{"_index":4693,"title":{},"body":{"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["set(untrackedversions",{"_index":4720,"title":{},"body":{"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["setcarddatatimeline",{"_index":3400,"title":{"classes/SetCardDataTimeline.html":{}},"body":{"classes/InitTimeline.html":{},"classes/SetCardDataTimeline.html":{},"components/TimeLineComponent.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["setcarddatatimeline({cardstimeline",{"_index":4478,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["setdisabledstate",{"_index":2481,"title":{},"body":{"components/DatetimeFilterComponent.html":{}}}],["setdisabledstate(isdisabled",{"_index":2494,"title":{},"body":{"components/DatetimeFilterComponent.html":{}}}],["setdisabledstate?(isdisabled",{"_index":2514,"title":{},"body":{"components/DatetimeFilterComponent.html":{}}}],["setheaders",{"_index":4609,"title":{},"body":{"interceptors/TokenInjector.html":{}}}],["setheightandwidth",{"_index":2294,"title":{},"body":{"components/CustomLogoComponent.html":{}}}],["sets",{"_index":770,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["setsize",{"_index":3293,"title":{},"body":{"components/IconComponent.html":{}}}],["setsprites",{"_index":3294,"title":{},"body":{"components/IconComponent.html":{}}}],["settimeout",{"_index":2617,"title":{},"body":{"components/DetailComponent.html":{},"components/DetailsComponent.html":{}}}],["settimeout(()=>this.expandedmenu[index]=false,5000",{"_index":3751,"title":{},"body":{"components/NavbarComponent.html":{}}}],["settimeout(()=>this.expandedusermenu=false,5000",{"_index":3754,"title":{},"body":{"components/NavbarComponent.html":{}}}],["setting",{"_index":1621,"title":{},"body":{"components/BaseSettingComponent.html":{},"components/EmailSettingComponent.html":{},"components/ListSettingComponent.html":{},"components/MultiSettingsComponent.html":{},"components/TextSettingComponent.html":{},"components/TypeAheadSettingsComponent.html":{}}}],["setting'},{'name",{"_index":367,"title":{},"body":{"components/ActionComponent.html":{},"components/AppComponent.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/ConfirmModalComponent.html":{},"components/CustomLogoComponent.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MenuLinkComponent.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/ResizableComponent.html":{},"components/SettingsComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{}}}],["setting.component",{"_index":2771,"title":{},"body":{"components/EmailSettingComponent.html":{},"components/ListSettingComponent.html":{},"components/MultiSettingsComponent.html":{},"modules/SettingsModule.html":{},"components/TextSettingComponent.html":{}}}],["setting.component.html",{"_index":1622,"title":{},"body":{"components/BaseSettingComponent.html":{},"components/EmailSettingComponent.html":{},"components/ListSettingComponent.html":{},"components/TextSettingComponent.html":{}}}],["setting.component.ts",{"_index":1619,"title":{},"body":{"components/BaseSettingComponent.html":{},"components/EmailSettingComponent.html":{},"components/ListSettingComponent.html":{},"components/TextSettingComponent.html":{}}}],["setting.component.ts:21",{"_index":2747,"title":{},"body":{"components/EmailSettingComponent.html":{}}}],["setting.component.ts:22",{"_index":4028,"title":{},"body":{"components/TextSettingComponent.html":{}}}],["setting.component.ts:23",{"_index":4027,"title":{},"body":{"components/TextSettingComponent.html":{}}}],["setting.component.ts:24",{"_index":3472,"title":{},"body":{"components/ListSettingComponent.html":{}}}],["setting.component.ts:25",{"_index":3471,"title":{},"body":{"components/ListSettingComponent.html":{}}}],["setting.component.ts:27",{"_index":1638,"title":{},"body":{"components/BaseSettingComponent.html":{},"components/EmailSettingComponent.html":{}}}],["setting.component.ts:28",{"_index":1636,"title":{},"body":{"components/BaseSettingComponent.html":{}}}],["setting.component.ts:29",{"_index":1637,"title":{},"body":{"components/BaseSettingComponent.html":{},"components/TextSettingComponent.html":{}}}],["setting.component.ts:30",{"_index":1654,"title":{},"body":{"components/BaseSettingComponent.html":{}}}],["setting.component.ts:31",{"_index":1656,"title":{},"body":{"components/BaseSettingComponent.html":{},"components/ListSettingComponent.html":{}}}],["setting.component.ts:32",{"_index":1655,"title":{},"body":{"components/BaseSettingComponent.html":{}}}],["setting.component.ts:33",{"_index":1653,"title":{},"body":{"components/BaseSettingComponent.html":{}}}],["setting.component.ts:34",{"_index":1635,"title":{},"body":{"components/BaseSettingComponent.html":{}}}],["setting.component.ts:36",{"_index":4029,"title":{},"body":{"components/TextSettingComponent.html":{}}}],["setting.component.ts:40",{"_index":1649,"title":{},"body":{"components/BaseSettingComponent.html":{}}}],["setting.component.ts:47",{"_index":4031,"title":{},"body":{"components/TextSettingComponent.html":{}}}],["setting.component.ts:50",{"_index":3474,"title":{},"body":{"components/ListSettingComponent.html":{}}}],["setting.component.ts:51",{"_index":4030,"title":{},"body":{"components/TextSettingComponent.html":{}}}],["setting.component.ts:58",{"_index":3473,"title":{},"body":{"components/ListSettingComponent.html":{}}}],["setting.component.ts:65",{"_index":3476,"title":{},"body":{"components/ListSettingComponent.html":{}}}],["setting.component.ts:69",{"_index":3475,"title":{},"body":{"components/ListSettingComponent.html":{}}}],["setting.component.ts:70",{"_index":1648,"title":{},"body":{"components/BaseSettingComponent.html":{}}}],["setting.component.ts:74",{"_index":3477,"title":{},"body":{"components/ListSettingComponent.html":{}}}],["setting.component.ts:75",{"_index":1652,"title":{},"body":{"components/BaseSettingComponent.html":{}}}],["setting.component.ts:79",{"_index":1643,"title":{},"body":{"components/BaseSettingComponent.html":{}}}],["setting.component.ts:83",{"_index":1640,"title":{},"body":{"components/BaseSettingComponent.html":{}}}],["setting.component.ts:88",{"_index":1642,"title":{},"body":{"components/BaseSettingComponent.html":{}}}],["setting.component.ts:94",{"_index":1646,"title":{},"body":{"components/BaseSettingComponent.html":{}}}],["setting.component.ts:98",{"_index":1650,"title":{},"body":{"components/BaseSettingComponent.html":{}}}],["setting/base",{"_index":1618,"title":{},"body":{"components/BaseSettingComponent.html":{},"components/ListSettingComponent.html":{},"components/MultiSettingsComponent.html":{},"modules/SettingsModule.html":{},"components/TextSettingComponent.html":{}}}],["setting/email",{"_index":2744,"title":{},"body":{"components/EmailSettingComponent.html":{},"modules/SettingsModule.html":{}}}],["setting/list",{"_index":3467,"title":{},"body":{"components/ListSettingComponent.html":{},"modules/SettingsModule.html":{}}}],["setting/text",{"_index":2770,"title":{},"body":{"components/EmailSettingComponent.html":{},"modules/SettingsModule.html":{},"components/TextSettingComponent.html":{}}}],["settingpath",{"_index":1634,"title":{},"body":{"components/BaseSettingComponent.html":{},"components/EmailSettingComponent.html":{},"components/ListSettingComponent.html":{},"components/MultiSettingsComponent.html":{},"components/TextSettingComponent.html":{},"components/TypeAheadSettingsComponent.html":{}}}],["settings",{"_index":735,"title":{},"body":{"modules/AppRoutingModule.html":{},"interfaces/AppState.html":{},"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"components/BaseSettingComponent.html":{},"classes/CheckTokenResponse.html":{},"classes/HandleUnexpectedError-5.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/LoadSettings.html":{},"classes/LoadSettingsFailure.html":{},"classes/LoadSettingsSuccess.html":{},"components/MultiSettingsComponent.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"classes/PatchSettings.html":{},"classes/PatchSettingsFailure.html":{},"classes/PatchSettingsSuccess.html":{},"components/SettingsComponent.html":{},"injectables/SettingsEffects.html":{},"interfaces/SettingsInputs.html":{},"modules/SettingsModule.html":{},"injectables/SettingsService.html":{},"interfaces/SettingsState.html":{},"components/TypeAheadSettingsComponent.html":{},"miscellaneous/enumerations.html":{}}}],["settings'},{'name",{"_index":409,"title":{},"body":{"components/ActionComponent.html":{},"components/AppComponent.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/ConfirmModalComponent.html":{},"components/CustomLogoComponent.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MenuLinkComponent.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/ResizableComponent.html":{},"components/SettingsComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{}}}],["settings.component",{"_index":3949,"title":{},"body":{"modules/SettingsModule.html":{},"components/TypeAheadSettingsComponent.html":{}}}],["settings.component.html",{"_index":3691,"title":{},"body":{"components/MultiSettingsComponent.html":{},"components/SettingsComponent.html":{},"interfaces/SettingsInputs.html":{},"components/TypeAheadSettingsComponent.html":{}}}],["settings.component.scss",{"_index":4764,"title":{},"body":{"components/TypeAheadSettingsComponent.html":{}}}],["settings.component.ts",{"_index":3690,"title":{},"body":{"components/MultiSettingsComponent.html":{},"components/TypeAheadSettingsComponent.html":{}}}],["settings.component.ts:19",{"_index":3693,"title":{},"body":{"components/MultiSettingsComponent.html":{},"components/TypeAheadSettingsComponent.html":{}}}],["settings.component.ts:25",{"_index":3695,"title":{},"body":{"components/MultiSettingsComponent.html":{}}}],["settings.component.ts:32",{"_index":3694,"title":{},"body":{"components/MultiSettingsComponent.html":{}}}],["settings.component.ts:39",{"_index":3696,"title":{},"body":{"components/MultiSettingsComponent.html":{}}}],["settings.{{settingpath",{"_index":2776,"title":{},"body":{"components/EmailSettingComponent.html":{},"components/ListSettingComponent.html":{},"components/TextSettingComponent.html":{},"components/TypeAheadSettingsComponent.html":{}}}],["settings/multi",{"_index":3689,"title":{},"body":{"components/MultiSettingsComponent.html":{},"modules/SettingsModule.html":{},"components/TypeAheadSettingsComponent.html":{}}}],["settings/type",{"_index":3951,"title":{},"body":{"modules/SettingsModule.html":{},"components/TypeAheadSettingsComponent.html":{}}}],["settings:any",{"_index":3116,"title":{},"body":{"classes/HandleUnexpectedError-5.html":{},"classes/LoadSettings.html":{},"classes/LoadSettingsFailure.html":{},"classes/LoadSettingsSuccess.html":{},"classes/PatchSettings.html":{},"classes/PatchSettingsFailure.html":{},"classes/PatchSettingsSuccess.html":{},"interfaces/SettingsState.html":{}}}],["settings[this.settingpath",{"_index":1699,"title":{},"body":{"components/BaseSettingComponent.html":{}}}],["settingsactions",{"_index":3119,"title":{},"body":{"classes/HandleUnexpectedError-5.html":{},"classes/LoadSettings.html":{},"classes/LoadSettingsFailure.html":{},"classes/LoadSettingsSuccess.html":{},"classes/PatchSettings.html":{},"classes/PatchSettingsFailure.html":{},"classes/PatchSettingsSuccess.html":{},"miscellaneous/typealiases.html":{}}}],["settingsactiontypes",{"_index":2901,"title":{},"body":{"injectables/FeedFiltersEffects.html":{},"classes/HandleUnexpectedError-5.html":{},"classes/LoadSettings.html":{},"classes/LoadSettingsFailure.html":{},"classes/LoadSettingsSuccess.html":{},"classes/PatchSettings.html":{},"classes/PatchSettingsFailure.html":{},"classes/PatchSettingsSuccess.html":{},"injectables/SettingsEffects.html":{},"miscellaneous/enumerations.html":{}}}],["settingsactiontypes.handleunexpectederror",{"_index":3106,"title":{},"body":{"classes/HandleUnexpectedError-5.html":{},"classes/LoadSettings.html":{},"classes/LoadSettingsFailure.html":{},"classes/LoadSettingsSuccess.html":{},"classes/PatchSettings.html":{},"classes/PatchSettingsFailure.html":{},"classes/PatchSettingsSuccess.html":{}}}],["settingsactiontypes.loadsettings",{"_index":3112,"title":{},"body":{"classes/HandleUnexpectedError-5.html":{},"classes/LoadSettings.html":{},"classes/LoadSettingsFailure.html":{},"classes/LoadSettingsSuccess.html":{},"classes/PatchSettings.html":{},"classes/PatchSettingsFailure.html":{},"classes/PatchSettingsSuccess.html":{}}}],["settingsactiontypes.loadsettingsfailure",{"_index":3113,"title":{},"body":{"classes/HandleUnexpectedError-5.html":{},"classes/LoadSettings.html":{},"classes/LoadSettingsFailure.html":{},"classes/LoadSettingsSuccess.html":{},"classes/PatchSettings.html":{},"classes/PatchSettingsFailure.html":{},"classes/PatchSettingsSuccess.html":{}}}],["settingsactiontypes.loadsettingssuccess",{"_index":3114,"title":{},"body":{"classes/HandleUnexpectedError-5.html":{},"classes/LoadSettings.html":{},"classes/LoadSettingsFailure.html":{},"classes/LoadSettingsSuccess.html":{},"classes/PatchSettings.html":{},"classes/PatchSettingsFailure.html":{},"classes/PatchSettingsSuccess.html":{}}}],["settingsactiontypes.patchsettings",{"_index":3115,"title":{},"body":{"classes/HandleUnexpectedError-5.html":{},"classes/LoadSettings.html":{},"classes/LoadSettingsFailure.html":{},"classes/LoadSettingsSuccess.html":{},"classes/PatchSettings.html":{},"classes/PatchSettingsFailure.html":{},"classes/PatchSettingsSuccess.html":{}}}],["settingsactiontypes.patchsettingsfailure",{"_index":3117,"title":{},"body":{"classes/HandleUnexpectedError-5.html":{},"classes/LoadSettings.html":{},"classes/LoadSettingsFailure.html":{},"classes/LoadSettingsSuccess.html":{},"classes/PatchSettings.html":{},"classes/PatchSettingsFailure.html":{},"classes/PatchSettingsSuccess.html":{}}}],["settingsactiontypes.patchsettingssuccess",{"_index":3118,"title":{},"body":{"classes/HandleUnexpectedError-5.html":{},"classes/LoadSettings.html":{},"classes/LoadSettingsFailure.html":{},"classes/LoadSettingsSuccess.html":{},"classes/PatchSettings.html":{},"classes/PatchSettingsFailure.html":{},"classes/PatchSettingsSuccess.html":{}}}],["settingscomponent",{"_index":415,"title":{"components/SettingsComponent.html":{}},"body":{"components/ActionComponent.html":{},"components/AppComponent.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/ConfirmModalComponent.html":{},"components/CustomLogoComponent.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MenuLinkComponent.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/ResizableComponent.html":{},"components/SettingsComponent.html":{},"interfaces/SettingsInputs.html":{},"modules/SettingsModule.html":{},"modules/SettingsRoutingModule.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"index.html":{}}}],["settingseffects",{"_index":849,"title":{"injectables/SettingsEffects.html":{}},"body":{"interfaces/AppState.html":{},"injectables/SettingsEffects.html":{}}}],["settingsinitialstate",{"_index":3970,"title":{},"body":{"interfaces/SettingsState.html":{}}}],["settingsinputs",{"_index":3902,"title":{"interfaces/SettingsInputs.html":{}},"body":{"components/SettingsComponent.html":{},"interfaces/SettingsInputs.html":{}}}],["settingsmodule",{"_index":3937,"title":{"modules/SettingsModule.html":{}},"body":{"modules/SettingsModule.html":{},"index.html":{},"modules.html":{}}}],["settingsreducer",{"_index":823,"title":{},"body":{"interfaces/AppState.html":{}}}],["settingsroutingmodule",{"_index":3941,"title":{"modules/SettingsRoutingModule.html":{}},"body":{"modules/SettingsModule.html":{},"modules/SettingsRoutingModule.html":{},"index.html":{},"modules.html":{}}}],["settingsservice",{"_index":3881,"title":{"injectables/SettingsService.html":{}},"body":{"modules/ServicesModule.html":{},"injectables/SettingsEffects.html":{},"injectables/SettingsService.html":{},"index.html":{}}}],["settingsstate",{"_index":789,"title":{"interfaces/SettingsState.html":{}},"body":{"interfaces/AppState.html":{},"interfaces/SettingsState.html":{}}}],["settitle",{"_index":555,"title":{},"body":{"components/AppComponent.html":{}}}],["settitle(newtitle",{"_index":573,"title":{},"body":{"components/AppComponent.html":{}}}],["severity",{"_index":1793,"title":{},"body":{"classes/Card.html":{},"classes/Detail.html":{},"injectables/FilterService.html":{},"classes/LightCard.html":{},"classes/Page.html":{},"components/TimeLineComponent.html":{},"classes/TimeSpan.html":{},"miscellaneous/enumerations.html":{}}}],["severity.action",{"_index":3022,"title":{},"body":{"injectables/FilterService.html":{},"classes/LightCard.html":{},"classes/TimeSpan.html":{}}}],["severity.alarm",{"_index":3021,"title":{},"body":{"injectables/FilterService.html":{},"classes/LightCard.html":{},"classes/TimeSpan.html":{}}}],["severity.compliant",{"_index":3024,"title":{},"body":{"injectables/FilterService.html":{},"classes/LightCard.html":{},"classes/TimeSpan.html":{}}}],["severity.information",{"_index":3025,"title":{},"body":{"injectables/FilterService.html":{},"classes/LightCard.html":{},"classes/TimeSpan.html":{}}}],["severityordinal",{"_index":1970,"title":{},"body":{"interfaces/CardFeedState.html":{}}}],["severityordinal(card1.severity",{"_index":1976,"title":{},"body":{"interfaces/CardFeedState.html":{}}}],["severityordinal(card2.severity",{"_index":1977,"title":{},"body":{"interfaces/CardFeedState.html":{}}}],["severityordinal(severity",{"_index":3411,"title":{},"body":{"classes/LightCard.html":{},"classes/TimeSpan.html":{}}}],["shift",{"_index":2804,"title":{},"body":{"classes/FailToUpdateTimeReference.html":{},"injectables/FeedFiltersEffects.html":{},"classes/Tick.html":{},"classes/TickPayload.html":{},"classes/UpdateTimeReference.html":{}}}],["showgridlines",{"_index":4413,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["simplechanges",{"_index":2577,"title":{},"body":{"components/DetailComponent.html":{},"components/DetailsComponent.html":{}}}],["size",{"_index":948,"title":{},"body":{"components/ArchiveFiltersComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/CardComponent.html":{},"components/CustomLogoComponent.html":{},"components/IconComponent.html":{},"components/InfoComponent.html":{}}}],["size.tostring",{"_index":1007,"title":{},"body":{"components/ArchiveFiltersComponent.html":{}}}],["size:string",{"_index":3312,"title":{},"body":{"components/IconComponent.html":{}}}],["sizeicon",{"_index":3296,"title":{},"body":{"components/IconComponent.html":{}}}],["sizeicon:string",{"_index":3310,"title":{},"body":{"components/IconComponent.html":{}}}],["skipself",{"_index":3886,"title":{},"body":{"modules/ServicesModule.html":{}}}],["small",{"_index":1895,"title":{},"body":{"components/CardComponent.html":{},"components/IconComponent.html":{},"components/InfoComponent.html":{}}}],["snapshot",{"_index":2398,"title":{},"body":{"classes/CustomRouterStateSerializer.html":{},"classes/RouterStateUrl.html":{},"modules/StateModule.html":{}}}],["solid",{"_index":695,"title":{},"body":{"modules/AppModule.html":{},"modules/FeedModule.html":{},"dependencies.html":{}}}],["something",{"_index":2782,"title":{},"body":{"classes/FailToUpdateTimeReference.html":{},"injectables/FeedFiltersEffects.html":{},"classes/Tick.html":{},"classes/TickPayload.html":{},"injectables/TimeEffects.html":{},"classes/UpdateTimeReference.html":{}}}],["sortcomparer:comparebyseveritylttdpublishdate",{"_index":1991,"title":{},"body":{"interfaces/CardFeedState.html":{}}}],["sortonkey(key",{"_index":3258,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["sound",{"_index":3412,"title":{},"body":{"classes/LightCard.html":{},"classes/TimeSpan.html":{},"miscellaneous/enumerations.html":{}}}],["source",{"_index":4,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/Action.html":{},"components/ActionComponent.html":{},"classes/ActionStatus.html":{},"classes/AddActionsAppear.html":{},"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interfaces/AppState.html":{},"classes/ApplyFilter.html":{},"injectables/ArchiveEffects.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"classes/ArchiveQuerySuccess.html":{},"interfaces/ArchiveState.html":{},"components/ArchivesComponent.html":{},"modules/ArchivesModule.html":{},"modules/ArchivesRoutingModule.html":{},"classes/AuthObject.html":{},"interfaces/AuthState.html":{},"injectables/AuthenticationEffects.html":{},"interfaces/AuthenticationModeHandler.html":{},"components/BaseSettingComponent.html":{},"directives/CalcHeightDirective.html":{},"classes/Card.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"injectables/CardEffects.html":{},"interfaces/CardFeedState.html":{},"components/CardListComponent.html":{},"classes/CardOperation.html":{},"injectables/CardOperationEffects.html":{},"injectables/CardService.html":{},"interfaces/CardState.html":{},"modules/CardsModule.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckImplicitFlowAuthenticationStatus.html":{},"classes/CheckTokenResponse.html":{},"classes/ClearCard.html":{},"classes/ClearLightCardSelection.html":{},"injectables/ConfigEffects.html":{},"injectables/ConfigService.html":{},"interfaces/ConfigState.html":{},"components/ConfirmModalComponent.html":{},"classes/CreateUserApplication.html":{},"classes/CreateUserApplicationOnFailure.html":{},"classes/CreateUserApplicationOnSuccess.html":{},"components/CustomLogoComponent.html":{},"injectables/CustomRouterEffects.html":{},"classes/CustomRouterStateSerializer.html":{},"classes/DateTimeNgb.html":{},"components/DatetimeFilterComponent.html":{},"classes/DelayedLightCardUpdate.html":{},"classes/Detail.html":{},"components/DetailComponent.html":{},"classes/DetailContext.html":{},"components/DetailsComponent.html":{},"directives/DraggableDirective.html":{},"components/EmailSettingComponent.html":{},"classes/EmptyLightCards.html":{},"classes/FailToUpdateTimeReference.html":{},"components/FeedComponent.html":{},"injectables/FeedFiltersEffects.html":{},"modules/FeedModule.html":{},"modules/FeedRoutingModule.html":{},"classes/Filter.html":{},"injectables/FilterService.html":{},"components/FiltersComponent.html":{},"classes/GuidService.html":{},"classes/HandleUnexpectedError.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/HandleUnexpectedError-4.html":{},"classes/HandleUnexpectedError-5.html":{},"classes/HandleUnexpectedError-6.html":{},"injectables/HandlebarsService.html":{},"classes/I18n.html":{},"injectables/I18nService.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/ImplicitlyAuthenticated.html":{},"components/InfoComponent.html":{},"classes/InitAuthStatus.html":{},"classes/InitFilters.html":{},"classes/InitTimeline.html":{},"classes/Input.html":{},"classes/LightCard.html":{},"classes/LightCardAlreadyUpdated.html":{},"injectables/LightCardEffects.html":{},"components/ListSettingComponent.html":{},"classes/LoadArchivedCard.html":{},"classes/LoadArchivedCardFailure.html":{},"classes/LoadArchivedCardSuccess.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{},"classes/LoadConfig.html":{},"classes/LoadConfigFailure.html":{},"classes/LoadConfigSuccess.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/LoadSettings.html":{},"classes/LoadSettingsFailure.html":{},"classes/LoadSettingsSuccess.html":{},"components/LoginComponent.html":{},"classes/Map.html":{},"injectables/MenuEffects.html":{},"components/MenuLinkComponent.html":{},"interfaces/MenuState.html":{},"classes/Message.html":{},"directives/MouseWheelDirective.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"injectables/NotifyService.html":{},"classes/Page.html":{},"classes/ParameterListItem.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"classes/PatchSettings.html":{},"classes/PatchSettingsFailure.html":{},"classes/PatchSettingsSuccess.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/Process.html":{},"classes/RefreshTranslation.html":{},"classes/RejectLogIn.html":{},"classes/RemoveLightCard.html":{},"components/ResizableComponent.html":{},"classes/RouterStateUrl.html":{},"classes/SelectArchivedLightCard.html":{},"classes/SelectLightCard.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{},"classes/SendArchiveQuery.html":{},"modules/ServicesModule.html":{},"classes/SetCardDataTimeline.html":{},"components/SettingsComponent.html":{},"injectables/SettingsEffects.html":{},"interfaces/SettingsInputs.html":{},"modules/SettingsModule.html":{},"modules/SettingsRoutingModule.html":{},"injectables/SettingsService.html":{},"interfaces/SettingsState.html":{},"classes/State.html":{},"modules/StateModule.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"classes/Third.html":{},"classes/ThirdActionAlreadyLoaded.html":{},"classes/ThirdActionAlreadyUpdated.html":{},"injectables/ThirdActionService.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"modules/ThirdpartyModule.html":{},"modules/ThirdpartyRoutingModule.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"classes/ThirdsServiceMock.html":{},"classes/Tick.html":{},"classes/TickPayload.html":{},"injectables/TimeEffects.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"classes/TimeReference.html":{},"classes/TimeSpan.html":{},"interfaces/TimeState.html":{},"interfaces/TimelineState.html":{},"interceptors/TokenInjector.html":{},"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{},"interfaces/TranslationState.html":{},"classes/TranslationUpToDate.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"classes/UnAuthenticationFromImplicitFlow.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateAnActionFailure.html":{},"classes/UpdateArchiveFilter.html":{},"classes/UpdateArchivePage.html":{},"classes/UpdateTimeReference.html":{},"classes/UpdateTranslation.html":{},"classes/UpdateTranslationFailed.html":{},"classes/UpdateTranslationSuccessful.html":{},"classes/UpdatedSubscription.html":{},"classes/UselessAuthAction.html":{},"classes/User.html":{},"classes/UserApplicationNotRegistered.html":{},"classes/UserApplicationRegistered.html":{},"classes/UserContext.html":{},"injectables/UserEffects.html":{},"injectables/UserService.html":{},"interfaces/UserState.html":{},"modules/UtilitiesModule.html":{},"pipes/XAxisTickFormatPipe.html":{},"dependencies.html":{}}}],["space",{"_index":636,"title":{},"body":{"components/AppComponent.html":{}}}],["special",{"_index":4933,"title":{},"body":{"pipes/XAxisTickFormatPipe.html":{}}}],["specifically",{"_index":81,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckImplicitFlowAuthenticationStatus.html":{},"classes/ImplicitlyAuthenticated.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"classes/UnAuthenticationFromImplicitFlow.html":{},"classes/UselessAuthAction.html":{},"miscellaneous/enumerations.html":{}}}],["speed",{"_index":4515,"title":{},"body":{"classes/TimeReference.html":{}}}],["sprites",{"_index":3292,"title":{},"body":{"components/IconComponent.html":{}}}],["sprites:string",{"_index":3313,"title":{},"body":{"components/IconComponent.html":{}}}],["src/.../archive",{"_index":5026,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../archive.actions.ts",{"_index":5019,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["src/.../authentication.actions.ts",{"_index":5020,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["src/.../authentication.service.ts",{"_index":5028,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../card",{"_index":5022,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../card.actions.ts",{"_index":5021,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["src/.../card.model.ts",{"_index":5036,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../config.actions.ts",{"_index":5023,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["src/.../confirm",{"_index":5032,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../feed.actions.ts",{"_index":5025,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["src/.../filter.service.ts",{"_index":5027,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../light",{"_index":5024,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["src/.../menu.actions.ts",{"_index":5029,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["src/.../message.model.ts",{"_index":5030,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../settings.actions.ts",{"_index":5031,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["src/.../thirds.model.ts",{"_index":5018,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["src/.../time.actions.ts",{"_index":5033,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["src/.../time.model.ts",{"_index":5035,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../timeline.actions.ts",{"_index":5034,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["src/.../translate.actions.ts",{"_index":5037,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["src/.../user.actions.ts",{"_index":5038,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["src/app/app",{"_index":716,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["src/app/app.component.ts",{"_index":545,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:26",{"_index":581,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:27",{"_index":578,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:28",{"_index":577,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:29",{"_index":579,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:30",{"_index":576,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:31",{"_index":560,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:45",{"_index":574,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:53",{"_index":566,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.module.ts",{"_index":657,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app/components/login/login.component.ts",{"_index":3536,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/components/login/login.component.ts:29",{"_index":3552,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/components/login/login.component.ts:30",{"_index":3555,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/components/login/login.component.ts:31",{"_index":3554,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/components/login/login.component.ts:32",{"_index":3553,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/components/login/login.component.ts:33",{"_index":3547,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/components/login/login.component.ts:39",{"_index":3549,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/components/login/login.component.ts:53",{"_index":3550,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/components/login/login.component.ts:61",{"_index":3551,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/components/login/login.component.ts:65",{"_index":3548,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/components/navbar/custom",{"_index":2283,"title":{},"body":{"components/CustomLogoComponent.html":{}}}],["src/app/components/navbar/icon/icon.component.ts",{"_index":3287,"title":{},"body":{"components/IconComponent.html":{}}}],["src/app/components/navbar/icon/icon.component.ts:19",{"_index":3301,"title":{},"body":{"components/IconComponent.html":{}}}],["src/app/components/navbar/icon/icon.component.ts:20",{"_index":3302,"title":{},"body":{"components/IconComponent.html":{}}}],["src/app/components/navbar/icon/icon.component.ts:21",{"_index":3300,"title":{},"body":{"components/IconComponent.html":{}}}],["src/app/components/navbar/icon/icon.component.ts:23",{"_index":3306,"title":{},"body":{"components/IconComponent.html":{}}}],["src/app/components/navbar/icon/icon.component.ts:24",{"_index":3307,"title":{},"body":{"components/IconComponent.html":{}}}],["src/app/components/navbar/icon/icon.component.ts:25",{"_index":3299,"title":{},"body":{"components/IconComponent.html":{}}}],["src/app/components/navbar/icon/icon.component.ts:32",{"_index":3303,"title":{},"body":{"components/IconComponent.html":{}}}],["src/app/components/navbar/icon/icon.component.ts:37",{"_index":3304,"title":{},"body":{"components/IconComponent.html":{}}}],["src/app/components/navbar/icon/icon.component.ts:53",{"_index":3305,"title":{},"body":{"components/IconComponent.html":{}}}],["src/app/components/navbar/info/info.component.ts",{"_index":3357,"title":{},"body":{"components/InfoComponent.html":{}}}],["src/app/components/navbar/info/info.component.ts:27",{"_index":3366,"title":{},"body":{"components/InfoComponent.html":{}}}],["src/app/components/navbar/info/info.component.ts:28",{"_index":3365,"title":{},"body":{"components/InfoComponent.html":{}}}],["src/app/components/navbar/info/info.component.ts:29",{"_index":3363,"title":{},"body":{"components/InfoComponent.html":{}}}],["src/app/components/navbar/info/info.component.ts:34",{"_index":3364,"title":{},"body":{"components/InfoComponent.html":{}}}],["src/app/components/navbar/info/info.component.ts:45",{"_index":3368,"title":{},"body":{"components/InfoComponent.html":{}}}],["src/app/components/navbar/info/info.component.ts:49",{"_index":3370,"title":{},"body":{"components/InfoComponent.html":{}}}],["src/app/components/navbar/info/info.component.ts:53",{"_index":3372,"title":{},"body":{"components/InfoComponent.html":{}}}],["src/app/components/navbar/menus/menu",{"_index":3604,"title":{},"body":{"components/MenuLinkComponent.html":{}}}],["src/app/components/navbar/navbar.component.ts",{"_index":3700,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/components/navbar/navbar.component.ts:30",{"_index":3722,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/components/navbar/navbar.component.ts:31",{"_index":3723,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/components/navbar/navbar.component.ts:32",{"_index":3717,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/components/navbar/navbar.component.ts:33",{"_index":3716,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/components/navbar/navbar.component.ts:34",{"_index":3719,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/components/navbar/navbar.component.ts:35",{"_index":3720,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/components/navbar/navbar.component.ts:37",{"_index":3718,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/components/navbar/navbar.component.ts:38",{"_index":3721,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/components/navbar/navbar.component.ts:39",{"_index":3724,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/components/navbar/navbar.component.ts:40",{"_index":3710,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/components/navbar/navbar.component.ts:45",{"_index":3712,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/components/navbar/navbar.component.ts:82",{"_index":3711,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/components/navbar/navbar.component.ts:86",{"_index":3726,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/components/navbar/navbar.component.ts:90",{"_index":3714,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/components/navbar/navbar.component.ts:96",{"_index":3715,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/model/card",{"_index":2009,"title":{},"body":{"classes/CardOperation.html":{},"miscellaneous/enumerations.html":{}}}],["src/app/model/card.model.ts",{"_index":1786,"title":{},"body":{"classes/Card.html":{},"classes/Detail.html":{},"miscellaneous/enumerations.html":{}}}],["src/app/model/card.model.ts:12",{"_index":1798,"title":{},"body":{"classes/Card.html":{}}}],["src/app/model/card.model.ts:41",{"_index":2534,"title":{},"body":{"classes/Detail.html":{}}}],["src/app/model/datetime",{"_index":2414,"title":{},"body":{"classes/DateTimeNgb.html":{}}}],["src/app/model/detail",{"_index":2653,"title":{},"body":{"classes/DetailContext.html":{}}}],["src/app/model/feed",{"_index":2956,"title":{},"body":{"classes/Filter.html":{}}}],["src/app/model/i18n.model.ts",{"_index":3264,"title":{},"body":{"classes/I18n.html":{}}}],["src/app/model/i18n.model.ts:11",{"_index":3266,"title":{},"body":{"classes/I18n.html":{}}}],["src/app/model/light",{"_index":3406,"title":{},"body":{"classes/LightCard.html":{},"classes/TimeSpan.html":{},"miscellaneous/enumerations.html":{}}}],["src/app/model/map.ts",{"_index":3581,"title":{},"body":{"classes/Map.html":{}}}],["src/app/model/map.ts:9",{"_index":3584,"title":{},"body":{"classes/Map.html":{}}}],["src/app/model/message.model.ts",{"_index":3638,"title":{},"body":{"classes/Message.html":{},"miscellaneous/enumerations.html":{}}}],["src/app/model/message.model.ts:11",{"_index":3641,"title":{},"body":{"classes/Message.html":{}}}],["src/app/model/page.model.ts",{"_index":3787,"title":{},"body":{"classes/Page.html":{}}}],["src/app/model/page.model.ts:12",{"_index":3790,"title":{},"body":{"classes/Page.html":{}}}],["src/app/model/thirds.model.ts",{"_index":167,"title":{},"body":{"classes/Action.html":{},"classes/ActionStatus.html":{},"classes/Input.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["src/app/model/thirds.model.ts:107",{"_index":436,"title":{},"body":{"classes/ActionStatus.html":{}}}],["src/app/model/thirds.model.ts:13",{"_index":4040,"title":{},"body":{"classes/Third.html":{}}}],["src/app/model/thirds.model.ts:168",{"_index":3405,"title":{},"body":{"classes/Input.html":{}}}],["src/app/model/thirds.model.ts:185",{"_index":3792,"title":{},"body":{"classes/ParameterListItem.html":{}}}],["src/app/model/thirds.model.ts:27",{"_index":4041,"title":{},"body":{"classes/Third.html":{}}}],["src/app/model/thirds.model.ts:38",{"_index":4105,"title":{},"body":{"classes/ThirdMenuEntry.html":{}}}],["src/app/model/thirds.model.ts:48",{"_index":4104,"title":{},"body":{"classes/ThirdMenu.html":{}}}],["src/app/model/thirds.model.ts:58",{"_index":3813,"title":{},"body":{"classes/Process.html":{}}}],["src/app/model/thirds.model.ts:66",{"_index":3972,"title":{},"body":{"classes/State.html":{}}}],["src/app/model/thirds.model.ts:82",{"_index":184,"title":{},"body":{"classes/Action.html":{}}}],["src/app/model/time.model.ts",{"_index":4507,"title":{},"body":{"classes/TimeReference.html":{},"miscellaneous/enumerations.html":{}}}],["src/app/model/time.model.ts:11",{"_index":4517,"title":{},"body":{"classes/TimeReference.html":{}}}],["src/app/model/time.model.ts:18",{"_index":4532,"title":{},"body":{"classes/TimeReference.html":{}}}],["src/app/model/time.model.ts:26",{"_index":4520,"title":{},"body":{"classes/TimeReference.html":{}}}],["src/app/model/time.model.ts:27",{"_index":4523,"title":{},"body":{"classes/TimeReference.html":{}}}],["src/app/model/time.model.ts:28",{"_index":4526,"title":{},"body":{"classes/TimeReference.html":{}}}],["src/app/model/time.model.ts:40",{"_index":4529,"title":{},"body":{"classes/TimeReference.html":{}}}],["src/app/model/time.model.ts:63",{"_index":4533,"title":{},"body":{"classes/TimeReference.html":{}}}],["src/app/model/user",{"_index":4854,"title":{},"body":{"classes/UserContext.html":{}}}],["src/app/model/user.model.ts",{"_index":4844,"title":{},"body":{"classes/User.html":{}}}],["src/app/model/user.model.ts:9",{"_index":4846,"title":{},"body":{"classes/User.html":{}}}],["src/app/modules/archives/archives",{"_index":1111,"title":{},"body":{"modules/ArchivesRoutingModule.html":{}}}],["src/app/modules/archives/archives.component.ts",{"_index":1082,"title":{},"body":{"components/ArchivesComponent.html":{}}}],["src/app/modules/archives/archives.component.ts:24",{"_index":1087,"title":{},"body":{"components/ArchivesComponent.html":{}}}],["src/app/modules/archives/archives.component.ts:25",{"_index":1085,"title":{},"body":{"components/ArchivesComponent.html":{}}}],["src/app/modules/archives/archives.component.ts:29",{"_index":1086,"title":{},"body":{"components/ArchivesComponent.html":{}}}],["src/app/modules/archives/archives.module.ts",{"_index":1099,"title":{},"body":{"modules/ArchivesModule.html":{}}}],["src/app/modules/archives/components/archive",{"_index":940,"title":{},"body":{"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/DatetimeFilterComponent.html":{},"components/MultiFilterComponent.html":{},"miscellaneous/enumerations.html":{}}}],["src/app/modules/cards/cards.module.ts",{"_index":2171,"title":{},"body":{"modules/CardsModule.html":{}}}],["src/app/modules/cards/cards.module.ts:46",{"_index":2174,"title":{},"body":{"modules/CardsModule.html":{}}}],["src/app/modules/cards/components/action/action.component.ts",{"_index":286,"title":{},"body":{"components/ActionComponent.html":{}}}],["src/app/modules/cards/components/action/action.component.ts:22",{"_index":307,"title":{},"body":{"components/ActionComponent.html":{}}}],["src/app/modules/cards/components/action/action.component.ts:23",{"_index":309,"title":{},"body":{"components/ActionComponent.html":{}}}],["src/app/modules/cards/components/action/action.component.ts:24",{"_index":310,"title":{},"body":{"components/ActionComponent.html":{}}}],["src/app/modules/cards/components/action/action.component.ts:25",{"_index":308,"title":{},"body":{"components/ActionComponent.html":{}}}],["src/app/modules/cards/components/action/action.component.ts:26",{"_index":305,"title":{},"body":{"components/ActionComponent.html":{}}}],["src/app/modules/cards/components/action/action.component.ts:33",{"_index":311,"title":{},"body":{"components/ActionComponent.html":{}}}],["src/app/modules/cards/components/action/action.component.ts:37",{"_index":314,"title":{},"body":{"components/ActionComponent.html":{}}}],["src/app/modules/cards/components/action/confirm",{"_index":2239,"title":{},"body":{"components/ConfirmModalComponent.html":{},"miscellaneous/enumerations.html":{}}}],["src/app/modules/cards/components/card",{"_index":1903,"title":{},"body":{"components/CardDetailsComponent.html":{}}}],["src/app/modules/cards/components/card/card.component.ts",{"_index":1805,"title":{},"body":{"components/CardComponent.html":{}}}],["src/app/modules/cards/components/card/card.component.ts:100",{"_index":1826,"title":{},"body":{"components/CardComponent.html":{}}}],["src/app/modules/cards/components/card/card.component.ts:107",{"_index":1833,"title":{},"body":{"components/CardComponent.html":{}}}],["src/app/modules/cards/components/card/card.component.ts:118",{"_index":1841,"title":{},"body":{"components/CardComponent.html":{}}}],["src/app/modules/cards/components/card/card.component.ts:122",{"_index":1830,"title":{},"body":{"components/CardComponent.html":{}}}],["src/app/modules/cards/components/card/card.component.ts:31",{"_index":1823,"title":{},"body":{"components/CardComponent.html":{}}}],["src/app/modules/cards/components/card/card.component.ts:32",{"_index":1822,"title":{},"body":{"components/CardComponent.html":{}}}],["src/app/modules/cards/components/card/card.component.ts:33",{"_index":1838,"title":{},"body":{"components/CardComponent.html":{}}}],["src/app/modules/cards/components/card/card.component.ts:34",{"_index":1834,"title":{},"body":{"components/CardComponent.html":{}}}],["src/app/modules/cards/components/card/card.component.ts:35",{"_index":1839,"title":{},"body":{"components/CardComponent.html":{}}}],["src/app/modules/cards/components/card/card.component.ts:36",{"_index":1837,"title":{},"body":{"components/CardComponent.html":{}}}],["src/app/modules/cards/components/card/card.component.ts:37",{"_index":1835,"title":{},"body":{"components/CardComponent.html":{}}}],["src/app/modules/cards/components/card/card.component.ts:38",{"_index":1836,"title":{},"body":{"components/CardComponent.html":{}}}],["src/app/modules/cards/components/card/card.component.ts:40",{"_index":1821,"title":{},"body":{"components/CardComponent.html":{}}}],["src/app/modules/cards/components/card/card.component.ts:50",{"_index":1831,"title":{},"body":{"components/CardComponent.html":{}}}],["src/app/modules/cards/components/card/card.component.ts:75",{"_index":1825,"title":{},"body":{"components/CardComponent.html":{}}}],["src/app/modules/cards/components/card/card.component.ts:90",{"_index":1828,"title":{},"body":{"components/CardComponent.html":{}}}],["src/app/modules/cards/components/card/card.component.ts:94",{"_index":1832,"title":{},"body":{"components/CardComponent.html":{}}}],["src/app/modules/cards/components/detail/detail.component.ts",{"_index":2535,"title":{},"body":{"components/DetailComponent.html":{}}}],["src/app/modules/cards/components/detail/detail.component.ts:113",{"_index":2561,"title":{},"body":{"components/DetailComponent.html":{}}}],["src/app/modules/cards/components/detail/detail.component.ts:130",{"_index":2559,"title":{},"body":{"components/DetailComponent.html":{}}}],["src/app/modules/cards/components/detail/detail.component.ts:154",{"_index":2563,"title":{},"body":{"components/DetailComponent.html":{}}}],["src/app/modules/cards/components/detail/detail.component.ts:29",{"_index":2571,"title":{},"body":{"components/DetailComponent.html":{}}}],["src/app/modules/cards/components/detail/detail.component.ts:30",{"_index":2555,"title":{},"body":{"components/DetailComponent.html":{}}}],["src/app/modules/cards/components/detail/detail.component.ts:31",{"_index":2554,"title":{},"body":{"components/DetailComponent.html":{}}}],["src/app/modules/cards/components/detail/detail.component.ts:32",{"_index":2572,"title":{},"body":{"components/DetailComponent.html":{}}}],["src/app/modules/cards/components/detail/detail.component.ts:33",{"_index":2574,"title":{},"body":{"components/DetailComponent.html":{}}}],["src/app/modules/cards/components/detail/detail.component.ts:34",{"_index":2570,"title":{},"body":{"components/DetailComponent.html":{}}}],["src/app/modules/cards/components/detail/detail.component.ts:35",{"_index":2553,"title":{},"body":{"components/DetailComponent.html":{}}}],["src/app/modules/cards/components/detail/detail.component.ts:45",{"_index":2567,"title":{},"body":{"components/DetailComponent.html":{}}}],["src/app/modules/cards/components/detail/detail.component.ts:57",{"_index":2566,"title":{},"body":{"components/DetailComponent.html":{}}}],["src/app/modules/cards/components/detail/detail.component.ts:62",{"_index":2565,"title":{},"body":{"components/DetailComponent.html":{}}}],["src/app/modules/cards/components/detail/detail.component.ts:78",{"_index":2564,"title":{},"body":{"components/DetailComponent.html":{}}}],["src/app/modules/cards/components/detail/detail.component.ts:94",{"_index":2576,"title":{},"body":{"components/DetailComponent.html":{}}}],["src/app/modules/cards/components/detail/detail.component.ts:98",{"_index":2568,"title":{},"body":{"components/DetailComponent.html":{}}}],["src/app/modules/cards/components/details/details.component.ts",{"_index":2658,"title":{},"body":{"components/DetailsComponent.html":{}}}],["src/app/modules/cards/components/details/details.component.ts:21",{"_index":2674,"title":{},"body":{"components/DetailsComponent.html":{}}}],["src/app/modules/cards/components/details/details.component.ts:22",{"_index":2664,"title":{},"body":{"components/DetailsComponent.html":{}}}],["src/app/modules/cards/components/details/details.component.ts:23",{"_index":2663,"title":{},"body":{"components/DetailsComponent.html":{}}}],["src/app/modules/cards/components/details/details.component.ts:29",{"_index":2665,"title":{},"body":{"components/DetailsComponent.html":{}}}],["src/app/modules/cards/components/details/details.component.ts:38",{"_index":2671,"title":{},"body":{"components/DetailsComponent.html":{}}}],["src/app/modules/cards/components/details/details.component.ts:48",{"_index":2670,"title":{},"body":{"components/DetailsComponent.html":{}}}],["src/app/modules/cards/components/details/details.component.ts:57",{"_index":2675,"title":{},"body":{"components/DetailsComponent.html":{}}}],["src/app/modules/cards/components/details/details.component.ts:61",{"_index":2667,"title":{},"body":{"components/DetailsComponent.html":{}}}],["src/app/modules/cards/services/handlebars.service.ts",{"_index":3122,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["src/app/modules/cards/services/handlebars.service.ts:116",{"_index":3154,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["src/app/modules/cards/services/handlebars.service.ts:122",{"_index":3166,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["src/app/modules/cards/services/handlebars.service.ts:131",{"_index":3160,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["src/app/modules/cards/services/handlebars.service.ts:145",{"_index":3153,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["src/app/modules/cards/services/handlebars.service.ts:151",{"_index":3164,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["src/app/modules/cards/services/handlebars.service.ts:168",{"_index":3165,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["src/app/modules/cards/services/handlebars.service.ts:210",{"_index":3158,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["src/app/modules/cards/services/handlebars.service.ts:236",{"_index":3167,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["src/app/modules/cards/services/handlebars.service.ts:254",{"_index":3156,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["src/app/modules/cards/services/handlebars.service.ts:268",{"_index":3157,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["src/app/modules/cards/services/handlebars.service.ts:276",{"_index":3162,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["src/app/modules/cards/services/handlebars.service.ts:28",{"_index":3168,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["src/app/modules/cards/services/handlebars.service.ts:283",{"_index":3161,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["src/app/modules/cards/services/handlebars.service.ts:29",{"_index":3144,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["src/app/modules/cards/services/handlebars.service.ts:290",{"_index":3163,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["src/app/modules/cards/services/handlebars.service.ts:53",{"_index":3146,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["src/app/modules/cards/services/handlebars.service.ts:63",{"_index":3150,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["src/app/modules/cards/services/handlebars.service.ts:68",{"_index":3152,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["src/app/modules/cards/services/handlebars.service.ts:81",{"_index":3159,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["src/app/modules/cards/services/handlebars.service.ts:87",{"_index":3155,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["src/app/modules/feed/components/card",{"_index":1994,"title":{},"body":{"components/CardListComponent.html":{},"components/FiltersComponent.html":{},"components/TagsFilterComponent.html":{},"components/TimeFilterComponent.html":{},"components/TypeFilterComponent.html":{}}}],["src/app/modules/feed/components/no",{"_index":3765,"title":{},"body":{"components/NoSelectionComponent.html":{}}}],["src/app/modules/feed/components/time",{"_index":2695,"title":{},"body":{"directives/DraggableDirective.html":{},"directives/MouseWheelDirective.html":{},"components/TimeLineComponent.html":{},"pipes/XAxisTickFormatPipe.html":{}}}],["src/app/modules/feed/feed",{"_index":2955,"title":{},"body":{"modules/FeedRoutingModule.html":{}}}],["src/app/modules/feed/feed.component.ts",{"_index":2816,"title":{},"body":{"components/FeedComponent.html":{}}}],["src/app/modules/feed/feed.component.ts:27",{"_index":2823,"title":{},"body":{"components/FeedComponent.html":{}}}],["src/app/modules/feed/feed.component.ts:28",{"_index":2824,"title":{},"body":{"components/FeedComponent.html":{}}}],["src/app/modules/feed/feed.component.ts:29",{"_index":2820,"title":{},"body":{"components/FeedComponent.html":{}}}],["src/app/modules/feed/feed.component.ts:34",{"_index":2822,"title":{},"body":{"components/FeedComponent.html":{}}}],["src/app/modules/feed/feed.component.ts:55",{"_index":2821,"title":{},"body":{"components/FeedComponent.html":{}}}],["src/app/modules/feed/feed.module.ts",{"_index":2920,"title":{},"body":{"modules/FeedModule.html":{}}}],["src/app/modules/settings/components/settings/base",{"_index":1617,"title":{},"body":{"components/BaseSettingComponent.html":{}}}],["src/app/modules/settings/components/settings/email",{"_index":2743,"title":{},"body":{"components/EmailSettingComponent.html":{}}}],["src/app/modules/settings/components/settings/list",{"_index":3466,"title":{},"body":{"components/ListSettingComponent.html":{}}}],["src/app/modules/settings/components/settings/multi",{"_index":3688,"title":{},"body":{"components/MultiSettingsComponent.html":{}}}],["src/app/modules/settings/components/settings/settings.component.ts",{"_index":3895,"title":{},"body":{"components/SettingsComponent.html":{},"interfaces/SettingsInputs.html":{}}}],["src/app/modules/settings/components/settings/settings.component.ts:20",{"_index":3904,"title":{},"body":{"components/SettingsComponent.html":{}}}],["src/app/modules/settings/components/settings/settings.component.ts:21",{"_index":3905,"title":{},"body":{"components/SettingsComponent.html":{}}}],["src/app/modules/settings/components/settings/settings.component.ts:22",{"_index":3903,"title":{},"body":{"components/SettingsComponent.html":{}}}],["src/app/modules/settings/components/settings/settings.component.ts:23",{"_index":3901,"title":{},"body":{"components/SettingsComponent.html":{}}}],["src/app/modules/settings/components/settings/settings.component.ts:24",{"_index":3899,"title":{},"body":{"components/SettingsComponent.html":{}}}],["src/app/modules/settings/components/settings/settings.component.ts:28",{"_index":3900,"title":{},"body":{"components/SettingsComponent.html":{}}}],["src/app/modules/settings/components/settings/text",{"_index":4026,"title":{},"body":{"components/TextSettingComponent.html":{}}}],["src/app/modules/settings/components/settings/type",{"_index":4763,"title":{},"body":{"components/TypeAheadSettingsComponent.html":{}}}],["src/app/modules/settings/settings",{"_index":3952,"title":{},"body":{"modules/SettingsRoutingModule.html":{}}}],["src/app/modules/settings/settings.module.ts",{"_index":3942,"title":{},"body":{"modules/SettingsModule.html":{}}}],["src/app/modules/thirdparty/iframedisplay.component.ts",{"_index":3333,"title":{},"body":{"components/IframeDisplayComponent.html":{}}}],["src/app/modules/thirdparty/iframedisplay.component.ts:22",{"_index":3339,"title":{},"body":{"components/IframeDisplayComponent.html":{}}}],["src/app/modules/thirdparty/iframedisplay.component.ts:28",{"_index":3340,"title":{},"body":{"components/IframeDisplayComponent.html":{}}}],["src/app/modules/thirdparty/iframedisplay.component.ts:36",{"_index":3342,"title":{},"body":{"components/IframeDisplayComponent.html":{}}}],["src/app/modules/thirdparty/thirdparty",{"_index":4113,"title":{},"body":{"modules/ThirdpartyRoutingModule.html":{}}}],["src/app/modules/thirdparty/thirdparty.module.ts",{"_index":4111,"title":{},"body":{"modules/ThirdpartyModule.html":{}}}],["src/app/modules/utilities/calc",{"_index":1706,"title":{},"body":{"directives/CalcHeightDirective.html":{}}}],["src/app/modules/utilities/components/resizable/resizable.component.ts",{"_index":3838,"title":{},"body":{"components/ResizableComponent.html":{}}}],["src/app/modules/utilities/components/resizable/resizable.component.ts:17",{"_index":3842,"title":{},"body":{"components/ResizableComponent.html":{}}}],["src/app/modules/utilities/components/resizable/resizable.component.ts:19",{"_index":3844,"title":{},"body":{"components/ResizableComponent.html":{}}}],["src/app/modules/utilities/components/resizable/resizable.component.ts:34",{"_index":3843,"title":{},"body":{"components/ResizableComponent.html":{}}}],["src/app/modules/utilities/utilities.module.ts",{"_index":4916,"title":{},"body":{"modules/UtilitiesModule.html":{}}}],["src/app/services/authentication/authentication.service.ts",{"_index":1124,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"miscellaneous/enumerations.html":{}}}],["src/app/services/authentication/authentication.service.ts:422",{"_index":1129,"title":{},"body":{"classes/AuthObject.html":{}}}],["src/app/services/authentication/authentication.service.ts:425",{"_index":1130,"title":{},"body":{"classes/AuthObject.html":{}}}],["src/app/services/authentication/authentication.service.ts:426",{"_index":1132,"title":{},"body":{"classes/AuthObject.html":{}}}],["src/app/services/authentication/authentication.service.ts:427",{"_index":1131,"title":{},"body":{"classes/AuthObject.html":{}}}],["src/app/services/authentication/authentication.service.ts:428",{"_index":1133,"title":{},"body":{"classes/AuthObject.html":{}}}],["src/app/services/authentication/authentication.service.ts:438",{"_index":2190,"title":{},"body":{"classes/CheckTokenResponse.html":{}}}],["src/app/services/authentication/authentication.service.ts:440",{"_index":2193,"title":{},"body":{"classes/CheckTokenResponse.html":{}}}],["src/app/services/authentication/authentication.service.ts:441",{"_index":2192,"title":{},"body":{"classes/CheckTokenResponse.html":{}}}],["src/app/services/authentication/authentication.service.ts:442",{"_index":2191,"title":{},"body":{"classes/CheckTokenResponse.html":{}}}],["src/app/services/authentication/authentication.service.ts:461",{"_index":1612,"title":{},"body":{"interfaces/AuthenticationModeHandler.html":{}}}],["src/app/services/authentication/authentication.service.ts:463",{"_index":1614,"title":{},"body":{"interfaces/AuthenticationModeHandler.html":{}}}],["src/app/services/authentication/authentication.service.ts:465",{"_index":1611,"title":{},"body":{"interfaces/AuthenticationModeHandler.html":{}}}],["src/app/services/authentication/authentication.service.ts:467",{"_index":1616,"title":{},"body":{"interfaces/AuthenticationModeHandler.html":{}}}],["src/app/services/authentication/authentication.service.ts:475",{"_index":3793,"title":{},"body":{"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["src/app/services/authentication/authentication.service.ts:481",{"_index":3795,"title":{},"body":{"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["src/app/services/authentication/authentication.service.ts:490",{"_index":3796,"title":{},"body":{"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["src/app/services/authentication/authentication.service.ts:495",{"_index":3794,"title":{},"body":{"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["src/app/services/authentication/authentication.service.ts:499",{"_index":3797,"title":{},"body":{"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["src/app/services/authentication/authentication.service.ts:508",{"_index":3350,"title":{},"body":{"classes/ImplicitAuthenticationHandler.html":{}}}],["src/app/services/authentication/authentication.service.ts:514",{"_index":3352,"title":{},"body":{"classes/ImplicitAuthenticationHandler.html":{}}}],["src/app/services/authentication/authentication.service.ts:520",{"_index":3354,"title":{},"body":{"classes/ImplicitAuthenticationHandler.html":{}}}],["src/app/services/authentication/authentication.service.ts:524",{"_index":3351,"title":{},"body":{"classes/ImplicitAuthenticationHandler.html":{}}}],["src/app/services/authentication/authentication.service.ts:528",{"_index":3355,"title":{},"body":{"classes/ImplicitAuthenticationHandler.html":{}}}],["src/app/services/card.service.ts",{"_index":2073,"title":{},"body":{"injectables/CardService.html":{}}}],["src/app/services/card.service.ts:25",{"_index":2104,"title":{},"body":{"injectables/CardService.html":{}}}],["src/app/services/card.service.ts:26",{"_index":2102,"title":{},"body":{"injectables/CardService.html":{}}}],["src/app/services/card.service.ts:27",{"_index":2103,"title":{},"body":{"injectables/CardService.html":{}}}],["src/app/services/card.service.ts:28",{"_index":2085,"title":{},"body":{"injectables/CardService.html":{}}}],["src/app/services/card.service.ts:42",{"_index":2096,"title":{},"body":{"injectables/CardService.html":{}}}],["src/app/services/card.service.ts:46",{"_index":2092,"title":{},"body":{"injectables/CardService.html":{}}}],["src/app/services/card.service.ts:59",{"_index":2097,"title":{},"body":{"injectables/CardService.html":{}}}],["src/app/services/card.service.ts:63",{"_index":2090,"title":{},"body":{"injectables/CardService.html":{}}}],["src/app/services/card.service.ts:89",{"_index":2100,"title":{},"body":{"injectables/CardService.html":{}}}],["src/app/services/card.service.ts:95",{"_index":2094,"title":{},"body":{"injectables/CardService.html":{}}}],["src/app/services/card.service.ts:99",{"_index":2087,"title":{},"body":{"injectables/CardService.html":{}}}],["src/app/services/config.service.ts",{"_index":2227,"title":{},"body":{"injectables/ConfigService.html":{}}}],["src/app/services/config.service.ts:18",{"_index":2230,"title":{},"body":{"injectables/ConfigService.html":{}}}],["src/app/services/config.service.ts:25",{"_index":2231,"title":{},"body":{"injectables/ConfigService.html":{}}}],["src/app/services/filter.service.ts",{"_index":3005,"title":{},"body":{"injectables/FilterService.html":{},"miscellaneous/enumerations.html":{}}}],["src/app/services/filter.service.ts:19",{"_index":3011,"title":{},"body":{"injectables/FilterService.html":{}}}],["src/app/services/filter.service.ts:25",{"_index":3012,"title":{},"body":{"injectables/FilterService.html":{}}}],["src/app/services/filter.service.ts:30",{"_index":3016,"title":{},"body":{"injectables/FilterService.html":{}}}],["src/app/services/filter.service.ts:54",{"_index":3014,"title":{},"body":{"injectables/FilterService.html":{}}}],["src/app/services/filter.service.ts:63",{"_index":3015,"title":{},"body":{"injectables/FilterService.html":{}}}],["src/app/services/filter.service.ts:85",{"_index":3013,"title":{},"body":{"injectables/FilterService.html":{}}}],["src/app/services/guid.service.ts",{"_index":3054,"title":{},"body":{"classes/GuidService.html":{}}}],["src/app/services/guid.service.ts:17",{"_index":3057,"title":{},"body":{"classes/GuidService.html":{}}}],["src/app/services/guid.service.ts:23",{"_index":3058,"title":{},"body":{"classes/GuidService.html":{}}}],["src/app/services/guid.service.ts:27",{"_index":3059,"title":{},"body":{"classes/GuidService.html":{}}}],["src/app/services/i18n.service.ts",{"_index":3267,"title":{},"body":{"injectables/I18nService.html":{}}}],["src/app/services/i18n.service.ts:20",{"_index":3272,"title":{},"body":{"injectables/I18nService.html":{}}}],["src/app/services/i18n.service.ts:21",{"_index":3270,"title":{},"body":{"injectables/I18nService.html":{}}}],["src/app/services/i18n.service.ts:31",{"_index":3271,"title":{},"body":{"injectables/I18nService.html":{}}}],["src/app/services/i18n.service.ts:47",{"_index":3274,"title":{},"body":{"injectables/I18nService.html":{}}}],["src/app/services/i18n.service.ts:51",{"_index":3276,"title":{},"body":{"injectables/I18nService.html":{}}}],["src/app/services/interceptors.service.ts",{"_index":4589,"title":{},"body":{"interceptors/TokenInjector.html":{}}}],["src/app/services/interceptors.service.ts:15",{"_index":4593,"title":{},"body":{"interceptors/TokenInjector.html":{}}}],["src/app/services/interceptors.service.ts:20",{"_index":4599,"title":{},"body":{"interceptors/TokenInjector.html":{}}}],["src/app/services/interceptors.service.ts:25",{"_index":4596,"title":{},"body":{"interceptors/TokenInjector.html":{}}}],["src/app/services/notify.service.ts",{"_index":3770,"title":{},"body":{"injectables/NotifyService.html":{}}}],["src/app/services/notify.service.ts:14",{"_index":3775,"title":{},"body":{"injectables/NotifyService.html":{}}}],["src/app/services/notify.service.ts:18",{"_index":3779,"title":{},"body":{"injectables/NotifyService.html":{}}}],["src/app/services/notify.service.ts:21",{"_index":3780,"title":{},"body":{"injectables/NotifyService.html":{}}}],["src/app/services/notify.service.ts:29",{"_index":3777,"title":{},"body":{"injectables/NotifyService.html":{}}}],["src/app/services/services.module.ts",{"_index":3884,"title":{},"body":{"modules/ServicesModule.html":{}}}],["src/app/services/services.module.ts:51",{"_index":3885,"title":{},"body":{"modules/ServicesModule.html":{}}}],["src/app/services/settings.service.ts",{"_index":3953,"title":{},"body":{"injectables/SettingsService.html":{}}}],["src/app/services/settings.service.ts:19",{"_index":3962,"title":{},"body":{"injectables/SettingsService.html":{}}}],["src/app/services/settings.service.ts:20",{"_index":3958,"title":{},"body":{"injectables/SettingsService.html":{}}}],["src/app/services/settings.service.ts:28",{"_index":3959,"title":{},"body":{"injectables/SettingsService.html":{}}}],["src/app/services/settings.service.ts:32",{"_index":3961,"title":{},"body":{"injectables/SettingsService.html":{}}}],["src/app/services/third",{"_index":4044,"title":{},"body":{"injectables/ThirdActionService.html":{}}}],["src/app/services/thirds.service.ts",{"_index":4116,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["src/app/services/thirds.service.ts:104",{"_index":4227,"title":{},"body":{"injectables/ThirdsService.html":{}}}],["src/app/services/thirds.service.ts:124",{"_index":4229,"title":{},"body":{"injectables/ThirdsService.html":{}}}],["src/app/services/thirds.service.ts:139",{"_index":4232,"title":{},"body":{"injectables/ThirdsService.html":{}}}],["src/app/services/thirds.service.ts:143",{"_index":4231,"title":{},"body":{"injectables/ThirdsService.html":{}}}],["src/app/services/thirds.service.ts:156",{"_index":4120,"title":{},"body":{"classes/ThirdsI18nLoader.html":{}}}],["src/app/services/thirds.service.ts:161",{"_index":4122,"title":{},"body":{"classes/ThirdsI18nLoader.html":{}}}],["src/app/services/thirds.service.ts:21",{"_index":4240,"title":{},"body":{"injectables/ThirdsService.html":{}}}],["src/app/services/thirds.service.ts:22",{"_index":4241,"title":{},"body":{"injectables/ThirdsService.html":{}}}],["src/app/services/thirds.service.ts:23",{"_index":4226,"title":{},"body":{"injectables/ThirdsService.html":{}}}],["src/app/services/thirds.service.ts:31",{"_index":4239,"title":{},"body":{"injectables/ThirdsService.html":{}}}],["src/app/services/thirds.service.ts:35",{"_index":4237,"title":{},"body":{"injectables/ThirdsService.html":{}}}],["src/app/services/thirds.service.ts:52",{"_index":4234,"title":{},"body":{"injectables/ThirdsService.html":{}}}],["src/app/services/thirds.service.ts:60",{"_index":4235,"title":{},"body":{"injectables/ThirdsService.html":{}}}],["src/app/services/thirds.service.ts:78",{"_index":4233,"title":{},"body":{"injectables/ThirdsService.html":{}}}],["src/app/services/thirds.service.ts:88",{"_index":4228,"title":{},"body":{"injectables/ThirdsService.html":{}}}],["src/app/services/thirds.service.ts:95",{"_index":4230,"title":{},"body":{"injectables/ThirdsService.html":{}}}],["src/app/services/user.service.ts",{"_index":4896,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/services/user.service.ts:19",{"_index":4900,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/services/user.service.ts:29",{"_index":4904,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/services/user.service.ts:34",{"_index":4902,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/store/actions/archive.actions.ts",{"_index":1062,"title":{},"body":{"classes/ArchiveQuerySuccess.html":{},"classes/HandleUnexpectedError.html":{},"classes/SelectArchivedLightCard.html":{},"classes/SendArchiveQuery.html":{},"classes/UpdateArchiveFilter.html":{},"classes/UpdateArchivePage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["src/app/store/actions/archive.actions.ts:24",{"_index":4829,"title":{},"body":{"classes/UpdateArchiveFilter.html":{}}}],["src/app/store/actions/archive.actions.ts:26",{"_index":4830,"title":{},"body":{"classes/UpdateArchiveFilter.html":{}}}],["src/app/store/actions/archive.actions.ts:30",{"_index":3877,"title":{},"body":{"classes/SendArchiveQuery.html":{}}}],["src/app/store/actions/archive.actions.ts:31",{"_index":3878,"title":{},"body":{"classes/SendArchiveQuery.html":{}}}],["src/app/store/actions/archive.actions.ts:36",{"_index":3063,"title":{},"body":{"classes/HandleUnexpectedError.html":{}}}],["src/app/store/actions/archive.actions.ts:39",{"_index":3064,"title":{},"body":{"classes/HandleUnexpectedError.html":{}}}],["src/app/store/actions/archive.actions.ts:43",{"_index":1063,"title":{},"body":{"classes/ArchiveQuerySuccess.html":{}}}],["src/app/store/actions/archive.actions.ts:45",{"_index":1064,"title":{},"body":{"classes/ArchiveQuerySuccess.html":{}}}],["src/app/store/actions/archive.actions.ts:50",{"_index":4831,"title":{},"body":{"classes/UpdateArchivePage.html":{}}}],["src/app/store/actions/archive.actions.ts:52",{"_index":4832,"title":{},"body":{"classes/UpdateArchivePage.html":{}}}],["src/app/store/actions/archive.actions.ts:56",{"_index":3867,"title":{},"body":{"classes/SelectArchivedLightCard.html":{}}}],["src/app/store/actions/archive.actions.ts:58",{"_index":3868,"title":{},"body":{"classes/SelectArchivedLightCard.html":{}}}],["src/app/store/actions/authentication.actions.ts",{"_index":6,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckImplicitFlowAuthenticationStatus.html":{},"classes/ImplicitlyAuthenticated.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"classes/UnAuthenticationFromImplicitFlow.html":{},"classes/UselessAuthAction.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["src/app/store/actions/authentication.actions.ts:101",{"_index":4762,"title":{},"body":{"classes/TryToLogOut.html":{}}}],["src/app/store/actions/authentication.actions.ts:118",{"_index":3834,"title":{},"body":{"classes/RejectLogIn.html":{}}}],["src/app/store/actions/authentication.actions.ts:121",{"_index":3835,"title":{},"body":{"classes/RejectLogIn.html":{}}}],["src/app/store/actions/authentication.actions.ts:135",{"_index":165,"title":{},"body":{"classes/AcceptLogOut.html":{}}}],["src/app/store/actions/authentication.actions.ts:151",{"_index":166,"title":{},"body":{"classes/AcceptLogOutSuccess.html":{}}}],["src/app/store/actions/authentication.actions.ts:155",{"_index":2188,"title":{},"body":{"classes/CheckImplicitFlowAuthenticationStatus.html":{}}}],["src/app/store/actions/authentication.actions.ts:159",{"_index":4843,"title":{},"body":{"classes/UselessAuthAction.html":{}}}],["src/app/store/actions/authentication.actions.ts:164",{"_index":3356,"title":{},"body":{"classes/ImplicitlyAuthenticated.html":{}}}],["src/app/store/actions/authentication.actions.ts:168",{"_index":4823,"title":{},"body":{"classes/UnAuthenticationFromImplicitFlow.html":{}}}],["src/app/store/actions/authentication.actions.ts:33",{"_index":3805,"title":{},"body":{"classes/PayloadForSuccessfulAuthentication.html":{}}}],["src/app/store/actions/authentication.actions.ts:34",{"_index":3809,"title":{},"body":{"classes/PayloadForSuccessfulAuthentication.html":{}}}],["src/app/store/actions/authentication.actions.ts:35",{"_index":3806,"title":{},"body":{"classes/PayloadForSuccessfulAuthentication.html":{}}}],["src/app/store/actions/authentication.actions.ts:36",{"_index":3811,"title":{},"body":{"classes/PayloadForSuccessfulAuthentication.html":{}}}],["src/app/store/actions/authentication.actions.ts:37",{"_index":3807,"title":{},"body":{"classes/PayloadForSuccessfulAuthentication.html":{}}}],["src/app/store/actions/authentication.actions.ts:38",{"_index":3808,"title":{},"body":{"classes/PayloadForSuccessfulAuthentication.html":{}}}],["src/app/store/actions/authentication.actions.ts:39",{"_index":3810,"title":{},"body":{"classes/PayloadForSuccessfulAuthentication.html":{}}}],["src/app/store/actions/authentication.actions.ts:48",{"_index":3390,"title":{},"body":{"classes/InitAuthStatus.html":{}}}],["src/app/store/actions/authentication.actions.ts:50",{"_index":3391,"title":{},"body":{"classes/InitAuthStatus.html":{}}}],["src/app/store/actions/authentication.actions.ts:59",{"_index":2187,"title":{},"body":{"classes/CheckAuthenticationStatus.html":{}}}],["src/app/store/actions/authentication.actions.ts:74",{"_index":43,"title":{},"body":{"classes/AcceptLogIn.html":{}}}],["src/app/store/actions/authentication.actions.ts:77",{"_index":48,"title":{},"body":{"classes/AcceptLogIn.html":{}}}],["src/app/store/actions/authentication.actions.ts:87",{"_index":4760,"title":{},"body":{"classes/TryToLogIn.html":{}}}],["src/app/store/actions/authentication.actions.ts:90",{"_index":4761,"title":{},"body":{"classes/TryToLogIn.html":{}}}],["src/app/store/actions/card.actions.ts",{"_index":438,"title":{},"body":{"classes/AddActionsAppear.html":{},"classes/ClearCard.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/LoadArchivedCard.html":{},"classes/LoadArchivedCardFailure.html":{},"classes/LoadArchivedCardSuccess.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["src/app/store/actions/card.actions.ts:25",{"_index":2194,"title":{},"body":{"classes/ClearCard.html":{}}}],["src/app/store/actions/card.actions.ts:28",{"_index":3509,"title":{},"body":{"classes/LoadCard.html":{}}}],["src/app/store/actions/card.actions.ts:31",{"_index":3510,"title":{},"body":{"classes/LoadCard.html":{}}}],["src/app/store/actions/card.actions.ts:34",{"_index":3511,"title":{},"body":{"classes/LoadCardFailure.html":{}}}],["src/app/store/actions/card.actions.ts:37",{"_index":3512,"title":{},"body":{"classes/LoadCardFailure.html":{}}}],["src/app/store/actions/card.actions.ts:41",{"_index":3513,"title":{},"body":{"classes/LoadCardSuccess.html":{}}}],["src/app/store/actions/card.actions.ts:44",{"_index":3514,"title":{},"body":{"classes/LoadCardSuccess.html":{}}}],["src/app/store/actions/card.actions.ts:48",{"_index":3503,"title":{},"body":{"classes/LoadArchivedCard.html":{}}}],["src/app/store/actions/card.actions.ts:51",{"_index":3504,"title":{},"body":{"classes/LoadArchivedCard.html":{}}}],["src/app/store/actions/card.actions.ts:54",{"_index":3505,"title":{},"body":{"classes/LoadArchivedCardFailure.html":{}}}],["src/app/store/actions/card.actions.ts:57",{"_index":3506,"title":{},"body":{"classes/LoadArchivedCardFailure.html":{}}}],["src/app/store/actions/card.actions.ts:61",{"_index":3507,"title":{},"body":{"classes/LoadArchivedCardSuccess.html":{}}}],["src/app/store/actions/card.actions.ts:64",{"_index":3508,"title":{},"body":{"classes/LoadArchivedCardSuccess.html":{}}}],["src/app/store/actions/card.actions.ts:69",{"_index":3065,"title":{},"body":{"classes/HandleUnexpectedError-1.html":{}}}],["src/app/store/actions/card.actions.ts:72",{"_index":3066,"title":{},"body":{"classes/HandleUnexpectedError-1.html":{}}}],["src/app/store/actions/card.actions.ts:76",{"_index":439,"title":{},"body":{"classes/AddActionsAppear.html":{}}}],["src/app/store/actions/card.actions.ts:78",{"_index":440,"title":{},"body":{"classes/AddActionsAppear.html":{}}}],["src/app/store/actions/config.actions.ts",{"_index":3067,"title":{},"body":{"classes/HandleUnexpectedError-2.html":{},"classes/LoadConfig.html":{},"classes/LoadConfigFailure.html":{},"classes/LoadConfigSuccess.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["src/app/store/actions/config.actions.ts:19",{"_index":3515,"title":{},"body":{"classes/LoadConfig.html":{}}}],["src/app/store/actions/config.actions.ts:22",{"_index":3516,"title":{},"body":{"classes/LoadConfigFailure.html":{}}}],["src/app/store/actions/config.actions.ts:25",{"_index":3517,"title":{},"body":{"classes/LoadConfigFailure.html":{}}}],["src/app/store/actions/config.actions.ts:30",{"_index":3518,"title":{},"body":{"classes/LoadConfigSuccess.html":{}}}],["src/app/store/actions/config.actions.ts:33",{"_index":3519,"title":{},"body":{"classes/LoadConfigSuccess.html":{}}}],["src/app/store/actions/config.actions.ts:39",{"_index":3068,"title":{},"body":{"classes/HandleUnexpectedError-2.html":{}}}],["src/app/store/actions/config.actions.ts:41",{"_index":3069,"title":{},"body":{"classes/HandleUnexpectedError-2.html":{}}}],["src/app/store/actions/feed.actions.ts",{"_index":875,"title":{},"body":{"classes/ApplyFilter.html":{},"classes/InitFilters.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["src/app/store/actions/feed.actions.ts:19",{"_index":876,"title":{},"body":{"classes/ApplyFilter.html":{}}}],["src/app/store/actions/feed.actions.ts:21",{"_index":877,"title":{},"body":{"classes/ApplyFilter.html":{}}}],["src/app/store/actions/feed.actions.ts:25",{"_index":3392,"title":{},"body":{"classes/InitFilters.html":{}}}],["src/app/store/actions/feed.actions.ts:28",{"_index":3393,"title":{},"body":{"classes/InitFilters.html":{}}}],["src/app/store/actions/light",{"_index":473,"title":{},"body":{"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"classes/ClearLightCardSelection.html":{},"classes/DelayedLightCardUpdate.html":{},"classes/EmptyLightCards.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/LightCardAlreadyUpdated.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/RemoveLightCard.html":{},"classes/SelectLightCard.html":{},"classes/ThirdActionAlreadyLoaded.html":{},"classes/ThirdActionAlreadyUpdated.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateAnActionFailure.html":{},"classes/UpdatedSubscription.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["src/app/store/actions/menu.actions.ts",{"_index":3078,"title":{},"body":{"classes/HandleUnexpectedError-4.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["src/app/store/actions/menu.actions.ts:23",{"_index":3526,"title":{},"body":{"classes/LoadMenu.html":{}}}],["src/app/store/actions/menu.actions.ts:30",{"_index":3527,"title":{},"body":{"classes/LoadMenuFailure.html":{}}}],["src/app/store/actions/menu.actions.ts:33",{"_index":3528,"title":{},"body":{"classes/LoadMenuFailure.html":{}}}],["src/app/store/actions/menu.actions.ts:38",{"_index":3529,"title":{},"body":{"classes/LoadMenuSuccess.html":{}}}],["src/app/store/actions/menu.actions.ts:41",{"_index":3530,"title":{},"body":{"classes/LoadMenuSuccess.html":{}}}],["src/app/store/actions/menu.actions.ts:46",{"_index":3079,"title":{},"body":{"classes/HandleUnexpectedError-4.html":{}}}],["src/app/store/actions/menu.actions.ts:49",{"_index":3080,"title":{},"body":{"classes/HandleUnexpectedError-4.html":{}}}],["src/app/store/actions/menu.actions.ts:60",{"_index":3871,"title":{},"body":{"classes/SelectMenuLink.html":{}}}],["src/app/store/actions/menu.actions.ts:63",{"_index":3872,"title":{},"body":{"classes/SelectMenuLink.html":{}}}],["src/app/store/actions/menu.actions.ts:71",{"_index":3875,"title":{},"body":{"classes/SelectMenuLinkSuccess.html":{}}}],["src/app/store/actions/menu.actions.ts:74",{"_index":3876,"title":{},"body":{"classes/SelectMenuLinkSuccess.html":{}}}],["src/app/store/actions/menu.actions.ts:82",{"_index":3873,"title":{},"body":{"classes/SelectMenuLinkFailure.html":{}}}],["src/app/store/actions/menu.actions.ts:85",{"_index":3874,"title":{},"body":{"classes/SelectMenuLinkFailure.html":{}}}],["src/app/store/actions/settings.actions.ts",{"_index":3103,"title":{},"body":{"classes/HandleUnexpectedError-5.html":{},"classes/LoadSettings.html":{},"classes/LoadSettingsFailure.html":{},"classes/LoadSettingsSuccess.html":{},"classes/PatchSettings.html":{},"classes/PatchSettingsFailure.html":{},"classes/PatchSettingsSuccess.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["src/app/store/actions/settings.actions.ts:25",{"_index":3531,"title":{},"body":{"classes/LoadSettings.html":{}}}],["src/app/store/actions/settings.actions.ts:28",{"_index":3532,"title":{},"body":{"classes/LoadSettingsFailure.html":{}}}],["src/app/store/actions/settings.actions.ts:31",{"_index":3533,"title":{},"body":{"classes/LoadSettingsFailure.html":{}}}],["src/app/store/actions/settings.actions.ts:36",{"_index":3534,"title":{},"body":{"classes/LoadSettingsSuccess.html":{}}}],["src/app/store/actions/settings.actions.ts:39",{"_index":3535,"title":{},"body":{"classes/LoadSettingsSuccess.html":{}}}],["src/app/store/actions/settings.actions.ts:44",{"_index":3798,"title":{},"body":{"classes/PatchSettings.html":{}}}],["src/app/store/actions/settings.actions.ts:45",{"_index":3799,"title":{},"body":{"classes/PatchSettings.html":{}}}],["src/app/store/actions/settings.actions.ts:48",{"_index":3800,"title":{},"body":{"classes/PatchSettingsFailure.html":{}}}],["src/app/store/actions/settings.actions.ts:51",{"_index":3801,"title":{},"body":{"classes/PatchSettingsFailure.html":{}}}],["src/app/store/actions/settings.actions.ts:56",{"_index":3802,"title":{},"body":{"classes/PatchSettingsSuccess.html":{}}}],["src/app/store/actions/settings.actions.ts:59",{"_index":3803,"title":{},"body":{"classes/PatchSettingsSuccess.html":{}}}],["src/app/store/actions/settings.actions.ts:65",{"_index":3104,"title":{},"body":{"classes/HandleUnexpectedError-5.html":{}}}],["src/app/store/actions/settings.actions.ts:67",{"_index":3105,"title":{},"body":{"classes/HandleUnexpectedError-5.html":{}}}],["src/app/store/actions/time.actions.ts",{"_index":2781,"title":{},"body":{"classes/FailToUpdateTimeReference.html":{},"classes/Tick.html":{},"classes/TickPayload.html":{},"classes/UpdateTimeReference.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["src/app/store/actions/time.actions.ts:25",{"_index":4263,"title":{},"body":{"classes/Tick.html":{}}}],["src/app/store/actions/time.actions.ts:26",{"_index":4264,"title":{},"body":{"classes/Tick.html":{}}}],["src/app/store/actions/time.actions.ts:32",{"_index":4267,"title":{},"body":{"classes/TickPayload.html":{}}}],["src/app/store/actions/time.actions.ts:33",{"_index":4268,"title":{},"body":{"classes/TickPayload.html":{}}}],["src/app/store/actions/time.actions.ts:34",{"_index":4269,"title":{},"body":{"classes/TickPayload.html":{}}}],["src/app/store/actions/time.actions.ts:43",{"_index":4833,"title":{},"body":{"classes/UpdateTimeReference.html":{}}}],["src/app/store/actions/time.actions.ts:44",{"_index":4834,"title":{},"body":{"classes/UpdateTimeReference.html":{}}}],["src/app/store/actions/time.actions.ts:53",{"_index":2787,"title":{},"body":{"classes/FailToUpdateTimeReference.html":{}}}],["src/app/store/actions/time.actions.ts:54",{"_index":2788,"title":{},"body":{"classes/FailToUpdateTimeReference.html":{}}}],["src/app/store/actions/timeline.actions.ts",{"_index":3395,"title":{},"body":{"classes/InitTimeline.html":{},"classes/SetCardDataTimeline.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["src/app/store/actions/timeline.actions.ts:17",{"_index":3396,"title":{},"body":{"classes/InitTimeline.html":{}}}],["src/app/store/actions/timeline.actions.ts:18",{"_index":3397,"title":{},"body":{"classes/InitTimeline.html":{}}}],["src/app/store/actions/timeline.actions.ts:22",{"_index":3893,"title":{},"body":{"classes/SetCardDataTimeline.html":{}}}],["src/app/store/actions/timeline.actions.ts:23",{"_index":3894,"title":{},"body":{"classes/SetCardDataTimeline.html":{}}}],["src/app/store/actions/translate.actions.ts",{"_index":3815,"title":{},"body":{"classes/RefreshTranslation.html":{},"classes/TranslationUpToDate.html":{},"classes/UpdateTranslation.html":{},"classes/UpdateTranslationFailed.html":{},"classes/UpdateTranslationSuccessful.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["src/app/store/actions/translate.actions.ts:20",{"_index":4836,"title":{},"body":{"classes/UpdateTranslation.html":{}}}],["src/app/store/actions/translate.actions.ts:22",{"_index":4837,"title":{},"body":{"classes/UpdateTranslation.html":{}}}],["src/app/store/actions/translate.actions.ts:27",{"_index":4759,"title":{},"body":{"classes/TranslationUpToDate.html":{}}}],["src/app/store/actions/translate.actions.ts:31",{"_index":4840,"title":{},"body":{"classes/UpdateTranslationSuccessful.html":{}}}],["src/app/store/actions/translate.actions.ts:33",{"_index":4841,"title":{},"body":{"classes/UpdateTranslationSuccessful.html":{}}}],["src/app/store/actions/translate.actions.ts:38",{"_index":4838,"title":{},"body":{"classes/UpdateTranslationFailed.html":{}}}],["src/app/store/actions/translate.actions.ts:40",{"_index":4839,"title":{},"body":{"classes/UpdateTranslationFailed.html":{}}}],["src/app/store/actions/translate.actions.ts:46",{"_index":3817,"title":{},"body":{"classes/RefreshTranslation.html":{}}}],["src/app/store/actions/user.actions.ts",{"_index":2263,"title":{},"body":{"classes/CreateUserApplication.html":{},"classes/CreateUserApplicationOnFailure.html":{},"classes/CreateUserApplicationOnSuccess.html":{},"classes/HandleUnexpectedError-6.html":{},"classes/UserApplicationNotRegistered.html":{},"classes/UserApplicationRegistered.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["src/app/store/actions/user.actions.ts:23",{"_index":4852,"title":{},"body":{"classes/UserApplicationRegistered.html":{}}}],["src/app/store/actions/user.actions.ts:24",{"_index":4853,"title":{},"body":{"classes/UserApplicationRegistered.html":{}}}],["src/app/store/actions/user.actions.ts:29",{"_index":4850,"title":{},"body":{"classes/UserApplicationNotRegistered.html":{}}}],["src/app/store/actions/user.actions.ts:30",{"_index":4851,"title":{},"body":{"classes/UserApplicationNotRegistered.html":{}}}],["src/app/store/actions/user.actions.ts:35",{"_index":2264,"title":{},"body":{"classes/CreateUserApplication.html":{}}}],["src/app/store/actions/user.actions.ts:36",{"_index":2265,"title":{},"body":{"classes/CreateUserApplication.html":{}}}],["src/app/store/actions/user.actions.ts:42",{"_index":2281,"title":{},"body":{"classes/CreateUserApplicationOnSuccess.html":{}}}],["src/app/store/actions/user.actions.ts:43",{"_index":2282,"title":{},"body":{"classes/CreateUserApplicationOnSuccess.html":{}}}],["src/app/store/actions/user.actions.ts:48",{"_index":2279,"title":{},"body":{"classes/CreateUserApplicationOnFailure.html":{}}}],["src/app/store/actions/user.actions.ts:49",{"_index":2280,"title":{},"body":{"classes/CreateUserApplicationOnFailure.html":{}}}],["src/app/store/actions/user.actions.ts:55",{"_index":3120,"title":{},"body":{"classes/HandleUnexpectedError-6.html":{}}}],["src/app/store/actions/user.actions.ts:56",{"_index":3121,"title":{},"body":{"classes/HandleUnexpectedError-6.html":{}}}],["src/app/store/effects/archive.effects.ts",{"_index":894,"title":{},"body":{"injectables/ArchiveEffects.html":{}}}],["src/app/store/effects/archive.effects.ts:29",{"_index":898,"title":{},"body":{"injectables/ArchiveEffects.html":{}}}],["src/app/store/effects/archive.effects.ts:36",{"_index":913,"title":{},"body":{"injectables/ArchiveEffects.html":{}}}],["src/app/store/effects/archive.effects.ts:51",{"_index":923,"title":{},"body":{"injectables/ArchiveEffects.html":{}}}],["src/app/store/effects/authentication.effects.ts",{"_index":1468,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["src/app/store/effects/authentication.effects.ts:122",{"_index":1575,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["src/app/store/effects/authentication.effects.ts:143",{"_index":1492,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["src/app/store/effects/authentication.effects.ts:162",{"_index":1559,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["src/app/store/effects/authentication.effects.ts:186",{"_index":1531,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["src/app/store/effects/authentication.effects.ts:244",{"_index":1556,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["src/app/store/effects/authentication.effects.ts:261",{"_index":1484,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["src/app/store/effects/authentication.effects.ts:283",{"_index":1487,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["src/app/store/effects/authentication.effects.ts:289",{"_index":1489,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["src/app/store/effects/authentication.effects.ts:45",{"_index":1474,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["src/app/store/effects/authentication.effects.ts:67",{"_index":1544,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["src/app/store/effects/authentication.effects.ts:95",{"_index":1565,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["src/app/store/effects/card",{"_index":2024,"title":{},"body":{"injectables/CardOperationEffects.html":{}}}],["src/app/store/effects/card.effects.ts",{"_index":1931,"title":{},"body":{"injectables/CardEffects.html":{}}}],["src/app/store/effects/card.effects.ts:34",{"_index":1935,"title":{},"body":{"injectables/CardEffects.html":{}}}],["src/app/store/effects/card.effects.ts:42",{"_index":1950,"title":{},"body":{"injectables/CardEffects.html":{}}}],["src/app/store/effects/card.effects.ts:55",{"_index":1945,"title":{},"body":{"injectables/CardEffects.html":{}}}],["src/app/store/effects/card.effects.ts:68",{"_index":1937,"title":{},"body":{"injectables/CardEffects.html":{}}}],["src/app/store/effects/config.effects.ts",{"_index":2196,"title":{},"body":{"injectables/ConfigEffects.html":{}}}],["src/app/store/effects/config.effects.ts:22",{"_index":2201,"title":{},"body":{"injectables/ConfigEffects.html":{}}}],["src/app/store/effects/config.effects.ts:55",{"_index":2207,"title":{},"body":{"injectables/ConfigEffects.html":{}}}],["src/app/store/effects/config.effects.ts:72",{"_index":2210,"title":{},"body":{"injectables/ConfigEffects.html":{}}}],["src/app/store/effects/custom",{"_index":2334,"title":{},"body":{"injectables/CustomRouterEffects.html":{}}}],["src/app/store/effects/feed",{"_index":2844,"title":{},"body":{"injectables/FeedFiltersEffects.html":{}}}],["src/app/store/effects/light",{"_index":3416,"title":{},"body":{"injectables/LightCardEffects.html":{}}}],["src/app/store/effects/menu.effects.ts",{"_index":3585,"title":{},"body":{"injectables/MenuEffects.html":{}}}],["src/app/store/effects/menu.effects.ts:28",{"_index":3587,"title":{},"body":{"injectables/MenuEffects.html":{}}}],["src/app/store/effects/menu.effects.ts:39",{"_index":3593,"title":{},"body":{"injectables/MenuEffects.html":{}}}],["src/app/store/effects/menu.effects.ts:62",{"_index":3601,"title":{},"body":{"injectables/MenuEffects.html":{}}}],["src/app/store/effects/settings.effects.ts",{"_index":3919,"title":{},"body":{"injectables/SettingsEffects.html":{}}}],["src/app/store/effects/settings.effects.ts:30",{"_index":3921,"title":{},"body":{"injectables/SettingsEffects.html":{}}}],["src/app/store/effects/settings.effects.ts:43",{"_index":3927,"title":{},"body":{"injectables/SettingsEffects.html":{}}}],["src/app/store/effects/settings.effects.ts:55",{"_index":3929,"title":{},"body":{"injectables/SettingsEffects.html":{}}}],["src/app/store/effects/settings.effects.ts:61",{"_index":3935,"title":{},"body":{"injectables/SettingsEffects.html":{}}}],["src/app/store/effects/time.effects.ts",{"_index":4270,"title":{},"body":{"injectables/TimeEffects.html":{}}}],["src/app/store/effects/time.effects.ts:26",{"_index":4274,"title":{},"body":{"injectables/TimeEffects.html":{}}}],["src/app/store/effects/time.effects.ts:42",{"_index":4278,"title":{},"body":{"injectables/TimeEffects.html":{}}}],["src/app/store/effects/time.effects.ts:56",{"_index":4286,"title":{},"body":{"injectables/TimeEffects.html":{}}}],["src/app/store/effects/translate.effects.ts",{"_index":4612,"title":{},"body":{"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["src/app/store/effects/translate.effects.ts:108",{"_index":4751,"title":{},"body":{"injectables/TranslateEffects.html":{}}}],["src/app/store/effects/translate.effects.ts:125",{"_index":4740,"title":{},"body":{"injectables/TranslateEffects.html":{}}}],["src/app/store/effects/translate.effects.ts:132",{"_index":4742,"title":{},"body":{"injectables/TranslateEffects.html":{}}}],["src/app/store/effects/translate.effects.ts:143",{"_index":4752,"title":{},"body":{"injectables/TranslateEffects.html":{}}}],["src/app/store/effects/translate.effects.ts:155",{"_index":4741,"title":{},"body":{"injectables/TranslateEffects.html":{}}}],["src/app/store/effects/translate.effects.ts:164",{"_index":4739,"title":{},"body":{"injectables/TranslateEffects.html":{}}}],["src/app/store/effects/translate.effects.ts:177",{"_index":4743,"title":{},"body":{"injectables/TranslateEffects.html":{}}}],["src/app/store/effects/translate.effects.ts:205",{"_index":4748,"title":{},"body":{"injectables/TranslateEffects.html":{}}}],["src/app/store/effects/translate.effects.ts:211",{"_index":4614,"title":{},"body":{"classes/TransitionalThirdWithItSVersion.html":{}}}],["src/app/store/effects/translate.effects.ts:212",{"_index":4615,"title":{},"body":{"classes/TransitionalThirdWithItSVersion.html":{}}}],["src/app/store/effects/translate.effects.ts:34",{"_index":4737,"title":{},"body":{"injectables/TranslateEffects.html":{}}}],["src/app/store/effects/translate.effects.ts:45",{"_index":4750,"title":{},"body":{"injectables/TranslateEffects.html":{}}}],["src/app/store/effects/translate.effects.ts:67",{"_index":4745,"title":{},"body":{"injectables/TranslateEffects.html":{}}}],["src/app/store/effects/translate.effects.ts:76",{"_index":4746,"title":{},"body":{"injectables/TranslateEffects.html":{}}}],["src/app/store/effects/translate.effects.ts:86",{"_index":4747,"title":{},"body":{"injectables/TranslateEffects.html":{}}}],["src/app/store/effects/translate.effects.ts:98",{"_index":4749,"title":{},"body":{"injectables/TranslateEffects.html":{}}}],["src/app/store/effects/user.effects.ts",{"_index":4857,"title":{},"body":{"injectables/UserEffects.html":{}}}],["src/app/store/effects/user.effects.ts:106",{"_index":4894,"title":{},"body":{"injectables/UserEffects.html":{}}}],["src/app/store/effects/user.effects.ts:30",{"_index":4861,"title":{},"body":{"injectables/UserEffects.html":{}}}],["src/app/store/effects/user.effects.ts:45",{"_index":4872,"title":{},"body":{"injectables/UserEffects.html":{}}}],["src/app/store/effects/user.effects.ts:66",{"_index":4891,"title":{},"body":{"injectables/UserEffects.html":{}}}],["src/app/store/effects/user.effects.ts:81",{"_index":4886,"title":{},"body":{"injectables/UserEffects.html":{}}}],["src/app/store/index.ts",{"_index":779,"title":{},"body":{"interfaces/AppState.html":{}}}],["src/app/store/state.module.ts",{"_index":3975,"title":{},"body":{"modules/StateModule.html":{}}}],["src/app/store/state.module.ts:34",{"_index":3976,"title":{},"body":{"modules/StateModule.html":{}}}],["src/app/store/states/archive.state.ts",{"_index":1076,"title":{},"body":{"interfaces/ArchiveState.html":{}}}],["src/app/store/states/authentication.state.ts",{"_index":1462,"title":{},"body":{"interfaces/AuthState.html":{}}}],["src/app/store/states/card.state.ts",{"_index":2163,"title":{},"body":{"interfaces/CardState.html":{}}}],["src/app/store/states/config.state.ts",{"_index":2235,"title":{},"body":{"interfaces/ConfigState.html":{}}}],["src/app/store/states/feed.state.ts",{"_index":1954,"title":{},"body":{"interfaces/CardFeedState.html":{}}}],["src/app/store/states/menu.state.ts",{"_index":3633,"title":{},"body":{"interfaces/MenuState.html":{}}}],["src/app/store/states/router.state.ts",{"_index":2381,"title":{},"body":{"classes/CustomRouterStateSerializer.html":{},"classes/RouterStateUrl.html":{}}}],["src/app/store/states/router.state.ts:38",{"_index":3866,"title":{},"body":{"classes/RouterStateUrl.html":{}}}],["src/app/store/states/router.state.ts:49",{"_index":2390,"title":{},"body":{"classes/CustomRouterStateSerializer.html":{}}}],["src/app/store/states/router.state.ts:56",{"_index":2387,"title":{},"body":{"classes/CustomRouterStateSerializer.html":{}}}],["src/app/store/states/settings.state.ts",{"_index":3969,"title":{},"body":{"interfaces/SettingsState.html":{}}}],["src/app/store/states/time.state.ts",{"_index":4576,"title":{},"body":{"interfaces/TimeState.html":{}}}],["src/app/store/states/timeline.state.ts",{"_index":4581,"title":{},"body":{"interfaces/TimelineState.html":{}}}],["src/app/store/states/translation.state.ts",{"_index":4753,"title":{},"body":{"interfaces/TranslationState.html":{}}}],["src/app/store/states/user.state.ts",{"_index":4910,"title":{},"body":{"interfaces/UserState.html":{}}}],["src/tests/mocks/thirds.service.mock.ts",{"_index":4243,"title":{},"body":{"classes/ThirdsServiceMock.html":{}}}],["src/tests/mocks/thirds.service.mock.ts:12",{"_index":4245,"title":{},"body":{"classes/ThirdsServiceMock.html":{}}}],["src/tests/mocks/thirds.service.mock.ts:21",{"_index":4246,"title":{},"body":{"classes/ThirdsServiceMock.html":{}}}],["sse",{"_index":2126,"title":{},"body":{"injectables/CardService.html":{}}}],["st",{"_index":3442,"title":{},"body":{"injectables/LightCardEffects.html":{}}}],["start",{"_index":2716,"title":{},"body":{"directives/DraggableDirective.html":{},"injectables/FeedFiltersEffects.html":{},"classes/LightCard.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"classes/TimeSpan.html":{}}}],["startdate",{"_index":1791,"title":{},"body":{"classes/Card.html":{},"classes/Detail.html":{},"classes/LightCard.html":{},"components/TimeLineComponent.html":{},"classes/TimeSpan.html":{}}}],["startdomain",{"_index":4417,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["startdomain7day",{"_index":4360,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["startdomain7day.minutes(0).second(0).millisecond(0",{"_index":4362,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["startdomain7day.valueof",{"_index":4433,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["startdomainj",{"_index":4389,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["startdomainj.valueof",{"_index":4418,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["startdomainmonth",{"_index":4370,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["startdomainmonth.minutes(0).second(0).millisecond(0",{"_index":4372,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["startdomainmonth.valueof",{"_index":4440,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["startdomaintr",{"_index":4384,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["startdomaintr.valueof",{"_index":4430,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["startdomainweek",{"_index":4365,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["startdomainweek.minutes(0).second(0).millisecond(0",{"_index":4367,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["startdomainweek.valueof",{"_index":4438,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["startdomainyear",{"_index":4375,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["startdomainyear.hour(0).minutes(0).second(0).millisecond(0",{"_index":4377,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["startdomainyear.valueof",{"_index":4445,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["startof",{"_index":4334,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["startup",{"_index":565,"title":{},"body":{"components/AppComponent.html":{}}}],["startyear",{"_index":4960,"title":{},"body":{"pipes/XAxisTickFormatPipe.html":{}}}],["startyear.valueof",{"_index":4963,"title":{},"body":{"pipes/XAxisTickFormatPipe.html":{}}}],["state",{"_index":11,"title":{"classes/State.html":{}},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/Action.html":{},"classes/ActionStatus.html":{},"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"injectables/ArchiveEffects.html":{},"injectables/AuthenticationEffects.html":{},"classes/Card.html":{},"components/CardDetailsComponent.html":{},"interfaces/CardFeedState.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckImplicitFlowAuthenticationStatus.html":{},"classes/ClearLightCardSelection.html":{},"classes/CustomRouterStateSerializer.html":{},"classes/DelayedLightCardUpdate.html":{},"classes/Detail.html":{},"components/DetailComponent.html":{},"classes/EmptyLightCards.html":{},"classes/Filter.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/ImplicitlyAuthenticated.html":{},"classes/InitAuthStatus.html":{},"classes/Input.html":{},"classes/LightCard.html":{},"classes/LightCardAlreadyUpdated.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/ParameterListItem.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/Process.html":{},"classes/RejectLogIn.html":{},"classes/RemoveLightCard.html":{},"classes/RouterStateUrl.html":{},"classes/SelectLightCard.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdActionAlreadyLoaded.html":{},"classes/ThirdActionAlreadyUpdated.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"classes/TimeSpan.html":{},"interfaces/TimelineState.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"classes/UnAuthenticationFromImplicitFlow.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateAnActionFailure.html":{},"classes/UpdatedSubscription.html":{},"classes/UselessAuthAction.html":{},"miscellaneous/enumerations.html":{}}}],["state.actions[actionid",{"_index":2628,"title":{},"body":{"components/DetailComponent.html":{}}}],["state.children",{"_index":2412,"title":{},"body":{"classes/CustomRouterStateSerializer.html":{},"classes/RouterStateUrl.html":{}}}],["state.params",{"_index":2410,"title":{},"body":{"classes/CustomRouterStateSerializer.html":{},"classes/RouterStateUrl.html":{}}}],["statemodule",{"_index":653,"title":{"modules/StateModule.html":{}},"body":{"modules/AppModule.html":{},"modules/StateModule.html":{},"index.html":{},"modules.html":{}}}],["statemodule.forroot",{"_index":711,"title":{},"body":{"modules/AppModule.html":{}}}],["states",{"_index":215,"title":{},"body":{"classes/Action.html":{},"classes/ActionStatus.html":{},"classes/Input.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{}}}],["static",{"_index":270,"title":{},"body":{"classes/Action.html":{},"classes/ActionStatus.html":{},"classes/CardOperation.html":{},"modules/CardsModule.html":{},"classes/CustomRouterStateSerializer.html":{},"classes/Filter.html":{},"classes/Input.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/RouterStateUrl.html":{},"modules/ServicesModule.html":{},"classes/State.html":{},"modules/StateModule.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"classes/TimeReference.html":{},"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{},"miscellaneous/enumerations.html":{}}}],["status",{"_index":65,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"components/AppComponent.html":{},"classes/ApplyFilter.html":{},"injectables/AuthenticationEffects.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckImplicitFlowAuthenticationStatus.html":{},"classes/ClearLightCardSelection.html":{},"components/ConfirmModalComponent.html":{},"classes/DelayedLightCardUpdate.html":{},"classes/EmptyLightCards.html":{},"injectables/FeedFiltersEffects.html":{},"classes/Filter.html":{},"injectables/FilterService.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/ImplicitlyAuthenticated.html":{},"classes/InitAuthStatus.html":{},"classes/InitFilters.html":{},"classes/LightCardAlreadyUpdated.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"injectables/NotifyService.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/RemoveLightCard.html":{},"classes/SelectLightCard.html":{},"components/TagsFilterComponent.html":{},"classes/ThirdActionAlreadyLoaded.html":{},"classes/ThirdActionAlreadyUpdated.html":{},"injectables/ThirdActionService.html":{},"components/TimeFilterComponent.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"components/TypeFilterComponent.html":{},"classes/UnAuthenticationFromImplicitFlow.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateAnActionFailure.html":{},"classes/UpdatedSubscription.html":{},"classes/UselessAuthAction.html":{},"miscellaneous/enumerations.html":{}}}],["status.action",{"_index":3028,"title":{},"body":{"injectables/FilterService.html":{}}}],["status.alarm",{"_index":3026,"title":{},"body":{"injectables/FilterService.html":{}}}],["status.compliant",{"_index":3029,"title":{},"body":{"injectables/FilterService.html":{}}}],["status.end",{"_index":3034,"title":{},"body":{"injectables/FilterService.html":{}}}],["status.information",{"_index":3030,"title":{},"body":{"injectables/FilterService.html":{}}}],["status.start",{"_index":3033,"title":{},"body":{"injectables/FilterService.html":{}}}],["sticktovirtualtime",{"_index":4273,"title":{},"body":{"injectables/TimeEffects.html":{}}}],["still",{"_index":1300,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"directives/DraggableDirective.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["stillvalid",{"_index":1307,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["stitle",{"_index":619,"title":{},"body":{"components/AppComponent.html":{}}}],["stitle.subscribe(data",{"_index":622,"title":{},"body":{"components/AppComponent.html":{}}}],["stops",{"_index":2987,"title":{},"body":{"classes/Filter.html":{}}}],["storage",{"_index":1456,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["store",{"_index":137,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"components/AppComponent.html":{},"interfaces/AppState.html":{},"injectables/ArchiveEffects.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"classes/AuthObject.html":{},"injectables/AuthenticationEffects.html":{},"interfaces/AuthenticationModeHandler.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"injectables/CardEffects.html":{},"components/CardListComponent.html":{},"injectables/CardOperationEffects.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckImplicitFlowAuthenticationStatus.html":{},"classes/CheckTokenResponse.html":{},"injectables/ConfigEffects.html":{},"injectables/ConfigService.html":{},"injectables/CustomRouterEffects.html":{},"classes/CustomRouterStateSerializer.html":{},"components/DetailComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"injectables/FeedFiltersEffects.html":{},"classes/Filter.html":{},"components/FiltersComponent.html":{},"injectables/HandlebarsService.html":{},"injectables/I18nService.html":{},"components/IframeDisplayComponent.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/ImplicitlyAuthenticated.html":{},"components/InfoComponent.html":{},"classes/InitAuthStatus.html":{},"injectables/LightCardEffects.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"injectables/MenuEffects.html":{},"components/MenuLinkComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/RouterStateUrl.html":{},"components/SettingsComponent.html":{},"injectables/SettingsEffects.html":{},"interfaces/SettingsInputs.html":{},"injectables/SettingsService.html":{},"modules/StateModule.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"injectables/ThirdActionService.html":{},"injectables/TimeEffects.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"classes/UnAuthenticationFromImplicitFlow.html":{},"classes/UselessAuthAction.html":{},"injectables/UserEffects.html":{},"dependencies.html":{}}}],["store.select(buildconfigselector('security",{"_index":1178,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["storeconfig",{"_index":872,"title":{},"body":{"interfaces/AppState.html":{},"modules/StateModule.html":{}}}],["stored",{"_index":762,"title":{},"body":{"modules/AppRoutingModule.html":{},"classes/AuthObject.html":{},"injectables/AuthenticationEffects.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["storedcard",{"_index":3428,"title":{},"body":{"injectables/LightCardEffects.html":{}}}],["storedevtoolsmodule",{"_index":3979,"title":{},"body":{"modules/StateModule.html":{}}}],["storedevtoolsmodule.instrument",{"_index":3988,"title":{},"body":{"modules/StateModule.html":{}}}],["storefreeze",{"_index":804,"title":{},"body":{"interfaces/AppState.html":{}}}],["storemodule",{"_index":3977,"title":{},"body":{"modules/StateModule.html":{}}}],["storemodule.forroot(appreducer",{"_index":3983,"title":{},"body":{"modules/StateModule.html":{}}}],["storerouterconnectingmodule",{"_index":3982,"title":{},"body":{"modules/StateModule.html":{}}}],["storerouterconnectingmodule.forroot",{"_index":3984,"title":{},"body":{"modules/StateModule.html":{}}}],["string",{"_index":100,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/Action.html":{},"components/ActionComponent.html":{},"classes/ActionStatus.html":{},"classes/AddActionsAppear.html":{},"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"components/AppComponent.html":{},"components/ArchiveFiltersComponent.html":{},"classes/ArchiveQuerySuccess.html":{},"interfaces/ArchiveState.html":{},"classes/AuthObject.html":{},"interfaces/AuthState.html":{},"injectables/AuthenticationEffects.html":{},"interfaces/AuthenticationModeHandler.html":{},"components/BaseSettingComponent.html":{},"directives/CalcHeightDirective.html":{},"classes/Card.html":{},"components/CardComponent.html":{},"interfaces/CardFeedState.html":{},"classes/CardOperation.html":{},"injectables/CardService.html":{},"interfaces/CardState.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckImplicitFlowAuthenticationStatus.html":{},"classes/CheckTokenResponse.html":{},"classes/ClearCard.html":{},"classes/ClearLightCardSelection.html":{},"injectables/ConfigService.html":{},"interfaces/ConfigState.html":{},"components/CustomLogoComponent.html":{},"classes/CustomRouterStateSerializer.html":{},"classes/DateTimeNgb.html":{},"components/DatetimeFilterComponent.html":{},"classes/DelayedLightCardUpdate.html":{},"classes/Detail.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"classes/EmptyLightCards.html":{},"classes/GuidService.html":{},"classes/HandleUnexpectedError.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/HandleUnexpectedError-4.html":{},"injectables/HandlebarsService.html":{},"classes/I18n.html":{},"injectables/I18nService.html":{},"components/IconComponent.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/ImplicitlyAuthenticated.html":{},"classes/InitAuthStatus.html":{},"classes/Input.html":{},"classes/LightCard.html":{},"classes/LightCardAlreadyUpdated.html":{},"components/ListSettingComponent.html":{},"classes/LoadArchivedCard.html":{},"classes/LoadArchivedCardFailure.html":{},"classes/LoadArchivedCardSuccess.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/Map.html":{},"interfaces/MenuState.html":{},"classes/Message.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"injectables/NotifyService.html":{},"classes/ParameterListItem.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/Process.html":{},"classes/RefreshTranslation.html":{},"classes/RejectLogIn.html":{},"classes/RemoveLightCard.html":{},"classes/RouterStateUrl.html":{},"classes/SelectArchivedLightCard.html":{},"classes/SelectLightCard.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{},"classes/SendArchiveQuery.html":{},"injectables/SettingsService.html":{},"interfaces/SettingsState.html":{},"classes/State.html":{},"components/TextSettingComponent.html":{},"classes/Third.html":{},"classes/ThirdActionAlreadyLoaded.html":{},"classes/ThirdActionAlreadyUpdated.html":{},"injectables/ThirdActionService.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"classes/TimeReference.html":{},"classes/TimeSpan.html":{},"interfaces/TimelineState.html":{},"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{},"interfaces/TranslationState.html":{},"classes/TranslationUpToDate.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"components/TypeAheadSettingsComponent.html":{},"classes/UnAuthenticationFromImplicitFlow.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateAnActionFailure.html":{},"classes/UpdateArchiveFilter.html":{},"classes/UpdateArchivePage.html":{},"classes/UpdateTranslation.html":{},"classes/UpdateTranslationFailed.html":{},"classes/UpdateTranslationSuccessful.html":{},"classes/UpdatedSubscription.html":{},"classes/UselessAuthAction.html":{},"classes/User.html":{},"classes/UserContext.html":{},"injectables/UserService.html":{},"interfaces/UserState.html":{},"pipes/XAxisTickFormatPipe.html":{}}}],["string):observable",{"_index":3203,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["structure",{"_index":3991,"title":{},"body":{"modules/StateModule.html":{}}}],["style",{"_index":2598,"title":{},"body":{"components/DetailComponent.html":{}}}],["stylename",{"_index":4167,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["styles",{"_index":283,"title":{},"body":{"components/ActionComponent.html":{},"components/AppComponent.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"classes/Card.html":{},"components/CardComponent.html":{},"components/CardListComponent.html":{},"components/CustomLogoComponent.html":{},"components/DatetimeFilterComponent.html":{},"classes/Detail.html":{},"components/DetailsComponent.html":{},"components/FeedComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/LoginComponent.html":{},"components/MenuLinkComponent.html":{},"components/MultiFilterComponent.html":{},"components/NavbarComponent.html":{},"components/ResizableComponent.html":{},"components/TagsFilterComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{}}}],["styleurls",{"_index":290,"title":{},"body":{"components/ActionComponent.html":{},"components/AppComponent.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"components/CardComponent.html":{},"components/CardListComponent.html":{},"components/CustomLogoComponent.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailsComponent.html":{},"components/FeedComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/MenuLinkComponent.html":{},"components/MultiFilterComponent.html":{},"components/NavbarComponent.html":{},"components/ResizableComponent.html":{},"components/TagsFilterComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{}}}],["sub",{"_index":1209,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["subject",{"_index":335,"title":{},"body":{"components/ActionComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"modules/ArchivesModule.html":{},"modules/ArchivesRoutingModule.html":{},"components/BaseSettingComponent.html":{},"directives/CalcHeightDirective.html":{},"components/CardComponent.html":{},"components/CardListComponent.html":{},"injectables/CardService.html":{},"modules/CardsModule.html":{},"components/CustomLogoComponent.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"modules/FeedModule.html":{},"modules/FeedRoutingModule.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/MenuLinkComponent.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/ResizableComponent.html":{},"modules/ServicesModule.html":{},"modules/SettingsModule.html":{},"modules/SettingsRoutingModule.html":{},"modules/StateModule.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"modules/ThirdpartyModule.html":{},"modules/ThirdpartyRoutingModule.html":{},"components/TimeFilterComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"modules/UtilitiesModule.html":{}}}],["submission",{"_index":2778,"title":{},"body":{"components/EmailSettingComponent.html":{},"components/ListSettingComponent.html":{},"components/TextSettingComponent.html":{}}}],["submit",{"_index":298,"title":{},"body":{"components/ActionComponent.html":{},"components/TextSettingComponent.html":{},"injectables/ThirdActionService.html":{}}}],["submit(lightcardid",{"_index":4066,"title":{},"body":{"injectables/ThirdActionService.html":{}}}],["submitted",{"_index":1571,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["submitvalue",{"_index":1630,"title":{},"body":{"components/BaseSettingComponent.html":{},"components/EmailSettingComponent.html":{},"components/ListSettingComponent.html":{},"components/MultiSettingsComponent.html":{},"components/TextSettingComponent.html":{},"components/TypeAheadSettingsComponent.html":{}}}],["subscribe",{"_index":1379,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"components/BaseSettingComponent.html":{},"injectables/CardOperationEffects.html":{},"classes/CheckTokenResponse.html":{},"components/DetailComponent.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"injectables/ThirdActionService.html":{}}}],["subscribe(([locale,timezone",{"_index":3282,"title":{},"body":{"injectables/I18nService.html":{}}}],["subscribe(([realm",{"_index":1604,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["subscribe((maxedretries",{"_index":616,"title":{},"body":{"components/AppComponent.html":{}}}],["subscribe(card",{"_index":1917,"title":{},"body":{"components/CardDetailsComponent.html":{}}}],["subscribe(computeddate",{"_index":1856,"title":{},"body":{"components/CardComponent.html":{}}}],["subscribe(form",{"_index":4018,"title":{},"body":{"components/TagsFilterComponent.html":{},"components/TimeFilterComponent.html":{},"components/TypeFilterComponent.html":{}}}],["subscribe(linker",{"_index":1453,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["subscribe(loaded",{"_index":612,"title":{},"body":{"components/AppComponent.html":{}}}],["subscribe(m",{"_index":3561,"title":{},"body":{"components/LoginComponent.html":{}}}],["subscribe(next=>this.basesettings",{"_index":1691,"title":{},"body":{"components/BaseSettingComponent.html":{}}}],["subscribe(next=>this.dispatch(this.convert(next",{"_index":1685,"title":{},"body":{"components/BaseSettingComponent.html":{}}}],["subscribe(oauth2conf",{"_index":1179,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["subscribe(provider",{"_index":3564,"title":{},"body":{"components/LoginComponent.html":{}}}],["subscribe(v",{"_index":3619,"title":{},"body":{"components/MenuLinkComponent.html":{}}}],["subscribe(x",{"_index":1730,"title":{},"body":{"directives/CalcHeightDirective.html":{}}}],["subscription",{"_index":570,"title":{},"body":{"components/AppComponent.html":{},"components/TimeLineComponent.html":{}}}],["subtitle",{"_index":1898,"title":{},"body":{"components/CardComponent.html":{}}}],["subtract",{"_index":4344,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["subtracting",{"_index":1776,"title":{},"body":{"directives/CalcHeightDirective.html":{}}}],["success",{"_index":79,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/AddActionsAppear.html":{},"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckImplicitFlowAuthenticationStatus.html":{},"classes/ClearCard.html":{},"classes/ClearLightCardSelection.html":{},"classes/CreateUserApplication.html":{},"classes/CreateUserApplicationOnFailure.html":{},"classes/CreateUserApplicationOnSuccess.html":{},"classes/DelayedLightCardUpdate.html":{},"classes/EmptyLightCards.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/HandleUnexpectedError-4.html":{},"classes/HandleUnexpectedError-5.html":{},"classes/HandleUnexpectedError-6.html":{},"classes/ImplicitlyAuthenticated.html":{},"classes/InitAuthStatus.html":{},"classes/LightCardAlreadyUpdated.html":{},"classes/LoadArchivedCard.html":{},"classes/LoadArchivedCardFailure.html":{},"classes/LoadArchivedCardSuccess.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{},"classes/LoadConfig.html":{},"classes/LoadConfigFailure.html":{},"classes/LoadConfigSuccess.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/LoadSettings.html":{},"classes/LoadSettingsFailure.html":{},"classes/LoadSettingsSuccess.html":{},"classes/PatchSettings.html":{},"classes/PatchSettingsFailure.html":{},"classes/PatchSettingsSuccess.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/RemoveLightCard.html":{},"classes/SelectLightCard.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{},"classes/ThirdActionAlreadyLoaded.html":{},"classes/ThirdActionAlreadyUpdated.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"classes/UnAuthenticationFromImplicitFlow.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateAnActionFailure.html":{},"classes/UpdatedSubscription.html":{},"classes/UselessAuthAction.html":{},"classes/UserApplicationNotRegistered.html":{},"classes/UserApplicationRegistered.html":{},"miscellaneous/enumerations.html":{}}}],["success/message",{"_index":2209,"title":{},"body":{"injectables/ConfigEffects.html":{},"injectables/SettingsEffects.html":{}}}],["successful",{"_index":1067,"title":{},"body":{"classes/ArchiveQuerySuccess.html":{},"classes/HandleUnexpectedError.html":{},"injectables/MenuEffects.html":{},"classes/SelectArchivedLightCard.html":{},"classes/SendArchiveQuery.html":{},"classes/UpdateArchiveFilter.html":{},"classes/UpdateArchivePage.html":{},"miscellaneous/enumerations.html":{}}}],["successfully",{"_index":3821,"title":{},"body":{"classes/RefreshTranslation.html":{},"classes/TranslationUpToDate.html":{},"classes/UpdateTranslation.html":{},"classes/UpdateTranslationFailed.html":{},"classes/UpdateTranslationSuccessful.html":{},"miscellaneous/enumerations.html":{}}}],["such",{"_index":1318,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/CustomRouterStateSerializer.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"classes/RouterStateUrl.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["sum",{"_index":1767,"title":{},"body":{"directives/CalcHeightDirective.html":{}}}],["sumfixelemheights",{"_index":1769,"title":{},"body":{"directives/CalcHeightDirective.html":{}}}],["summary",{"_index":1797,"title":{},"body":{"classes/Card.html":{},"classes/Detail.html":{},"classes/LightCard.html":{},"components/TimeLineComponent.html":{},"classes/TimeSpan.html":{}}}],["super",{"_index":2005,"title":{},"body":{"components/CardListComponent.html":{},"classes/DateTimeNgb.html":{},"components/DetailsComponent.html":{}}}],["super(store",{"_index":2772,"title":{},"body":{"components/EmailSettingComponent.html":{},"components/ListSettingComponent.html":{},"components/MultiSettingsComponent.html":{},"components/TextSettingComponent.html":{},"components/TypeAheadSettingsComponent.html":{}}}],["super.computetextvalidators",{"_index":2774,"title":{},"body":{"components/EmailSettingComponent.html":{}}}],["super.ngoninit",{"_index":3490,"title":{},"body":{"components/ListSettingComponent.html":{}}}],["support",{"_index":5044,"title":{},"body":{"modules.html":{}}}],["sure",{"_index":3847,"title":{},"body":{"components/ResizableComponent.html":{}}}],["svg",{"_index":690,"title":{},"body":{"modules/AppModule.html":{},"modules/FeedModule.html":{},"dependencies.html":{},"modules.html":{}}}],["svgpanzoom(document.getelementbyid('${svguid",{"_index":3239,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["swimlane/ngx",{"_index":2936,"title":{},"body":{"modules/FeedModule.html":{},"dependencies.html":{}}}],["switch",{"_index":1408,"title":{},"body":{"classes/AuthObject.html":{},"injectables/AuthenticationEffects.html":{},"interfaces/AuthenticationModeHandler.html":{},"components/CardComponent.html":{},"injectables/CardOperationEffects.html":{},"classes/CheckTokenResponse.html":{},"injectables/HandlebarsService.html":{},"components/IconComponent.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/LightCard.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"injectables/ThirdActionService.html":{},"classes/TimeSpan.html":{},"pipes/XAxisTickFormatPipe.html":{}}}],["switch(operator",{"_index":3229,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["switch_list",{"_index":268,"title":{},"body":{"classes/Action.html":{},"classes/ActionStatus.html":{},"classes/Input.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"miscellaneous/enumerations.html":{}}}],["switchmap",{"_index":928,"title":{},"body":{"injectables/ArchiveEffects.html":{},"classes/AuthObject.html":{},"injectables/AuthenticationEffects.html":{},"interfaces/AuthenticationModeHandler.html":{},"injectables/CardEffects.html":{},"injectables/CardOperationEffects.html":{},"classes/CheckTokenResponse.html":{},"injectables/ConfigEffects.html":{},"injectables/CustomRouterEffects.html":{},"classes/ImplicitAuthenticationHandler.html":{},"injectables/LightCardEffects.html":{},"injectables/MenuEffects.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"injectables/SettingsEffects.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"injectables/TimeEffects.html":{},"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{},"injectables/UserEffects.html":{}}}],["switchmap(([lightcards",{"_index":2033,"title":{},"body":{"injectables/CardOperationEffects.html":{}}}],["switchmap(([payload",{"_index":1505,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["switchmap((action",{"_index":901,"title":{},"body":{"injectables/ArchiveEffects.html":{},"injectables/AuthenticationEffects.html":{},"injectables/LightCardEffects.html":{},"injectables/UserEffects.html":{}}}],["switchmap((action:patchsettings)=>this.service.patchusersettings(action.payload.settings",{"_index":3931,"title":{},"body":{"injectables/SettingsEffects.html":{}}}],["switchmap((af",{"_index":2062,"title":{},"body":{"injectables/CardOperationEffects.html":{}}}],["switchmap((auth",{"_index":1282,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["switchmap((lightcard",{"_index":3455,"title":{},"body":{"injectables/LightCardEffects.html":{}}}],["switchmap((versions",{"_index":4662,"title":{},"body":{"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["switchmap(action",{"_index":1939,"title":{},"body":{"injectables/CardEffects.html":{},"injectables/ConfigEffects.html":{},"injectables/CustomRouterEffects.html":{},"injectables/LightCardEffects.html":{},"injectables/MenuEffects.html":{},"injectables/SettingsEffects.html":{}}}],["switchmap(third",{"_index":4152,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["switchmap(ts",{"_index":4194,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["system",{"_index":148,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"injectables/AuthenticationEffects.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckImplicitFlowAuthenticationStatus.html":{},"classes/ImplicitlyAuthenticated.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"classes/UnAuthenticationFromImplicitFlow.html":{},"classes/UselessAuthAction.html":{}}}],["t",{"_index":3583,"title":{},"body":{"classes/Map.html":{},"classes/Page.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["t.i18nlabelkey",{"_index":4201,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["t.menuentries",{"_index":4197,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["t.version",{"_index":4200,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["tab",{"_index":2683,"title":{},"body":{"components/DetailsComponent.html":{},"components/MenuLinkComponent.html":{}}}],["tab.active",{"_index":2682,"title":{},"body":{"components/DetailsComponent.html":{}}}],["table",{"_index":4815,"title":{},"body":{"components/TypeFilterComponent.html":{}}}],["tabs",{"_index":2689,"title":{},"body":{"components/DetailsComponent.html":{}}}],["taction['buttonstyle",{"_index":252,"title":{},"body":{"classes/Action.html":{},"classes/ActionStatus.html":{},"classes/Input.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{}}}],["taction['contentstyle",{"_index":253,"title":{},"body":{"classes/Action.html":{},"classes/ActionStatus.html":{},"classes/Input.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{}}}],["taction['hidden",{"_index":251,"title":{},"body":{"classes/Action.html":{},"classes/ActionStatus.html":{},"classes/Input.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{}}}],["taction['inputs",{"_index":254,"title":{},"body":{"classes/Action.html":{},"classes/ActionStatus.html":{},"classes/Input.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{}}}],["taction['label",{"_index":245,"title":{},"body":{"classes/Action.html":{},"classes/ActionStatus.html":{},"classes/Input.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{}}}],["taction['lockaction",{"_index":263,"title":{},"body":{"classes/Action.html":{},"classes/ActionStatus.html":{},"classes/Input.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{}}}],["taction['lockcard",{"_index":259,"title":{},"body":{"classes/Action.html":{},"classes/ActionStatus.html":{},"classes/Input.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{}}}],["taction['needsconfirm",{"_index":262,"title":{},"body":{"classes/Action.html":{},"classes/ActionStatus.html":{},"classes/Input.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{}}}],["taction['updatestate",{"_index":260,"title":{},"body":{"classes/Action.html":{},"classes/ActionStatus.html":{},"classes/Input.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{}}}],["taction['updatestatebeforeaction",{"_index":261,"title":{},"body":{"classes/Action.html":{},"classes/ActionStatus.html":{},"classes/Input.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{}}}],["tag",{"_index":2867,"title":{},"body":{"injectables/FeedFiltersEffects.html":{}}}],["tag_filter",{"_index":3045,"title":{},"body":{"injectables/FilterService.html":{},"miscellaneous/enumerations.html":{}}}],["tagfilterform",{"_index":3997,"title":{},"body":{"components/TagsFilterComponent.html":{}}}],["tags",{"_index":417,"title":{},"body":{"components/ActionComponent.html":{},"components/AppComponent.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/ConfirmModalComponent.html":{},"components/CustomLogoComponent.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"injectables/FilterService.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"classes/LightCard.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MenuLinkComponent.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/ResizableComponent.html":{},"components/SettingsComponent.html":{},"interfaces/SettingsInputs.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"classes/TimeSpan.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{}}}],["tagsfiltercomponent",{"_index":416,"title":{"components/TagsFilterComponent.html":{}},"body":{"components/ActionComponent.html":{},"components/AppComponent.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/ConfirmModalComponent.html":{},"components/CustomLogoComponent.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"modules/FeedModule.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MenuLinkComponent.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/ResizableComponent.html":{},"components/SettingsComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"index.html":{}}}],["take",{"_index":230,"title":{},"body":{"classes/Action.html":{},"classes/ActionStatus.html":{},"components/AppComponent.html":{},"injectables/AuthenticationEffects.html":{},"classes/Filter.html":{},"classes/Input.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{}}}],["takes",{"_index":2396,"title":{},"body":{"classes/CustomRouterStateSerializer.html":{},"classes/Filter.html":{},"classes/RouterStateUrl.html":{}}}],["takeuntil",{"_index":1664,"title":{},"body":{"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"injectables/CardOperationEffects.html":{},"components/TagsFilterComponent.html":{},"components/TimeFilterComponent.html":{},"components/TypeFilterComponent.html":{}}}],["takeuntil(this.ngunsubscribe",{"_index":1680,"title":{},"body":{"components/BaseSettingComponent.html":{},"components/TagsFilterComponent.html":{},"components/TimeFilterComponent.html":{},"components/TypeFilterComponent.html":{}}}],["takeuntil(this.ngunsubscribe$)).subscribe",{"_index":4317,"title":{},"body":{"components/TimeFilterComponent.html":{}}}],["takeuntil(this.service.unsubscribe",{"_index":2046,"title":{},"body":{"injectables/CardOperationEffects.html":{}}}],["tap",{"_index":1027,"title":{},"body":{"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"classes/AuthObject.html":{},"injectables/AuthenticationEffects.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"injectables/HandlebarsService.html":{},"classes/ImplicitAuthenticationHandler.html":{},"components/NavbarComponent.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["tap(t",{"_index":4140,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["tap(t=>this.templatecache[key]=t",{"_index":3210,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["tap(this.saveauthenticationinformation",{"_index":1281,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["tap(v=>console.log(\"inittagfilteronloadedsettings",{"_index":2856,"title":{},"body":{"injectables/FeedFiltersEffects.html":{}}}],["tap(v=>console.log(\"loadfeedfilteronauthenticationsuccess",{"_index":2873,"title":{},"body":{"injectables/FeedFiltersEffects.html":{}}}],["team",{"_index":4383,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["tells",{"_index":1494,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["template",{"_index":282,"title":{},"body":{"components/ActionComponent.html":{},"components/AppComponent.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/ConfirmModalComponent.html":{},"components/CustomLogoComponent.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"injectables/HandlebarsService.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MenuLinkComponent.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/ResizableComponent.html":{},"components/SettingsComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{}}}],["templatecache",{"_index":3124,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["templatecache:map",{"_index":3172,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["templatename",{"_index":1804,"title":{},"body":{"classes/Card.html":{},"classes/Detail.html":{},"injectables/HandlebarsService.html":{}}}],["templates",{"_index":196,"title":{},"body":{"classes/Action.html":{},"classes/ActionStatus.html":{},"classes/Input.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{}}}],["templateurl",{"_index":292,"title":{},"body":{"components/ActionComponent.html":{},"components/AppComponent.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/ConfirmModalComponent.html":{},"components/CustomLogoComponent.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MenuLinkComponent.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/ResizableComponent.html":{},"components/SettingsComponent.html":{},"interfaces/SettingsInputs.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{}}}],["templateurl:'icon.component.html",{"_index":3308,"title":{},"body":{"components/IconComponent.html":{}}}],["terminated",{"_index":1382,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["terms",{"_index":336,"title":{},"body":{"components/ActionComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"modules/ArchivesModule.html":{},"modules/ArchivesRoutingModule.html":{},"components/CardComponent.html":{},"components/CardListComponent.html":{},"modules/CardsModule.html":{},"components/CustomLogoComponent.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailsComponent.html":{},"components/FeedComponent.html":{},"modules/FeedModule.html":{},"modules/FeedRoutingModule.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/MenuLinkComponent.html":{},"components/MultiFilterComponent.html":{},"components/NavbarComponent.html":{},"components/ResizableComponent.html":{},"modules/ServicesModule.html":{},"modules/SettingsModule.html":{},"modules/SettingsRoutingModule.html":{},"modules/StateModule.html":{},"components/TagsFilterComponent.html":{},"modules/ThirdpartyModule.html":{},"modules/ThirdpartyRoutingModule.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"modules/UtilitiesModule.html":{}}}],["test",{"_index":85,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckImplicitFlowAuthenticationStatus.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/ImplicitlyAuthenticated.html":{},"classes/InitAuthStatus.html":{},"components/NavbarComponent.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"components/TimeLineComponent.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"classes/UnAuthenticationFromImplicitFlow.html":{},"classes/UselessAuthAction.html":{},"miscellaneous/enumerations.html":{}}}],["test_filter",{"_index":3047,"title":{},"body":{"injectables/FilterService.html":{},"miscellaneous/enumerations.html":{}}}],["text",{"_index":265,"title":{},"body":{"classes/Action.html":{},"components/ActionComponent.html":{},"classes/ActionStatus.html":{},"components/AppComponent.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/ConfirmModalComponent.html":{},"components/CustomLogoComponent.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"directives/DraggableDirective.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"classes/Input.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MenuLinkComponent.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"components/ResizableComponent.html":{},"components/SettingsComponent.html":{},"classes/State.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"miscellaneous/enumerations.html":{}}}],["textsettingcomponent",{"_index":418,"title":{"components/TextSettingComponent.html":{}},"body":{"components/ActionComponent.html":{},"components/AppComponent.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/ConfirmModalComponent.html":{},"components/CustomLogoComponent.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MenuLinkComponent.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/ResizableComponent.html":{},"components/SettingsComponent.html":{},"modules/SettingsModule.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"index.html":{}}}],["textsettingcomponent:22",{"_index":2749,"title":{},"body":{"components/EmailSettingComponent.html":{}}}],["textsettingcomponent:23",{"_index":2748,"title":{},"body":{"components/EmailSettingComponent.html":{}}}],["textsettingcomponent:29",{"_index":2754,"title":{},"body":{"components/EmailSettingComponent.html":{}}}],["textsettingcomponent:36",{"_index":2753,"title":{},"body":{"components/EmailSettingComponent.html":{}}}],["textsettingcomponent:47",{"_index":2756,"title":{},"body":{"components/EmailSettingComponent.html":{}}}],["textsettingcomponent:51",{"_index":2755,"title":{},"body":{"components/EmailSettingComponent.html":{}}}],["that's",{"_index":4184,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["that.time.currenttime().valueof",{"_index":3253,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["then(performpost",{"_index":4088,"title":{},"body":{"injectables/ThirdActionService.html":{}}}],["they're",{"_index":1760,"title":{},"body":{"directives/CalcHeightDirective.html":{}}}],["third",{"_index":193,"title":{"classes/Third.html":{}},"body":{"classes/Action.html":{},"classes/ActionStatus.html":{},"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"components/CardDetailsComponent.html":{},"classes/ClearLightCardSelection.html":{},"injectables/CustomRouterEffects.html":{},"classes/DelayedLightCardUpdate.html":{},"components/DetailComponent.html":{},"classes/EmptyLightCards.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/HandleUnexpectedError-4.html":{},"classes/Input.html":{},"classes/LightCardAlreadyUpdated.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/RemoveLightCard.html":{},"classes/SelectLightCard.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdActionAlreadyLoaded.html":{},"classes/ThirdActionAlreadyUpdated.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateAnActionFailure.html":{},"classes/UpdatedSubscription.html":{},"miscellaneous/enumerations.html":{}}}],["third.extractstate(this.card",{"_index":1923,"title":{},"body":{"components/CardDetailsComponent.html":{},"components/DetailComponent.html":{}}}],["third.menuentries.filter(entry",{"_index":4153,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["third.prototype",{"_index":4142,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["third:string",{"_index":4726,"title":{},"body":{"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["thirdaction",{"_index":482,"title":{},"body":{"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"classes/ClearLightCardSelection.html":{},"classes/DelayedLightCardUpdate.html":{},"classes/EmptyLightCards.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/LightCardAlreadyUpdated.html":{},"injectables/LightCardEffects.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/RemoveLightCard.html":{},"classes/SelectLightCard.html":{},"classes/ThirdActionAlreadyLoaded.html":{},"classes/ThirdActionAlreadyUpdated.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateAnActionFailure.html":{},"classes/UpdatedSubscription.html":{}}}],["thirdactionalreadyloaded",{"_index":510,"title":{"classes/ThirdActionAlreadyLoaded.html":{}},"body":{"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"classes/ClearLightCardSelection.html":{},"classes/DelayedLightCardUpdate.html":{},"classes/EmptyLightCards.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/LightCardAlreadyUpdated.html":{},"injectables/LightCardEffects.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/RemoveLightCard.html":{},"classes/SelectLightCard.html":{},"classes/ThirdActionAlreadyLoaded.html":{},"classes/ThirdActionAlreadyUpdated.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateAnActionFailure.html":{},"classes/UpdatedSubscription.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["thirdactionalreadyupdated",{"_index":512,"title":{"classes/ThirdActionAlreadyUpdated.html":{}},"body":{"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"classes/ClearLightCardSelection.html":{},"classes/DelayedLightCardUpdate.html":{},"classes/EmptyLightCards.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/LightCardAlreadyUpdated.html":{},"injectables/LightCardEffects.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/RemoveLightCard.html":{},"classes/SelectLightCard.html":{},"classes/ThirdActionAlreadyLoaded.html":{},"classes/ThirdActionAlreadyUpdated.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateAnActionFailure.html":{},"classes/UpdatedSubscription.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["thirdactioncomporentmodalreturn",{"_index":2255,"title":{},"body":{"components/ConfirmModalComponent.html":{},"injectables/ThirdActionService.html":{},"miscellaneous/enumerations.html":{}}}],["thirdactioncomporentmodalreturn.cancel",{"_index":4091,"title":{},"body":{"injectables/ThirdActionService.html":{}}}],["thirdactioncomporentmodalreturn.dismiss",{"_index":4093,"title":{},"body":{"injectables/ThirdActionService.html":{}}}],["thirdactionkey",{"_index":3434,"title":{},"body":{"injectables/LightCardEffects.html":{}}}],["thirdactions",{"_index":3439,"title":{},"body":{"injectables/LightCardEffects.html":{}}}],["thirdactions.get(thirdactionkey",{"_index":3441,"title":{},"body":{"injectables/LightCardEffects.html":{}}}],["thirdactions.set(thirdactionkey",{"_index":3446,"title":{},"body":{"injectables/LightCardEffects.html":{}}}],["thirdactionservice",{"_index":243,"title":{"injectables/ThirdActionService.html":{}},"body":{"classes/Action.html":{},"components/ActionComponent.html":{},"classes/ActionStatus.html":{},"classes/Input.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"modules/ServicesModule.html":{},"classes/State.html":{},"classes/Third.html":{},"injectables/ThirdActionService.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"index.html":{}}}],["thirdactionstatus",{"_index":3436,"title":{},"body":{"injectables/LightCardEffects.html":{}}}],["thirdactiontoupdate",{"_index":3440,"title":{},"body":{"injectables/LightCardEffects.html":{}}}],["thirdcache",{"_index":4128,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["thirdmenu",{"_index":213,"title":{"classes/ThirdMenu.html":{}},"body":{"classes/Action.html":{},"classes/ActionStatus.html":{},"classes/HandleUnexpectedError-4.html":{},"classes/Input.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"components/MenuLinkComponent.html":{},"interfaces/MenuState.html":{},"components/NavbarComponent.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"classes/ThirdsServiceMock.html":{},"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["thirdmenu('t1",{"_index":4248,"title":{},"body":{"classes/ThirdsServiceMock.html":{}}}],["thirdmenu('t2",{"_index":4256,"title":{},"body":{"classes/ThirdsServiceMock.html":{}}}],["thirdmenu(t.name",{"_index":4199,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["thirdmenu[]):map",{"_index":4686,"title":{},"body":{"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["thirdmenuentry",{"_index":200,"title":{"classes/ThirdMenuEntry.html":{}},"body":{"classes/Action.html":{},"classes/ActionStatus.html":{},"classes/Input.html":{},"components/MenuLinkComponent.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"classes/ThirdsServiceMock.html":{}}}],["thirdmenuentry('id1",{"_index":4250,"title":{},"body":{"classes/ThirdsServiceMock.html":{}}}],["thirdmenuentry('id2",{"_index":4253,"title":{},"body":{"classes/ThirdsServiceMock.html":{}}}],["thirdmenuentry('id3",{"_index":4258,"title":{},"body":{"classes/ThirdsServiceMock.html":{}}}],["thirdmenuentryid",{"_index":4149,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["thirdmenuid",{"_index":4236,"title":{},"body":{"injectables/ThirdsService.html":{}}}],["thirdmenus",{"_index":3709,"title":{},"body":{"components/NavbarComponent.html":{}}}],["thirdmenuversion",{"_index":4148,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["thirdmenuversion).pipe",{"_index":4151,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["thirdname",{"_index":4238,"title":{},"body":{"injectables/ThirdsService.html":{}}}],["thirdname}.${version",{"_index":4136,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["thirdparty",{"_index":733,"title":{},"body":{"modules/AppRoutingModule.html":{},"injectables/CustomRouterEffects.html":{},"modules/ThirdpartyModule.html":{}}}],["thirdpartymodule",{"_index":4106,"title":{"modules/ThirdpartyModule.html":{}},"body":{"modules/ThirdpartyModule.html":{},"index.html":{},"modules.html":{}}}],["thirdpartyroutingmodule",{"_index":4110,"title":{"modules/ThirdpartyRoutingModule.html":{}},"body":{"modules/ThirdpartyModule.html":{},"modules/ThirdpartyRoutingModule.html":{},"index.html":{},"modules.html":{}}}],["thirds",{"_index":2550,"title":{},"body":{"components/DetailComponent.html":{},"injectables/HandlebarsService.html":{},"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["thirds+version",{"_index":4658,"title":{},"body":{"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["thirds.map(third",{"_index":4644,"title":{},"body":{"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["thirdsandversion",{"_index":4642,"title":{},"body":{"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["thirdsandversion[third",{"_index":4646,"title":{},"body":{"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["thirdsandversions",{"_index":4639,"title":{},"body":{"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["thirdsandversions.foreach(u",{"_index":4690,"title":{},"body":{"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["thirdservice",{"_index":3421,"title":{},"body":{"injectables/LightCardEffects.html":{},"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["thirdsi18nloader",{"_index":4115,"title":{"classes/ThirdsI18nLoader.html":{}},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["thirdsi18nloader(thirdsservice",{"_index":4215,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["thirdsi18nloaderfactory(thirdsservice",{"_index":4214,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["thirdsservice",{"_index":1907,"title":{"injectables/ThirdsService.html":{}},"body":{"components/CardDetailsComponent.html":{},"modules/CardsModule.html":{},"components/DetailComponent.html":{},"injectables/HandlebarsService.html":{},"injectables/LightCardEffects.html":{},"injectables/MenuEffects.html":{},"modules/ServicesModule.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{},"index.html":{}}}],["thirdsservicemock",{"_index":4242,"title":{"classes/ThirdsServiceMock.html":{}},"body":{"classes/ThirdsServiceMock.html":{}}}],["thirdsurl",{"_index":4126,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["thirdswiththeirversions",{"_index":4625,"title":{},"body":{"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["thirparty",{"_index":3092,"title":{},"body":{"classes/HandleUnexpectedError-4.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{}}}],["this._defaultfilters",{"_index":3018,"title":{},"body":{"injectables/FilterService.html":{}}}],["this._description",{"_index":3378,"title":{},"body":{"components/InfoComponent.html":{}}}],["this._filter",{"_index":4009,"title":{},"body":{"components/TagsFilterComponent.html":{},"components/TimeFilterComponent.html":{},"components/TypeFilterComponent.html":{}}}],["this._filter$.pipe(first",{"_index":4316,"title":{},"body":{"components/TimeFilterComponent.html":{}}}],["this._filter$.pipe(first(),takeuntil(this.ngunsubscribe$)).subscribe",{"_index":4014,"title":{},"body":{"components/TagsFilterComponent.html":{},"components/TypeFilterComponent.html":{}}}],["this._filter$.pipe(takeuntil(this.ngunsubscribe$)).subscribe((next",{"_index":4011,"title":{},"body":{"components/TagsFilterComponent.html":{},"components/TimeFilterComponent.html":{},"components/TypeFilterComponent.html":{}}}],["this._htmlcontent",{"_index":2615,"title":{},"body":{"components/DetailComponent.html":{}}}],["this._i18nprefix",{"_index":1847,"title":{},"body":{"components/CardComponent.html":{},"components/DetailsComponent.html":{}}}],["this._locale",{"_index":3194,"title":{},"body":{"injectables/HandlebarsService.html":{},"injectables/I18nService.html":{}}}],["this._modalservice",{"_index":327,"title":{},"body":{"components/ActionComponent.html":{}}}],["this._resizesubject",{"_index":1727,"title":{},"body":{"directives/CalcHeightDirective.html":{}}}],["this._resizesubject$.asobservable().pipe",{"_index":1728,"title":{},"body":{"directives/CalcHeightDirective.html":{}}}],["this._resizesubject$.next",{"_index":1736,"title":{},"body":{"directives/CalcHeightDirective.html":{}}}],["this._selectediframeurl",{"_index":3347,"title":{},"body":{"components/IframeDisplayComponent.html":{}}}],["this._thirdmenus",{"_index":3747,"title":{},"body":{"components/NavbarComponent.html":{}}}],["this._thirdmenus=this.store.select(selectmenustatemenu",{"_index":3731,"title":{},"body":{"components/NavbarComponent.html":{}}}],["this._time",{"_index":3380,"title":{},"body":{"components/InfoComponent.html":{}}}],["this._timezone",{"_index":3284,"title":{},"body":{"injectables/I18nService.html":{}}}],["this._username",{"_index":3376,"title":{},"body":{"components/InfoComponent.html":{}}}],["this.action",{"_index":326,"title":{},"body":{"components/ActionComponent.html":{}}}],["this.actions",{"_index":1500,"title":{},"body":{"injectables/AuthenticationEffects.html":{},"components/CardComponent.html":{},"injectables/CardOperationEffects.html":{},"injectables/ConfigEffects.html":{},"injectables/FeedFiltersEffects.html":{},"injectables/LightCardEffects.html":{},"injectables/MenuEffects.html":{},"injectables/SettingsEffects.html":{},"injectables/TimeEffects.html":{},"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{},"injectables/UserEffects.html":{}}}],["this.actions$.pipe",{"_index":899,"title":{},"body":{"injectables/ArchiveEffects.html":{},"injectables/AuthenticationEffects.html":{},"injectables/CardEffects.html":{},"injectables/CustomRouterEffects.html":{},"injectables/SettingsEffects.html":{}}}],["this.actions$.pipe(oftype(authenticationactiontypes.rejectlogin",{"_index":1557,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["this.actionsappear",{"_index":1865,"title":{},"body":{"components/CardComponent.html":{}}}],["this.actionservice.submit",{"_index":324,"title":{},"body":{"components/ActionComponent.html":{}}}],["this.actionsurlpath",{"_index":1859,"title":{},"body":{"components/CardComponent.html":{}}}],["this.actionurl",{"_index":4069,"title":{},"body":{"injectables/ThirdActionService.html":{}}}],["this.actionurlpath}/${this.action.key",{"_index":323,"title":{},"body":{"components/ActionComponent.html":{}}}],["this.active",{"_index":2996,"title":{},"body":{"classes/Filter.html":{}}}],["this.archiveform",{"_index":987,"title":{},"body":{"components/ArchiveFiltersComponent.html":{}}}],["this.archivesurl",{"_index":2114,"title":{},"body":{"injectables/CardService.html":{}}}],["this.askforoauthaccesstoken",{"_index":1383,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["this.assignconfigurationproperties(oauth2conf",{"_index":1180,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["this.attachaction(button",{"_index":2629,"title":{},"body":{"components/DetailComponent.html":{}}}],["this.authenticationservice.getauthenticationmode().tolowercase",{"_index":1457,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["this.authenticationservice.initandloadauth",{"_index":1458,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["this.authenticationservice.initializeauthentication",{"_index":605,"title":{},"body":{"components/AppComponent.html":{}}}],["this.authenticationservice.linkauthenticationstatus",{"_index":608,"title":{},"body":{"components/AppComponent.html":{}}}],["this.authenticationservice.movetocodeflowloginpage",{"_index":1454,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["this.authenticationservice.movetoimplicitflowloginpage",{"_index":1461,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["this.authmodehandler",{"_index":1181,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["this.authmodehandler.initializeauthentication(window.location.href",{"_index":1419,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["this.authmodehandler.linkauthenticationstatus(linker",{"_index":1421,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["this.authmodehandler.move",{"_index":1423,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["this.authservice.asktokenfromcode(code).pipe",{"_index":1506,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["this.authservice.asktokenfrompassword(payload.username",{"_index":1562,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["this.authservice.checkauthentication(this.authservice.extracttoken",{"_index":1502,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["this.authservice.clearauthenticationinformation",{"_index":1558,"title":{},"body":{"injectables/AuthenticationEffects.html":{},"injectables/UserEffects.html":{}}}],["this.authservice.computeredirecturi",{"_index":1606,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["this.authservice.extractidentificationinformation",{"_index":1518,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["this.authservice.getsecurityheader",{"_index":2131,"title":{},"body":{"injectables/CardService.html":{},"interceptors/TokenInjector.html":{}}}],["this.authservice.isexpirationdateover",{"_index":1516,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["this.authservice.loaduserdata(authinfo",{"_index":1519,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["this.base64",{"_index":2321,"title":{},"body":{"components/CustomLogoComponent.html":{}}}],["this.basesettings",{"_index":1698,"title":{},"body":{"components/BaseSettingComponent.html":{}}}],["this.bindactions(third",{"_index":2620,"title":{},"body":{"components/DetailComponent.html":{}}}],["this.bright",{"_index":3327,"title":{},"body":{"components/IconComponent.html":{}}}],["this.calcheight(this.parentid",{"_index":1731,"title":{},"body":{"directives/CalcHeightDirective.html":{}}}],["this.calcheightclass",{"_index":1733,"title":{},"body":{"directives/CalcHeightDirective.html":{}}}],["this.callmodalandhandleresponse(modalservice",{"_index":4085,"title":{},"body":{"injectables/ThirdActionService.html":{}}}],["this.callmodalifnecessary(lightcardid",{"_index":4101,"title":{},"body":{"injectables/ThirdActionService.html":{}}}],["this.card",{"_index":1918,"title":{},"body":{"components/CardDetailsComponent.html":{},"components/DetailComponent.html":{}}}],["this.card.publisher",{"_index":1928,"title":{},"body":{"components/CardDetailsComponent.html":{},"components/DetailComponent.html":{}}}],["this.card.publisherversion",{"_index":1929,"title":{},"body":{"components/CardDetailsComponent.html":{},"components/DetailComponent.html":{}}}],["this.card.publisherversion).subscribe(third",{"_index":1922,"title":{},"body":{"components/CardDetailsComponent.html":{}}}],["this.cardoperationsurl",{"_index":2110,"title":{},"body":{"injectables/CardService.html":{}}}],["this.cardoperationsurl}&notification=true&rangestart=${minus2hour.valueof()}&rangeend=${plus48hours.valueof",{"_index":2130,"title":{},"body":{"injectables/CardService.html":{}}}],["this.cardservice.unsubscribecardoperation",{"_index":1609,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["this.cardsurl",{"_index":2112,"title":{},"body":{"injectables/CardService.html":{}}}],["this.changelocale(locale",{"_index":3189,"title":{},"body":{"injectables/HandlebarsService.html":{},"injectables/I18nService.html":{}}}],["this.checkifreceivedstatusisdifferentfromcurrentone(action",{"_index":4080,"title":{},"body":{"injectables/ThirdActionService.html":{}}}],["this.clientid",{"_index":1199,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["this.clientsecret",{"_index":1202,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["this.codeprovider",{"_index":3565,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.collectionsize",{"_index":1050,"title":{},"body":{"components/ArchiveListPageComponent.html":{}}}],["this.computedisplayeddates(config",{"_index":1855,"title":{},"body":{"components/CardComponent.html":{}}}],["this.computelistvalidators",{"_index":3491,"title":{},"body":{"components/ListSettingComponent.html":{}}}],["this.computemultivalidators",{"_index":3697,"title":{},"body":{"components/MultiSettingsComponent.html":{}}}],["this.computenowmoment(realnowmoment",{"_index":4542,"title":{},"body":{"classes/TimeReference.html":{}}}],["this.computeredirecturi",{"_index":1268,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["this.computetextvalidators",{"_index":4032,"title":{},"body":{"components/TextSettingComponent.html":{}}}],["this.conf",{"_index":4408,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["this.configloaded",{"_index":613,"title":{},"body":{"components/AppComponent.html":{}}}],["this.configurl",{"_index":2232,"title":{},"body":{"injectables/ConfigService.html":{}}}],["this.confzoom.push(this.domains[domain",{"_index":4451,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["this.consolidatethirdandversions(thirdsandversions",{"_index":4678,"title":{},"body":{"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["this.constructmomentobj([0",{"_index":4354,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["this.constructmomentobj([1",{"_index":4358,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["this.convert(auth",{"_index":1280,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["this.createformgroup",{"_index":4008,"title":{},"body":{"components/TagsFilterComponent.html":{},"components/TimeFilterComponent.html":{},"components/TypeFilterComponent.html":{}}}],["this.currentactionpath",{"_index":322,"title":{},"body":{"components/ActionComponent.html":{}}}],["this.currentpath",{"_index":607,"title":{},"body":{"components/AppComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/NavbarComponent.html":{}}}],["this.currenttimereference",{"_index":4291,"title":{},"body":{"injectables/TimeEffects.html":{}}}],["this.customlogo",{"_index":3737,"title":{},"body":{"components/NavbarComponent.html":{}}}],["this.datetimeform.disable",{"_index":2515,"title":{},"body":{"components/DatetimeFilterComponent.html":{}}}],["this.datetimeform.enable",{"_index":2516,"title":{},"body":{"components/DatetimeFilterComponent.html":{}}}],["this.datetimeform.get('date').valuechanges.subscribe(val",{"_index":2520,"title":{},"body":{"components/DatetimeFilterComponent.html":{}}}],["this.datetimeform.setvalue(val",{"_index":2510,"title":{},"body":{"components/DatetimeFilterComponent.html":{}}}],["this.datetimeform.valid",{"_index":2517,"title":{},"body":{"components/DatetimeFilterComponent.html":{}}}],["this.datetimeform.valuechanges.subscribe(fn",{"_index":2512,"title":{},"body":{"components/DatetimeFilterComponent.html":{}}}],["this.datetodisplay",{"_index":1857,"title":{},"body":{"components/CardComponent.html":{}}}],["this.decodetoken(payload.access_token",{"_index":1339,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["this.default_height",{"_index":2312,"title":{},"body":{"components/CustomLogoComponent.html":{}}}],["this.default_width",{"_index":2314,"title":{},"body":{"components/CustomLogoComponent.html":{}}}],["this.delegateurl",{"_index":1204,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["this.delegateurl}&redirect_uri=${this.computeredirecturi",{"_index":1364,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["this.detail",{"_index":2593,"title":{},"body":{"components/DetailComponent.html":{}}}],["this.detail.styles",{"_index":2594,"title":{},"body":{"components/DetailComponent.html":{}}}],["this.detail.styles.foreach(style",{"_index":2595,"title":{},"body":{"components/DetailComponent.html":{}}}],["this.details",{"_index":1920,"title":{},"body":{"components/CardDetailsComponent.html":{}}}],["this.details.changes.subscribe",{"_index":2679,"title":{},"body":{"components/DetailsComponent.html":{}}}],["this.details.filter((tab",{"_index":2681,"title":{},"body":{"components/DetailsComponent.html":{}}}],["this.details.push(...state.details",{"_index":1924,"title":{},"body":{"components/CardDetailsComponent.html":{}}}],["this.details.toarray().foreach(detail",{"_index":2690,"title":{},"body":{"components/DetailsComponent.html":{}}}],["this.disabled",{"_index":2521,"title":{},"body":{"components/DatetimeFilterComponent.html":{}}}],["this.disableinfos",{"_index":3911,"title":{},"body":{"components/SettingsComponent.html":{},"interfaces/SettingsInputs.html":{}}}],["this.dispalyinfos",{"_index":3914,"title":{},"body":{"components/SettingsComponent.html":{},"interfaces/SettingsInputs.html":{}}}],["this.dispatchappstateactionfromoauth2events(e",{"_index":1397,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["this.dispatchauthactionfromoauthevents",{"_index":1384,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["this.dispatchupdatethirdaction(updatethirdaction",{"_index":4092,"title":{},"body":{"injectables/ThirdActionService.html":{}}}],["this.dispatchupdatethirdaction(updatethirdactionaction",{"_index":4084,"title":{},"body":{"injectables/ThirdActionService.html":{}}}],["this.domains",{"_index":4415,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["this.domsanitizationservice.bypasssecuritytrusturl(this.base64",{"_index":2333,"title":{},"body":{"components/CustomLogoComponent.html":{}}}],["this.dragend.emit(event",{"_index":2732,"title":{},"body":{"directives/DraggableDirective.html":{}}}],["this.dragging",{"_index":2725,"title":{},"body":{"directives/DraggableDirective.html":{}}}],["this.dragmove.emit(event",{"_index":2729,"title":{},"body":{"directives/DraggableDirective.html":{}}}],["this.dragstart.emit(event",{"_index":2726,"title":{},"body":{"directives/DraggableDirective.html":{}}}],["this.el.nativeelement",{"_index":1746,"title":{},"body":{"directives/CalcHeightDirective.html":{}}}],["this.elapsedsofar",{"_index":2884,"title":{},"body":{"injectables/FeedFiltersEffects.html":{}}}],["this.elapsedsofar+tick.payload.elapsedsincelast",{"_index":2882,"title":{},"body":{"injectables/FeedFiltersEffects.html":{}}}],["this.element.nativeelement.getelementsbytagname('button",{"_index":2625,"title":{},"body":{"components/DetailComponent.html":{}}}],["this.element.nativeelement.getelementsbytagname('script",{"_index":2622,"title":{},"body":{"components/DetailComponent.html":{}}}],["this.expandedmenu=new",{"_index":3733,"title":{},"body":{"components/NavbarComponent.html":{}}}],["this.expandedmenu[index]=!this.expandedmenu[index",{"_index":3749,"title":{},"body":{"components/NavbarComponent.html":{}}}],["this.expandedusermenu=!this.expandedusermenu",{"_index":3752,"title":{},"body":{"components/NavbarComponent.html":{}}}],["this.expireclaim",{"_index":1216,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["this.extracti18ntoupdate(versions",{"_index":4663,"title":{},"body":{"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["this.extractparams(child",{"_index":2413,"title":{},"body":{"classes/CustomRouterStateSerializer.html":{},"classes/RouterStateUrl.html":{}}}],["this.extractparams(routerstate.root",{"_index":2407,"title":{},"body":{"classes/CustomRouterStateSerializer.html":{},"classes/RouterStateUrl.html":{}}}],["this.extracttoken",{"_index":1359,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["this.familynameclaim",{"_index":1213,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["this.fetchactionmap(card.publisher",{"_index":4206,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["this.fetchcardoperation(new",{"_index":2129,"title":{},"body":{"injectables/CardService.html":{}}}],["this.fetchthird(thirdname",{"_index":4139,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["this.filterpath",{"_index":3687,"title":{},"body":{"components/MultiFilterComponent.html":{}}}],["this.filterstomap(value",{"_index":1004,"title":{},"body":{"components/ArchiveFiltersComponent.html":{}}}],["this.first",{"_index":994,"title":{},"body":{"components/ArchiveFiltersComponent.html":{},"components/ArchiveListPageComponent.html":{}}}],["this.first$.subscribe(first",{"_index":1008,"title":{},"body":{"components/ArchiveFiltersComponent.html":{}}}],["this.fixedheightclass",{"_index":1732,"title":{},"body":{"directives/CalcHeightDirective.html":{}}}],["this.followclocktick",{"_index":2879,"title":{},"body":{"injectables/FeedFiltersEffects.html":{}}}],["this.form",{"_index":1667,"title":{},"body":{"components/BaseSettingComponent.html":{}}}],["this.form.get('setting').setvalue(value",{"_index":4036,"title":{},"body":{"components/TextSettingComponent.html":{}}}],["this.form.get('setting').setvalue(value,{emitevent:false",{"_index":3699,"title":{},"body":{"components/MultiSettingsComponent.html":{}}}],["this.form.get('setting').setvalue(value?value",{"_index":3496,"title":{},"body":{"components/ListSettingComponent.html":{}}}],["this.form.valuechanges",{"_index":1679,"title":{},"body":{"components/BaseSettingComponent.html":{}}}],["this.format()}t${this.formattime",{"_index":2464,"title":{},"body":{"classes/DateTimeNgb.html":{}}}],["this.formbuilder.group",{"_index":4021,"title":{},"body":{"components/TagsFilterComponent.html":{}}}],["this.funktion",{"_index":2995,"title":{},"body":{"classes/Filter.html":{}}}],["this.funktion(card,this.status",{"_index":3000,"title":{},"body":{"classes/Filter.html":{}}}],["this.getauthenticationmode",{"_index":1425,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["this.getcurrentguid().tostring",{"_index":3062,"title":{},"body":{"classes/GuidService.html":{}}}],["this.getroutepe",{"_index":600,"title":{},"body":{"components/AppComponent.html":{}}}],["this.givennameclaim",{"_index":1210,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["this.guid",{"_index":3060,"title":{},"body":{"classes/GuidService.html":{}}}],["this.guidservice.getcurrentguid",{"_index":1278,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["this.guidservice.getcurrentguidstring",{"_index":2109,"title":{},"body":{"injectables/CardService.html":{}}}],["this.handelactionbuttontext(action.label",{"_index":2642,"title":{},"body":{"components/DetailComponent.html":{}}}],["this.handlebars.executetemplate(this.detail.templatename",{"_index":2613,"title":{},"body":{"components/DetailComponent.html":{}}}],["this.handledate(lightcard.enddate",{"_index":1871,"title":{},"body":{"components/CardComponent.html":{}}}],["this.handledate(lightcard.lttd",{"_index":1866,"title":{},"body":{"components/CardComponent.html":{}}}],["this.handledate(lightcard.publishdate",{"_index":1868,"title":{},"body":{"components/CardComponent.html":{}}}],["this.handledate(lightcard.startdate",{"_index":1870,"title":{},"body":{"components/CardComponent.html":{}}}],["this.handleerrorontokengeneration(errorresponse",{"_index":1511,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["this.handlenewtoken(this.httpclient.post(this.asktokenurl",{"_index":1269,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["this.height",{"_index":2325,"title":{},"body":{"components/CustomLogoComponent.html":{},"components/NavbarComponent.html":{}}}],["this.hide",{"_index":3567,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.hidetags",{"_index":3052,"title":{},"body":{"components/FiltersComponent.html":{},"components/SettingsComponent.html":{},"interfaces/SettingsInputs.html":{}}}],["this.hidetimeline",{"_index":2830,"title":{},"body":{"components/FeedComponent.html":{}}}],["this.hrefsofcsslink.push(safecssurl",{"_index":2605,"title":{},"body":{"components/DetailComponent.html":{}}}],["this.httpclient.get(`${this.actionurl}${currentactionpath}`).pipe",{"_index":4100,"title":{},"body":{"injectables/ThirdActionService.html":{}}}],["this.httpclient.get(`${this.archivesurl}/${id",{"_index":2154,"title":{},"body":{"injectables/CardService.html":{}}}],["this.httpclient.get(`${this.cardsurl}/${id",{"_index":2116,"title":{},"body":{"injectables/CardService.html":{}}}],["this.httpclient.get(`${this.configurl",{"_index":2234,"title":{},"body":{"injectables/ConfigService.html":{}}}],["this.httpclient.get(`${this.thirdsurl}/${publisher",{"_index":4146,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["this.httpclient.get(`${this.thirdsurl}/${publisher}/${process}/${state}/actions",{"_index":4210,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["this.httpclient.get(`${this.thirdsurl}/${publisher}/i18n",{"_index":4188,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["this.httpclient.get(`${this.thirdsurl}/${publisher}/templates/${name",{"_index":4164,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["this.httpclient.get(`${this.thirdsurl}/`).pipe",{"_index":4193,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["this.httpclient.get(`${this.userdataurl}/${auth.identifier",{"_index":1285,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["this.httpclient.get(`${this.usersurl}/users/${this.userid}/settings",{"_index":3966,"title":{},"body":{"injectables/SettingsService.html":{}}}],["this.httpclient.get(`${this.userurl}/users/${user",{"_index":4907,"title":{},"body":{"injectables/UserService.html":{}}}],["this.httpclient.get>(`${this.archivesurl",{"_index":2162,"title":{},"body":{"injectables/CardService.html":{}}}],["this.httpclient.patch(`${this.usersurl}/users/${this.userid}/settings",{"_index":3968,"title":{},"body":{"injectables/SettingsService.html":{}}}],["this.httpclient.post",{"_index":2153,"title":{},"body":{"injectables/CardService.html":{}}}],["this.httpclient.post(`${this.actionurl}${currentactionpath",{"_index":4078,"title":{},"body":{"injectables/ThirdActionService.html":{}}}],["this.httpclient.post(this.checktokenurl",{"_index":1245,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["this.httpclient.put(`${this.userurl}/users/${userdata.login",{"_index":4909,"title":{},"body":{"injectables/UserService.html":{}}}],["this.iconpath",{"_index":3317,"title":{},"body":{"components/IconComponent.html":{}}}],["this.implicitconf",{"_index":1224,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["this.initfilters",{"_index":3019,"title":{},"body":{"injectables/FilterService.html":{}}}],["this.initformgroup",{"_index":1668,"title":{},"body":{"components/BaseSettingComponent.html":{}}}],["this.initializehandlebarstemplates",{"_index":2586,"title":{},"body":{"components/DetailComponent.html":{}}}],["this.initializehrefsofcsslink",{"_index":2585,"title":{},"body":{"components/DetailComponent.html":{}}}],["this.inittagfilter",{"_index":3042,"title":{},"body":{"injectables/FilterService.html":{}}}],["this.inittimefilter",{"_index":3040,"title":{},"body":{"injectables/FilterService.html":{}}}],["this.inittypefilter",{"_index":3038,"title":{},"body":{"injectables/FilterService.html":{}}}],["this.instantiateauthmodehandler(this.mode",{"_index":1182,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["this.instantiateimplicitflowconfiguration",{"_index":1190,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["this.isauthenticated",{"_index":609,"title":{},"body":{"components/AppComponent.html":{}}}],["this.isequal(forma",{"_index":1683,"title":{},"body":{"components/BaseSettingComponent.html":{}}}],["this.issupported(window",{"_index":3782,"title":{},"body":{"injectables/NotifyService.html":{}}}],["this.isvirtualtimeundefine",{"_index":4549,"title":{},"body":{"classes/TimeReference.html":{}}}],["this.lightcard",{"_index":1846,"title":{},"body":{"components/CardComponent.html":{}}}],["this.lightcard.actions",{"_index":1880,"title":{},"body":{"components/CardComponent.html":{}}}],["this.lightcard.id",{"_index":1875,"title":{},"body":{"components/CardComponent.html":{}}}],["this.lightcardid",{"_index":325,"title":{},"body":{"components/ActionComponent.html":{}}}],["this.lightcards",{"_index":1089,"title":{},"body":{"components/ArchivesComponent.html":{},"components/FeedComponent.html":{},"components/TimeLineComponent.html":{}}}],["this.lightcards$.pipe(debouncetime(300",{"_index":4455,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["this.limitsize",{"_index":2327,"title":{},"body":{"components/CustomLogoComponent.html":{},"components/NavbarComponent.html":{}}}],["this.loaduserdata(auth",{"_index":1283,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["this.locales",{"_index":3906,"title":{},"body":{"components/SettingsComponent.html":{},"interfaces/SettingsInputs.html":{}}}],["this.loginclaim",{"_index":1206,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["this.loginmessage",{"_index":3562,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.max_height",{"_index":2316,"title":{},"body":{"components/CustomLogoComponent.html":{}}}],["this.max_width",{"_index":2317,"title":{},"body":{"components/CustomLogoComponent.html":{}}}],["this.maxedretries",{"_index":617,"title":{},"body":{"components/AppComponent.html":{}}}],["this.menusopeninboth",{"_index":3627,"title":{},"body":{"components/MenuLinkComponent.html":{}}}],["this.menusopeniniframes",{"_index":3623,"title":{},"body":{"components/MenuLinkComponent.html":{}}}],["this.menusopenintabs",{"_index":3621,"title":{},"body":{"components/MenuLinkComponent.html":{}}}],["this.modal.close(thirdactioncomporentmodalreturn.ok",{"_index":2253,"title":{},"body":{"components/ConfirmModalComponent.html":{}}}],["this.modal.dismiss(thirdactioncomporentmodalreturn.cancel",{"_index":2254,"title":{},"body":{"components/ConfirmModalComponent.html":{}}}],["this.modal.dismiss(thirdactioncomporentmodalreturn.dismiss",{"_index":2252,"title":{},"body":{"components/ConfirmModalComponent.html":{}}}],["this.mode",{"_index":1219,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["this.mousewheelfunc(event",{"_index":3667,"title":{},"body":{"directives/MouseWheelDirective.html":{}}}],["this.mousewheelup.emit(event",{"_index":3678,"title":{},"body":{"directives/MouseWheelDirective.html":{}}}],["this.ngunsubscribe$.complete",{"_index":1693,"title":{},"body":{"components/BaseSettingComponent.html":{},"components/TagsFilterComponent.html":{},"components/TimeFilterComponent.html":{},"components/TypeFilterComponent.html":{}}}],["this.ngunsubscribe$.next",{"_index":1692,"title":{},"body":{"components/BaseSettingComponent.html":{},"components/TagsFilterComponent.html":{},"components/TimeFilterComponent.html":{},"components/TypeFilterComponent.html":{}}}],["this.ngunsubscribe.complete",{"_index":1884,"title":{},"body":{"components/CardComponent.html":{}}}],["this.ngunsubscribe.next",{"_index":1883,"title":{},"body":{"components/CardComponent.html":{}}}],["this.notifyservice.createnotification(`new",{"_index":2137,"title":{},"body":{"injectables/CardService.html":{}}}],["this.notifyservice.requestpermission",{"_index":2843,"title":{},"body":{"components/FeedComponent.html":{}}}],["this.oauthservice.configure(this.implicitconf",{"_index":1366,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["this.oauthservice.events",{"_index":1375,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["this.oauthservice.events.subscribe(e",{"_index":1396,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["this.oauthservice.getaccesstoken",{"_index":1399,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["this.oauthservice.getidentityclaims",{"_index":1402,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["this.oauthservice.hasvalidaccesstoken",{"_index":1373,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["this.oauthservice.initimplicitflow",{"_index":1369,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["this.oauthservice.loaddiscoverydocument",{"_index":1367,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["this.oauthservice.logout",{"_index":1315,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["this.oauthservice.setupautomaticsilentrefresh",{"_index":1371,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["this.oauthservice.tokenvalidationhandler",{"_index":1372,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["this.oauthservice.trylogin",{"_index":1350,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["this.onchanges",{"_index":2509,"title":{},"body":{"components/DatetimeFilterComponent.html":{}}}],["this.ontouched",{"_index":2513,"title":{},"body":{"components/DatetimeFilterComponent.html":{}}}],["this.parentform",{"_index":3686,"title":{},"body":{"components/MultiFilterComponent.html":{}}}],["this.pattern",{"_index":4034,"title":{},"body":{"components/TextSettingComponent.html":{}}}],["this.periodstarttoend(domain7dayconf",{"_index":4364,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["this.periodstarttoend(domainmonthconf",{"_index":4374,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["this.periodstarttoend(domainweekconf",{"_index":4369,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["this.periodstarttoend(domainyearconf",{"_index":4379,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["this.permission",{"_index":3784,"title":{},"body":{"injectables/NotifyService.html":{}}}],["this.placeholder",{"_index":1686,"title":{},"body":{"components/BaseSettingComponent.html":{}}}],["this.postactionandupdateifnecessary(lightcardid",{"_index":4098,"title":{},"body":{"injectables/ThirdActionService.html":{}}}],["this.preparedlist",{"_index":3480,"title":{},"body":{"components/ListSettingComponent.html":{},"components/MultiFilterComponent.html":{}}}],["this.preparedlist.map(e=>e.value).indexof(control.value",{"_index":3501,"title":{},"body":{"components/ListSettingComponent.html":{}}}],["this.preparedlist.push",{"_index":3487,"title":{},"body":{"components/ListSettingComponent.html":{},"components/MultiFilterComponent.html":{}}}],["this.preparedlist.push({value",{"_index":3482,"title":{},"body":{"components/ListSettingComponent.html":{},"components/MultiFilterComponent.html":{}}}],["this.processes",{"_index":990,"title":{},"body":{"components/ArchiveFiltersComponent.html":{}}}],["this.processes[card.process",{"_index":204,"title":{},"body":{"classes/Action.html":{},"classes/ActionStatus.html":{},"classes/Input.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{}}}],["this.querytemplate(context.card.publisher,context.card.publisherversion,templatename).pipe",{"_index":3199,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["this.querythird(card.publisher",{"_index":4133,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["this.querythird(thirdmenuid",{"_index":4150,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["this.referencetime",{"_index":4546,"title":{},"body":{"classes/TimeReference.html":{}}}],["this.refreshthreshold",{"_index":2885,"title":{},"body":{"injectables/FeedFiltersEffects.html":{}}}],["this.registerarrayatindex",{"_index":3181,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["this.registerarrayatindexlength",{"_index":3184,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["this.registerbool",{"_index":3185,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["this.registercardaction",{"_index":3176,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["this.registerdateformat",{"_index":3175,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["this.registeri18n",{"_index":3178,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["this.registerjson",{"_index":3187,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["this.registermath",{"_index":3182,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["this.registernow",{"_index":3186,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["this.registernumberformat",{"_index":3174,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["this.registerpreservespace",{"_index":3173,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["this.registerslice",{"_index":3180,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["this.registersort",{"_index":3179,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["this.registersplit",{"_index":3183,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["this.registersvg",{"_index":3177,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["this.reinsertscripts",{"_index":2619,"title":{},"body":{"components/DetailComponent.html":{}}}],["this.requiredfield",{"_index":3494,"title":{},"body":{"components/ListSettingComponent.html":{},"components/MultiSettingsComponent.html":{},"components/TextSettingComponent.html":{}}}],["this.resetstate",{"_index":1574,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["this.resized",{"_index":3864,"title":{},"body":{"components/ResizableComponent.html":{}}}],["this.retryconfigurationloading",{"_index":2222,"title":{},"body":{"injectables/ConfigEffects.html":{}}}],["this.retrydelay",{"_index":2221,"title":{},"body":{"injectables/ConfigEffects.html":{}}}],["this.router.navigate",{"_index":1874,"title":{},"body":{"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"injectables/MenuEffects.html":{}}}],["this.router.navigate(['/login",{"_index":1491,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["this.sanitizer.bypasssecuritytrusthtml(html",{"_index":2616,"title":{},"body":{"components/DetailComponent.html":{}}}],["this.sanitizer.bypasssecuritytrustresourceurl(cssurl",{"_index":2604,"title":{},"body":{"components/DetailComponent.html":{}}}],["this.sanitizer.bypasssecuritytrustresourceurl(iframeurl",{"_index":3348,"title":{},"body":{"components/IframeDisplayComponent.html":{}}}],["this.selectdetail(this.details.first",{"_index":2687,"title":{},"body":{"components/DetailsComponent.html":{}}}],["this.selection",{"_index":1091,"title":{},"body":{"components/ArchivesComponent.html":{},"components/FeedComponent.html":{}}}],["this.service.computethirdsmenu",{"_index":3589,"title":{},"body":{"injectables/MenuEffects.html":{}}}],["this.service.fetcharchivedcards(new",{"_index":905,"title":{},"body":{"injectables/ArchiveEffects.html":{}}}],["this.service.fetchconfiguration",{"_index":2203,"title":{},"body":{"injectables/ConfigEffects.html":{}}}],["this.service.fetchtimereferences().pipe",{"_index":4279,"title":{},"body":{"injectables/TimeEffects.html":{}}}],["this.service.fetchusersettings",{"_index":3923,"title":{},"body":{"injectables/SettingsEffects.html":{}}}],["this.service.getcardoperation",{"_index":2045,"title":{},"body":{"injectables/CardOperationEffects.html":{}}}],["this.service.isauthmodecodeorimplicitflow",{"_index":3558,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.service.loadarchivedcard(action.payload.id",{"_index":1940,"title":{},"body":{"injectables/CardEffects.html":{}}}],["this.service.loadcard(action.payload.id",{"_index":1947,"title":{},"body":{"injectables/CardEffects.html":{}}}],["this.service.move",{"_index":3574,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.service.pulsate",{"_index":4275,"title":{},"body":{"injectables/TimeEffects.html":{}}}],["this.service.querymenuentryurl(action.payload.menu_id",{"_index":3595,"title":{},"body":{"injectables/MenuEffects.html":{}}}],["this.service.updatecardsubscriptionwithdates(af.payload.status.start",{"_index":2063,"title":{},"body":{"injectables/CardOperationEffects.html":{}}}],["this.setheightandwidth",{"_index":2328,"title":{},"body":{"components/CustomLogoComponent.html":{}}}],["this.setsize",{"_index":3319,"title":{},"body":{"components/IconComponent.html":{}}}],["this.setsprites",{"_index":3320,"title":{},"body":{"components/IconComponent.html":{}}}],["this.setting",{"_index":1673,"title":{},"body":{"components/BaseSettingComponent.html":{}}}],["this.setting$.subscribe(next",{"_index":1676,"title":{},"body":{"components/BaseSettingComponent.html":{}}}],["this.settitle(data",{"_index":623,"title":{},"body":{"components/AppComponent.html":{}}}],["this.size",{"_index":992,"title":{},"body":{"components/ArchiveFiltersComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/IconComponent.html":{}}}],["this.size$.subscribe(size",{"_index":1005,"title":{},"body":{"components/ArchiveFiltersComponent.html":{}}}],["this.sizeicon",{"_index":3321,"title":{},"body":{"components/IconComponent.html":{}}}],["this.speed",{"_index":4556,"title":{},"body":{"classes/TimeReference.html":{}}}],["this.sprites='sprites",{"_index":3328,"title":{},"body":{"components/IconComponent.html":{}}}],["this.sprites='sprites.svg",{"_index":3330,"title":{},"body":{"components/IconComponent.html":{}}}],["this.status",{"_index":2997,"title":{},"body":{"classes/Filter.html":{}}}],["this.storage.getitem('access_token",{"_index":1460,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["this.store",{"_index":610,"title":{},"body":{"components/AppComponent.html":{},"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["this.store.dispatch",{"_index":1447,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"components/TagsFilterComponent.html":{},"components/TimeFilterComponent.html":{},"components/TypeFilterComponent.html":{}}}],["this.store.dispatch(new",{"_index":618,"title":{},"body":{"components/AppComponent.html":{},"injectables/ArchiveEffects.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListPageComponent.html":{},"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"injectables/CardEffects.html":{},"components/CardListComponent.html":{},"injectables/CardOperationEffects.html":{},"classes/CheckTokenResponse.html":{},"injectables/ConfigEffects.html":{},"classes/ImplicitAuthenticationHandler.html":{},"components/LoginComponent.html":{},"injectables/MenuEffects.html":{},"components/NavbarComponent.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"components/TimeLineComponent.html":{},"injectables/UserEffects.html":{}}}],["this.store.dispatch(updatethirdaction",{"_index":4102,"title":{},"body":{"injectables/ThirdActionService.html":{}}}],["this.store.pipe",{"_index":1051,"title":{},"body":{"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"components/FeedComponent.html":{}}}],["this.store.pipe(select(buildconfigselector('feed.timeline.domains",{"_index":4447,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["this.store.pipe(select(feedselectors.selectfeed",{"_index":4452,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["this.store.pipe(select(selectcurrenturl)).subscribe(url",{"_index":606,"title":{},"body":{"components/AppComponent.html":{}}}],["this.store.pipe(select(selectexpirationtime",{"_index":1451,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["this.store.pipe(select(selectisimplicitlyauthenticated)).subscribe(linker",{"_index":1459,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["this.store.pipe(select(selectrouterstate",{"_index":601,"title":{},"body":{"components/AppComponent.html":{}}}],["this.store.select(buildconfigselector('archive.filters.page.first",{"_index":995,"title":{},"body":{"components/ArchiveFiltersComponent.html":{},"components/ArchiveListPageComponent.html":{}}}],["this.store.select(buildconfigselector('archive.filters.page.size",{"_index":993,"title":{},"body":{"components/ArchiveFiltersComponent.html":{},"components/ArchiveListPageComponent.html":{}}}],["this.store.select(buildconfigselector('archive.filters.process.list",{"_index":991,"title":{},"body":{"components/ArchiveFiltersComponent.html":{}}}],["this.store.select(buildconfigselector('archive.filters.tags.list",{"_index":989,"title":{},"body":{"components/ArchiveFiltersComponent.html":{}}}],["this.store.select(buildconfigselector('feed.card.time.display",{"_index":1853,"title":{},"body":{"components/CardComponent.html":{}}}],["this.store.select(buildconfigselector('feed.notify')).subscribe",{"_index":2841,"title":{},"body":{"components/FeedComponent.html":{}}}],["this.store.select(buildconfigselector('feed.timefilter.followclocktick')).subscribe(x",{"_index":2912,"title":{},"body":{"injectables/FeedFiltersEffects.html":{}}}],["this.store.select(buildconfigselector('feed.timeline.hide')).subscribe",{"_index":2829,"title":{},"body":{"components/FeedComponent.html":{}}}],["this.store.select(buildconfigselector('i10n.supported.time",{"_index":3909,"title":{},"body":{"components/SettingsComponent.html":{},"interfaces/SettingsInputs.html":{}}}],["this.store.select(buildconfigselector('i18n.supported.locales",{"_index":3907,"title":{},"body":{"components/SettingsComponent.html":{},"interfaces/SettingsInputs.html":{}}}],["this.store.select(buildconfigselector('logo.base64')).subscribe",{"_index":3736,"title":{},"body":{"components/NavbarComponent.html":{}}}],["this.store.select(buildconfigselector('logo.height')).subscribe",{"_index":3739,"title":{},"body":{"components/NavbarComponent.html":{}}}],["this.store.select(buildconfigselector('logo.limitsize')).subscribe",{"_index":3741,"title":{},"body":{"components/NavbarComponent.html":{}}}],["this.store.select(buildconfigselector('logo.width')).subscribe",{"_index":3740,"title":{},"body":{"components/NavbarComponent.html":{}}}],["this.store.select(buildconfigselector('navbar.thirdmenus.type",{"_index":3618,"title":{},"body":{"components/MenuLinkComponent.html":{}}}],["this.store.select(buildconfigselector('security.oauth2.flow.provider",{"_index":3563,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.store.select(buildconfigselector('security.provider",{"_index":1602,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["this.store.select(buildconfigselector('settings.infos')).subscribe((d",{"_index":3913,"title":{},"body":{"components/SettingsComponent.html":{},"interfaces/SettingsInputs.html":{}}}],["this.store.select(buildconfigselector('settings.infos.disable",{"_index":3912,"title":{},"body":{"components/SettingsComponent.html":{},"interfaces/SettingsInputs.html":{}}}],["this.store.select(buildconfigselector('settings.tags.hide",{"_index":3053,"title":{},"body":{"components/FiltersComponent.html":{},"components/SettingsComponent.html":{},"interfaces/SettingsInputs.html":{}}}],["this.store.select(buildconfigselector('title",{"_index":620,"title":{},"body":{"components/AppComponent.html":{}}}],["this.store.select(buildconfigselector(`settings.${this.settingpath",{"_index":1687,"title":{},"body":{"components/BaseSettingComponent.html":{}}}],["this.store.select(buildfilterselector(filtertype.tag_filter",{"_index":4010,"title":{},"body":{"components/TagsFilterComponent.html":{}}}],["this.store.select(buildfilterselector(filtertype.time_filter",{"_index":4298,"title":{},"body":{"components/TimeFilterComponent.html":{}}}],["this.store.select(buildfilterselector(filtertype.type_filter",{"_index":4789,"title":{},"body":{"components/TypeFilterComponent.html":{}}}],["this.store.select(buildsettingsorconfigselector('locale",{"_index":3280,"title":{},"body":{"injectables/I18nService.html":{},"components/InfoComponent.html":{}}}],["this.store.select(buildsettingsorconfigselector('locale')).subscribe(locale",{"_index":3188,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["this.store.select(buildsettingsorconfigselector('timezone",{"_index":3281,"title":{},"body":{"injectables/I18nService.html":{},"components/InfoComponent.html":{}}}],["this.store.select(buildsettingsselector('description",{"_index":3379,"title":{},"body":{"components/InfoComponent.html":{}}}],["this.store.select(buildsettingsselector(this.settingpath",{"_index":1674,"title":{},"body":{"components/BaseSettingComponent.html":{}}}],["this.store.select(cardselectors.selectcardstateselected",{"_index":1916,"title":{},"body":{"components/CardDetailsComponent.html":{}}}],["this.store.select(feedselectors.selectlightcardselection",{"_index":2828,"title":{},"body":{"components/FeedComponent.html":{}}}],["this.store.select(fetchlightcard(lightcardid",{"_index":3454,"title":{},"body":{"injectables/LightCardEffects.html":{}}}],["this.store.select(fetchlightcard(lightcardid)).pipe",{"_index":3438,"title":{},"body":{"injectables/LightCardEffects.html":{}}}],["this.store.select(fetchlightcard(receivedcard.id)).pipe",{"_index":3426,"title":{},"body":{"injectables/LightCardEffects.html":{}}}],["this.store.select(selectarchivelightcardselection",{"_index":1092,"title":{},"body":{"components/ArchivesComponent.html":{}}}],["this.store.select(selectauthenticationstate).subscribe(authstate",{"_index":2587,"title":{},"body":{"components/DetailComponent.html":{}}}],["this.store.select(selectcardactionsappearstate).subscribe(d",{"_index":1861,"title":{},"body":{"components/CardComponent.html":{}}}],["this.store.select(selectcurrentdate",{"_index":3381,"title":{},"body":{"components/InfoComponent.html":{}}}],["this.store.select(selectcurrenturl).subscribe(url",{"_index":1849,"title":{},"body":{"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/NavbarComponent.html":{}}}],["this.store.select(selecti18nuploaded).pipe",{"_index":4667,"title":{},"body":{"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["this.store.select(selectidentifier",{"_index":1688,"title":{},"body":{"components/BaseSettingComponent.html":{}}}],["this.store.select(selectidentifier).subscribe(id=>this.userid=id",{"_index":3965,"title":{},"body":{"injectables/SettingsService.html":{}}}],["this.store.select(selectmenustateselectediframeurl).subscribe",{"_index":3345,"title":{},"body":{"components/IframeDisplayComponent.html":{}}}],["this.store.select(selectmessage).pipe(filter(m",{"_index":3559,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.store.select(selecttimereference).subscribe",{"_index":4290,"title":{},"body":{"injectables/TimeEffects.html":{}}}],["this.store.select(selectusernameoridentifier",{"_index":3377,"title":{},"body":{"components/InfoComponent.html":{}}}],["this.subscription",{"_index":4454,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["this.subscription.unsubscribe",{"_index":4506,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["this.tagfilterform",{"_index":4007,"title":{},"body":{"components/TagsFilterComponent.html":{}}}],["this.tagfilterform.get('tags').setvalue",{"_index":4013,"title":{},"body":{"components/TagsFilterComponent.html":{}}}],["this.tagfilterform.get('tags').setvalue(next.active?next.status.tags",{"_index":4012,"title":{},"body":{"components/TagsFilterComponent.html":{}}}],["this.tags",{"_index":988,"title":{},"body":{"components/ArchiveFiltersComponent.html":{}}}],["this.templatecache[key",{"_index":3205,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["this.thirdcache.get(key",{"_index":4137,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["this.thirdcache.set(key",{"_index":4143,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["this.thirds.computethirdcssurl(publisher",{"_index":2597,"title":{},"body":{"components/DetailComponent.html":{}}}],["this.thirds.fetchhbstemplate(publisher,version,name,locale).pipe",{"_index":3208,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["this.thirdservice.askfori18njson(publisher",{"_index":4649,"title":{},"body":{"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["this.thirdservice.fetchactionmapfromlightcard(lightcard",{"_index":3457,"title":{},"body":{"injectables/LightCardEffects.html":{}}}],["this.thirdsservice.querythird(this.card.publisher",{"_index":1921,"title":{},"body":{"components/CardDetailsComponent.html":{}}}],["this.thirdsurl",{"_index":4130,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["this.time",{"_index":2460,"title":{},"body":{"classes/DateTimeNgb.html":{},"components/DatetimeFilterComponent.html":{}}}],["this.time.formatdatetime(timestamp",{"_index":1872,"title":{},"body":{"components/CardComponent.html":{}}}],["this.timefilterform",{"_index":4297,"title":{},"body":{"components/TimeFilterComponent.html":{}}}],["this.timefilterform.get('end').setvalue(null",{"_index":4313,"title":{},"body":{"components/TimeFilterComponent.html":{}}}],["this.timefilterform.get('end').setvalue(this.timeservice.asinputstring(next.status.end",{"_index":4312,"title":{},"body":{"components/TimeFilterComponent.html":{}}}],["this.timefilterform.get('end').value",{"_index":4315,"title":{},"body":{"components/TimeFilterComponent.html":{}}}],["this.timefilterform.get('start').setvalue(null",{"_index":4308,"title":{},"body":{"components/TimeFilterComponent.html":{}}}],["this.timefilterform.get('start').setvalue(this.timeservice.asinputstring(next.status.start",{"_index":4307,"title":{},"body":{"components/TimeFilterComponent.html":{}}}],["this.timefilterform.get('start').value",{"_index":4314,"title":{},"body":{"components/TimeFilterComponent.html":{}}}],["this.timeservice.formattime(moment(values[0",{"_index":3383,"title":{},"body":{"components/InfoComponent.html":{}}}],["this.timeservice.parsestring(form.end).valueof",{"_index":4321,"title":{},"body":{"components/TimeFilterComponent.html":{}}}],["this.timeservice.parsestring(form.start).valueof",{"_index":4320,"title":{},"body":{"components/TimeFilterComponent.html":{}}}],["this.timeservice.parsestring(this.timefilterform.get('end').value).valueof",{"_index":4309,"title":{},"body":{"components/TimeFilterComponent.html":{}}}],["this.timeservice.parsestring(this.timefilterform.get('start').value).valueof",{"_index":4304,"title":{},"body":{"components/TimeFilterComponent.html":{}}}],["this.timeservice.predefinedformat(date",{"_index":4945,"title":{},"body":{"pipes/XAxisTickFormatPipe.html":{}}}],["this.timeservice.tongbtimestamp(datestring",{"_index":1002,"title":{},"body":{"components/ArchiveFiltersComponent.html":{}}}],["this.timezones",{"_index":3908,"title":{},"body":{"components/SettingsComponent.html":{},"interfaces/SettingsInputs.html":{}}}],["this.title",{"_index":621,"title":{},"body":{"components/AppComponent.html":{}}}],["this.titleservice.settitle(newtitle",{"_index":602,"title":{},"body":{"components/AppComponent.html":{}}}],["this.transformactionmaptoarray",{"_index":1879,"title":{},"body":{"components/CardComponent.html":{}}}],["this.translate.currentlang",{"_index":4631,"title":{},"body":{"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["this.translate.getlangs",{"_index":4636,"title":{},"body":{"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["this.translate.instant(`${this.card.publisher}.${this.card.publisherversion}.${label.key",{"_index":2651,"title":{},"body":{"components/DetailComponent.html":{}}}],["this.translate.settranslation(locale",{"_index":4651,"title":{},"body":{"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["this.translate.use(action.payload.language",{"_index":4654,"title":{},"body":{"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["this.translate.use(this._locale",{"_index":3197,"title":{},"body":{"injectables/HandlebarsService.html":{},"injectables/I18nService.html":{}}}],["this.translateservice.get(v.label.key",{"_index":3488,"title":{},"body":{"components/ListSettingComponent.html":{},"components/MultiFilterComponent.html":{}}}],["this.typefilterform",{"_index":4788,"title":{},"body":{"components/TypeFilterComponent.html":{}}}],["this.typefilterform.get('action').setvalue(!next.active",{"_index":4792,"title":{},"body":{"components/TypeFilterComponent.html":{}}}],["this.typefilterform.get('action').setvalue(true,{emitevent",{"_index":4799,"title":{},"body":{"components/TypeFilterComponent.html":{}}}],["this.typefilterform.get('alarm').setvalue(!next.active",{"_index":4790,"title":{},"body":{"components/TypeFilterComponent.html":{}}}],["this.typefilterform.get('alarm').setvalue(true,{emitevent",{"_index":4798,"title":{},"body":{"components/TypeFilterComponent.html":{}}}],["this.typefilterform.get('compliant').setvalue(!next.active",{"_index":4794,"title":{},"body":{"components/TypeFilterComponent.html":{}}}],["this.typefilterform.get('compliant').setvalue(true,{emitevent",{"_index":4800,"title":{},"body":{"components/TypeFilterComponent.html":{}}}],["this.typefilterform.get('information').setvalue(!next.active",{"_index":4796,"title":{},"body":{"components/TypeFilterComponent.html":{}}}],["this.typefilterform.get('information').setvalue(true,{emitevent",{"_index":4801,"title":{},"body":{"components/TypeFilterComponent.html":{}}}],["this.unsubscribe$.next",{"_index":2134,"title":{},"body":{"injectables/CardService.html":{}}}],["this.updateasync",{"_index":2678,"title":{},"body":{"components/DetailsComponent.html":{}}}],["this.updatevalue(next",{"_index":1677,"title":{},"body":{"components/BaseSettingComponent.html":{}}}],["this.urlcleaner",{"_index":4129,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["this.urlcleaner.encodevalue(`${this.thirdsurl}/${publisher}/css/${stylename",{"_index":4171,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["this.usecodeorimplicitflow",{"_index":3557,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.usercontext",{"_index":2588,"title":{},"body":{"components/DetailComponent.html":{}}}],["this.userform",{"_index":3568,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.userform.get('identifier').value",{"_index":3570,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.userform.get('password').value",{"_index":3571,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.userform.reset",{"_index":3573,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.userform.valid",{"_index":3569,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.userservice.askcreateuser(user",{"_index":4879,"title":{},"body":{"injectables/UserEffects.html":{}}}],["this.userservice.askuserapplicationregistered(userpayload.identifier",{"_index":4864,"title":{},"body":{"injectables/UserEffects.html":{}}}],["this.usersurl",{"_index":3963,"title":{},"body":{"injectables/SettingsService.html":{}}}],["this.userurl",{"_index":4905,"title":{},"body":{"injectables/UserService.html":{}}}],["this.values",{"_index":3481,"title":{},"body":{"components/ListSettingComponent.html":{},"components/MultiFilterComponent.html":{}}}],["this.verifyexpirationdate",{"_index":1311,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["this.virtualtime",{"_index":4563,"title":{},"body":{"classes/TimeReference.html":{}}}],["this.width",{"_index":2326,"title":{},"body":{"components/CustomLogoComponent.html":{},"components/NavbarComponent.html":{}}}],["those",{"_index":1951,"title":{},"body":{"injectables/CardEffects.html":{},"injectables/ConfigEffects.html":{},"injectables/SettingsEffects.html":{}}}],["threshold",{"_index":2889,"title":{},"body":{"injectables/FeedFiltersEffects.html":{}}}],["throught",{"_index":4874,"title":{},"body":{"injectables/UserEffects.html":{}}}],["throw",{"_index":1670,"title":{},"body":{"components/BaseSettingComponent.html":{},"modules/ServicesModule.html":{}}}],["throwerror",{"_index":1136,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["throwerror('the",{"_index":1258,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["throwerror(err",{"_index":4159,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["throwerror(error",{"_index":1251,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["throwerror(new",{"_index":4156,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["thrown",{"_index":1232,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["thus",{"_index":149,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckImplicitFlowAuthenticationStatus.html":{},"classes/ImplicitlyAuthenticated.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"classes/UnAuthenticationFromImplicitFlow.html":{},"classes/UselessAuthAction.html":{}}}],["tick",{"_index":2795,"title":{"classes/Tick.html":{}},"body":{"classes/FailToUpdateTimeReference.html":{},"injectables/FeedFiltersEffects.html":{},"modules/FeedModule.html":{},"classes/Tick.html":{},"classes/TickPayload.html":{},"injectables/TimeEffects.html":{},"classes/UpdateTimeReference.html":{},"pipes/XAxisTickFormatPipe.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["tick(pulse",{"_index":4277,"title":{},"body":{"injectables/TimeEffects.html":{}}}],["tick='[time",{"_index":2794,"title":{},"body":{"classes/FailToUpdateTimeReference.html":{},"classes/Tick.html":{},"classes/TickPayload.html":{},"classes/UpdateTimeReference.html":{}}}],["tickpayload",{"_index":2808,"title":{"classes/TickPayload.html":{}},"body":{"classes/FailToUpdateTimeReference.html":{},"classes/Tick.html":{},"classes/TickPayload.html":{},"classes/UpdateTimeReference.html":{}}}],["ticks",{"_index":4935,"title":{},"body":{"pipes/XAxisTickFormatPipe.html":{}}}],["ticks15minconf",{"_index":4404,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["ticks30minconf",{"_index":4406,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["ticks4hoursconf",{"_index":4400,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["ticksconf",{"_index":4426,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["ticksdayconf",{"_index":4401,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["tickshalfmonthconf",{"_index":4402,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["time",{"_index":420,"title":{},"body":{"components/ActionComponent.html":{},"components/AppComponent.html":{},"interfaces/AppState.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"classes/CheckTokenResponse.html":{},"components/ConfirmModalComponent.html":{},"components/CustomLogoComponent.html":{},"classes/CustomRouterStateSerializer.html":{},"classes/DateTimeNgb.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"classes/FailToUpdateTimeReference.html":{},"components/FeedComponent.html":{},"injectables/FeedFiltersEffects.html":{},"components/FiltersComponent.html":{},"injectables/HandlebarsService.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"classes/ImplicitAuthenticationHandler.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MenuLinkComponent.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"components/ResizableComponent.html":{},"classes/RouterStateUrl.html":{},"components/SettingsComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"classes/Tick.html":{},"classes/TickPayload.html":{},"injectables/TimeEffects.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"classes/TimeReference.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"classes/UpdateTimeReference.html":{},"injectables/UserEffects.html":{},"miscellaneous/enumerations.html":{}}}],["time$|async",{"_index":3386,"title":{},"body":{"components/InfoComponent.html":{}}}],["time's",{"_index":4346,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["time).formatdatetime",{"_index":986,"title":{},"body":{"components/ArchiveFiltersComponent.html":{}}}],["time_filter",{"_index":3046,"title":{},"body":{"injectables/FilterService.html":{},"miscellaneous/enumerations.html":{}}}],["timeactions",{"_index":2815,"title":{},"body":{"classes/FailToUpdateTimeReference.html":{},"classes/Tick.html":{},"classes/TickPayload.html":{},"classes/UpdateTimeReference.html":{},"miscellaneous/typealiases.html":{}}}],["timeactiontypes",{"_index":2793,"title":{},"body":{"classes/FailToUpdateTimeReference.html":{},"injectables/FeedFiltersEffects.html":{},"classes/Tick.html":{},"classes/TickPayload.html":{},"classes/UpdateTimeReference.html":{},"miscellaneous/enumerations.html":{}}}],["timeactiontypes.failtoupdatetimereference",{"_index":2789,"title":{},"body":{"classes/FailToUpdateTimeReference.html":{},"classes/Tick.html":{},"classes/TickPayload.html":{},"classes/UpdateTimeReference.html":{}}}],["timeactiontypes.tick",{"_index":4265,"title":{},"body":{"classes/Tick.html":{}}}],["timeactiontypes.updatetimereference",{"_index":4835,"title":{},"body":{"classes/UpdateTimeReference.html":{}}}],["timeeffects",{"_index":852,"title":{"injectables/TimeEffects.html":{}},"body":{"interfaces/AppState.html":{},"injectables/TimeEffects.html":{}}}],["timefiltercomponent",{"_index":419,"title":{"components/TimeFilterComponent.html":{}},"body":{"components/ActionComponent.html":{},"components/AppComponent.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/ConfirmModalComponent.html":{},"components/CustomLogoComponent.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"modules/FeedModule.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MenuLinkComponent.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/ResizableComponent.html":{},"components/SettingsComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"index.html":{}}}],["timefilterform",{"_index":4292,"title":{},"body":{"components/TimeFilterComponent.html":{}}}],["timeformat",{"_index":3916,"title":{},"body":{"components/SettingsComponent.html":{},"interfaces/SettingsInputs.html":{}}}],["timeinitialstate",{"_index":4579,"title":{},"body":{"interfaces/TimeState.html":{}}}],["timeline",{"_index":381,"title":{},"body":{"components/ActionComponent.html":{},"components/AppComponent.html":{},"interfaces/AppState.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/ConfirmModalComponent.html":{},"components/CustomLogoComponent.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"modules/FeedModule.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"classes/InitTimeline.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MenuLinkComponent.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/ResizableComponent.html":{},"classes/SetCardDataTimeline.html":{},"components/SettingsComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"interfaces/TimelineState.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"miscellaneous/enumerations.html":{}}}],["timelineactions",{"_index":3404,"title":{},"body":{"classes/InitTimeline.html":{},"classes/SetCardDataTimeline.html":{},"miscellaneous/typealiases.html":{}}}],["timelineactiontypes",{"_index":3399,"title":{},"body":{"classes/InitTimeline.html":{},"classes/SetCardDataTimeline.html":{},"miscellaneous/enumerations.html":{}}}],["timelineactiontypes.inittimeline",{"_index":3398,"title":{},"body":{"classes/InitTimeline.html":{},"classes/SetCardDataTimeline.html":{}}}],["timelineactiontypes.setcarddatatimeline",{"_index":3402,"title":{},"body":{"classes/InitTimeline.html":{},"classes/SetCardDataTimeline.html":{}}}],["timelinecomponent",{"_index":421,"title":{"components/TimeLineComponent.html":{}},"body":{"components/ActionComponent.html":{},"components/AppComponent.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/ConfirmModalComponent.html":{},"components/CustomLogoComponent.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"modules/FeedModule.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MenuLinkComponent.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/ResizableComponent.html":{},"components/SettingsComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"index.html":{}}}],["timelineinitialstate",{"_index":4587,"title":{},"body":{"interfaces/TimelineState.html":{}}}],["timelinereducer",{"_index":814,"title":{},"body":{"interfaces/AppState.html":{}}}],["timelinestate",{"_index":791,"title":{"interfaces/TimelineState.html":{}},"body":{"interfaces/AppState.html":{},"interfaces/TimelineState.html":{}}}],["timer",{"_index":1661,"title":{},"body":{"components/BaseSettingComponent.html":{},"components/TagsFilterComponent.html":{},"components/TimeFilterComponent.html":{},"components/TypeFilterComponent.html":{}}}],["timer(500",{"_index":1684,"title":{},"body":{"components/BaseSettingComponent.html":{},"components/TagsFilterComponent.html":{},"components/TimeFilterComponent.html":{},"components/TypeFilterComponent.html":{}}}],["timereducer",{"_index":827,"title":{},"body":{"interfaces/AppState.html":{}}}],["timeref",{"_index":4282,"title":{},"body":{"injectables/TimeEffects.html":{}}}],["timereference",{"_index":2790,"title":{"classes/TimeReference.html":{}},"body":{"classes/FailToUpdateTimeReference.html":{},"classes/Tick.html":{},"classes/TickPayload.html":{},"injectables/TimeEffects.html":{},"classes/TimeReference.html":{},"interfaces/TimeState.html":{},"classes/UpdateTimeReference.html":{}}}],["timereference(null,null,null,timespeed.x1",{"_index":4573,"title":{},"body":{"classes/TimeReference.html":{}}}],["timereference:neutraltimereference",{"_index":4580,"title":{},"body":{"interfaces/TimeState.html":{}}}],["times",{"_index":1930,"title":{},"body":{"components/CardDetailsComponent.html":{},"components/ConfirmModalComponent.html":{}}}],["timescale",{"_index":4586,"title":{},"body":{"interfaces/TimelineState.html":{}}}],["timeservice",{"_index":950,"title":{},"body":{"components/ArchiveFiltersComponent.html":{},"components/CardComponent.html":{},"injectables/CardService.html":{},"modules/FeedModule.html":{},"injectables/HandlebarsService.html":{},"components/InfoComponent.html":{},"modules/ServicesModule.html":{},"injectables/TimeEffects.html":{},"components/TimeFilterComponent.html":{},"pipes/XAxisTickFormatPipe.html":{},"index.html":{}}}],["timespan",{"_index":2805,"title":{"classes/TimeSpan.html":{}},"body":{"classes/FailToUpdateTimeReference.html":{},"classes/LightCard.html":{},"classes/Tick.html":{},"classes/TickPayload.html":{},"classes/TimeSpan.html":{},"classes/UpdateTimeReference.html":{}}}],["timespans",{"_index":3408,"title":{},"body":{"classes/LightCard.html":{},"classes/TimeSpan.html":{}}}],["timespeed",{"_index":4516,"title":{},"body":{"classes/TimeReference.html":{},"miscellaneous/enumerations.html":{}}}],["timespeed.x1",{"_index":4548,"title":{},"body":{"classes/TimeReference.html":{}}}],["timespeed[value",{"_index":4535,"title":{},"body":{"classes/TimeReference.html":{}}}],["timestamp",{"_index":1829,"title":{},"body":{"components/CardComponent.html":{}}}],["timestampnow",{"_index":4521,"title":{},"body":{"classes/TimeReference.html":{}}}],["timestate",{"_index":790,"title":{"interfaces/TimeState.html":{}},"body":{"interfaces/AppState.html":{},"interfaces/TimeState.html":{}}}],["timestruct",{"_index":2455,"title":{},"body":{"classes/DateTimeNgb.html":{}}}],["timezone",{"_index":2792,"title":{},"body":{"classes/FailToUpdateTimeReference.html":{},"injectables/I18nService.html":{},"components/SettingsComponent.html":{},"interfaces/SettingsInputs.html":{},"classes/Tick.html":{},"classes/TickPayload.html":{},"classes/TimeReference.html":{},"interfaces/TimeState.html":{},"classes/UpdateTimeReference.html":{},"dependencies.html":{}}}],["timezones",{"_index":3898,"title":{},"body":{"components/SettingsComponent.html":{},"interfaces/SettingsInputs.html":{}}}],["title",{"_index":554,"title":{},"body":{"components/AppComponent.html":{},"classes/Card.html":{},"components/CardComponent.html":{},"classes/Detail.html":{},"classes/LightCard.html":{},"injectables/NotifyService.html":{},"classes/TimeSpan.html":{}}}],["titleposition",{"_index":1800,"title":{},"body":{"classes/Card.html":{},"classes/Detail.html":{},"miscellaneous/enumerations.html":{}}}],["titleservice",{"_index":558,"title":{},"body":{"components/AppComponent.html":{}}}],["titlestyle",{"_index":1803,"title":{},"body":{"classes/Card.html":{},"classes/Detail.html":{}}}],["tlabel1",{"_index":4249,"title":{},"body":{"classes/ThirdsServiceMock.html":{}}}],["tlabel2",{"_index":4257,"title":{},"body":{"classes/ThirdsServiceMock.html":{}}}],["tmenu.id}}.{{tmenu.version}}.{{tmenu.label",{"_index":3759,"title":{},"body":{"components/NavbarComponent.html":{}}}],["tmp",{"_index":2158,"title":{},"body":{"injectables/CardService.html":{},"components/TimeLineComponent.html":{}}}],["tmpmoment",{"_index":4495,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["tmpmoment.date(2",{"_index":4497,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["todo",{"_index":87,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/Action.html":{},"classes/ActionStatus.html":{},"modules/AppRoutingModule.html":{},"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckImplicitFlowAuthenticationStatus.html":{},"classes/CheckTokenResponse.html":{},"injectables/HandlebarsService.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/ImplicitlyAuthenticated.html":{},"classes/InitAuthStatus.html":{},"classes/Input.html":{},"classes/ParameterListItem.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/Process.html":{},"classes/RejectLogIn.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"classes/UnAuthenticationFromImplicitFlow.html":{},"classes/UselessAuthAction.html":{},"modules/UtilitiesModule.html":{}}}],["toggle",{"_index":4025,"title":{},"body":{"components/TagsFilterComponent.html":{},"components/TypeAheadSettingsComponent.html":{}}}],["togglemenu",{"_index":3707,"title":{},"body":{"components/NavbarComponent.html":{}}}],["togglemenu(index",{"_index":3713,"title":{},"body":{"components/NavbarComponent.html":{}}}],["togglemenu(index:number",{"_index":3748,"title":{},"body":{"components/NavbarComponent.html":{}}}],["toggleusermenu",{"_index":3708,"title":{},"body":{"components/NavbarComponent.html":{}}}],["tointeger(dateparts[0",{"_index":2441,"title":{},"body":{"classes/DateTimeNgb.html":{}}}],["tointeger(dateparts[1",{"_index":2445,"title":{},"body":{"classes/DateTimeNgb.html":{}}}],["tointeger(dateparts[2",{"_index":2448,"title":{},"body":{"classes/DateTimeNgb.html":{}}}],["tointeger(value",{"_index":2431,"title":{},"body":{"classes/DateTimeNgb.html":{}}}],["token",{"_index":102,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/AuthObject.html":{},"interfaces/AuthState.html":{},"injectables/AuthenticationEffects.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckImplicitFlowAuthenticationStatus.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/ImplicitlyAuthenticated.html":{},"classes/InitAuthStatus.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"classes/UnAuthenticationFromImplicitFlow.html":{},"classes/UselessAuthAction.html":{},"classes/UserContext.html":{},"injectables/UserEffects.html":{},"miscellaneous/enumerations.html":{}}}],["token:string",{"_index":4856,"title":{},"body":{"classes/UserContext.html":{}}}],["token_error",{"_index":1412,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["token_received",{"_index":1410,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["tokeninjector",{"_index":3882,"title":{"interceptors/TokenInjector.html":{}},"body":{"modules/ServicesModule.html":{},"interceptors/TokenInjector.html":{},"index.html":{}}}],["total",{"_index":1777,"title":{},"body":{"directives/CalcHeightDirective.html":{}}}],["totalelements",{"_index":3789,"title":{},"body":{"classes/Page.html":{}}}],["totalpages",{"_index":3791,"title":{},"body":{"classes/Page.html":{}}}],["tr",{"_index":4429,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["trace",{"_index":568,"title":{},"body":{"components/AppComponent.html":{}}}],["transform",{"_index":2454,"title":{},"body":{"classes/DateTimeNgb.html":{},"pipes/XAxisTickFormatPipe.html":{}}}],["transform(value",{"_index":4924,"title":{},"body":{"pipes/XAxisTickFormatPipe.html":{}}}],["transformactionmaptoarray",{"_index":1815,"title":{},"body":{"components/CardComponent.html":{}}}],["transformadvanced",{"_index":4930,"title":{},"body":{"pipes/XAxisTickFormatPipe.html":{}}}],["transformadvanced(value",{"_index":4931,"title":{},"body":{"pipes/XAxisTickFormatPipe.html":{}}}],["transformhovered",{"_index":4938,"title":{},"body":{"pipes/XAxisTickFormatPipe.html":{}}}],["transformhovered(value",{"_index":4939,"title":{},"body":{"pipes/XAxisTickFormatPipe.html":{}}}],["transformtotimestamp",{"_index":984,"title":{},"body":{"components/ArchiveFiltersComponent.html":{}}}],["transformtotimestamp(date",{"_index":1000,"title":{},"body":{"components/ArchiveFiltersComponent.html":{}}}],["transition",{"_index":4892,"title":{},"body":{"injectables/UserEffects.html":{}}}],["transition2createuserapplication",{"_index":4859,"title":{},"body":{"injectables/UserEffects.html":{}}}],["transition2userapplicationregistered",{"_index":4860,"title":{},"body":{"injectables/UserEffects.html":{}}}],["transitionalthirdwithitsversion",{"_index":4611,"title":{"classes/TransitionalThirdWithItSVersion.html":{}},"body":{"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["transitionalthirdwithitsversion(card.publisher,card.publisherversion",{"_index":4677,"title":{},"body":{"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["transitionalthirdwithitsversion(menu.id,menu.version",{"_index":4688,"title":{},"body":{"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["translate",{"_index":1819,"title":{},"body":{"components/CardComponent.html":{},"components/DetailComponent.html":{},"injectables/HandlebarsService.html":{},"injectables/I18nService.html":{},"components/NavbarComponent.html":{},"classes/RefreshTranslation.html":{},"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{},"classes/TranslationUpToDate.html":{},"classes/UpdateTranslation.html":{},"classes/UpdateTranslationFailed.html":{},"classes/UpdateTranslationSuccessful.html":{},"miscellaneous/enumerations.html":{}}}],["translate.config",{"_index":684,"title":{},"body":{"modules/AppModule.html":{}}}],["translate/core",{"_index":682,"title":{},"body":{"modules/AppModule.html":{},"modules/ArchivesModule.html":{},"components/CardComponent.html":{},"modules/CardsModule.html":{},"components/DetailComponent.html":{},"modules/FeedModule.html":{},"injectables/HandlebarsService.html":{},"injectables/I18nService.html":{},"components/ListSettingComponent.html":{},"components/MultiFilterComponent.html":{},"modules/SettingsModule.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{},"dependencies.html":{}}}],["translate/http",{"_index":4992,"title":{},"body":{"dependencies.html":{}}}],["translateactions",{"_index":3833,"title":{},"body":{"classes/RefreshTranslation.html":{},"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{},"classes/TranslationUpToDate.html":{},"classes/UpdateTranslation.html":{},"classes/UpdateTranslationFailed.html":{},"classes/UpdateTranslationSuccessful.html":{},"miscellaneous/typealiases.html":{}}}],["translateactionstypes",{"_index":3818,"title":{},"body":{"classes/RefreshTranslation.html":{},"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{},"classes/TranslationUpToDate.html":{},"classes/UpdateTranslation.html":{},"classes/UpdateTranslationFailed.html":{},"classes/UpdateTranslationSuccessful.html":{},"miscellaneous/enumerations.html":{}}}],["translateactionstypes.refreshtranslation",{"_index":3816,"title":{},"body":{"classes/RefreshTranslation.html":{},"classes/TranslationUpToDate.html":{},"classes/UpdateTranslation.html":{},"classes/UpdateTranslationFailed.html":{},"classes/UpdateTranslationSuccessful.html":{}}}],["translateactionstypes.translationuptodate",{"_index":3829,"title":{},"body":{"classes/RefreshTranslation.html":{},"classes/TranslationUpToDate.html":{},"classes/UpdateTranslation.html":{},"classes/UpdateTranslationFailed.html":{},"classes/UpdateTranslationSuccessful.html":{}}}],["translateactionstypes.updatetranslation",{"_index":3827,"title":{},"body":{"classes/RefreshTranslation.html":{},"classes/TranslationUpToDate.html":{},"classes/UpdateTranslation.html":{},"classes/UpdateTranslationFailed.html":{},"classes/UpdateTranslationSuccessful.html":{}}}],["translateactionstypes.updatetranslationfailed",{"_index":3832,"title":{},"body":{"classes/RefreshTranslation.html":{},"classes/TranslationUpToDate.html":{},"classes/UpdateTranslation.html":{},"classes/UpdateTranslationFailed.html":{},"classes/UpdateTranslationSuccessful.html":{}}}],["translateactionstypes.updatetranslationsuccessful",{"_index":3830,"title":{},"body":{"classes/RefreshTranslation.html":{},"classes/TranslationUpToDate.html":{},"classes/UpdateTranslation.html":{},"classes/UpdateTranslationFailed.html":{},"classes/UpdateTranslationSuccessful.html":{}}}],["translateconfig",{"_index":683,"title":{},"body":{"modules/AppModule.html":{}}}],["translateeffects",{"_index":864,"title":{"injectables/TranslateEffects.html":{}},"body":{"interfaces/AppState.html":{},"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["translateeffects.extractpublisherassociatedwithdistinctversionsfromcards(cards",{"_index":4660,"title":{},"body":{"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["translateeffects.extractthirdtoupdate(versions",{"_index":4669,"title":{},"body":{"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["translateeffects.sendtranslateaction(publisherandversion",{"_index":4665,"title":{},"body":{"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["translateloader",{"_index":4117,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["translatemodule",{"_index":680,"title":{},"body":{"modules/AppModule.html":{},"modules/ArchivesModule.html":{},"modules/CardsModule.html":{},"modules/FeedModule.html":{},"modules/SettingsModule.html":{}}}],["translatemodule.forroot(translateconfig",{"_index":713,"title":{},"body":{"modules/AppModule.html":{}}}],["translateservice",{"_index":1820,"title":{},"body":{"components/CardComponent.html":{},"components/DetailComponent.html":{},"injectables/HandlebarsService.html":{},"injectables/I18nService.html":{},"components/ListSettingComponent.html":{},"components/MultiFilterComponent.html":{},"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["translateservice,private",{"_index":3279,"title":{},"body":{"injectables/I18nService.html":{}}}],["translation",{"_index":781,"title":{},"body":{"interfaces/AppState.html":{},"classes/RefreshTranslation.html":{},"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{},"classes/TranslationUpToDate.html":{},"classes/UpdateTranslation.html":{},"classes/UpdateTranslationFailed.html":{},"classes/UpdateTranslationSuccessful.html":{},"miscellaneous/enumerations.html":{}}}],["translationinitialstate",{"_index":4756,"title":{},"body":{"interfaces/TranslationState.html":{}}}],["translationreducer",{"_index":862,"title":{},"body":{"interfaces/AppState.html":{}}}],["translationreferencestoupdate",{"_index":4702,"title":{},"body":{"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["translationreferencestoupdate[publisher",{"_index":4706,"title":{},"body":{"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["translationreferencestoupdate[third",{"_index":4719,"title":{},"body":{"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["translationstate",{"_index":792,"title":{"interfaces/TranslationState.html":{}},"body":{"interfaces/AppState.html":{},"interfaces/TranslationState.html":{}}}],["translationuptodate",{"_index":3824,"title":{"classes/TranslationUpToDate.html":{}},"body":{"classes/RefreshTranslation.html":{},"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{},"classes/TranslationUpToDate.html":{},"classes/UpdateTranslation.html":{},"classes/UpdateTranslationFailed.html":{},"classes/UpdateTranslationSuccessful.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["transorm",{"_index":956,"title":{},"body":{"components/ArchiveFiltersComponent.html":{}}}],["tree",{"_index":285,"title":{},"body":{"components/ActionComponent.html":{},"components/AppComponent.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/ConfirmModalComponent.html":{},"components/CustomLogoComponent.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MenuLinkComponent.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/ResizableComponent.html":{},"components/SettingsComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{}}}],["tries",{"_index":3602,"title":{},"body":{"injectables/MenuEffects.html":{}}}],["trigger",{"_index":563,"title":{},"body":{"components/AppComponent.html":{},"injectables/CardOperationEffects.html":{},"components/ResizableComponent.html":{},"components/TimeFilterComponent.html":{}}}],["triggered",{"_index":2369,"title":{},"body":{"injectables/CustomRouterEffects.html":{},"classes/HandleUnexpectedError-4.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{}}}],["triggered.\\naction",{"_index":2645,"title":{},"body":{"components/DetailComponent.html":{}}}],["triggers",{"_index":1545,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["true",{"_index":983,"title":{},"body":{"components/ArchiveFiltersComponent.html":{},"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"components/CardComponent.html":{},"classes/CheckTokenResponse.html":{},"components/CustomLogoComponent.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailsComponent.html":{},"directives/DraggableDirective.html":{},"injectables/FeedFiltersEffects.html":{},"classes/Filter.html":{},"injectables/FilterService.html":{},"injectables/HandlebarsService.html":{},"classes/ImplicitAuthenticationHandler.html":{},"components/LoginComponent.html":{},"components/MenuLinkComponent.html":{},"components/NavbarComponent.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"components/ResizableComponent.html":{},"modules/ServicesModule.html":{},"components/TimeLineComponent.html":{},"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["try",{"_index":74,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"injectables/CardService.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckImplicitFlowAuthenticationStatus.html":{},"classes/CheckTokenResponse.html":{},"classes/FailToUpdateTimeReference.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/ImplicitlyAuthenticated.html":{},"classes/InitAuthStatus.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/Tick.html":{},"classes/TickPayload.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"classes/UnAuthenticationFromImplicitFlow.html":{},"classes/UpdateTimeReference.html":{},"classes/UselessAuthAction.html":{},"miscellaneous/enumerations.html":{}}}],["trying",{"_index":1671,"title":{},"body":{"components/BaseSettingComponent.html":{},"components/CardDetailsComponent.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["trylogout",{"_index":1499,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["trytologin",{"_index":19,"title":{"classes/TryToLogIn.html":{}},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"injectables/AuthenticationEffects.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckImplicitFlowAuthenticationStatus.html":{},"classes/ImplicitlyAuthenticated.html":{},"classes/InitAuthStatus.html":{},"components/LoginComponent.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"classes/UnAuthenticationFromImplicitFlow.html":{},"classes/UselessAuthAction.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["trytologin({username",{"_index":3572,"title":{},"body":{"components/LoginComponent.html":{}}}],["trytologout",{"_index":75,"title":{"classes/TryToLogOut.html":{}},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"injectables/AuthenticationEffects.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckImplicitFlowAuthenticationStatus.html":{},"classes/ImplicitlyAuthenticated.html":{},"classes/InitAuthStatus.html":{},"components/NavbarComponent.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"classes/UnAuthenticationFromImplicitFlow.html":{},"classes/UselessAuthAction.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["tslib",{"_index":5012,"title":{},"body":{"dependencies.html":{}}}],["two",{"_index":2963,"title":{},"body":{"classes/Filter.html":{},"components/TimeLineComponent.html":{}}}],["type",{"_index":32,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/Action.html":{},"components/ActionComponent.html":{},"classes/ActionStatus.html":{},"classes/AddActionsAppear.html":{},"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"components/AppComponent.html":{},"interfaces/AppState.html":{},"classes/ApplyFilter.html":{},"injectables/ArchiveEffects.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"classes/ArchiveQuerySuccess.html":{},"interfaces/ArchiveState.html":{},"components/ArchivesComponent.html":{},"classes/AuthObject.html":{},"interfaces/AuthState.html":{},"injectables/AuthenticationEffects.html":{},"interfaces/AuthenticationModeHandler.html":{},"components/BaseSettingComponent.html":{},"directives/CalcHeightDirective.html":{},"classes/Card.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"injectables/CardEffects.html":{},"interfaces/CardFeedState.html":{},"components/CardListComponent.html":{},"classes/CardOperation.html":{},"injectables/CardOperationEffects.html":{},"injectables/CardService.html":{},"interfaces/CardState.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckImplicitFlowAuthenticationStatus.html":{},"classes/CheckTokenResponse.html":{},"classes/ClearCard.html":{},"classes/ClearLightCardSelection.html":{},"injectables/ConfigEffects.html":{},"injectables/ConfigService.html":{},"interfaces/ConfigState.html":{},"components/ConfirmModalComponent.html":{},"classes/CreateUserApplication.html":{},"classes/CreateUserApplicationOnFailure.html":{},"classes/CreateUserApplicationOnSuccess.html":{},"components/CustomLogoComponent.html":{},"injectables/CustomRouterEffects.html":{},"classes/CustomRouterStateSerializer.html":{},"classes/DateTimeNgb.html":{},"components/DatetimeFilterComponent.html":{},"classes/DelayedLightCardUpdate.html":{},"classes/Detail.html":{},"components/DetailComponent.html":{},"classes/DetailContext.html":{},"components/DetailsComponent.html":{},"directives/DraggableDirective.html":{},"components/EmailSettingComponent.html":{},"classes/EmptyLightCards.html":{},"classes/FailToUpdateTimeReference.html":{},"components/FeedComponent.html":{},"injectables/FeedFiltersEffects.html":{},"modules/FeedModule.html":{},"classes/Filter.html":{},"components/FiltersComponent.html":{},"classes/GuidService.html":{},"classes/HandleUnexpectedError.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/HandleUnexpectedError-4.html":{},"classes/HandleUnexpectedError-5.html":{},"classes/HandleUnexpectedError-6.html":{},"injectables/HandlebarsService.html":{},"classes/I18n.html":{},"injectables/I18nService.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/ImplicitlyAuthenticated.html":{},"components/InfoComponent.html":{},"classes/InitAuthStatus.html":{},"classes/InitFilters.html":{},"classes/InitTimeline.html":{},"classes/Input.html":{},"classes/LightCard.html":{},"classes/LightCardAlreadyUpdated.html":{},"injectables/LightCardEffects.html":{},"components/ListSettingComponent.html":{},"classes/LoadArchivedCard.html":{},"classes/LoadArchivedCardFailure.html":{},"classes/LoadArchivedCardSuccess.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{},"classes/LoadConfig.html":{},"classes/LoadConfigFailure.html":{},"classes/LoadConfigSuccess.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/LoadSettings.html":{},"classes/LoadSettingsFailure.html":{},"classes/LoadSettingsSuccess.html":{},"components/LoginComponent.html":{},"injectables/MenuEffects.html":{},"components/MenuLinkComponent.html":{},"interfaces/MenuState.html":{},"classes/Message.html":{},"directives/MouseWheelDirective.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"injectables/NotifyService.html":{},"classes/Page.html":{},"classes/ParameterListItem.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"classes/PatchSettings.html":{},"classes/PatchSettingsFailure.html":{},"classes/PatchSettingsSuccess.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/Process.html":{},"classes/RefreshTranslation.html":{},"classes/RejectLogIn.html":{},"classes/RemoveLightCard.html":{},"components/ResizableComponent.html":{},"classes/RouterStateUrl.html":{},"classes/SelectArchivedLightCard.html":{},"classes/SelectLightCard.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{},"classes/SendArchiveQuery.html":{},"classes/SetCardDataTimeline.html":{},"components/SettingsComponent.html":{},"injectables/SettingsEffects.html":{},"interfaces/SettingsInputs.html":{},"modules/SettingsModule.html":{},"injectables/SettingsService.html":{},"interfaces/SettingsState.html":{},"classes/State.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"classes/Third.html":{},"classes/ThirdActionAlreadyLoaded.html":{},"classes/ThirdActionAlreadyUpdated.html":{},"injectables/ThirdActionService.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"classes/Tick.html":{},"classes/TickPayload.html":{},"injectables/TimeEffects.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"classes/TimeReference.html":{},"classes/TimeSpan.html":{},"interfaces/TimeState.html":{},"interfaces/TimelineState.html":{},"interceptors/TokenInjector.html":{},"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{},"interfaces/TranslationState.html":{},"classes/TranslationUpToDate.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"classes/UnAuthenticationFromImplicitFlow.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateAnActionFailure.html":{},"classes/UpdateArchiveFilter.html":{},"classes/UpdateArchivePage.html":{},"classes/UpdateTimeReference.html":{},"classes/UpdateTranslation.html":{},"classes/UpdateTranslationFailed.html":{},"classes/UpdateTranslationSuccessful.html":{},"classes/UpdatedSubscription.html":{},"classes/UselessAuthAction.html":{},"classes/User.html":{},"classes/UserApplicationNotRegistered.html":{},"classes/UserApplicationRegistered.html":{},"classes/UserContext.html":{},"injectables/UserEffects.html":{},"injectables/UserService.html":{},"interfaces/UserState.html":{},"pipes/XAxisTickFormatPipe.html":{},"dependencies.html":{},"miscellaneous/typealiases.html":{}}}],["type=timeactiontypes.tick",{"_index":2806,"title":{},"body":{"classes/FailToUpdateTimeReference.html":{},"classes/Tick.html":{},"classes/TickPayload.html":{},"classes/UpdateTimeReference.html":{}}}],["type=timeactiontypes.updatetimereference",{"_index":2813,"title":{},"body":{"classes/FailToUpdateTimeReference.html":{},"classes/Tick.html":{},"classes/TickPayload.html":{},"classes/UpdateTimeReference.html":{}}}],["type_filter",{"_index":3043,"title":{},"body":{"injectables/FilterService.html":{},"miscellaneous/enumerations.html":{}}}],["typeaheadmodule",{"_index":2952,"title":{},"body":{"modules/FeedModule.html":{},"modules/SettingsModule.html":{}}}],["typeaheadsettingscomponent",{"_index":423,"title":{"components/TypeAheadSettingsComponent.html":{}},"body":{"components/ActionComponent.html":{},"components/AppComponent.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/ConfirmModalComponent.html":{},"components/CustomLogoComponent.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MenuLinkComponent.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/ResizableComponent.html":{},"components/SettingsComponent.html":{},"modules/SettingsModule.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"index.html":{}}}],["typealiases",{"_index":5047,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["typedef",{"_index":1586,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["typefiltercomponent",{"_index":425,"title":{"components/TypeFilterComponent.html":{}},"body":{"components/ActionComponent.html":{},"components/AppComponent.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/ConfirmModalComponent.html":{},"components/CustomLogoComponent.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"modules/FeedModule.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MenuLinkComponent.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/ResizableComponent.html":{},"components/SettingsComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"index.html":{}}}],["typefilterform",{"_index":4783,"title":{},"body":{"components/TypeFilterComponent.html":{}}}],["typeof",{"_index":981,"title":{},"body":{"components/ArchiveFiltersComponent.html":{},"injectables/HandlebarsService.html":{},"components/ListSettingComponent.html":{},"components/MultiFilterComponent.html":{},"classes/TimeReference.html":{},"pipes/XAxisTickFormatPipe.html":{}}}],["typeof(event",{"_index":3851,"title":{},"body":{"components/ResizableComponent.html":{}}}],["typeof(limitsize",{"_index":3746,"title":{},"body":{"components/NavbarComponent.html":{}}}],["types/jwt",{"_index":4995,"title":{},"body":{"dependencies.html":{}}}],["typescript",{"_index":54,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/AuthObject.html":{},"interfaces/AuthState.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckImplicitFlowAuthenticationStatus.html":{},"classes/CheckTokenResponse.html":{},"classes/GuidService.html":{},"injectables/HandlebarsService.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/ImplicitlyAuthenticated.html":{},"classes/InitAuthStatus.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"classes/UnAuthenticationFromImplicitFlow.html":{},"classes/UselessAuthAction.html":{},"dependencies.html":{}}}],["typically",{"_index":2368,"title":{},"body":{"injectables/CustomRouterEffects.html":{}}}],["u",{"_index":2738,"title":{},"body":{"directives/DraggableDirective.html":{}}}],["u.firstname",{"_index":1289,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["u.lastname",{"_index":1291,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["u00a0",{"_index":3257,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["uid",{"_index":1799,"title":{},"body":{"classes/Card.html":{},"classes/Detail.html":{},"classes/LightCard.html":{},"classes/TimeSpan.html":{}}}],["unable",{"_index":1569,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["unauthenticationfromimplicitflow",{"_index":95,"title":{"classes/UnAuthenticationFromImplicitFlow.html":{}},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckImplicitFlowAuthenticationStatus.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/ImplicitlyAuthenticated.html":{},"classes/InitAuthStatus.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"classes/UnAuthenticationFromImplicitFlow.html":{},"classes/UselessAuthAction.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["unavailable",{"_index":1593,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["uncachedpublishers",{"_index":4700,"title":{},"body":{"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["uncachedpublishers.foreach(publisher",{"_index":4703,"title":{},"body":{"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["uncachedpublishers.length",{"_index":4708,"title":{},"body":{"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["unchanged",{"_index":513,"title":{},"body":{"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"classes/ClearLightCardSelection.html":{},"classes/DelayedLightCardUpdate.html":{},"classes/EmptyLightCards.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/LightCardAlreadyUpdated.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/RemoveLightCard.html":{},"classes/SelectLightCard.html":{},"classes/ThirdActionAlreadyLoaded.html":{},"classes/ThirdActionAlreadyUpdated.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateAnActionFailure.html":{},"classes/UpdatedSubscription.html":{},"miscellaneous/enumerations.html":{}}}],["uncomment",{"_index":2733,"title":{},"body":{"directives/DraggableDirective.html":{}}}],["undefined",{"_index":2322,"title":{},"body":{"components/CustomLogoComponent.html":{},"components/DetailComponent.html":{},"components/IconComponent.html":{},"components/NavbarComponent.html":{},"classes/TimeReference.html":{}}}],["undefined,undefined",{"_index":2975,"title":{},"body":{"classes/Filter.html":{}}}],["undone",{"_index":2260,"title":{},"body":{"components/ConfirmModalComponent.html":{}}}],["unexpected",{"_index":456,"title":{},"body":{"classes/AddActionsAppear.html":{},"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"classes/ArchiveQuerySuccess.html":{},"injectables/AuthenticationEffects.html":{},"classes/ClearCard.html":{},"classes/ClearLightCardSelection.html":{},"classes/CreateUserApplication.html":{},"classes/CreateUserApplicationOnFailure.html":{},"classes/CreateUserApplicationOnSuccess.html":{},"classes/DelayedLightCardUpdate.html":{},"classes/EmptyLightCards.html":{},"classes/HandleUnexpectedError.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/HandleUnexpectedError-4.html":{},"classes/HandleUnexpectedError-5.html":{},"classes/HandleUnexpectedError-6.html":{},"classes/LightCardAlreadyUpdated.html":{},"classes/LoadArchivedCard.html":{},"classes/LoadArchivedCardFailure.html":{},"classes/LoadArchivedCardSuccess.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{},"classes/LoadConfig.html":{},"classes/LoadConfigFailure.html":{},"classes/LoadConfigSuccess.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/LoadSettings.html":{},"classes/LoadSettingsFailure.html":{},"classes/LoadSettingsSuccess.html":{},"components/MenuLinkComponent.html":{},"classes/PatchSettings.html":{},"classes/PatchSettingsFailure.html":{},"classes/PatchSettingsSuccess.html":{},"classes/RemoveLightCard.html":{},"classes/SelectArchivedLightCard.html":{},"classes/SelectLightCard.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{},"classes/SendArchiveQuery.html":{},"classes/ThirdActionAlreadyLoaded.html":{},"classes/ThirdActionAlreadyUpdated.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateAnActionFailure.html":{},"classes/UpdateArchiveFilter.html":{},"classes/UpdateArchivePage.html":{},"classes/UpdatedSubscription.html":{},"classes/UserApplicationNotRegistered.html":{},"classes/UserApplicationRegistered.html":{},"miscellaneous/enumerations.html":{}}}],["unique",{"_index":1177,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["unit",{"_index":4347,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["unselectedvalues",{"_index":278,"title":{},"body":{"classes/Action.html":{},"classes/ActionStatus.html":{},"classes/Input.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{}}}],["unselection",{"_index":2734,"title":{},"body":{"directives/DraggableDirective.html":{}}}],["unsubscribe",{"_index":2077,"title":{},"body":{"injectables/CardService.html":{}}}],["unsubscribecardoperation",{"_index":2081,"title":{},"body":{"injectables/CardService.html":{}}}],["untouched",{"_index":4096,"title":{},"body":{"injectables/ThirdActionService.html":{}}}],["untrackedversions",{"_index":4715,"title":{},"body":{"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["unused",{"_index":1953,"title":{},"body":{"injectables/CardEffects.html":{},"injectables/ConfigEffects.html":{},"injectables/SettingsEffects.html":{}}}],["up",{"_index":635,"title":{},"body":{"components/AppComponent.html":{},"classes/Card.html":{},"classes/Detail.html":{},"injectables/FeedFiltersEffects.html":{},"directives/MouseWheelDirective.html":{},"miscellaneous/enumerations.html":{}}}],["update",{"_index":10,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"injectables/ArchiveEffects.html":{},"classes/ArchiveQuerySuccess.html":{},"classes/CardOperation.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckImplicitFlowAuthenticationStatus.html":{},"classes/ClearLightCardSelection.html":{},"components/ConfirmModalComponent.html":{},"classes/DelayedLightCardUpdate.html":{},"classes/EmptyLightCards.html":{},"classes/FailToUpdateTimeReference.html":{},"classes/HandleUnexpectedError.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/ImplicitlyAuthenticated.html":{},"classes/InitAuthStatus.html":{},"classes/LightCardAlreadyUpdated.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RefreshTranslation.html":{},"classes/RejectLogIn.html":{},"classes/RemoveLightCard.html":{},"classes/SelectArchivedLightCard.html":{},"classes/SelectLightCard.html":{},"classes/SendArchiveQuery.html":{},"classes/ThirdActionAlreadyLoaded.html":{},"classes/ThirdActionAlreadyUpdated.html":{},"injectables/ThirdActionService.html":{},"classes/Tick.html":{},"classes/TickPayload.html":{},"injectables/TimeEffects.html":{},"components/TimeFilterComponent.html":{},"interceptors/TokenInjector.html":{},"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{},"classes/TranslationUpToDate.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"classes/UnAuthenticationFromImplicitFlow.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateAnActionFailure.html":{},"classes/UpdateArchiveFilter.html":{},"classes/UpdateArchivePage.html":{},"classes/UpdateTimeReference.html":{},"classes/UpdateTranslation.html":{},"classes/UpdateTranslationFailed.html":{},"classes/UpdateTranslationSuccessful.html":{},"classes/UpdatedSubscription.html":{},"classes/UselessAuthAction.html":{},"miscellaneous/enumerations.html":{}}}],["updatealightcard",{"_index":505,"title":{"classes/UpdateALightCard.html":{}},"body":{"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"classes/ClearLightCardSelection.html":{},"classes/DelayedLightCardUpdate.html":{},"classes/EmptyLightCards.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/LightCardAlreadyUpdated.html":{},"injectables/LightCardEffects.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/RemoveLightCard.html":{},"classes/SelectLightCard.html":{},"classes/ThirdActionAlreadyLoaded.html":{},"classes/ThirdActionAlreadyUpdated.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateAnActionFailure.html":{},"classes/UpdatedSubscription.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["updatealightcard({card",{"_index":3429,"title":{},"body":{"injectables/LightCardEffects.html":{}}}],["updateanaction",{"_index":506,"title":{"classes/UpdateAnAction.html":{}},"body":{"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"classes/ClearLightCardSelection.html":{},"classes/DelayedLightCardUpdate.html":{},"classes/EmptyLightCards.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/LightCardAlreadyUpdated.html":{},"injectables/LightCardEffects.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/RemoveLightCard.html":{},"classes/SelectLightCard.html":{},"classes/ThirdActionAlreadyLoaded.html":{},"classes/ThirdActionAlreadyUpdated.html":{},"injectables/ThirdActionService.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateAnActionFailure.html":{},"classes/UpdatedSubscription.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["updateanactionfailure",{"_index":507,"title":{"classes/UpdateAnActionFailure.html":{}},"body":{"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"classes/ClearLightCardSelection.html":{},"classes/DelayedLightCardUpdate.html":{},"classes/EmptyLightCards.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/LightCardAlreadyUpdated.html":{},"injectables/LightCardEffects.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/RemoveLightCard.html":{},"classes/SelectLightCard.html":{},"classes/ThirdActionAlreadyLoaded.html":{},"classes/ThirdActionAlreadyUpdated.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateAnActionFailure.html":{},"classes/UpdatedSubscription.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["updatearchivefilter",{"_index":938,"title":{"classes/UpdateArchiveFilter.html":{}},"body":{"injectables/ArchiveEffects.html":{},"classes/ArchiveQuerySuccess.html":{},"classes/HandleUnexpectedError.html":{},"classes/SelectArchivedLightCard.html":{},"classes/SendArchiveQuery.html":{},"classes/UpdateArchiveFilter.html":{},"classes/UpdateArchivePage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["updatearchivefilter({filters",{"_index":904,"title":{},"body":{"injectables/ArchiveEffects.html":{}}}],["updatearchivepage",{"_index":933,"title":{"classes/UpdateArchivePage.html":{}},"body":{"injectables/ArchiveEffects.html":{},"components/ArchiveListPageComponent.html":{},"classes/ArchiveQuerySuccess.html":{},"classes/HandleUnexpectedError.html":{},"classes/SelectArchivedLightCard.html":{},"classes/SendArchiveQuery.html":{},"classes/UpdateArchiveFilter.html":{},"classes/UpdateArchivePage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["updatearchivepage({page",{"_index":1055,"title":{},"body":{"components/ArchiveListPageComponent.html":{}}}],["updatearchivepage).payload.page",{"_index":918,"title":{},"body":{"injectables/ArchiveEffects.html":{}}}],["updateasync",{"_index":2662,"title":{},"body":{"components/DetailsComponent.html":{}}}],["updateathirdaction",{"_index":240,"title":{},"body":{"classes/Action.html":{},"classes/ActionStatus.html":{},"classes/Input.html":{},"injectables/LightCardEffects.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{}}}],["updatecard",{"_index":3447,"title":{},"body":{"injectables/LightCardEffects.html":{}}}],["updatecardsubscriptionwithdates",{"_index":2082,"title":{},"body":{"injectables/CardService.html":{}}}],["updatecardsubscriptionwithdates(rangestart",{"_index":2098,"title":{},"body":{"injectables/CardService.html":{}}}],["updated",{"_index":518,"title":{},"body":{"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"directives/CalcHeightDirective.html":{},"interfaces/CardFeedState.html":{},"classes/ClearLightCardSelection.html":{},"classes/DelayedLightCardUpdate.html":{},"classes/EmptyLightCards.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/LightCardAlreadyUpdated.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/RefreshTranslation.html":{},"classes/RemoveLightCard.html":{},"classes/SelectLightCard.html":{},"classes/ThirdActionAlreadyLoaded.html":{},"classes/ThirdActionAlreadyUpdated.html":{},"interfaces/TimelineState.html":{},"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{},"classes/TranslationUpToDate.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateAnActionFailure.html":{},"classes/UpdateTranslation.html":{},"classes/UpdateTranslationFailed.html":{},"classes/UpdateTranslationSuccessful.html":{},"classes/UpdatedSubscription.html":{},"miscellaneous/enumerations.html":{}}}],["updatedsubscription",{"_index":499,"title":{"classes/UpdatedSubscription.html":{}},"body":{"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"injectables/CardOperationEffects.html":{},"classes/ClearLightCardSelection.html":{},"classes/DelayedLightCardUpdate.html":{},"classes/EmptyLightCards.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/LightCardAlreadyUpdated.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/RemoveLightCard.html":{},"classes/SelectLightCard.html":{},"classes/ThirdActionAlreadyLoaded.html":{},"classes/ThirdActionAlreadyUpdated.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateAnActionFailure.html":{},"classes/UpdatedSubscription.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["updatefilteronclocktick",{"_index":2851,"title":{},"body":{"injectables/FeedFiltersEffects.html":{}}}],["updateon",{"_index":3493,"title":{},"body":{"components/ListSettingComponent.html":{},"components/MultiSettingsComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TypeFilterComponent.html":{}}}],["updateresultpage",{"_index":1040,"title":{},"body":{"components/ArchiveListPageComponent.html":{}}}],["updateresultpage(currentpage",{"_index":1043,"title":{},"body":{"components/ArchiveListPageComponent.html":{}}}],["updates",{"_index":2896,"title":{},"body":{"injectables/FeedFiltersEffects.html":{}}}],["updatestate",{"_index":180,"title":{},"body":{"classes/Action.html":{},"classes/ActionStatus.html":{},"classes/Input.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{}}}],["updatestatebeforeaction",{"_index":181,"title":{},"body":{"classes/Action.html":{},"classes/ActionStatus.html":{},"classes/Input.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{}}}],["updatesubscription",{"_index":500,"title":{},"body":{"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"injectables/CardOperationEffects.html":{},"classes/ClearLightCardSelection.html":{},"classes/DelayedLightCardUpdate.html":{},"classes/EmptyLightCards.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/LightCardAlreadyUpdated.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/RemoveLightCard.html":{},"classes/SelectLightCard.html":{},"classes/ThirdActionAlreadyLoaded.html":{},"classes/ThirdActionAlreadyUpdated.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateAnActionFailure.html":{},"classes/UpdatedSubscription.html":{},"miscellaneous/enumerations.html":{}}}],["updatethirdaction",{"_index":4054,"title":{},"body":{"injectables/ThirdActionService.html":{}}}],["updatethirdactionaction",{"_index":4082,"title":{},"body":{"injectables/ThirdActionService.html":{}}}],["updatethirdactions",{"_index":3419,"title":{},"body":{"injectables/LightCardEffects.html":{}}}],["updatetimereference",{"_index":2812,"title":{"classes/UpdateTimeReference.html":{}},"body":{"classes/FailToUpdateTimeReference.html":{},"classes/Tick.html":{},"classes/TickPayload.html":{},"injectables/TimeEffects.html":{},"classes/UpdateTimeReference.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["updatetimereference({timereference",{"_index":4281,"title":{},"body":{"injectables/TimeEffects.html":{}}}],["updatetimereference='[time",{"_index":2796,"title":{},"body":{"classes/FailToUpdateTimeReference.html":{},"classes/Tick.html":{},"classes/TickPayload.html":{},"classes/UpdateTimeReference.html":{}}}],["updatetranslateservice",{"_index":4622,"title":{},"body":{"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["updatetranslation",{"_index":3819,"title":{"classes/UpdateTranslation.html":{}},"body":{"classes/RefreshTranslation.html":{},"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{},"classes/TranslationUpToDate.html":{},"classes/UpdateTranslation.html":{},"classes/UpdateTranslationFailed.html":{},"classes/UpdateTranslationSuccessful.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["updatetranslation({versions",{"_index":4725,"title":{},"body":{"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["updatetranslationfailed",{"_index":3822,"title":{"classes/UpdateTranslationFailed.html":{}},"body":{"classes/RefreshTranslation.html":{},"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{},"classes/TranslationUpToDate.html":{},"classes/UpdateTranslation.html":{},"classes/UpdateTranslationFailed.html":{},"classes/UpdateTranslationSuccessful.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["updatetranslationfailed({error",{"_index":4632,"title":{},"body":{"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["updatetranslationsuccessful",{"_index":3820,"title":{"classes/UpdateTranslationSuccessful.html":{}},"body":{"classes/RefreshTranslation.html":{},"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{},"classes/TranslationUpToDate.html":{},"classes/UpdateTranslation.html":{},"classes/UpdateTranslationFailed.html":{},"classes/UpdateTranslationSuccessful.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["updatetranslationsuccessful({language",{"_index":4630,"title":{},"body":{"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["updatevalue",{"_index":1631,"title":{},"body":{"components/BaseSettingComponent.html":{},"components/EmailSettingComponent.html":{},"components/ListSettingComponent.html":{},"components/MultiSettingsComponent.html":{},"components/TextSettingComponent.html":{},"components/TypeAheadSettingsComponent.html":{}}}],["updatevalue(value",{"_index":1651,"title":{},"body":{"components/BaseSettingComponent.html":{},"components/EmailSettingComponent.html":{},"components/ListSettingComponent.html":{},"components/MultiSettingsComponent.html":{},"components/TextSettingComponent.html":{},"components/TypeAheadSettingsComponent.html":{}}}],["updatevalue(value:any",{"_index":1694,"title":{},"body":{"components/BaseSettingComponent.html":{}}}],["uploadactions",{"_index":3420,"title":{},"body":{"injectables/LightCardEffects.html":{}}}],["upon",{"_index":2212,"title":{},"body":{"injectables/ConfigEffects.html":{},"classes/Filter.html":{}}}],["uribase",{"_index":1386,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["uribase}${pathend",{"_index":1391,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["url",{"_index":212,"title":{},"body":{"classes/Action.html":{},"classes/ActionStatus.html":{},"components/AppComponent.html":{},"classes/AuthObject.html":{},"injectables/AuthenticationEffects.html":{},"interfaces/AuthenticationModeHandler.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"classes/CheckTokenResponse.html":{},"injectables/CustomRouterEffects.html":{},"classes/CustomRouterStateSerializer.html":{},"components/DetailComponent.html":{},"classes/HandleUnexpectedError-4.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/Input.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"injectables/MenuEffects.html":{},"classes/ParameterListItem.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"classes/Process.html":{},"classes/RouterStateUrl.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"interceptors/TokenInjector.html":{},"miscellaneous/enumerations.html":{}}}],["url.endswith('/auth/check_token",{"_index":4605,"title":{},"body":{"interceptors/TokenInjector.html":{}}}],["url.endswith('/auth/code",{"_index":4607,"title":{},"body":{"interceptors/TokenInjector.html":{}}}],["url.endswith('/auth/token",{"_index":4606,"title":{},"body":{"interceptors/TokenInjector.html":{}}}],["url.split",{"_index":1851,"title":{},"body":{"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/NavbarComponent.html":{}}}],["urlcleaner",{"_index":4127,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["urlencoded",{"_index":1242,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["urlparts",{"_index":1850,"title":{},"body":{"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{}}}],["urlparts[1",{"_index":1852,"title":{},"body":{"components/CardComponent.html":{},"components/CardDetailsComponent.html":{}}}],["urlparts[3",{"_index":2006,"title":{},"body":{"components/CardListComponent.html":{}}}],["urlsearchparams",{"_index":1236,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["url}/auth/realms/${realm}/protocol/openid",{"_index":1607,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["usable",{"_index":1353,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["use",{"_index":1439,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"components/CardComponent.html":{},"classes/CheckTokenResponse.html":{},"classes/Filter.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"components/TimeLineComponent.html":{},"interfaces/TimelineState.html":{}}}],["useclass",{"_index":715,"title":{},"body":{"modules/AppModule.html":{},"modules/FeedModule.html":{},"modules/ServicesModule.html":{},"modules/StateModule.html":{}}}],["usecodeorimplicitflow",{"_index":3543,"title":{},"body":{"components/LoginComponent.html":{}}}],["used",{"_index":9,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckImplicitFlowAuthenticationStatus.html":{},"classes/CheckTokenResponse.html":{},"injectables/FeedFiltersEffects.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/ImplicitlyAuthenticated.html":{},"classes/InitAuthStatus.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"modules/StateModule.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"classes/UnAuthenticationFromImplicitFlow.html":{},"classes/UselessAuthAction.html":{},"pipes/XAxisTickFormatPipe.html":{}}}],["useexisting",{"_index":2469,"title":{},"body":{"components/DatetimeFilterComponent.html":{}}}],["useful",{"_index":748,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["useless",{"_index":4466,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["uselessauthaction",{"_index":84,"title":{"classes/UselessAuthAction.html":{}},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckImplicitFlowAuthenticationStatus.html":{},"classes/ImplicitlyAuthenticated.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"classes/UnAuthenticationFromImplicitFlow.html":{},"classes/UselessAuthAction.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["user",{"_index":69,"title":{"classes/User.html":{}},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"interfaces/AppState.html":{},"classes/AuthObject.html":{},"injectables/AuthenticationEffects.html":{},"interfaces/AuthenticationModeHandler.html":{},"injectables/CardOperationEffects.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckImplicitFlowAuthenticationStatus.html":{},"classes/CheckTokenResponse.html":{},"classes/CreateUserApplication.html":{},"classes/CreateUserApplicationOnFailure.html":{},"classes/CreateUserApplicationOnSuccess.html":{},"components/DetailsComponent.html":{},"injectables/FeedFiltersEffects.html":{},"classes/HandleUnexpectedError-5.html":{},"classes/HandleUnexpectedError-6.html":{},"components/IconComponent.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/ImplicitlyAuthenticated.html":{},"components/InfoComponent.html":{},"classes/InitAuthStatus.html":{},"classes/LoadSettings.html":{},"classes/LoadSettingsFailure.html":{},"classes/LoadSettingsSuccess.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"classes/PatchSettings.html":{},"classes/PatchSettingsFailure.html":{},"classes/PatchSettingsSuccess.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"classes/UnAuthenticationFromImplicitFlow.html":{},"classes/UselessAuthAction.html":{},"classes/User.html":{},"classes/UserApplicationNotRegistered.html":{},"classes/UserApplicationRegistered.html":{},"injectables/UserEffects.html":{},"injectables/UserService.html":{},"miscellaneous/enumerations.html":{}}}],["user(userpayload.identifier",{"_index":4868,"title":{},"body":{"injectables/UserEffects.html":{}}}],["user.login",{"_index":4882,"title":{},"body":{"injectables/UserEffects.html":{}}}],["user.service",{"_index":3891,"title":{},"body":{"modules/ServicesModule.html":{}}}],["useractions",{"_index":2278,"title":{},"body":{"classes/CreateUserApplication.html":{},"classes/CreateUserApplicationOnFailure.html":{},"classes/CreateUserApplicationOnSuccess.html":{},"classes/HandleUnexpectedError-6.html":{},"classes/UserApplicationNotRegistered.html":{},"classes/UserApplicationRegistered.html":{},"injectables/UserEffects.html":{},"miscellaneous/typealiases.html":{}}}],["useractionstypes",{"_index":2071,"title":{},"body":{"injectables/CardOperationEffects.html":{},"classes/CreateUserApplication.html":{},"classes/CreateUserApplicationOnFailure.html":{},"classes/CreateUserApplicationOnSuccess.html":{},"injectables/FeedFiltersEffects.html":{},"classes/HandleUnexpectedError-6.html":{},"injectables/SettingsEffects.html":{},"injectables/TimeEffects.html":{},"classes/UserApplicationNotRegistered.html":{},"classes/UserApplicationRegistered.html":{},"injectables/UserEffects.html":{},"miscellaneous/enumerations.html":{}}}],["useractionstypes.createuserapplication",{"_index":2266,"title":{},"body":{"classes/CreateUserApplication.html":{},"classes/CreateUserApplicationOnFailure.html":{},"classes/CreateUserApplicationOnSuccess.html":{},"classes/HandleUnexpectedError-6.html":{},"classes/UserApplicationNotRegistered.html":{},"classes/UserApplicationRegistered.html":{}}}],["useractionstypes.createuserapplicationonfailure",{"_index":2276,"title":{},"body":{"classes/CreateUserApplication.html":{},"classes/CreateUserApplicationOnFailure.html":{},"classes/CreateUserApplicationOnSuccess.html":{},"classes/HandleUnexpectedError-6.html":{},"classes/UserApplicationNotRegistered.html":{},"classes/UserApplicationRegistered.html":{}}}],["useractionstypes.createuserapplicationonsuccess",{"_index":2275,"title":{},"body":{"classes/CreateUserApplication.html":{},"classes/CreateUserApplicationOnFailure.html":{},"classes/CreateUserApplicationOnSuccess.html":{},"classes/HandleUnexpectedError-6.html":{},"classes/UserApplicationNotRegistered.html":{},"classes/UserApplicationRegistered.html":{}}}],["useractionstypes.handleunexpectederror",{"_index":2277,"title":{},"body":{"classes/CreateUserApplication.html":{},"classes/CreateUserApplicationOnFailure.html":{},"classes/CreateUserApplicationOnSuccess.html":{},"classes/HandleUnexpectedError-6.html":{},"classes/UserApplicationNotRegistered.html":{},"classes/UserApplicationRegistered.html":{}}}],["useractionstypes.userapplicationnotregistered",{"_index":2274,"title":{},"body":{"classes/CreateUserApplication.html":{},"classes/CreateUserApplicationOnFailure.html":{},"classes/CreateUserApplicationOnSuccess.html":{},"classes/HandleUnexpectedError-6.html":{},"classes/UserApplicationNotRegistered.html":{},"classes/UserApplicationRegistered.html":{}}}],["useractionstypes.userapplicationregistered",{"_index":2273,"title":{},"body":{"classes/CreateUserApplication.html":{},"classes/CreateUserApplicationOnFailure.html":{},"classes/CreateUserApplicationOnSuccess.html":{},"classes/HandleUnexpectedError-6.html":{},"classes/UserApplicationNotRegistered.html":{},"classes/UserApplicationRegistered.html":{}}}],["userapplicationnotregistered",{"_index":2268,"title":{"classes/UserApplicationNotRegistered.html":{}},"body":{"classes/CreateUserApplication.html":{},"classes/CreateUserApplicationOnFailure.html":{},"classes/CreateUserApplicationOnSuccess.html":{},"classes/HandleUnexpectedError-6.html":{},"classes/UserApplicationNotRegistered.html":{},"classes/UserApplicationRegistered.html":{},"injectables/UserEffects.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["userapplicationnotregistered({error",{"_index":4871,"title":{},"body":{"injectables/UserEffects.html":{}}}],["userapplicationregistered",{"_index":2267,"title":{"classes/UserApplicationRegistered.html":{}},"body":{"classes/CreateUserApplication.html":{},"classes/CreateUserApplicationOnFailure.html":{},"classes/CreateUserApplicationOnSuccess.html":{},"classes/HandleUnexpectedError-6.html":{},"classes/UserApplicationNotRegistered.html":{},"classes/UserApplicationRegistered.html":{},"injectables/UserEffects.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["userapplicationregistered({user",{"_index":4866,"title":{},"body":{"injectables/UserEffects.html":{}}}],["usercontext",{"_index":2540,"title":{"classes/UserContext.html":{}},"body":{"components/DetailComponent.html":{},"classes/DetailContext.html":{},"classes/UserContext.html":{}}}],["userdata",{"_index":4867,"title":{},"body":{"injectables/UserEffects.html":{},"injectables/UserService.html":{}}}],["userdata.login",{"_index":4908,"title":{},"body":{"injectables/UserService.html":{}}}],["userdatapayload",{"_index":4888,"title":{},"body":{"injectables/UserEffects.html":{}}}],["userdataurl",{"_index":1164,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["usereffects",{"_index":860,"title":{"injectables/UserEffects.html":{}},"body":{"interfaces/AppState.html":{},"injectables/UserEffects.html":{}}}],["userform",{"_index":3544,"title":{},"body":{"components/LoginComponent.html":{}}}],["userid",{"_index":3954,"title":{},"body":{"injectables/SettingsService.html":{}}}],["userinitialstate",{"_index":4912,"title":{},"body":{"interfaces/UserState.html":{}}}],["username",{"_index":130,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckImplicitFlowAuthenticationStatus.html":{},"classes/ImplicitlyAuthenticated.html":{},"components/InfoComponent.html":{},"classes/InitAuthStatus.html":{},"components/LoginComponent.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"classes/UnAuthenticationFromImplicitFlow.html":{},"classes/UselessAuthAction.html":{}}}],["username$|async",{"_index":3384,"title":{},"body":{"components/InfoComponent.html":{}}}],["userpayload",{"_index":4863,"title":{},"body":{"injectables/UserEffects.html":{}}}],["userpayload.firstname",{"_index":4869,"title":{},"body":{"injectables/UserEffects.html":{}}}],["userpayload.lastname",{"_index":4870,"title":{},"body":{"injectables/UserEffects.html":{}}}],["userreducer",{"_index":857,"title":{},"body":{"interfaces/AppState.html":{}}}],["userservice",{"_index":3883,"title":{"injectables/UserService.html":{}},"body":{"modules/ServicesModule.html":{},"injectables/UserEffects.html":{},"injectables/UserService.html":{},"index.html":{}}}],["userstate",{"_index":793,"title":{"interfaces/UserState.html":{}},"body":{"interfaces/AppState.html":{},"interfaces/UserState.html":{}}}],["usersurl",{"_index":3955,"title":{},"body":{"injectables/SettingsService.html":{}}}],["userurl",{"_index":4897,"title":{},"body":{"injectables/UserService.html":{}}}],["uses",{"_index":1567,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["using",{"_index":94,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckImplicitFlowAuthenticationStatus.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/ImplicitlyAuthenticated.html":{},"classes/InitAuthStatus.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"classes/UnAuthenticationFromImplicitFlow.html":{},"classes/UselessAuthAction.html":{},"miscellaneous/enumerations.html":{}}}],["utc",{"_index":1434,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["utilities/utilities.module",{"_index":2182,"title":{},"body":{"modules/CardsModule.html":{},"modules/FeedModule.html":{}}}],["utilitiesmodule",{"_index":654,"title":{"modules/UtilitiesModule.html":{}},"body":{"modules/AppModule.html":{},"modules/CardsModule.html":{},"modules/FeedModule.html":{},"modules/UtilitiesModule.html":{},"index.html":{},"modules.html":{}}}],["v",{"_index":339,"title":{},"body":{"components/ActionComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"modules/ArchivesModule.html":{},"modules/ArchivesRoutingModule.html":{},"components/CardComponent.html":{},"components/CardListComponent.html":{},"modules/CardsModule.html":{},"components/CustomLogoComponent.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailsComponent.html":{},"components/FeedComponent.html":{},"injectables/FeedFiltersEffects.html":{},"modules/FeedModule.html":{},"modules/FeedRoutingModule.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/MenuLinkComponent.html":{},"components/MultiFilterComponent.html":{},"components/NavbarComponent.html":{},"components/ResizableComponent.html":{},"modules/ServicesModule.html":{},"modules/SettingsModule.html":{},"modules/SettingsRoutingModule.html":{},"modules/StateModule.html":{},"components/TagsFilterComponent.html":{},"modules/ThirdpartyModule.html":{},"modules/ThirdpartyRoutingModule.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"modules/UtilitiesModule.html":{}}}],["v.label",{"_index":3484,"title":{},"body":{"components/ListSettingComponent.html":{},"components/MultiFilterComponent.html":{}}}],["v.label.parameters",{"_index":3489,"title":{},"body":{"components/ListSettingComponent.html":{},"components/MultiFilterComponent.html":{}}}],["v.label|async",{"_index":3502,"title":{},"body":{"components/ListSettingComponent.html":{},"components/MultiFilterComponent.html":{}}}],["v.value",{"_index":3485,"title":{},"body":{"components/ListSettingComponent.html":{},"components/MultiFilterComponent.html":{}}}],["v1",{"_index":3215,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["v2",{"_index":3217,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["val",{"_index":2503,"title":{},"body":{"components/DatetimeFilterComponent.html":{},"components/TimeLineComponent.html":{}}}],["val.enddate",{"_index":4473,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["val.publishdate",{"_index":4476,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["val.publisher",{"_index":4469,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["val.publisherversion",{"_index":4470,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["val.severity",{"_index":4468,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["val.startdate",{"_index":4474,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["val.timespans",{"_index":4460,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["val.timespans.foreach(d",{"_index":4462,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["val.timespans.length",{"_index":4461,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["val.title",{"_index":4471,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["valid",{"_index":1228,"title":{},"body":{"classes/AuthObject.html":{},"injectables/AuthenticationEffects.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"components/DatetimeFilterComponent.html":{},"classes/ImplicitAuthenticationHandler.html":{},"components/ListSettingComponent.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["validate",{"_index":108,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckImplicitFlowAuthenticationStatus.html":{},"components/DatetimeFilterComponent.html":{},"classes/ImplicitlyAuthenticated.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"classes/UnAuthenticationFromImplicitFlow.html":{},"classes/UselessAuthAction.html":{}}}],["validate(c",{"_index":2497,"title":{},"body":{"components/DatetimeFilterComponent.html":{}}}],["validationerrors",{"_index":2500,"title":{},"body":{"components/DatetimeFilterComponent.html":{}}}],["validator",{"_index":2467,"title":{},"body":{"components/DatetimeFilterComponent.html":{}}}],["validators",{"_index":2508,"title":{},"body":{"components/DatetimeFilterComponent.html":{},"components/EmailSettingComponent.html":{},"components/ListSettingComponent.html":{},"components/MultiSettingsComponent.html":{},"components/TextSettingComponent.html":{}}}],["validators.push(this.valueinlistvalidator",{"_index":3492,"title":{},"body":{"components/ListSettingComponent.html":{}}}],["validators.push(validators.email",{"_index":2775,"title":{},"body":{"components/EmailSettingComponent.html":{}}}],["validators.push(validators.pattern(this.pattern",{"_index":4035,"title":{},"body":{"components/TextSettingComponent.html":{}}}],["validators.push(validators.required",{"_index":3495,"title":{},"body":{"components/ListSettingComponent.html":{},"components/MultiSettingsComponent.html":{},"components/TextSettingComponent.html":{}}}],["validity",{"_index":1532,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["value",{"_index":50,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/Action.html":{},"classes/ActionStatus.html":{},"classes/AddActionsAppear.html":{},"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"components/AppComponent.html":{},"classes/ApplyFilter.html":{},"injectables/ArchiveEffects.html":{},"components/ArchiveFiltersComponent.html":{},"classes/ArchiveQuerySuccess.html":{},"injectables/AuthenticationEffects.html":{},"components/BaseSettingComponent.html":{},"directives/CalcHeightDirective.html":{},"components/CardComponent.html":{},"injectables/CardEffects.html":{},"classes/CardOperation.html":{},"injectables/CardOperationEffects.html":{},"injectables/CardService.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckImplicitFlowAuthenticationStatus.html":{},"classes/ClearCard.html":{},"classes/ClearLightCardSelection.html":{},"injectables/ConfigEffects.html":{},"classes/CreateUserApplication.html":{},"classes/CreateUserApplicationOnFailure.html":{},"classes/CreateUserApplicationOnSuccess.html":{},"components/CustomLogoComponent.html":{},"injectables/CustomRouterEffects.html":{},"classes/DateTimeNgb.html":{},"components/DatetimeFilterComponent.html":{},"classes/DelayedLightCardUpdate.html":{},"components/DetailComponent.html":{},"directives/DraggableDirective.html":{},"components/EmailSettingComponent.html":{},"classes/EmptyLightCards.html":{},"classes/FailToUpdateTimeReference.html":{},"injectables/FeedFiltersEffects.html":{},"injectables/FilterService.html":{},"classes/HandleUnexpectedError.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/HandleUnexpectedError-4.html":{},"classes/HandleUnexpectedError-5.html":{},"classes/HandleUnexpectedError-6.html":{},"injectables/HandlebarsService.html":{},"components/IconComponent.html":{},"classes/ImplicitlyAuthenticated.html":{},"classes/InitAuthStatus.html":{},"classes/InitFilters.html":{},"classes/InitTimeline.html":{},"classes/Input.html":{},"classes/LightCardAlreadyUpdated.html":{},"injectables/LightCardEffects.html":{},"components/ListSettingComponent.html":{},"classes/LoadArchivedCard.html":{},"classes/LoadArchivedCardFailure.html":{},"classes/LoadArchivedCardSuccess.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{},"classes/LoadConfig.html":{},"classes/LoadConfigFailure.html":{},"classes/LoadConfigSuccess.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/LoadSettings.html":{},"classes/LoadSettingsFailure.html":{},"classes/LoadSettingsSuccess.html":{},"injectables/MenuEffects.html":{},"components/MenuLinkComponent.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"classes/ParameterListItem.html":{},"classes/PatchSettings.html":{},"classes/PatchSettingsFailure.html":{},"classes/PatchSettingsSuccess.html":{},"classes/Process.html":{},"classes/RefreshTranslation.html":{},"classes/RejectLogIn.html":{},"classes/RemoveLightCard.html":{},"classes/SelectArchivedLightCard.html":{},"classes/SelectLightCard.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{},"classes/SendArchiveQuery.html":{},"classes/SetCardDataTimeline.html":{},"injectables/SettingsEffects.html":{},"classes/State.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"classes/Third.html":{},"classes/ThirdActionAlreadyLoaded.html":{},"classes/ThirdActionAlreadyUpdated.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"injectables/ThirdsService.html":{},"classes/Tick.html":{},"injectables/TimeEffects.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"classes/TimeReference.html":{},"injectables/TranslateEffects.html":{},"classes/TranslationUpToDate.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"classes/UnAuthenticationFromImplicitFlow.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateAnActionFailure.html":{},"classes/UpdateArchiveFilter.html":{},"classes/UpdateArchivePage.html":{},"classes/UpdateTimeReference.html":{},"classes/UpdateTranslation.html":{},"classes/UpdateTranslationFailed.html":{},"classes/UpdateTranslationSuccessful.html":{},"classes/UpdatedSubscription.html":{},"classes/UselessAuthAction.html":{},"classes/UserApplicationNotRegistered.html":{},"classes/UserApplicationRegistered.html":{},"injectables/UserEffects.html":{},"pipes/XAxisTickFormatPipe.html":{},"miscellaneous/enumerations.html":{}}}],["value.replace",{"_index":3255,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["value.setting",{"_index":1700,"title":{},"body":{"components/BaseSettingComponent.html":{}}}],["value.slice(from",{"_index":3235,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["value.trim().split",{"_index":2436,"title":{},"body":{"classes/DateTimeNgb.html":{}}}],["value:string",{"_index":2020,"title":{},"body":{"classes/CardOperation.html":{}}}],["value[index",{"_index":3232,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["value[index].length",{"_index":3220,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["valuechanges",{"_index":4015,"title":{},"body":{"components/TagsFilterComponent.html":{},"components/TimeFilterComponent.html":{},"components/TypeFilterComponent.html":{}}}],["valueinlist",{"_index":3479,"title":{},"body":{"components/ListSettingComponent.html":{}}}],["valueinlistvalidator",{"_index":3470,"title":{},"body":{"components/ListSettingComponent.html":{}}}],["values",{"_index":275,"title":{},"body":{"classes/Action.html":{},"classes/ActionStatus.html":{},"injectables/FeedFiltersEffects.html":{},"classes/Input.html":{},"components/ListSettingComponent.html":{},"components/MultiFilterComponent.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"components/TimeFilterComponent.html":{}}}],["values.foreach(value",{"_index":2156,"title":{},"body":{"injectables/CardService.html":{}}}],["var",{"_index":351,"title":{},"body":{"components/ActionComponent.html":{},"components/AppComponent.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/ConfirmModalComponent.html":{},"components/CustomLogoComponent.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MenuLinkComponent.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/ResizableComponent.html":{},"components/SettingsComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{}}}],["variant",{"_index":1894,"title":{},"body":{"components/CardComponent.html":{}}}],["variation",{"_index":1481,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["verifyexpirationdate",{"_index":1302,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["verifytranslationneeded",{"_index":4655,"title":{},"body":{"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["verifytranslationneedformenus",{"_index":4727,"title":{},"body":{"injectables/TranslateEffects.html":{}}}],["verifytranslationneedformenus:observable",{"_index":4679,"title":{},"body":{"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["version",{"_index":194,"title":{},"body":{"classes/Action.html":{},"classes/ActionStatus.html":{},"components/CardDetailsComponent.html":{},"components/DetailComponent.html":{},"classes/HandleUnexpectedError-4.html":{},"injectables/HandlebarsService.html":{},"classes/Input.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["version:'${version",{"_index":4191,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["version:string",{"_index":3202,"title":{},"body":{"injectables/HandlebarsService.html":{},"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["versioninput",{"_index":4744,"title":{},"body":{"injectables/TranslateEffects.html":{}}}],["versioninput[publisher",{"_index":4705,"title":{},"body":{"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["versioninput[third",{"_index":4712,"title":{},"body":{"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["versionparam",{"_index":4172,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["versions",{"_index":3828,"title":{},"body":{"classes/RefreshTranslation.html":{},"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{},"classes/TranslationUpToDate.html":{},"classes/UpdateTranslation.html":{},"classes/UpdateTranslationFailed.html":{},"classes/UpdateTranslationSuccessful.html":{}}}],["versions.add(u.version",{"_index":4692,"title":{},"body":{"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["versions2update",{"_index":4704,"title":{},"body":{"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["versiontoupdate",{"_index":4724,"title":{},"body":{"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["via",{"_index":21,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckImplicitFlowAuthenticationStatus.html":{},"classes/ImplicitlyAuthenticated.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"classes/UnAuthenticationFromImplicitFlow.html":{},"classes/UselessAuthAction.html":{}}}],["virtual",{"_index":2784,"title":{},"body":{"classes/FailToUpdateTimeReference.html":{},"classes/Tick.html":{},"classes/TickPayload.html":{},"classes/UpdateTimeReference.html":{}}}],["virtualtime",{"_index":4513,"title":{},"body":{"classes/TimeReference.html":{}}}],["visible",{"_index":739,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["void",{"_index":313,"title":{},"body":{"components/ActionComponent.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"classes/AuthObject.html":{},"injectables/AuthenticationEffects.html":{},"interfaces/AuthenticationModeHandler.html":{},"components/BaseSettingComponent.html":{},"directives/CalcHeightDirective.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"injectables/CardService.html":{},"classes/CheckTokenResponse.html":{},"components/ConfirmModalComponent.html":{},"components/CustomLogoComponent.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"directives/DraggableDirective.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"classes/Filter.html":{},"components/FiltersComponent.html":{},"injectables/HandlebarsService.html":{},"injectables/I18nService.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"classes/ImplicitAuthenticationHandler.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MenuLinkComponent.html":{},"directives/MouseWheelDirective.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"injectables/NotifyService.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"components/ResizableComponent.html":{},"components/SettingsComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"injectables/ThirdActionService.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{}}}],["w",{"_index":4437,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["wait",{"_index":2618,"title":{},"body":{"components/DetailComponent.html":{}}}],["want",{"_index":2329,"title":{},"body":{"components/CustomLogoComponent.html":{}}}],["warning",{"_index":2639,"title":{},"body":{"components/DetailComponent.html":{},"components/ResizableComponent.html":{}}}],["way",{"_index":4287,"title":{},"body":{"injectables/TimeEffects.html":{}}}],["weather",{"_index":4582,"title":{},"body":{"interfaces/TimelineState.html":{}}}],["web",{"_index":1125,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["wee",{"_index":4951,"title":{},"body":{"pipes/XAxisTickFormatPipe.html":{}}}],["week",{"_index":2832,"title":{},"body":{"components/FeedComponent.html":{},"components/TimeLineComponent.html":{}}}],["weeknumberonly",{"_index":4959,"title":{},"body":{"pipes/XAxisTickFormatPipe.html":{}}}],["weirdly",{"_index":1878,"title":{},"body":{"components/CardComponent.html":{}}}],["went",{"_index":1926,"title":{},"body":{"components/CardDetailsComponent.html":{},"classes/FailToUpdateTimeReference.html":{},"classes/Tick.html":{},"classes/TickPayload.html":{},"injectables/TimeEffects.html":{},"classes/UpdateTimeReference.html":{}}}],["wheel",{"_index":3664,"title":{},"body":{"directives/MouseWheelDirective.html":{}}}],["wheel.directive",{"_index":2946,"title":{},"body":{"modules/FeedModule.html":{}}}],["wheel.directive.ts",{"_index":3644,"title":{},"body":{"directives/MouseWheelDirective.html":{}}}],["wheel.directive.ts:18",{"_index":3654,"title":{},"body":{"directives/MouseWheelDirective.html":{}}}],["wheel.directive.ts:20",{"_index":3653,"title":{},"body":{"directives/MouseWheelDirective.html":{}}}],["wheel.directive.ts:23",{"_index":3658,"title":{},"body":{"directives/MouseWheelDirective.html":{}}}],["wheel.directive.ts:28",{"_index":3656,"title":{},"body":{"directives/MouseWheelDirective.html":{}}}],["wheel.directive.ts:33",{"_index":3660,"title":{},"body":{"directives/MouseWheelDirective.html":{}}}],["wheel.directive.ts:41",{"_index":3662,"title":{},"body":{"directives/MouseWheelDirective.html":{}}}],["whether",{"_index":1960,"title":{},"body":{"interfaces/CardFeedState.html":{}}}],["width",{"_index":1888,"title":{},"body":{"components/CardComponent.html":{},"components/CustomLogoComponent.html":{},"components/IframeDisplayComponent.html":{},"components/NavbarComponent.html":{},"components/TypeFilterComponent.html":{}}}],["width:100px",{"_index":2528,"title":{},"body":{"components/DatetimeFilterComponent.html":{}}}],["win",{"_index":133,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckImplicitFlowAuthenticationStatus.html":{},"classes/ImplicitlyAuthenticated.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"classes/UnAuthenticationFromImplicitFlow.html":{},"classes/UselessAuthAction.html":{}}}],["window",{"_index":1778,"title":{},"body":{"directives/CalcHeightDirective.html":{},"injectables/NotifyService.html":{},"components/ResizableComponent.html":{}}}],["window.dispatchevent(evt",{"_index":3863,"title":{},"body":{"components/ResizableComponent.html":{}}}],["window.dispatchevent(new",{"_index":3854,"title":{},"body":{"components/ResizableComponent.html":{}}}],["window.document.createevent('uievents",{"_index":3861,"title":{},"body":{"components/ResizableComponent.html":{}}}],["window.event",{"_index":3672,"title":{},"body":{"directives/MouseWheelDirective.html":{}}}],["window.location",{"_index":776,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["window.location.hash",{"_index":755,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["window.location.href",{"_index":1362,"title":{},"body":{"classes/AuthObject.html":{},"injectables/AuthenticationEffects.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["window.location.pathname",{"_index":2393,"title":{},"body":{"classes/CustomRouterStateSerializer.html":{},"classes/RouterStateUrl.html":{}}}],["window:resize",{"_index":1714,"title":{},"body":{"directives/CalcHeightDirective.html":{},"components/CardListComponent.html":{},"components/DetailsComponent.html":{},"components/ResizableComponent.html":{}}}],["within",{"_index":775,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["withlatestfrom",{"_index":929,"title":{},"body":{"injectables/ArchiveEffects.html":{},"injectables/AuthenticationEffects.html":{},"injectables/CardOperationEffects.html":{},"injectables/ConfigEffects.html":{},"injectables/FeedFiltersEffects.html":{}}}],["withlatestfrom(this.store.select(buildconfigselector('settings.defaulttags",{"_index":2858,"title":{},"body":{"injectables/FeedFiltersEffects.html":{}}}],["withlatestfrom(this.store.select(buildfilterselector(filtertype.time_filter",{"_index":2890,"title":{},"body":{"injectables/FeedFiltersEffects.html":{}}}],["withlatestfrom(this.store.select(selectarchivefilters",{"_index":915,"title":{},"body":{"injectables/ArchiveEffects.html":{}}}],["withlatestfrom(this.store.select(selectcardstateselectedid",{"_index":2032,"title":{},"body":{"injectables/CardOperationEffects.html":{}}}],["withlatestfrom(this.store.select(selectcode",{"_index":1504,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["withlatestfrom(this.store.select(selectconfigretry",{"_index":2224,"title":{},"body":{"injectables/ConfigEffects.html":{}}}],["without",{"_index":143,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"components/BaseSettingComponent.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckImplicitFlowAuthenticationStatus.html":{},"classes/ImplicitlyAuthenticated.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"classes/UnAuthenticationFromImplicitFlow.html":{},"classes/UselessAuthAction.html":{}}}],["won't",{"_index":4302,"title":{},"body":{"components/TimeFilterComponent.html":{}}}],["word",{"_index":1892,"title":{},"body":{"components/CardComponent.html":{}}}],["workflow",{"_index":1185,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"injectables/UserEffects.html":{}}}],["works",{"_index":1705,"title":{},"body":{"components/BaseSettingComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NoSelectionComponent.html":{},"components/ResizableComponent.html":{}}}],["writevalue",{"_index":2482,"title":{},"body":{"components/DatetimeFilterComponent.html":{}}}],["writevalue(val",{"_index":2501,"title":{},"body":{"components/DatetimeFilterComponent.html":{}}}],["wrong",{"_index":1560,"title":{},"body":{"injectables/AuthenticationEffects.html":{},"components/CardDetailsComponent.html":{},"classes/FailToUpdateTimeReference.html":{},"components/IconComponent.html":{},"classes/Tick.html":{},"classes/TickPayload.html":{},"injectables/TimeEffects.html":{},"classes/UpdateTimeReference.html":{}}}],["wrote",{"_index":4934,"title":{},"body":{"pipes/XAxisTickFormatPipe.html":{}}}],["www",{"_index":1241,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["x",{"_index":1032,"title":{},"body":{"components/ArchiveListComponent.html":{},"components/CardListComponent.html":{},"components/DetailsComponent.html":{},"injectables/FeedFiltersEffects.html":{}}}],["x.getboundingclientrect().height).reduce((prev",{"_index":1772,"title":{},"body":{"directives/CalcHeightDirective.html":{}}}],["x.style.height",{"_index":1784,"title":{},"body":{"directives/CalcHeightDirective.html":{}}}],["x1",{"_index":4564,"title":{},"body":{"classes/TimeReference.html":{},"miscellaneous/enumerations.html":{}}}],["x10",{"_index":4566,"title":{},"body":{"classes/TimeReference.html":{},"miscellaneous/enumerations.html":{}}}],["x2",{"_index":4565,"title":{},"body":{"classes/TimeReference.html":{},"miscellaneous/enumerations.html":{}}}],["x3600",{"_index":4568,"title":{},"body":{"classes/TimeReference.html":{},"miscellaneous/enumerations.html":{}}}],["x60",{"_index":4567,"title":{},"body":{"classes/TimeReference.html":{},"miscellaneous/enumerations.html":{}}}],["xaxistickformat",{"_index":4923,"title":{},"body":{"pipes/XAxisTickFormatPipe.html":{}}}],["xaxistickformatpipe",{"_index":2918,"title":{"pipes/XAxisTickFormatPipe.html":{}},"body":{"modules/FeedModule.html":{},"pipes/XAxisTickFormatPipe.html":{},"index.html":{}}}],["y",{"_index":1033,"title":{},"body":{"components/ArchiveListComponent.html":{},"components/CardListComponent.html":{},"components/DetailsComponent.html":{},"components/TimeLineComponent.html":{}}}],["yea",{"_index":4953,"title":{},"body":{"pipes/XAxisTickFormatPipe.html":{}}}],["year",{"_index":2443,"title":{},"body":{"classes/DateTimeNgb.html":{},"components/FeedComponent.html":{},"components/TimeLineComponent.html":{}}}],["yes",{"_index":185,"title":{},"body":{"classes/Action.html":{},"classes/AuthObject.html":{},"classes/Card.html":{},"classes/CardOperation.html":{},"classes/CheckTokenResponse.html":{},"classes/DateTimeNgb.html":{},"classes/I18n.html":{},"classes/LightCard.html":{},"classes/Message.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"injectables/ThirdsService.html":{},"components/TimeLineComponent.html":{},"classes/TimeSpan.html":{}}}],["yield",{"_index":1743,"title":{},"body":{"directives/CalcHeightDirective.html":{}}}],["yy",{"_index":4966,"title":{},"body":{"pipes/XAxisTickFormatPipe.html":{}}}],["zip",{"_index":2579,"title":{},"body":{"components/DetailComponent.html":{},"injectables/MenuEffects.html":{}}}],["zip(this.thirds.querythirdfromcard(this.card",{"_index":2612,"title":{},"body":{"components/DetailComponent.html":{}}}],["zone.js",{"_index":5014,"title":{},"body":{"dependencies.html":{}}}],["zones",{"_index":3910,"title":{},"body":{"components/SettingsComponent.html":{},"interfaces/SettingsInputs.html":{}}}],["zoom",{"_index":655,"title":{},"body":{"modules/AppModule.html":{},"modules/ArchivesModule.html":{},"modules/CardsModule.html":{},"modules/FeedModule.html":{},"modules/ServicesModule.html":{},"modules/SettingsModule.html":{},"modules/StateModule.html":{},"modules/ThirdpartyModule.html":{},"modules/UtilitiesModule.html":{},"dependencies.html":{},"index.html":{}}}],["zoomonbutton",{"_index":4411,"title":{},"body":{"components/TimeLineComponent.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"classes/AcceptLogIn.html":{"url":"classes/AcceptLogIn.html","title":"class - AcceptLogIn","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AcceptLogIn\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/authentication.actions.ts\n        \n\n            \n                Description\n            \n            \n                Action used to update the state with the authentication information\nEmitted by {AuthenticationEffects} in the following {Observable} @members:\n\nTryToLogIn\nCheckAuthentication via handleLogInAttempt @method\n\nUsed in the {function} reducer of the {authentication.reducer.ts} file to create a new state\ncontaining the authentication information by filtering on the {AuthenticationActionTypes.AcceptLogIn} type.\n\n            \n\n\n            \n                Implements\n            \n            \n                            Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: PayloadForSuccessfulAuthentication)\n                    \n                \n                        \n                            \n                                Defined in src/app/store/actions/authentication.actions.ts:74\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                        PayloadForSuccessfulAuthentication\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         PayloadForSuccessfulAuthentication\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/authentication.actions.ts:77\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : AuthenticationActionTypes.AcceptLogIn\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/authentication.actions.ts:74\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Action} from '@ngrx/store';\nimport {Guid} from 'guid-typescript';\nimport {Message} from \"@ofModel/message.model\";\nimport {ExtractI18nBuilderOptions} from \"@angular-devkit/build-angular\";\n\nexport enum AuthenticationActionTypes {\n    InitAuthStatus = '[Authentication] Init Authentication Status',\n    CheckAuthenticationStatus = '[Authentication] Check Authentication Status',\n    AcceptLogIn = '[Authentication] Accept the user log in attempt',\n    RejectLogIn = '[Authentication] Reject the user log in attempt',\n    TryToLogIn = '[Authentication] Try to log the user in',\n    TryToLogOut = '[Authentication] Try to log the user out',\n    AcceptLogOut = '[Authentication] Accept the user log out attempt',\n    AcceptLogOutSuccess = '[Authentication] Success Accept the user log out attempt',\n    CheckImplicitFlowAuthenticationStatus = '[Authentication] Check Authentication Status specifically for the Implicit Flow',\n    UselessAuthAction = '[Authentication] test purpose action'\n    // TODO the following actions should be merge with password and code flow management of authentication\n    , ImplicitallyAuthenticated = '[Authentication] user is authentication using Implicit Flow' //\n    , UnAuthenticationFromImplicitFlow = '[Authentication[ user is log out by implicit Flow internal managment'\n}\n\n/**\n * Authentication success payload\n */\nexport class PayloadForSuccessfulAuthentication {\n    constructor(public identifier: string,\n                public clientId: Guid,\n                public token: string,\n                public expirationDate: Date,\n                public firstName?:string,\n                public lastName?:string) {\n    }\n}\n\n/**\n * It aims to validate the current authentication if exists.\n *\n */\nexport class InitAuthStatus implements Action {\n    readonly type = AuthenticationActionTypes.InitAuthStatus;\n    /* istanbul ignore next */\n    constructor(public payload:{code: string}){}\n}\n\n/**\n * It aims to validate the current authentication if exists.\n *\n */\nexport class CheckAuthenticationStatus implements Action {\n    /* istanbul ignore next */\n    readonly type = AuthenticationActionTypes.CheckAuthenticationStatus;\n}\n\n/**\n * Action used to update the state with the authentication information\n *\n * Emitted by {AuthenticationEffects} in the following {Observable} @members:\n *  * TryToLogIn\n *  * CheckAuthentication via handleLogInAttempt @method\n *\n * Used in the {function} reducer of the {authentication.reducer.ts} file to create a new state\n * containing the authentication information by filtering on the {AuthenticationActionTypes.AcceptLogIn} type.\n *\n */\nexport class AcceptLogIn implements Action {\n    readonly type = AuthenticationActionTypes.AcceptLogIn;\n\n    /* istanbul ignore next */\n    constructor(public payload: PayloadForSuccessfulAuthentication) {}\n}\n\n/**\n * Action used to push login/password pair to the authentication service\n *\n * Emitted by {LoginComponent} in the onSubmit @method which is called\n * when the user click on the `Login` button of the login page form.\n */\nexport class TryToLogIn implements Action {\n    readonly type= AuthenticationActionTypes.TryToLogIn;\n\n    /* istanbul ignore next */\n    constructor(public payload: {username: string, password: string}){}\n}\n\n/**\n * Action used when the user logout\n *\n * Emitted by {NavbarComponent} win the logOut @method which is called\n * when the user click on the `logOut` button of the `navbar`\n */\nexport class TryToLogOut implements Action {\n    /* istanbul ignore next */\n    readonly type = AuthenticationActionTypes.TryToLogOut;\n}\n\n/**\n * Action used to notify the store that the authentication is not possible.\n *\n * Emmited by {AuthenticationEffect} in the following {Observable} @members:\n *  * `TryToLogin`;\n *  *  `CheckAuthentication`\n *  and in the `handleRejectedLogin` @method called by the `ChecAuthentication` {Observable}\n *\n * Used in the {function} reducer of the {authentication.reducer.ts} file to create a new state\n * without any authentication information and containing a message about login rejection\n * by filtering on the {AuthenticationActionTypes.RejectLogIn} type.\n *\n */\nexport class RejectLogIn implements Action {\n    readonly type = AuthenticationActionTypes.RejectLogIn;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Message }) {}\n}\n\n/**\n * Action used to removes authentication information of the system and thus logOut the user.\n *\n * Emitted by {AuthenticationEffect} in the following {Observable} @members:\n *  * `TryToLogOut`\n *  * `RejectLogInAttempt`\n *\n *  Consume by {AuthenticationEffect} in the `AcceptLogOut` {Observable} @member\n *\n */\nexport class AcceptLogOut implements Action {\n    readonly type = AuthenticationActionTypes.AcceptLogOut;\n\n    /* istanbul ignore next */\n    constructor(){}\n}\n\n/**\n * Action used to notify the store to remove authentication information\n *\n * Emitted by {AuthenticationEffect} in `AcceptLogOut` {Observable} @member.\n *\n * Used in the {function} reducer of the {authentication.reducer.ts} file to create a new state\n * without any authentication information by filtering on the {AuthenticationActionTypes.AcceptLogOut} type.\n */\nexport class AcceptLogOutSuccess implements Action {\n    /* istanbul ignore next */\n    readonly type = AuthenticationActionTypes.AcceptLogOutSuccess;\n}\n\nexport class CheckImplicitFlowAuthenticationStatus implements Action {\n    readonly type = AuthenticationActionTypes.CheckImplicitFlowAuthenticationStatus;\n}\n\nexport class UselessAuthAction implements  Action{\n    readonly type = AuthenticationActionTypes.UselessAuthAction;\n\n}\n\nexport class ImplicitlyAuthenticated implements Action {\n    readonly type = AuthenticationActionTypes.ImplicitallyAuthenticated;\n}\n\nexport class UnAuthenticationFromImplicitFlow implements Action {\n    readonly type = AuthenticationActionTypes.UnAuthenticationFromImplicitFlow;\n}\nexport type AuthenticationActions =\n    InitAuthStatus\n    | AcceptLogIn\n    | RejectLogIn\n    | TryToLogIn\n    | TryToLogOut\n    | CheckAuthenticationStatus\n    | AcceptLogOut\n    | AcceptLogOutSuccess\n    | CheckImplicitFlowAuthenticationStatus\n    | UselessAuthAction\n    | ImplicitlyAuthenticated\n    |UnAuthenticationFromImplicitFlow;\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AcceptLogOut.html":{"url":"classes/AcceptLogOut.html","title":"class - AcceptLogOut","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AcceptLogOut\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/authentication.actions.ts\n        \n\n            \n                Description\n            \n            \n                Action used to removes authentication information of the system and thus logOut the user.\nEmitted by {AuthenticationEffect} in the following {Observable} @members:\n\nTryToLogOut\n\nRejectLogInAttempt\nConsume by {AuthenticationEffect} in the AcceptLogOut {Observable} @member\n\n\n\n            \n\n\n            \n                Implements\n            \n            \n                            Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/store/actions/authentication.actions.ts:135\n                            \n                        \n\n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : AuthenticationActionTypes.AcceptLogOut\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/authentication.actions.ts:135\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Action} from '@ngrx/store';\nimport {Guid} from 'guid-typescript';\nimport {Message} from \"@ofModel/message.model\";\nimport {ExtractI18nBuilderOptions} from \"@angular-devkit/build-angular\";\n\nexport enum AuthenticationActionTypes {\n    InitAuthStatus = '[Authentication] Init Authentication Status',\n    CheckAuthenticationStatus = '[Authentication] Check Authentication Status',\n    AcceptLogIn = '[Authentication] Accept the user log in attempt',\n    RejectLogIn = '[Authentication] Reject the user log in attempt',\n    TryToLogIn = '[Authentication] Try to log the user in',\n    TryToLogOut = '[Authentication] Try to log the user out',\n    AcceptLogOut = '[Authentication] Accept the user log out attempt',\n    AcceptLogOutSuccess = '[Authentication] Success Accept the user log out attempt',\n    CheckImplicitFlowAuthenticationStatus = '[Authentication] Check Authentication Status specifically for the Implicit Flow',\n    UselessAuthAction = '[Authentication] test purpose action'\n    // TODO the following actions should be merge with password and code flow management of authentication\n    , ImplicitallyAuthenticated = '[Authentication] user is authentication using Implicit Flow' //\n    , UnAuthenticationFromImplicitFlow = '[Authentication[ user is log out by implicit Flow internal managment'\n}\n\n/**\n * Authentication success payload\n */\nexport class PayloadForSuccessfulAuthentication {\n    constructor(public identifier: string,\n                public clientId: Guid,\n                public token: string,\n                public expirationDate: Date,\n                public firstName?:string,\n                public lastName?:string) {\n    }\n}\n\n/**\n * It aims to validate the current authentication if exists.\n *\n */\nexport class InitAuthStatus implements Action {\n    readonly type = AuthenticationActionTypes.InitAuthStatus;\n    /* istanbul ignore next */\n    constructor(public payload:{code: string}){}\n}\n\n/**\n * It aims to validate the current authentication if exists.\n *\n */\nexport class CheckAuthenticationStatus implements Action {\n    /* istanbul ignore next */\n    readonly type = AuthenticationActionTypes.CheckAuthenticationStatus;\n}\n\n/**\n * Action used to update the state with the authentication information\n *\n * Emitted by {AuthenticationEffects} in the following {Observable} @members:\n *  * TryToLogIn\n *  * CheckAuthentication via handleLogInAttempt @method\n *\n * Used in the {function} reducer of the {authentication.reducer.ts} file to create a new state\n * containing the authentication information by filtering on the {AuthenticationActionTypes.AcceptLogIn} type.\n *\n */\nexport class AcceptLogIn implements Action {\n    readonly type = AuthenticationActionTypes.AcceptLogIn;\n\n    /* istanbul ignore next */\n    constructor(public payload: PayloadForSuccessfulAuthentication) {}\n}\n\n/**\n * Action used to push login/password pair to the authentication service\n *\n * Emitted by {LoginComponent} in the onSubmit @method which is called\n * when the user click on the `Login` button of the login page form.\n */\nexport class TryToLogIn implements Action {\n    readonly type= AuthenticationActionTypes.TryToLogIn;\n\n    /* istanbul ignore next */\n    constructor(public payload: {username: string, password: string}){}\n}\n\n/**\n * Action used when the user logout\n *\n * Emitted by {NavbarComponent} win the logOut @method which is called\n * when the user click on the `logOut` button of the `navbar`\n */\nexport class TryToLogOut implements Action {\n    /* istanbul ignore next */\n    readonly type = AuthenticationActionTypes.TryToLogOut;\n}\n\n/**\n * Action used to notify the store that the authentication is not possible.\n *\n * Emmited by {AuthenticationEffect} in the following {Observable} @members:\n *  * `TryToLogin`;\n *  *  `CheckAuthentication`\n *  and in the `handleRejectedLogin` @method called by the `ChecAuthentication` {Observable}\n *\n * Used in the {function} reducer of the {authentication.reducer.ts} file to create a new state\n * without any authentication information and containing a message about login rejection\n * by filtering on the {AuthenticationActionTypes.RejectLogIn} type.\n *\n */\nexport class RejectLogIn implements Action {\n    readonly type = AuthenticationActionTypes.RejectLogIn;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Message }) {}\n}\n\n/**\n * Action used to removes authentication information of the system and thus logOut the user.\n *\n * Emitted by {AuthenticationEffect} in the following {Observable} @members:\n *  * `TryToLogOut`\n *  * `RejectLogInAttempt`\n *\n *  Consume by {AuthenticationEffect} in the `AcceptLogOut` {Observable} @member\n *\n */\nexport class AcceptLogOut implements Action {\n    readonly type = AuthenticationActionTypes.AcceptLogOut;\n\n    /* istanbul ignore next */\n    constructor(){}\n}\n\n/**\n * Action used to notify the store to remove authentication information\n *\n * Emitted by {AuthenticationEffect} in `AcceptLogOut` {Observable} @member.\n *\n * Used in the {function} reducer of the {authentication.reducer.ts} file to create a new state\n * without any authentication information by filtering on the {AuthenticationActionTypes.AcceptLogOut} type.\n */\nexport class AcceptLogOutSuccess implements Action {\n    /* istanbul ignore next */\n    readonly type = AuthenticationActionTypes.AcceptLogOutSuccess;\n}\n\nexport class CheckImplicitFlowAuthenticationStatus implements Action {\n    readonly type = AuthenticationActionTypes.CheckImplicitFlowAuthenticationStatus;\n}\n\nexport class UselessAuthAction implements  Action{\n    readonly type = AuthenticationActionTypes.UselessAuthAction;\n\n}\n\nexport class ImplicitlyAuthenticated implements Action {\n    readonly type = AuthenticationActionTypes.ImplicitallyAuthenticated;\n}\n\nexport class UnAuthenticationFromImplicitFlow implements Action {\n    readonly type = AuthenticationActionTypes.UnAuthenticationFromImplicitFlow;\n}\nexport type AuthenticationActions =\n    InitAuthStatus\n    | AcceptLogIn\n    | RejectLogIn\n    | TryToLogIn\n    | TryToLogOut\n    | CheckAuthenticationStatus\n    | AcceptLogOut\n    | AcceptLogOutSuccess\n    | CheckImplicitFlowAuthenticationStatus\n    | UselessAuthAction\n    | ImplicitlyAuthenticated\n    |UnAuthenticationFromImplicitFlow;\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AcceptLogOutSuccess.html":{"url":"classes/AcceptLogOutSuccess.html","title":"class - AcceptLogOutSuccess","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AcceptLogOutSuccess\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/authentication.actions.ts\n        \n\n            \n                Description\n            \n            \n                Action used to notify the store to remove authentication information\nEmitted by {AuthenticationEffect} in AcceptLogOut {Observable} @member.\nUsed in the {function} reducer of the {authentication.reducer.ts} file to create a new state\nwithout any authentication information by filtering on the {AuthenticationActionTypes.AcceptLogOut} type.\n\n            \n\n\n            \n                Implements\n            \n            \n                            Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : AuthenticationActionTypes.AcceptLogOutSuccess\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/authentication.actions.ts:151\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Action} from '@ngrx/store';\nimport {Guid} from 'guid-typescript';\nimport {Message} from \"@ofModel/message.model\";\nimport {ExtractI18nBuilderOptions} from \"@angular-devkit/build-angular\";\n\nexport enum AuthenticationActionTypes {\n    InitAuthStatus = '[Authentication] Init Authentication Status',\n    CheckAuthenticationStatus = '[Authentication] Check Authentication Status',\n    AcceptLogIn = '[Authentication] Accept the user log in attempt',\n    RejectLogIn = '[Authentication] Reject the user log in attempt',\n    TryToLogIn = '[Authentication] Try to log the user in',\n    TryToLogOut = '[Authentication] Try to log the user out',\n    AcceptLogOut = '[Authentication] Accept the user log out attempt',\n    AcceptLogOutSuccess = '[Authentication] Success Accept the user log out attempt',\n    CheckImplicitFlowAuthenticationStatus = '[Authentication] Check Authentication Status specifically for the Implicit Flow',\n    UselessAuthAction = '[Authentication] test purpose action'\n    // TODO the following actions should be merge with password and code flow management of authentication\n    , ImplicitallyAuthenticated = '[Authentication] user is authentication using Implicit Flow' //\n    , UnAuthenticationFromImplicitFlow = '[Authentication[ user is log out by implicit Flow internal managment'\n}\n\n/**\n * Authentication success payload\n */\nexport class PayloadForSuccessfulAuthentication {\n    constructor(public identifier: string,\n                public clientId: Guid,\n                public token: string,\n                public expirationDate: Date,\n                public firstName?:string,\n                public lastName?:string) {\n    }\n}\n\n/**\n * It aims to validate the current authentication if exists.\n *\n */\nexport class InitAuthStatus implements Action {\n    readonly type = AuthenticationActionTypes.InitAuthStatus;\n    /* istanbul ignore next */\n    constructor(public payload:{code: string}){}\n}\n\n/**\n * It aims to validate the current authentication if exists.\n *\n */\nexport class CheckAuthenticationStatus implements Action {\n    /* istanbul ignore next */\n    readonly type = AuthenticationActionTypes.CheckAuthenticationStatus;\n}\n\n/**\n * Action used to update the state with the authentication information\n *\n * Emitted by {AuthenticationEffects} in the following {Observable} @members:\n *  * TryToLogIn\n *  * CheckAuthentication via handleLogInAttempt @method\n *\n * Used in the {function} reducer of the {authentication.reducer.ts} file to create a new state\n * containing the authentication information by filtering on the {AuthenticationActionTypes.AcceptLogIn} type.\n *\n */\nexport class AcceptLogIn implements Action {\n    readonly type = AuthenticationActionTypes.AcceptLogIn;\n\n    /* istanbul ignore next */\n    constructor(public payload: PayloadForSuccessfulAuthentication) {}\n}\n\n/**\n * Action used to push login/password pair to the authentication service\n *\n * Emitted by {LoginComponent} in the onSubmit @method which is called\n * when the user click on the `Login` button of the login page form.\n */\nexport class TryToLogIn implements Action {\n    readonly type= AuthenticationActionTypes.TryToLogIn;\n\n    /* istanbul ignore next */\n    constructor(public payload: {username: string, password: string}){}\n}\n\n/**\n * Action used when the user logout\n *\n * Emitted by {NavbarComponent} win the logOut @method which is called\n * when the user click on the `logOut` button of the `navbar`\n */\nexport class TryToLogOut implements Action {\n    /* istanbul ignore next */\n    readonly type = AuthenticationActionTypes.TryToLogOut;\n}\n\n/**\n * Action used to notify the store that the authentication is not possible.\n *\n * Emmited by {AuthenticationEffect} in the following {Observable} @members:\n *  * `TryToLogin`;\n *  *  `CheckAuthentication`\n *  and in the `handleRejectedLogin` @method called by the `ChecAuthentication` {Observable}\n *\n * Used in the {function} reducer of the {authentication.reducer.ts} file to create a new state\n * without any authentication information and containing a message about login rejection\n * by filtering on the {AuthenticationActionTypes.RejectLogIn} type.\n *\n */\nexport class RejectLogIn implements Action {\n    readonly type = AuthenticationActionTypes.RejectLogIn;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Message }) {}\n}\n\n/**\n * Action used to removes authentication information of the system and thus logOut the user.\n *\n * Emitted by {AuthenticationEffect} in the following {Observable} @members:\n *  * `TryToLogOut`\n *  * `RejectLogInAttempt`\n *\n *  Consume by {AuthenticationEffect} in the `AcceptLogOut` {Observable} @member\n *\n */\nexport class AcceptLogOut implements Action {\n    readonly type = AuthenticationActionTypes.AcceptLogOut;\n\n    /* istanbul ignore next */\n    constructor(){}\n}\n\n/**\n * Action used to notify the store to remove authentication information\n *\n * Emitted by {AuthenticationEffect} in `AcceptLogOut` {Observable} @member.\n *\n * Used in the {function} reducer of the {authentication.reducer.ts} file to create a new state\n * without any authentication information by filtering on the {AuthenticationActionTypes.AcceptLogOut} type.\n */\nexport class AcceptLogOutSuccess implements Action {\n    /* istanbul ignore next */\n    readonly type = AuthenticationActionTypes.AcceptLogOutSuccess;\n}\n\nexport class CheckImplicitFlowAuthenticationStatus implements Action {\n    readonly type = AuthenticationActionTypes.CheckImplicitFlowAuthenticationStatus;\n}\n\nexport class UselessAuthAction implements  Action{\n    readonly type = AuthenticationActionTypes.UselessAuthAction;\n\n}\n\nexport class ImplicitlyAuthenticated implements Action {\n    readonly type = AuthenticationActionTypes.ImplicitallyAuthenticated;\n}\n\nexport class UnAuthenticationFromImplicitFlow implements Action {\n    readonly type = AuthenticationActionTypes.UnAuthenticationFromImplicitFlow;\n}\nexport type AuthenticationActions =\n    InitAuthStatus\n    | AcceptLogIn\n    | RejectLogIn\n    | TryToLogIn\n    | TryToLogOut\n    | CheckAuthenticationStatus\n    | AcceptLogOut\n    | AcceptLogOutSuccess\n    | CheckImplicitFlowAuthenticationStatus\n    | UselessAuthAction\n    | ImplicitlyAuthenticated\n    |UnAuthenticationFromImplicitFlow;\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Action.html":{"url":"classes/Action.html","title":"class - Action","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Action\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/model/thirds.model.ts\n        \n\n\n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(type: ActionType, label: I18n, hidden: boolean, buttonStyle: string, contentStyle: string, inputs: Input[], lockAction: boolean, lockCard: boolean, updateState: boolean, updateStateBeforeAction: boolean, called: boolean, needsConfirm: boolean, key?: string)\n                    \n                \n                        \n                            \n                                Defined in src/app/model/thirds.model.ts:82\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        type\n                                                  \n                                                        \n                                                                        ActionType\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        label\n                                                  \n                                                        \n                                                                        I18n\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        hidden\n                                                  \n                                                        \n                                                                        boolean\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        buttonStyle\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        contentStyle\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        inputs\n                                                  \n                                                        \n                                                                        Input[]\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        lockAction\n                                                  \n                                                        \n                                                                        boolean\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        lockCard\n                                                  \n                                                        \n                                                                        boolean\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        updateState\n                                                  \n                                                        \n                                                                        boolean\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        updateStateBeforeAction\n                                                  \n                                                        \n                                                                        boolean\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        called\n                                                  \n                                                        \n                                                                        boolean\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        needsConfirm\n                                                  \n                                                        \n                                                                        boolean\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        key\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Card, Detail} from \"@ofModel/card.model\";\nimport {I18n} from \"@ofModel/i18n.model\";\nimport {Map as OfMap} from \"@ofModel/map\";\n\nexport class Third {\n    /* istanbul ignore next */\n    constructor(\n        readonly name: string,\n        readonly version: string,\n        readonly i18nLabelKey: string,\n        readonly templates?: string[],\n        readonly csses?: string[],\n        readonly locales?: string[],\n        readonly menuEntries?: ThirdMenuEntry[],\n        readonly processes?: OfMap\n    ) {\n    }\n\n    public extractState(card: Card): State {\n        if (card.process && this.processes[card.process]) {\n            const process = this.processes[card.process];\n            if (card.state && process.states[card.state]) {\n                return process.states[card.state];\n            }\n        }\n        return null;\n    }\n}\n\nexport class ThirdMenuEntry {\n    /* istanbul ignore next */\n    constructor(\n        readonly id: string,\n        readonly label: string,\n        readonly url: string\n    ) {\n    }\n}\n\nexport class ThirdMenu {\n    /* istanbul ignore next */\n    constructor(\n        readonly id: string,\n        readonly version: string,\n        readonly label: string,\n        readonly entries: ThirdMenuEntry[]) {\n    }\n}\n\nexport class Process {\n    /* istanbul ignore next */\n    constructor(\n        readonly states?: OfMap\n    ) {\n    }\n}\n\nexport class State {\n    /* istanbul ignore next */\n    constructor(\n        readonly details?: Detail[],\n        readonly actions?: OfMap\n    ) {\n    }\n}\n\nexport enum ActionType {\n    EXTERNAL = 'EXTERNAL',\n    JNLP = 'JNLP',\n    URL = 'URL'\n\n}\n\nexport class Action {\n    /* istanbul ignore next */\n    constructor(\n        readonly type: ActionType,\n        readonly label: I18n,\n        readonly hidden: boolean = false,\n        readonly buttonStyle: string = '',\n        readonly contentStyle: string = '',\n        readonly inputs: Input[] = [],\n        readonly lockAction: boolean = false,\n        readonly lockCard: boolean = false,\n        readonly updateState: boolean = false,\n        readonly updateStateBeforeAction: boolean = false,\n        readonly called: boolean = false,\n        readonly needsConfirm: boolean = false,\n        readonly key?: string\n    ) {\n    }\n\n}\n\nexport const emptyAction = new Action(null, null);\n\ntype Omit = Pick>;\n\nexport class ActionStatus {\n    constructor(\n        readonly label: I18n,\n        readonly hidden: boolean = false,\n        readonly buttonStyle: string = '',\n        readonly contentStyle: string = '',\n        readonly inputs: Input[] = [],\n        readonly lockCard: boolean = false,\n        readonly updateState: boolean = false,\n        readonly updateStateBeforeAction: boolean = false,\n        readonly needsConfirm: boolean = false,\n        readonly lockAction: boolean = false,\n    ) {\n    }\n}\n\nexport const emptyActionStatus = new ActionStatus(null);\n\n/*\nfor some reasons lodash equals take attribute order declaration in account to compute object equality\nneeded by LightCardEffects updateAThirdAction Effect and by checkIfReceivedStatusIsDifferentFromCurrentOne method of ThirdActionService .\n */\nexport function extractActionStatusFromPseudoActionStatus(tAction: object): ActionStatus {\n    let label = new I18n('');\n    const i18n = tAction['label'];\n    if (i18n) {\n        const params = i18n['parameters'];\n        if (params) {\n            Object.setPrototypeOf(params, OfMap.prototype);\n            label = new I18n(i18n['key'], params);\n        } else {\n            label = new I18n(i18n['key']);\n        }\n\n    }\n    const result = new ActionStatus(\n        label\n        , tAction['hidden']\n        , tAction['buttonStyle']\n        , tAction['contentStyle']\n        , tAction['inputs'] // TODO Need proper prototype handling\n        , tAction['lockCard']\n        , tAction['updateState']\n        , tAction['updateStateBeforeAction']\n        , tAction['needsConfirm']\n        , tAction['lockAction']\n    );\n    return result;\n}\n\n\nexport enum InputType {\n    TEXT,\n    LIST,\n    LIST_RADIO,\n    SWITCH_LIST,\n    LONGTEXT,\n    BOOLEAN,\n    STATIC\n}\n\nexport class Input {\n    /* istanbul ignore next */\n    constructor(\n        readonly type: InputType,\n        readonly name: string,\n        readonly label: I18n,\n        readonly value: string,\n        readonly mandatory: boolean,\n        readonly maxLength: number,\n        readonly rows: number,\n        readonly values: ParameterListItem[],\n        readonly selectedValues: string[],\n        readonly unSelectedValues: string[],\n    ) {\n    }\n}\n\nexport class ParameterListItem {\n    /* istanbul ignore next */\n    constructor(\n        readonly label: I18n,\n        readonly value: string,\n    ) {\n    }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ActionComponent.html":{"url":"components/ActionComponent.html","title":"component - ActionComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ActionComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/cards/components/action/action.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                of-action\n            \n\n            \n                styleUrls\n                ./action.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./action.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                currentActionPath\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                submit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                action\n                            \n                            \n                                actionUrlPath\n                            \n                            \n                                i18nPrefix\n                            \n                            \n                                lightCardId\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(_modalService: NgbModal, actionService: ThirdActionService)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/cards/components/action/action.component.ts:26\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _modalService\n                                                  \n                                                        \n                                                                    NgbModal\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        actionService\n                                                  \n                                                        \n                                                                        ThirdActionService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        action\n                    \n                \n                \n                    \n                        Type :         Action\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/cards/components/action/action.component.ts:22\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        actionUrlPath\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/cards/components/action/action.component.ts:25\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        i18nPrefix\n                    \n                \n                \n                    \n                        Type :         I18n\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/cards/components/action/action.component.ts:23\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        lightCardId\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/cards/components/action/action.component.ts:24\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/cards/components/action/action.component.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            submit\n                        \n                        \n                    \n                \n            \n            \n                \nsubmit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/cards/components/action/action.component.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            currentActionPath\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/cards/components/action/action.component.ts:26\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import {Component, Input, OnInit} from '@angular/core';\nimport {Action} from \"@ofModel/thirds.model\";\nimport {I18n} from \"@ofModel/i18n.model\";\nimport {NgbModal} from '@ng-bootstrap/ng-bootstrap';\nimport {ThirdActionService} from \"@ofServices/third-action.service\";\n\n@Component({\n    selector: 'of-action',\n    templateUrl: './action.component.html',\n    styleUrls: ['./action.component.scss']\n})\nexport class ActionComponent implements OnInit {\n\n    @Input()  action: Action;\n    @Input()  i18nPrefix: I18n;\n    @Input()  lightCardId: string;\n    @Input()  actionUrlPath: string;\n    private currentActionPath: string;\n    /* istanbul ignore next */\n    constructor(\n        private _modalService: NgbModal\n        , private actionService: ThirdActionService) {\n    }\n\n    ngOnInit(): void {\n        this.currentActionPath = `${this.actionUrlPath}/${this.action.key}`;\n    }\n\n    submit() {\n        this.actionService.submit(\n            this.lightCardId\n            , this.currentActionPath\n            , this.action\n            , this._modalService);\n    }\n}\n\n    \n\n    \n        \n\n\n\n\n\n{{i18nPrefix + action.label.key}}\n\n    \n\n    \n                \n                    ./action.component.scss\n                \n                /* Copyright (c) 2020, RTE (http://www.rte-france.com)\n *\n * This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n */\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '{{i18nPrefix + action.label.key}}'\n    var COMPONENTS = [{'name': 'ActionComponent', 'selector': 'of-action'},{'name': 'AppComponent', 'selector': 'of-root'},{'name': 'ArchiveFiltersComponent', 'selector': 'of-archive-filters'},{'name': 'ArchiveListComponent', 'selector': 'of-archive-list'},{'name': 'ArchiveListPageComponent', 'selector': 'of-archive-list-page'},{'name': 'ArchivesComponent', 'selector': 'of-archives'},{'name': 'BaseSettingComponent', 'selector': 'of-base-setting'},{'name': 'CardComponent', 'selector': 'of-card'},{'name': 'CardDetailsComponent', 'selector': 'of-card-details'},{'name': 'CardListComponent', 'selector': 'of-card-list'},{'name': 'ConfirmModalComponent', 'selector': 'confirm-modal-component'},{'name': 'CustomLogoComponent', 'selector': 'of-custom-logo'},{'name': 'CustomTimelineChartComponent', 'selector': 'of-custom-timeline-chart'},{'name': 'DatetimeFilterComponent', 'selector': 'of-datetime-filter'},{'name': 'DetailComponent', 'selector': 'of-detail'},{'name': 'DetailsComponent', 'selector': 'of-details'},{'name': 'EmailSettingComponent', 'selector': 'of-email-setting'},{'name': 'FeedComponent', 'selector': 'of-cards'},{'name': 'FiltersComponent', 'selector': 'of-filters'},{'name': 'IconComponent', 'selector': 'of-icon'},{'name': 'IframeDisplayComponent', 'selector': 'of-iframedisplay'},{'name': 'InfoComponent', 'selector': 'of-info'},{'name': 'InitChartComponent', 'selector': 'of-init-chart'},{'name': 'ListSettingComponent', 'selector': 'of-list-setting'},{'name': 'LoginComponent', 'selector': 'of-login'},{'name': 'MenuLinkComponent', 'selector': 'of-menu-link'},{'name': 'MultiFilterComponent', 'selector': 'of-multi-filter'},{'name': 'MultiSettingsComponent', 'selector': 'of-multi-settings'},{'name': 'NavbarComponent', 'selector': 'of-navbar'},{'name': 'NoSelectionComponent', 'selector': 'of-no-selection'},{'name': 'ResizableComponent', 'selector': 'of-resizable'},{'name': 'SettingsComponent', 'selector': 'of-settings'},{'name': 'TagsFilterComponent', 'selector': 'of-tags-filter'},{'name': 'TextSettingComponent', 'selector': 'of-text-setting'},{'name': 'TimeFilterComponent', 'selector': 'of-time-filter'},{'name': 'TimeLineComponent', 'selector': 'of-time-line'},{'name': 'TypeAheadSettingsComponent', 'selector': 'of-type-ahead-settings'},{'name': 'TypeFilterComponent', 'selector': 'of-type-filter'}];\n    var DIRECTIVES = [{'name': 'CalcHeightDirective', 'selector': '[calcHeightDirective]'},{'name': 'DraggableDirective', 'selector': '[appDraggable]'},{'name': 'MouseWheelDirective', 'selector': '[appMouseWheel]'}];\n    var ACTUAL_COMPONENT = {'name': 'ActionComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ActionStatus.html":{"url":"classes/ActionStatus.html","title":"class - ActionStatus","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ActionStatus\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/model/thirds.model.ts\n        \n\n\n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(label: I18n, hidden: boolean, buttonStyle: string, contentStyle: string, inputs: Input[], lockCard: boolean, updateState: boolean, updateStateBeforeAction: boolean, needsConfirm: boolean, lockAction: boolean)\n                    \n                \n                        \n                            \n                                Defined in src/app/model/thirds.model.ts:107\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        label\n                                                  \n                                                        \n                                                                        I18n\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        hidden\n                                                  \n                                                        \n                                                                        boolean\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        buttonStyle\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        contentStyle\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        inputs\n                                                  \n                                                        \n                                                                        Input[]\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        lockCard\n                                                  \n                                                        \n                                                                        boolean\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        updateState\n                                                  \n                                                        \n                                                                        boolean\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        updateStateBeforeAction\n                                                  \n                                                        \n                                                                        boolean\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        needsConfirm\n                                                  \n                                                        \n                                                                        boolean\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        lockAction\n                                                  \n                                                        \n                                                                        boolean\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Card, Detail} from \"@ofModel/card.model\";\nimport {I18n} from \"@ofModel/i18n.model\";\nimport {Map as OfMap} from \"@ofModel/map\";\n\nexport class Third {\n    /* istanbul ignore next */\n    constructor(\n        readonly name: string,\n        readonly version: string,\n        readonly i18nLabelKey: string,\n        readonly templates?: string[],\n        readonly csses?: string[],\n        readonly locales?: string[],\n        readonly menuEntries?: ThirdMenuEntry[],\n        readonly processes?: OfMap\n    ) {\n    }\n\n    public extractState(card: Card): State {\n        if (card.process && this.processes[card.process]) {\n            const process = this.processes[card.process];\n            if (card.state && process.states[card.state]) {\n                return process.states[card.state];\n            }\n        }\n        return null;\n    }\n}\n\nexport class ThirdMenuEntry {\n    /* istanbul ignore next */\n    constructor(\n        readonly id: string,\n        readonly label: string,\n        readonly url: string\n    ) {\n    }\n}\n\nexport class ThirdMenu {\n    /* istanbul ignore next */\n    constructor(\n        readonly id: string,\n        readonly version: string,\n        readonly label: string,\n        readonly entries: ThirdMenuEntry[]) {\n    }\n}\n\nexport class Process {\n    /* istanbul ignore next */\n    constructor(\n        readonly states?: OfMap\n    ) {\n    }\n}\n\nexport class State {\n    /* istanbul ignore next */\n    constructor(\n        readonly details?: Detail[],\n        readonly actions?: OfMap\n    ) {\n    }\n}\n\nexport enum ActionType {\n    EXTERNAL = 'EXTERNAL',\n    JNLP = 'JNLP',\n    URL = 'URL'\n\n}\n\nexport class Action {\n    /* istanbul ignore next */\n    constructor(\n        readonly type: ActionType,\n        readonly label: I18n,\n        readonly hidden: boolean = false,\n        readonly buttonStyle: string = '',\n        readonly contentStyle: string = '',\n        readonly inputs: Input[] = [],\n        readonly lockAction: boolean = false,\n        readonly lockCard: boolean = false,\n        readonly updateState: boolean = false,\n        readonly updateStateBeforeAction: boolean = false,\n        readonly called: boolean = false,\n        readonly needsConfirm: boolean = false,\n        readonly key?: string\n    ) {\n    }\n\n}\n\nexport const emptyAction = new Action(null, null);\n\ntype Omit = Pick>;\n\nexport class ActionStatus {\n    constructor(\n        readonly label: I18n,\n        readonly hidden: boolean = false,\n        readonly buttonStyle: string = '',\n        readonly contentStyle: string = '',\n        readonly inputs: Input[] = [],\n        readonly lockCard: boolean = false,\n        readonly updateState: boolean = false,\n        readonly updateStateBeforeAction: boolean = false,\n        readonly needsConfirm: boolean = false,\n        readonly lockAction: boolean = false,\n    ) {\n    }\n}\n\nexport const emptyActionStatus = new ActionStatus(null);\n\n/*\nfor some reasons lodash equals take attribute order declaration in account to compute object equality\nneeded by LightCardEffects updateAThirdAction Effect and by checkIfReceivedStatusIsDifferentFromCurrentOne method of ThirdActionService .\n */\nexport function extractActionStatusFromPseudoActionStatus(tAction: object): ActionStatus {\n    let label = new I18n('');\n    const i18n = tAction['label'];\n    if (i18n) {\n        const params = i18n['parameters'];\n        if (params) {\n            Object.setPrototypeOf(params, OfMap.prototype);\n            label = new I18n(i18n['key'], params);\n        } else {\n            label = new I18n(i18n['key']);\n        }\n\n    }\n    const result = new ActionStatus(\n        label\n        , tAction['hidden']\n        , tAction['buttonStyle']\n        , tAction['contentStyle']\n        , tAction['inputs'] // TODO Need proper prototype handling\n        , tAction['lockCard']\n        , tAction['updateState']\n        , tAction['updateStateBeforeAction']\n        , tAction['needsConfirm']\n        , tAction['lockAction']\n    );\n    return result;\n}\n\n\nexport enum InputType {\n    TEXT,\n    LIST,\n    LIST_RADIO,\n    SWITCH_LIST,\n    LONGTEXT,\n    BOOLEAN,\n    STATIC\n}\n\nexport class Input {\n    /* istanbul ignore next */\n    constructor(\n        readonly type: InputType,\n        readonly name: string,\n        readonly label: I18n,\n        readonly value: string,\n        readonly mandatory: boolean,\n        readonly maxLength: number,\n        readonly rows: number,\n        readonly values: ParameterListItem[],\n        readonly selectedValues: string[],\n        readonly unSelectedValues: string[],\n    ) {\n    }\n}\n\nexport class ParameterListItem {\n    /* istanbul ignore next */\n    constructor(\n        readonly label: I18n,\n        readonly value: string,\n    ) {\n    }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AddActionsAppear.html":{"url":"classes/AddActionsAppear.html","title":"class - AddActionsAppear","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AddActionsAppear\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/card.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: string)\n                    \n                \n                        \n                            \n                                Defined in src/app/store/actions/card.actions.ts:76\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/card.actions.ts:78\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : CardActionTypes.AddActionsAppear\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/card.actions.ts:76\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Action} from '@ngrx/store';\nimport {Card} from '@ofModel/card.model';\n\nexport enum CardActionTypes {\n    ClearCard = '[Card] Clear',\n    LoadCard = '[Card] Load Card',\n    LoadCardSuccess = '[Card] Load Card Success',\n    LoadCardFailure = '[Card] Load Card Fail',\n    LoadArchivedCard = '[Card] Load Archived Card',\n    LoadArchivedCardSuccess = '[Card] Load Archived Card Success',\n    LoadArchivedCardFailure = '[Card] Load Archived Card Fail',\n    HandleUnexpectedError = '[Card] Handle unexpected error related to card issue',\n    AddActionsAppear = '[Card] Add Actions Appear'\n}\n// needed by NGRX entities\nexport class ClearCard implements Action {\n    readonly type = CardActionTypes.ClearCard;\n}\nexport class LoadCard implements Action {\n    readonly type = CardActionTypes.LoadCard;\n\n    /* istanbul ignore next */\n    constructor(public payload: { id: string }) {}\n}\nexport class LoadCardFailure implements Action {\n    readonly type = CardActionTypes.LoadCardFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {}\n}\n\nexport class LoadCardSuccess implements Action {\n    readonly type = CardActionTypes.LoadCardSuccess;\n\n    /* istanbul ignore next */\n    constructor(public payload: { card: Card }) {}\n}\n\nexport class LoadArchivedCard implements Action {\n    readonly type = CardActionTypes.LoadArchivedCard;\n\n    /* istanbul ignore next */\n    constructor(public payload: { id: string }) {}\n}\nexport class LoadArchivedCardFailure implements Action {\n    readonly type = CardActionTypes.LoadArchivedCardFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {}\n}\n\nexport class LoadArchivedCardSuccess implements Action {\n    readonly type = CardActionTypes.LoadArchivedCardSuccess;\n\n    /* istanbul ignore next */\n    constructor(public payload: { card: Card }) {}\n}\n\nexport class HandleUnexpectedError implements Action {\n    /* istanbul ignore next */\n    readonly type = CardActionTypes.HandleUnexpectedError;\n\n    /* istanbul ignore next */\n    constructor(public payload: {error: Error}) {}\n}\n\nexport class AddActionsAppear implements Action {\n    readonly type = CardActionTypes.AddActionsAppear;\n    /* istanbul ignore next */\n    constructor(public payload: string) {}\n}\n\nexport type CardActions = ClearCard\n    | LoadCard\n    | LoadCardSuccess\n    | LoadCardFailure\n    | LoadArchivedCard\n    | LoadArchivedCardSuccess\n    | LoadArchivedCardFailure\n    | HandleUnexpectedError\n    | AddActionsAppear;\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AddLightCardFailure.html":{"url":"classes/AddLightCardFailure.html","title":"class - AddLightCardFailure","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AddLightCardFailure\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/light-card.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/store/actions/light-card.actions.ts:90\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/light-card.actions.ts:93\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : LightCardActionTypes.AddLightCardFailure\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/light-card.actions.ts:90\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Action} from '@ngrx/store';\nimport {LightCard} from '@ofModel/light-card.model';\nimport {Action as ThirdAction, ActionStatus} from '@ofModel/thirds.model';\nimport {Update} from \"@ngrx/entity\";\n\nexport enum LightCardActionTypes {\n    LoadLightCards = '[LCard] Load',\n    EmptyLightCards = '[LCard] Empty',\n    LoadLightCardsSuccess = '[LCard] Load Success',\n    LoadLightCardsExtendedData = '[LCard] Load Extended Data',\n    LoadLightCardsFailure = '[LCard] Load Fail',\n    SelectLightCard = '[LCard] Select One',\n    ClearLightCardSelection = '[LCard] Clear Light Card Selection',\n    AddLightCardFailure = '[LCard] Add Light Card Fail',\n    UpdatedSubscription = '[LCard] UpdateSubscription',\n    HandleUnexpectedError = '[LCard] Handle unexpected error related to authentication issue',\n    RemoveLightCard = '[LCard] Remove a card',\n    AddThirdActions = '[LCard] Adds some Third Actions to existing card',\n    UpdateALightCard = '[LCard] Update a Light Card',\n    UpdateAnAction = '[LCard] Update one Action of a LightCard',\n    UpdateAnActionFailure = '[LCard] No actions where available to update for the current selected card in the state',\n    ThirdActionAlreadyLoaded = '[LCard] Light Card contains actions',\n    ThirdActionAlreadyUpdated = '[LCard] Third Action unchanged',\n    DelayedLightCardUpdate = '[LCard] update Light Card actions later',\n    LightCardAlreadyUpdated = '[LCard] Light Card already Updated'\n}\n\n// needed by NGRX entities\nexport class LoadLightCards implements Action {\n    /* istanbul ignore next */\n    readonly type = LightCardActionTypes.LoadLightCards;\n}\n\nexport class EmptyLightCards implements Action {\n    /* istanbul ignore next */\n    readonly type = LightCardActionTypes.EmptyLightCards;\n}\n\nexport class LoadLightCardsSuccess implements Action {\n    readonly type = LightCardActionTypes.LoadLightCardsSuccess;\n\n    /* istanbul ignore next */\n    constructor(public payload: { lightCards: LightCard[] }) {\n    }\n}\n\nexport class LoadLightCardsExtendedData implements Action {\n    readonly type = LightCardActionTypes.LoadLightCardsExtendedData;\n\n    /* istanbul ignore next */\n    constructor() {\n    }\n}\n\nexport class LoadLightCardsFailure implements Action {\n    readonly type = LightCardActionTypes.LoadLightCardsFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport class SelectLightCard implements Action {\n    /* istanbul ignore next */\n    readonly type = LightCardActionTypes.SelectLightCard;\n\n    /* istanbul ignore next */\n    constructor(public payload: { selectedCardId: string }) {\n    }\n\n}\n\nexport class ClearLightCardSelection implements Action {\n\n    readonly type = LightCardActionTypes.ClearLightCardSelection;\n\n    constructor() {\n    }\n}\n\nexport class AddLightCardFailure implements Action {\n    readonly type = LightCardActionTypes.AddLightCardFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport class UpdatedSubscription implements Action {\n    readonly type = LightCardActionTypes.UpdatedSubscription;\n\n    /* istanbul ignore next */\n    constructor() {\n    }\n}\n\nexport class HandleUnexpectedError implements Action {\n    /* istanbul ignore next */\n    readonly type = LightCardActionTypes.HandleUnexpectedError;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport class RemoveLightCard implements Action {\n    readonly type = LightCardActionTypes.RemoveLightCard;\n\n    constructor(public  payload: { cards: string[] }) {\n    }\n}\n\nexport class AddThirdActions implements Action {\n    readonly type = LightCardActionTypes.AddThirdActions;\n\n    constructor(public payload: { card: LightCard, actions: Map }) {\n    }\n}\n\nexport class UpdateALightCard implements Action {\n    readonly type = LightCardActionTypes.UpdateALightCard;\n\n    constructor(public payload: { card: LightCard }) {\n    }\n}\n\nexport class UpdateAnAction implements Action {\n    readonly type = LightCardActionTypes.UpdateAnAction;\n\n    constructor(public payload: { cardId: string, actionKey: string, status: ActionStatus }) {\n    }\n}\n\nexport class UpdateAnActionFailure implements Action {\n    readonly type = LightCardActionTypes.UpdateAnActionFailure;\n\n    constructor() {\n    }\n}\n\nexport class ThirdActionAlreadyLoaded implements Action {\n    readonly type = LightCardActionTypes.ThirdActionAlreadyLoaded;\n\n    constructor() {\n    }\n}\n\nexport class ThirdActionAlreadyUpdated implements Action {\n    readonly type = LightCardActionTypes.ThirdActionAlreadyUpdated;\n\n    constructor() {\n    }\n}\n\nexport class DelayedLightCardUpdate implements Action {\n    readonly type = LightCardActionTypes.DelayedLightCardUpdate;\n\n    constructor(public payload: { card: LightCard }) {\n    }\n}\n\nexport class LightCardAlreadyUpdated implements Action {\n    readonly type = LightCardActionTypes.LightCardAlreadyUpdated;\n\n    constructor() {\n    }\n}\n\nexport type LightCardActions =\n    LoadLightCards\n    | LoadLightCardsSuccess\n    | LoadLightCardsFailure\n    | SelectLightCard\n    | ClearLightCardSelection\n    | AddLightCardFailure\n    | UpdatedSubscription\n    | HandleUnexpectedError\n    | EmptyLightCards\n    | AddThirdActions\n    | UpdateALightCard\n    | UpdateAnAction\n    | UpdateAnActionFailure\n    | ThirdActionAlreadyLoaded\n    | ThirdActionAlreadyUpdated\n    | DelayedLightCardUpdate\n    | LightCardAlreadyUpdated\n    | RemoveLightCard;\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AddThirdActions.html":{"url":"classes/AddThirdActions.html","title":"class - AddThirdActions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AddThirdActions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/light-card.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/store/actions/light-card.actions.ts:122\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/light-card.actions.ts:124\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : LightCardActionTypes.AddThirdActions\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/light-card.actions.ts:122\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Action} from '@ngrx/store';\nimport {LightCard} from '@ofModel/light-card.model';\nimport {Action as ThirdAction, ActionStatus} from '@ofModel/thirds.model';\nimport {Update} from \"@ngrx/entity\";\n\nexport enum LightCardActionTypes {\n    LoadLightCards = '[LCard] Load',\n    EmptyLightCards = '[LCard] Empty',\n    LoadLightCardsSuccess = '[LCard] Load Success',\n    LoadLightCardsExtendedData = '[LCard] Load Extended Data',\n    LoadLightCardsFailure = '[LCard] Load Fail',\n    SelectLightCard = '[LCard] Select One',\n    ClearLightCardSelection = '[LCard] Clear Light Card Selection',\n    AddLightCardFailure = '[LCard] Add Light Card Fail',\n    UpdatedSubscription = '[LCard] UpdateSubscription',\n    HandleUnexpectedError = '[LCard] Handle unexpected error related to authentication issue',\n    RemoveLightCard = '[LCard] Remove a card',\n    AddThirdActions = '[LCard] Adds some Third Actions to existing card',\n    UpdateALightCard = '[LCard] Update a Light Card',\n    UpdateAnAction = '[LCard] Update one Action of a LightCard',\n    UpdateAnActionFailure = '[LCard] No actions where available to update for the current selected card in the state',\n    ThirdActionAlreadyLoaded = '[LCard] Light Card contains actions',\n    ThirdActionAlreadyUpdated = '[LCard] Third Action unchanged',\n    DelayedLightCardUpdate = '[LCard] update Light Card actions later',\n    LightCardAlreadyUpdated = '[LCard] Light Card already Updated'\n}\n\n// needed by NGRX entities\nexport class LoadLightCards implements Action {\n    /* istanbul ignore next */\n    readonly type = LightCardActionTypes.LoadLightCards;\n}\n\nexport class EmptyLightCards implements Action {\n    /* istanbul ignore next */\n    readonly type = LightCardActionTypes.EmptyLightCards;\n}\n\nexport class LoadLightCardsSuccess implements Action {\n    readonly type = LightCardActionTypes.LoadLightCardsSuccess;\n\n    /* istanbul ignore next */\n    constructor(public payload: { lightCards: LightCard[] }) {\n    }\n}\n\nexport class LoadLightCardsExtendedData implements Action {\n    readonly type = LightCardActionTypes.LoadLightCardsExtendedData;\n\n    /* istanbul ignore next */\n    constructor() {\n    }\n}\n\nexport class LoadLightCardsFailure implements Action {\n    readonly type = LightCardActionTypes.LoadLightCardsFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport class SelectLightCard implements Action {\n    /* istanbul ignore next */\n    readonly type = LightCardActionTypes.SelectLightCard;\n\n    /* istanbul ignore next */\n    constructor(public payload: { selectedCardId: string }) {\n    }\n\n}\n\nexport class ClearLightCardSelection implements Action {\n\n    readonly type = LightCardActionTypes.ClearLightCardSelection;\n\n    constructor() {\n    }\n}\n\nexport class AddLightCardFailure implements Action {\n    readonly type = LightCardActionTypes.AddLightCardFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport class UpdatedSubscription implements Action {\n    readonly type = LightCardActionTypes.UpdatedSubscription;\n\n    /* istanbul ignore next */\n    constructor() {\n    }\n}\n\nexport class HandleUnexpectedError implements Action {\n    /* istanbul ignore next */\n    readonly type = LightCardActionTypes.HandleUnexpectedError;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport class RemoveLightCard implements Action {\n    readonly type = LightCardActionTypes.RemoveLightCard;\n\n    constructor(public  payload: { cards: string[] }) {\n    }\n}\n\nexport class AddThirdActions implements Action {\n    readonly type = LightCardActionTypes.AddThirdActions;\n\n    constructor(public payload: { card: LightCard, actions: Map }) {\n    }\n}\n\nexport class UpdateALightCard implements Action {\n    readonly type = LightCardActionTypes.UpdateALightCard;\n\n    constructor(public payload: { card: LightCard }) {\n    }\n}\n\nexport class UpdateAnAction implements Action {\n    readonly type = LightCardActionTypes.UpdateAnAction;\n\n    constructor(public payload: { cardId: string, actionKey: string, status: ActionStatus }) {\n    }\n}\n\nexport class UpdateAnActionFailure implements Action {\n    readonly type = LightCardActionTypes.UpdateAnActionFailure;\n\n    constructor() {\n    }\n}\n\nexport class ThirdActionAlreadyLoaded implements Action {\n    readonly type = LightCardActionTypes.ThirdActionAlreadyLoaded;\n\n    constructor() {\n    }\n}\n\nexport class ThirdActionAlreadyUpdated implements Action {\n    readonly type = LightCardActionTypes.ThirdActionAlreadyUpdated;\n\n    constructor() {\n    }\n}\n\nexport class DelayedLightCardUpdate implements Action {\n    readonly type = LightCardActionTypes.DelayedLightCardUpdate;\n\n    constructor(public payload: { card: LightCard }) {\n    }\n}\n\nexport class LightCardAlreadyUpdated implements Action {\n    readonly type = LightCardActionTypes.LightCardAlreadyUpdated;\n\n    constructor() {\n    }\n}\n\nexport type LightCardActions =\n    LoadLightCards\n    | LoadLightCardsSuccess\n    | LoadLightCardsFailure\n    | SelectLightCard\n    | ClearLightCardSelection\n    | AddLightCardFailure\n    | UpdatedSubscription\n    | HandleUnexpectedError\n    | EmptyLightCards\n    | AddThirdActions\n    | UpdateALightCard\n    | UpdateAnAction\n    | UpdateAnActionFailure\n    | ThirdActionAlreadyLoaded\n    | ThirdActionAlreadyUpdated\n    | DelayedLightCardUpdate\n    | LightCardAlreadyUpdated\n    | RemoveLightCard;\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                of-root\n            \n\n            \n                styleUrls\n                ./app.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                configLoaded\n                            \n                            \n                                currentPath\n                            \n                            \n                                getRoutePE\n                            \n                            \n                                isAuthenticated$\n                            \n                            \n                                    Private\n                                maxedRetries\n                            \n                            \n                                    Readonly\n                                title\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                    Public\n                                setTitle\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store, i18nService: I18nService, titleService: Title, authenticationService: AuthenticationService)\n                    \n                \n                        \n                            \n                                Defined in src/app/app.component.ts:31\n                            \n                        \n\n                \n                    \n                            NB: I18nService is injected to trigger its constructor at application startup\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                        Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        i18nService\n                                                  \n                                                        \n                                                                        I18nService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        titleService\n                                                  \n                                                        \n                                                                        Title\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authenticationService\n                                                  \n                                                        \n                                                                        AuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/app.component.ts:53\n                \n            \n\n\n            \n                \n                    On Init the app take trace of the current url and of the authentication status\nOnce the subscription done, send an Action to Check the current authentication status.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            setTitle\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setTitle(newTitle: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/app.component.ts:45\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    newTitle\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            configLoaded\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            currentPath\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getRoutePE\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isAuthenticated$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            maxedRetries\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:31\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            title\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'OperatorFabric'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:26\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import {Component, OnInit} from '@angular/core';\nimport {Title} from '@angular/platform-browser';\nimport {select, Store} from '@ngrx/store';\nimport {Observable} from 'rxjs';\nimport {AppState} from '@ofStore/index';\nimport {selectCurrentUrl, selectRouterState} from '@ofSelectors/router.selectors';\nimport {AuthenticationService} from \"@ofServices/authentication/authentication.service\";\nimport {LoadConfig} from \"@ofActions/config.actions\";\nimport {buildConfigSelector, selectConfigLoaded, selectMaxedRetries} from \"@ofSelectors/config.selectors\";\nimport {I18nService} from \"@ofServices/i18n.service\";\n\n@Component({\n    selector: 'of-root',\n    templateUrl: './app.component.html',\n    styleUrls: ['./app.component.scss']\n})\nexport class AppComponent implements OnInit {\n    readonly title = 'OperatorFabric';\n    getRoutePE: Observable;\n    currentPath: any;\n    isAuthenticated$: boolean = false;\n    configLoaded: boolean = false;\n    private maxedRetries: boolean = false;\n\n    /**\n     * NB: I18nService is injected to trigger its constructor at application startup\n     * @param store\n     * @param i18nService\n     */\n    constructor(private store: Store,\n                private i18nService: I18nService,\n                private titleService: Title\n        , private authenticationService: AuthenticationService) {\n        this.getRoutePE = this.store.pipe(select(selectRouterState));\n    }\n\n    public setTitle(newTitle: string) {\n        this.titleService.setTitle(newTitle);\n    }\n\n    /**\n     * On Init the app take trace of the current url and of the authentication status\n     * Once the subscription done, send an Action to Check the current authentication status.\n     */\n    ngOnInit() {\n        console.log(`location: ${location.href}`);\n        this.authenticationService.initializeAuthentication();\n        this.store.pipe(select(selectCurrentUrl)).subscribe(url => this.currentPath = url);\n        this.authenticationService.linkAuthenticationStatus(\n            (isAuthenticated: boolean) => {\n                this.isAuthenticated$ = isAuthenticated;\n            });\n        this.store\n            .select(selectConfigLoaded)\n            .subscribe(loaded => this.configLoaded = loaded);\n        this.store\n            .select(selectMaxedRetries)\n            .subscribe((maxedRetries => this.maxedRetries = maxedRetries));\n        this.store.dispatch(new LoadConfig());\n\n        const sTitle = this.store.select(buildConfigSelector('title', this.title));\n        sTitle.subscribe(data => {\n            this.setTitle(data);\n        });\n    }\n}\n\n    \n\n    \n        \n\n\n\n\n\n\n\n\n    \n    \n    \n    \n    \n        Application is loading ...\n    \n        \n        Application is not available yet, please reload later (F5)\n    \n    \n\n\n    \n\n    \n                \n                    ./app.component.scss\n                \n                /* Copyright (c) 2020, RTE (http://www.rte-france.com)\n *\n * This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n */\n\n.button {margin-right: 8px;}\n\n.app-content {\n  height: 100%; //This allows to take up all the space in body, minus padding\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                            Application is loading ...                    Application is not available yet, please reload later (F5)        '\n    var COMPONENTS = [{'name': 'ActionComponent', 'selector': 'of-action'},{'name': 'AppComponent', 'selector': 'of-root'},{'name': 'ArchiveFiltersComponent', 'selector': 'of-archive-filters'},{'name': 'ArchiveListComponent', 'selector': 'of-archive-list'},{'name': 'ArchiveListPageComponent', 'selector': 'of-archive-list-page'},{'name': 'ArchivesComponent', 'selector': 'of-archives'},{'name': 'BaseSettingComponent', 'selector': 'of-base-setting'},{'name': 'CardComponent', 'selector': 'of-card'},{'name': 'CardDetailsComponent', 'selector': 'of-card-details'},{'name': 'CardListComponent', 'selector': 'of-card-list'},{'name': 'ConfirmModalComponent', 'selector': 'confirm-modal-component'},{'name': 'CustomLogoComponent', 'selector': 'of-custom-logo'},{'name': 'CustomTimelineChartComponent', 'selector': 'of-custom-timeline-chart'},{'name': 'DatetimeFilterComponent', 'selector': 'of-datetime-filter'},{'name': 'DetailComponent', 'selector': 'of-detail'},{'name': 'DetailsComponent', 'selector': 'of-details'},{'name': 'EmailSettingComponent', 'selector': 'of-email-setting'},{'name': 'FeedComponent', 'selector': 'of-cards'},{'name': 'FiltersComponent', 'selector': 'of-filters'},{'name': 'IconComponent', 'selector': 'of-icon'},{'name': 'IframeDisplayComponent', 'selector': 'of-iframedisplay'},{'name': 'InfoComponent', 'selector': 'of-info'},{'name': 'InitChartComponent', 'selector': 'of-init-chart'},{'name': 'ListSettingComponent', 'selector': 'of-list-setting'},{'name': 'LoginComponent', 'selector': 'of-login'},{'name': 'MenuLinkComponent', 'selector': 'of-menu-link'},{'name': 'MultiFilterComponent', 'selector': 'of-multi-filter'},{'name': 'MultiSettingsComponent', 'selector': 'of-multi-settings'},{'name': 'NavbarComponent', 'selector': 'of-navbar'},{'name': 'NoSelectionComponent', 'selector': 'of-no-selection'},{'name': 'ResizableComponent', 'selector': 'of-resizable'},{'name': 'SettingsComponent', 'selector': 'of-settings'},{'name': 'TagsFilterComponent', 'selector': 'of-tags-filter'},{'name': 'TextSettingComponent', 'selector': 'of-text-setting'},{'name': 'TimeFilterComponent', 'selector': 'of-time-filter'},{'name': 'TimeLineComponent', 'selector': 'of-time-line'},{'name': 'TypeAheadSettingsComponent', 'selector': 'of-type-ahead-settings'},{'name': 'TypeFilterComponent', 'selector': 'of-type-filter'}];\n    var DIRECTIVES = [{'name': 'CalcHeightDirective', 'selector': '[calcHeightDirective]'},{'name': 'DraggableDirective', 'selector': '[appDraggable]'},{'name': 'MouseWheelDirective', 'selector': '[appMouseWheel]'}];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nCustomLogoComponent\n\nCustomLogoComponent\n\nAppModule -->\n\nCustomLogoComponent->AppModule\n\n\n\n\n\nIconComponent\n\nIconComponent\n\nAppModule -->\n\nIconComponent->AppModule\n\n\n\n\n\nInfoComponent\n\nInfoComponent\n\nAppModule -->\n\nInfoComponent->AppModule\n\n\n\n\n\nLoginComponent\n\nLoginComponent\n\nAppModule -->\n\nLoginComponent->AppModule\n\n\n\n\n\nMenuLinkComponent\n\nMenuLinkComponent\n\nAppModule -->\n\nMenuLinkComponent->AppModule\n\n\n\n\n\nNavbarComponent\n\nNavbarComponent\n\nAppModule -->\n\nNavbarComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nServicesModule\n\nServicesModule\n\nAppModule -->\n\nServicesModule->AppModule\n\n\n\n\n\nStateModule\n\nStateModule\n\nAppModule -->\n\nStateModule->AppModule\n\n\n\n\n\nUtilitiesModule\n\nUtilitiesModule\n\nAppModule -->\n\nUtilitiesModule->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AppComponent\n                        \n                        \n                            CustomLogoComponent\n                        \n                        \n                            IconComponent\n                        \n                        \n                            InfoComponent\n                        \n                        \n                            LoginComponent\n                        \n                        \n                            MenuLinkComponent\n                        \n                        \n                            NavbarComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AppRoutingModule\n                        \n                        \n                            ServicesModule\n                        \n                        \n                            StateModule\n                        \n                        \n                            UtilitiesModule\n                        \n                    \n                \n                \n                    Bootstrap\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        /* Copyright (c) 2020, RTE (http://www.rte-france.com)\n *\n * This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n */\n\n\nimport {BrowserModule} from '@angular/platform-browser';\nimport {NgModule} from '@angular/core';\nimport {BrowserAnimationsModule} from '@angular/platform-browser/animations';\nimport {HttpClientModule} from '@angular/common/http';\nimport {CommonModule, HashLocationStrategy, LocationStrategy} from '@angular/common';\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\nimport {StateModule} from '@ofStore/state.module';\nimport {NgbModule} from '@ng-bootstrap/ng-bootstrap';\nimport {ServicesModule} from '@ofServices/services.module';\nimport {AppRoutingModule} from './app-routing.module';\nimport {AppComponent} from './app.component';\nimport {NavbarComponent} from './components/navbar/navbar.component';\nimport {LoginComponent} from './components/login/login.component';\nimport {IconComponent} from './components/navbar/icon/icon.component';\nimport {TranslateModule} from '@ngx-translate/core';\nimport {translateConfig} from './translate.config';\nimport {FontAwesomeModule} from '@fortawesome/angular-fontawesome';\nimport {library} from '@fortawesome/fontawesome-svg-core';\nimport {faExternalLinkAlt, faSignOutAlt} from '@fortawesome/free-solid-svg-icons';\nimport {InfoComponent} from './components/navbar/info/info.component';\nimport {UtilitiesModule} from './modules/utilities/utilities.module';\nimport {MenuLinkComponent} from './components/navbar/menus/menu-link/menu-link.component';\nimport {CustomLogoComponent} from './components/navbar/custom-logo/custom-logo.component';\nimport {OAuthModule} from 'angular-oauth2-oidc';\n\nlibrary.add(faExternalLinkAlt);\nlibrary.add(faSignOutAlt);\n\n@NgModule({\n    imports: [\n        CommonModule,\n        BrowserModule,\n        BrowserAnimationsModule,\n        FormsModule,\n        ReactiveFormsModule,\n        OAuthModule.forRoot(),\n        HttpClientModule,\n        StateModule.forRoot(),\n        ServicesModule.forRoot(),\n        NgbModule,\n        TranslateModule.forRoot(translateConfig),\n        FontAwesomeModule,\n        UtilitiesModule,\n        AppRoutingModule\n    ],\n    declarations: [AppComponent,\n        NavbarComponent,\n        LoginComponent,\n        IconComponent,\n        InfoComponent,\n        MenuLinkComponent,\n        CustomLogoComponent],\n    providers: [{provide: LocationStrategy, useClass: HashLocationStrategy}],\n    bootstrap: [AppComponent]\n})\nexport class AppModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppRoutingModule.html":{"url":"modules/AppRoutingModule.html","title":"module - AppRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    AppRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app-routing.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        /* Copyright (c) 2020, RTE (http://www.rte-france.com)\n *\n * This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n */\n\n\nimport {NgModule} from '@angular/core';\nimport {PreloadAllModules, Router, RouterModule, Routes} from '@angular/router';\nimport {LoginComponent} from './components/login/login.component';\n\nconst defaultPath = '/feed';\nconst archivePath = 'archives';\n\nconst routes: Routes = [\n    {\n        path: 'feed',\n        loadChildren: './modules/feed/feed.module#FeedModule',\n        // canActivate: [AuthenticationGuard]\n    },\n    {\n        path: archivePath,\n        loadChildren: './modules/archives/archives.module#ArchivesModule',\n        // canActivate: [AuthenticationGuard]\n    },\n    {\n        path: 'thirdparty',\n        loadChildren: './modules/thirdparty/thirdparty.module#ThirdpartyModule',\n        // canActivate: [AuthenticationGuard]\n    },\n    {\n        path: 'settings',\n        loadChildren: './modules/settings/settings.module#SettingsModule',\n        // canActivate: [AuthenticationGuard]\n    },\n    {\n        path: 'navbar',\n        component: LoginComponent\n    },\n    {path: '**', redirectTo: defaultPath}\n];\n// TODO manage visible path more gently\nexport const navigationRoutes: Routes = routes.slice(0, 2);\n\n/**\n * Redirect the page to the same place.\n * Useful for page refresh action\n * @param currentRouter - the router configured in the object calling this function\n */\nexport function redirectToCurrentLocation(currentRouter: Router): void {\n    const pathname = window.location.hash;\n    const hashLength = pathname.length;\n    const destination = (hashLength > 2) ? pathname.substr(1, hashLength - 1) : defaultPath;\n    // as archive searches are not stored need to got back to archives root path\n    const lastDestination = (destination.includes(archivePath)) ? archivePath : destination;\n    currentRouter.navigate([lastDestination]);\n}\n\n@NgModule({\n    imports: [\n        RouterModule.forRoot(routes, {\n            enableTracing: false, preloadingStrategy:\n            PreloadAllModules,\n            /* sets initialNavigation to false is needed to enable authentication implicit flow\n            * otherwise HashLocationStrategy breaks it by handling '#' within `window.location`.\n            */\n            initialNavigation: false\n        })],\n    exports: [RouterModule]\n})\nexport class AppRoutingModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/AppState.html":{"url":"interfaces/AppState.html","title":"interface - AppState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  AppState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/index.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        archive\n                                \n                                \n                                        authentication\n                                \n                                \n                                        card\n                                \n                                \n                                        config\n                                \n                                \n                                        feed\n                                \n                                \n                                        menu\n                                \n                                \n                                        router\n                                \n                                \n                                        settings\n                                \n                                \n                                        time\n                                \n                                \n                                        timeline\n                                \n                                \n                                        translation\n                                \n                                \n                                        user\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        archive\n                                    \n                                \n                                \n                                    \n                                        archive:         ArchiveState\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ArchiveState\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        authentication\n                                    \n                                \n                                \n                                    \n                                        authentication:         AuthState\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         AuthState\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        card\n                                    \n                                \n                                \n                                    \n                                        card:         CardState\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         CardState\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        config\n                                    \n                                \n                                \n                                    \n                                        config:         ConfigState\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ConfigState\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        feed\n                                    \n                                \n                                \n                                    \n                                        feed:         CardFeedState\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         CardFeedState\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        menu\n                                    \n                                \n                                \n                                    \n                                        menu:         MenuState\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         MenuState\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        router\n                                    \n                                \n                                \n                                    \n                                        router:     RouterReducerState\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     RouterReducerState\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        settings\n                                    \n                                \n                                \n                                    \n                                        settings:         SettingsState\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         SettingsState\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        time\n                                    \n                                \n                                \n                                    \n                                        time:         TimeState\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         TimeState\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        timeline\n                                    \n                                \n                                \n                                    \n                                        timeline:         TimelineState\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         TimelineState\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        translation\n                                    \n                                \n                                \n                                    \n                                        translation:         TranslationState\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         TranslationState\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        user\n                                    \n                                \n                                \n                                    \n                                        user:         UserState\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         UserState\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import * as fromRouter from '@ngrx/router-store';\nimport {RouterReducerState} from '@ngrx/router-store';\nimport {RouterStateUrl} from '@ofStore/states/router.state';\nimport {reducer as authenticationReducer} from '@ofStore/reducers/authentication.reducer';\nimport {ActionReducerMap, MetaReducer} from '@ngrx/store';\nimport {environment} from '@env/environment';\nimport {storeFreeze} from 'ngrx-store-freeze';\nimport {CardEffects} from '@ofEffects/card.effects';\nimport {CardOperationEffects} from '@ofEffects/card-operation.effects';\nimport {AuthenticationEffects} from '@ofEffects/authentication.effects';\nimport {RouterEffects} from 'ngrx-router';\nimport {CardFeedState} from '@ofStates/feed.state';\nimport {reducer as timelineReducer} from '@ofStore/reducers/timeline.reducer';\nimport {reducer as lightCardReducer} from '@ofStore/reducers/light-card.reducer';\nimport {reducer as cardReducer} from '@ofStore/reducers/card.reducer';\nimport {reducer as configReducer} from '@ofStore/reducers/config.reducer';\nimport {reducer as settingsReducer} from '@ofStore/reducers/settings.reducer';\nimport {reducer as menuReducer} from '@ofStore/reducers/menu.reducer';\nimport {reducer as timeReducer} from '@ofStore/reducers/time.reducer';\nimport {reducer as archiveReducer} from '@ofStore/reducers/archive.reducer';\nimport {AuthState} from '@ofStates/authentication.state';\nimport {CardState} from \"@ofStates/card.state\";\nimport {CustomRouterEffects} from \"@ofEffects/custom-router.effects\";\nimport {MenuState} from \"@ofStates/menu.state\";\nimport {MenuEffects} from \"@ofEffects/menu.effects\";\nimport {LightCardEffects} from \"@ofEffects/light-card.effects\";\nimport {FeedFiltersEffects} from \"@ofEffects/feed-filters.effects\";\nimport {ConfigState} from \"@ofStates/config.state\";\nimport {ConfigEffects} from \"@ofEffects/config.effects\";\nimport {TimelineState} from \"@ofStates/timeline.state\";\nimport {SettingsState} from \"@ofStates/settings.state\";\nimport {SettingsEffects} from \"@ofEffects/settings.effects\";\nimport {TimeState} from \"@ofStates/time.state\";\nimport {TimeEffects} from \"@ofEffects/time.effects\";\nimport {ArchiveState} from \"@ofStates/archive.state\";\nimport {ArchiveEffects} from \"@ofEffects/archive.effects\";\n\nimport {reducer as userReducer} from '@ofStore/reducers/user.reducer';\nimport {UserState} from \"@ofStates/user.state\";\nimport {UserEffects} from \"@ofEffects/user.effects\";\n\nimport {reducer as translationReducer} from \"@ofStore/reducers/translation.reducer\";\nimport {TranslateEffects} from \"@ofEffects/translate.effects\";\nimport {TranslationState} from \"@ofStates/translation.state\";\n\nexport interface AppState {\n    router: RouterReducerState;\n    feed: CardFeedState;\n    timeline: TimelineState;\n    authentication: AuthState;\n    card: CardState;\n    menu: MenuState;\n    config: ConfigState;\n    settings: SettingsState;\n    time: TimeState;\n    archive: ArchiveState;\n    user: UserState;\n    translation: TranslationState;\n}\n\nexport const appEffects = [\n    CardEffects,\n    ConfigEffects,\n    SettingsEffects,\n    CardOperationEffects,\n    RouterEffects,\n    CustomRouterEffects,\n    AuthenticationEffects,\n    MenuEffects,\n    LightCardEffects,\n    FeedFiltersEffects,\n    TimeEffects,\n    ArchiveEffects,\n    UserEffects,\n    TranslateEffects\n];\n\nexport const appReducer: ActionReducerMap = {\n    router: fromRouter.routerReducer,\n    feed: lightCardReducer,\n    timeline: timelineReducer,\n    authentication: authenticationReducer,\n    card: cardReducer,\n    menu: menuReducer,\n    config: configReducer,\n    settings: settingsReducer,\n    time: timeReducer,\n    archive: archiveReducer,\n    user: userReducer,\n    translation: translationReducer\n};\n\nexport const appMetaReducers: MetaReducer[] = !environment.production\n    ? [storeFreeze]\n    : [];\n\nexport const storeConfig = {\n    metaReducers: appMetaReducers\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ApplyFilter.html":{"url":"classes/ApplyFilter.html","title":"class - ApplyFilter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ApplyFilter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/feed.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/store/actions/feed.actions.ts:19\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/feed.actions.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : FeedActionTypes.ApplyFilter\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/feed.actions.ts:19\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Action} from '@ngrx/store';\nimport {Filter} from \"@ofModel/feed-filter.model\";\nimport {FilterType} from \"@ofServices/filter.service\";\n\nexport enum FeedActionTypes {\n    ApplyFilter = '[Feed] Change filter Status',\n    InitFilter = '[Feed] Init filter',\n}\n\nexport class ApplyFilter implements Action {\n    readonly type = FeedActionTypes.ApplyFilter;\n    /* istanbul ignore next */\n    constructor(public payload:{name: FilterType, active: boolean, status: any}){}\n}\n\nexport class InitFilters implements Action {\n    readonly type = FeedActionTypes.InitFilter;\n\n    /* istanbul ignore next */\n    constructor(public payload:{filters: Map}){}\n}\n\nexport type FeedActions =\n    InitFilters\n    | ApplyFilter;\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ArchiveEffects.html":{"url":"injectables/ArchiveEffects.html","title":"injectable - ArchiveEffects","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ArchiveEffects\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/effects/archive.effects.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                queryArchivedCards\n                            \n                            \n                                queryArchivedCardsPage\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store, actions$: Actions, service: CardService)\n                    \n                \n                        \n                            \n                                Defined in src/app/store/effects/archive.effects.ts:29\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                        Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        actions$\n                                                  \n                                                        \n                                                                        Actions\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        service\n                                                  \n                                                        \n                                                                        CardService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            queryArchivedCards\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Observable\n\n                        \n                    \n                    \n                        \n                            Default value : this.actions$.pipe(\n        ofType(ArchiveActionTypes.SendArchiveQuery),\n        // update the filter state and the archive list\n        switchMap((action: SendArchiveQuery) => {\n            const {params} = action.payload;\n            this.store.dispatch(new UpdateArchiveFilter({filters: params}));\n            return this.service.fetchArchivedCards(new Map(params));\n        }),\n        map((resultPage: Page) => new ArchiveQuerySuccess({resultPage})),\n        catchError((error, caught) => {\n            this.store.dispatch(new HandleUnexpectedError({error: error}));\n            return caught;\n        })\n    )\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Effect()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/effects/archive.effects.ts:36\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            queryArchivedCardsPage\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Observable\n\n                        \n                    \n                    \n                        \n                            Default value : this.actions$.pipe(\n        ofType(ArchiveActionTypes.UpdateArchivePage),\n        withLatestFrom(this.store.select(selectArchiveFilters)),\n        map(([action, filters]) => {\n            // get the current page\n            const page = (action as UpdateArchivePage).payload.page;\n            // modify the filters page\n            filters.set('page', [page.toString()]);\n            return new SendArchiveQuery({params: filters});\n        }),\n        catchError((error, caught) => {\n            this.store.dispatch(new HandleUnexpectedError({error: error}));\n            return caught;\n        })\n    )\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Effect()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/effects/archive.effects.ts:51\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import {Injectable} from '@angular/core';\nimport {Actions, Effect, ofType} from '@ngrx/effects';\nimport {CardService} from '@ofServices/card.service';\nimport {Observable} from 'rxjs';\nimport {catchError, map, switchMap, withLatestFrom} from 'rxjs/operators';\nimport {Action, Store} from '@ngrx/store';\nimport {AppState} from '@ofStore/index';\nimport {\n    ArchiveActionTypes,\n    ArchiveQuerySuccess,\n    HandleUnexpectedError,\n    SendArchiveQuery,\n    UpdateArchivePage\n} from '@ofActions/archive.actions';\nimport {LightCard} from '@ofModel/light-card.model';\nimport {selectArchiveFilters} from '@ofSelectors/archive.selectors';\nimport {Page} from '@ofModel/page.model';\nimport {UpdateArchiveFilter} from '../actions/archive.actions';\n\n@Injectable()\nexport class ArchiveEffects {\n\n    /* istanbul ignore next */\n    constructor(private store: Store, private actions$: Actions, private service: CardService) {\n    }\n\n    @Effect()\n    queryArchivedCards: Observable = this.actions$.pipe(\n        ofType(ArchiveActionTypes.SendArchiveQuery),\n        // update the filter state and the archive list\n        switchMap((action: SendArchiveQuery) => {\n            const {params} = action.payload;\n            this.store.dispatch(new UpdateArchiveFilter({filters: params}));\n            return this.service.fetchArchivedCards(new Map(params));\n        }),\n        map((resultPage: Page) => new ArchiveQuerySuccess({resultPage})),\n        catchError((error, caught) => {\n            this.store.dispatch(new HandleUnexpectedError({error: error}));\n            return caught;\n        })\n    );\n    @Effect()\n    queryArchivedCardsPage: Observable = this.actions$.pipe(\n        ofType(ArchiveActionTypes.UpdateArchivePage),\n        withLatestFrom(this.store.select(selectArchiveFilters)),\n        map(([action, filters]) => {\n            // get the current page\n            const page = (action as UpdateArchivePage).payload.page;\n            // modify the filters page\n            filters.set('page', [page.toString()]);\n            return new SendArchiveQuery({params: filters});\n        }),\n        catchError((error, caught) => {\n            this.store.dispatch(new HandleUnexpectedError({error: error}));\n            return caught;\n        })\n    );\n\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ArchiveFiltersComponent.html":{"url":"components/ArchiveFiltersComponent.html","title":"component - ArchiveFiltersComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ArchiveFiltersComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/archives/components/archive-filters/archive-filters.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                of-archive-filters\n            \n\n            \n                styleUrls\n                ./archive-filters.component.css\n            \n\n\n\n            \n                templateUrl\n                ./archive-filters.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                archiveForm\n                            \n                            \n                                filtersToMap\n                            \n                            \n                                first$\n                            \n                            \n                                processes$\n                            \n                            \n                                size$\n                            \n                            \n                                tags$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                sendQuery\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store, timeService: TimeService)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/archives/components/archive-filters/archive-filters.component.ts:52\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                        Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        timeService\n                                                  \n                                                        \n                                                                        TimeService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/archives/components/archive-filters/archive-filters.component.ts:66\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            sendQuery\n                        \n                        \n                    \n                \n            \n            \n                \nsendQuery()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/archives/components/archive-filters/archive-filters.component.ts:98\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            archiveForm\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormGroup\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/archives/components/archive-filters/archive-filters.component.ts:52\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            filtersToMap\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/archives/components/archive-filters/archive-filters.component.ts:76\n                            \n                        \n\n                \n                    \n                        Transorm the filters list to Map\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            first$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/archives/components/archive-filters/archive-filters.component.ts:50\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            processes$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/archives/components/archive-filters/archive-filters.component.ts:48\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            size$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/archives/components/archive-filters/archive-filters.component.ts:49\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            tags$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/archives/components/archive-filters/archive-filters.component.ts:47\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport {Observable, combineLatest} from 'rxjs';\nimport {Store} from '@ngrx/store';\nimport {AppState} from '@ofStore/index';\nimport {buildConfigSelector} from '@ofSelectors/config.selectors';\nimport { FormGroup, FormControl } from '@angular/forms';\nimport { SendArchiveQuery } from '@ofStore/actions/archive.actions';\nimport { DateTimeNgb } from '@ofModel/datetime-ngb.model';\nimport { NgbDateStruct, NgbTimeStruct } from '@ng-bootstrap/ng-bootstrap';\nimport { TimeService } from '@ofServices/time.service';\n\nexport enum FilterDateTypes {\n  PUBLISH_DATE_FROM_PARAM = 'publishDateFrom',\n  PUBLISH_DATE_TO_PARAM = 'publishDateTo',\n  ACTIVE_FROM_PARAM = 'activeFrom',\n  ACTIVE_TO_PARAM = 'activeTo'\n\n}\n\nexport const checkElement = (enumeration: typeof FilterDateTypes, value: string): boolean => {\n  let result = false;\n  if (Object.values(enumeration).includes(value)) {\n    result = true;\n  }\n  return result;\n};\n\nexport const transformToTimestamp = (date: NgbDateStruct, time: NgbTimeStruct): string => {\n  return new DateTimeNgb(date, time).formatDateTime();\n};\n\n@Component({\n  selector: 'of-archive-filters',\n  templateUrl: './archive-filters.component.html',\n  styleUrls: ['./archive-filters.component.css']\n})\nexport class ArchiveFiltersComponent implements OnInit {\n\n  tags$: Observable;\n  processes$: Observable;\n  size$: Observable;\n  first$: Observable;\n\n  archiveForm: FormGroup;\n\n  constructor(private store: Store, private timeService: TimeService) {\n    this.archiveForm = new FormGroup({\n      tags: new FormControl(''),\n      process: new FormControl(),\n      publishDateFrom: new FormControl(''),\n      publishDateTo: new FormControl(''),\n      activeFrom: new FormControl(''),\n      activeTo: new FormControl(''),\n    });\n  }\n\n\n  ngOnInit() {\n    this.tags$ = this.store.select(buildConfigSelector('archive.filters.tags.list'));\n    this.processes$ = this.store.select(buildConfigSelector('archive.filters.process.list'));\n    this.size$ = this.store.select(buildConfigSelector('archive.filters.page.size'));\n    this.first$ = this.store.select(buildConfigSelector('archive.filters.page.first'));\n  }\n\n  /**\n   * Transorm the filters list to Map\n   */\n  filtersToMap = (filters: any): Map => {\n    const params = new Map();\n    Object.keys(filters).forEach(key => {\n      const element = filters[key];\n        // if the form element is date\n      if (element) {\n        if (checkElement(FilterDateTypes, key)) {\n          const {date, time} = element;\n          if (date) {\n            const dateString = transformToTimestamp(date, time);\n            params.set(key, [this.timeService.toNgBTimestamp(dateString)]);\n          }\n        } else {\n          if (element.length) {\n            params.set(key, element);\n          }\n        }\n      }\n    });\n    return params;\n  }\n\n  sendQuery(): void {\n    const {value} = this.archiveForm;\n    const params = this.filtersToMap(value);\n    this.size$.subscribe(size => params.set('size', [size.toString()]));\n    this.first$.subscribe(first => params.set('page', [first.toString()]));\n    this.store.dispatch(new SendArchiveQuery({params}));\n  }\n\n}\n\n\n    \n\n    \n        \n\n\n\n\n\n\n  \n    \n      \n        \n          \n            \n          \n          \n            \n          \n        \n      \n      \n        \n      \n      \n        \n      \n      \n        \n      \n      \n        \n      \n      \n        \n          \n            archive.search\n          \n        \n      \n    \n  \n\n\n    \n\n    \n                \n                    ./archive-filters.component.css\n                \n                /* Copyright (c) 2020, RTE (http://www.rte-france.com)\n *\n * This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n */\n\n.nomarginrow {\n    margin-left:0;\n    margin-right:0;\n  }\n  .nopaddingrow {\n    padding-right:0;\n    padding-left:0;\n  }\n  .archive-filter {\n    padding-right:7px;\n    padding-left:0;\n  }\n  .archive-radius {\n    border-radius:5px;\n  }\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                                                                                                                                                                      archive.search                              '\n    var COMPONENTS = [{'name': 'ActionComponent', 'selector': 'of-action'},{'name': 'AppComponent', 'selector': 'of-root'},{'name': 'ArchiveFiltersComponent', 'selector': 'of-archive-filters'},{'name': 'ArchiveListComponent', 'selector': 'of-archive-list'},{'name': 'ArchiveListPageComponent', 'selector': 'of-archive-list-page'},{'name': 'ArchivesComponent', 'selector': 'of-archives'},{'name': 'BaseSettingComponent', 'selector': 'of-base-setting'},{'name': 'CardComponent', 'selector': 'of-card'},{'name': 'CardDetailsComponent', 'selector': 'of-card-details'},{'name': 'CardListComponent', 'selector': 'of-card-list'},{'name': 'ConfirmModalComponent', 'selector': 'confirm-modal-component'},{'name': 'CustomLogoComponent', 'selector': 'of-custom-logo'},{'name': 'CustomTimelineChartComponent', 'selector': 'of-custom-timeline-chart'},{'name': 'DatetimeFilterComponent', 'selector': 'of-datetime-filter'},{'name': 'DetailComponent', 'selector': 'of-detail'},{'name': 'DetailsComponent', 'selector': 'of-details'},{'name': 'EmailSettingComponent', 'selector': 'of-email-setting'},{'name': 'FeedComponent', 'selector': 'of-cards'},{'name': 'FiltersComponent', 'selector': 'of-filters'},{'name': 'IconComponent', 'selector': 'of-icon'},{'name': 'IframeDisplayComponent', 'selector': 'of-iframedisplay'},{'name': 'InfoComponent', 'selector': 'of-info'},{'name': 'InitChartComponent', 'selector': 'of-init-chart'},{'name': 'ListSettingComponent', 'selector': 'of-list-setting'},{'name': 'LoginComponent', 'selector': 'of-login'},{'name': 'MenuLinkComponent', 'selector': 'of-menu-link'},{'name': 'MultiFilterComponent', 'selector': 'of-multi-filter'},{'name': 'MultiSettingsComponent', 'selector': 'of-multi-settings'},{'name': 'NavbarComponent', 'selector': 'of-navbar'},{'name': 'NoSelectionComponent', 'selector': 'of-no-selection'},{'name': 'ResizableComponent', 'selector': 'of-resizable'},{'name': 'SettingsComponent', 'selector': 'of-settings'},{'name': 'TagsFilterComponent', 'selector': 'of-tags-filter'},{'name': 'TextSettingComponent', 'selector': 'of-text-setting'},{'name': 'TimeFilterComponent', 'selector': 'of-time-filter'},{'name': 'TimeLineComponent', 'selector': 'of-time-line'},{'name': 'TypeAheadSettingsComponent', 'selector': 'of-type-ahead-settings'},{'name': 'TypeFilterComponent', 'selector': 'of-type-filter'}];\n    var DIRECTIVES = [{'name': 'CalcHeightDirective', 'selector': '[calcHeightDirective]'},{'name': 'DraggableDirective', 'selector': '[appDraggable]'},{'name': 'MouseWheelDirective', 'selector': '[appMouseWheel]'}];\n    var ACTUAL_COMPONENT = {'name': 'ArchiveFiltersComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ArchiveListComponent.html":{"url":"components/ArchiveListComponent.html","title":"component - ArchiveListComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ArchiveListComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/archives/components/archive-list/archive-list.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                of-archive-list\n            \n\n            \n                styleUrls\n                ./archive-list.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./archive-list.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                lightCards\n                            \n                            \n                                selection\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/archives/components/archive-list/archive-list.component.ts:25\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                        Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        lightCards\n                    \n                \n                \n                    \n                        Type :     LightCard[]\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/archives/components/archive-list/archive-list.component.ts:24\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        selection\n                    \n                \n                \n                    \n                        Type :     Observable\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/archives/components/archive-list/archive-list.component.ts:25\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/archives/components/archive-list/archive-list.component.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import {Component, Input, OnInit} from '@angular/core';\nimport {LightCard} from '@ofModel/light-card.model';\nimport {Observable, of} from 'rxjs';\nimport { AppState } from '@ofStore/index';\nimport { Store, select } from '@ngrx/store';\nimport { catchError, tap } from 'rxjs/operators';\nimport { selectArchiveLightCards } from '@ofStore/selectors/archive.selectors';\n\n@Component({\n  selector: 'of-archive-list',\n  templateUrl: './archive-list.component.html',\n  styleUrls: ['./archive-list.component.scss']\n})\nexport class ArchiveListComponent implements OnInit {\n\n  @Input() public lightCards: LightCard[];\n  @Input() public selection: Observable;\n\n  constructor(private store: Store) { }\n\n  ngOnInit(): void {\n  }\n\n\n}\n\n    \n\n    \n        \n\n\n\n\n\n\n\n    \n      \n        \n      \n    \n    \n\n\n\n    \n\n    \n                \n                    ./archive-list.component.scss\n                \n                /* Copyright (c) 2020, RTE (http://www.rte-france.com)\n *\n * This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n */\n\n\n.feed-content {\n  height: 100%;\n}\n\n.calc-height-feed-content {\n  overflow-x: hidden;\n  overflow-y: auto;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                '\n    var COMPONENTS = [{'name': 'ActionComponent', 'selector': 'of-action'},{'name': 'AppComponent', 'selector': 'of-root'},{'name': 'ArchiveFiltersComponent', 'selector': 'of-archive-filters'},{'name': 'ArchiveListComponent', 'selector': 'of-archive-list'},{'name': 'ArchiveListPageComponent', 'selector': 'of-archive-list-page'},{'name': 'ArchivesComponent', 'selector': 'of-archives'},{'name': 'BaseSettingComponent', 'selector': 'of-base-setting'},{'name': 'CardComponent', 'selector': 'of-card'},{'name': 'CardDetailsComponent', 'selector': 'of-card-details'},{'name': 'CardListComponent', 'selector': 'of-card-list'},{'name': 'ConfirmModalComponent', 'selector': 'confirm-modal-component'},{'name': 'CustomLogoComponent', 'selector': 'of-custom-logo'},{'name': 'CustomTimelineChartComponent', 'selector': 'of-custom-timeline-chart'},{'name': 'DatetimeFilterComponent', 'selector': 'of-datetime-filter'},{'name': 'DetailComponent', 'selector': 'of-detail'},{'name': 'DetailsComponent', 'selector': 'of-details'},{'name': 'EmailSettingComponent', 'selector': 'of-email-setting'},{'name': 'FeedComponent', 'selector': 'of-cards'},{'name': 'FiltersComponent', 'selector': 'of-filters'},{'name': 'IconComponent', 'selector': 'of-icon'},{'name': 'IframeDisplayComponent', 'selector': 'of-iframedisplay'},{'name': 'InfoComponent', 'selector': 'of-info'},{'name': 'InitChartComponent', 'selector': 'of-init-chart'},{'name': 'ListSettingComponent', 'selector': 'of-list-setting'},{'name': 'LoginComponent', 'selector': 'of-login'},{'name': 'MenuLinkComponent', 'selector': 'of-menu-link'},{'name': 'MultiFilterComponent', 'selector': 'of-multi-filter'},{'name': 'MultiSettingsComponent', 'selector': 'of-multi-settings'},{'name': 'NavbarComponent', 'selector': 'of-navbar'},{'name': 'NoSelectionComponent', 'selector': 'of-no-selection'},{'name': 'ResizableComponent', 'selector': 'of-resizable'},{'name': 'SettingsComponent', 'selector': 'of-settings'},{'name': 'TagsFilterComponent', 'selector': 'of-tags-filter'},{'name': 'TextSettingComponent', 'selector': 'of-text-setting'},{'name': 'TimeFilterComponent', 'selector': 'of-time-filter'},{'name': 'TimeLineComponent', 'selector': 'of-time-line'},{'name': 'TypeAheadSettingsComponent', 'selector': 'of-type-ahead-settings'},{'name': 'TypeFilterComponent', 'selector': 'of-type-filter'}];\n    var DIRECTIVES = [{'name': 'CalcHeightDirective', 'selector': '[calcHeightDirective]'},{'name': 'DraggableDirective', 'selector': '[appDraggable]'},{'name': 'MouseWheelDirective', 'selector': '[appMouseWheel]'}];\n    var ACTUAL_COMPONENT = {'name': 'ArchiveListComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ArchiveListPageComponent.html":{"url":"components/ArchiveListPageComponent.html","title":"component - ArchiveListPageComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ArchiveListPageComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/archives/components/archive-list/archive-list-page/archive-list-page.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                of-archive-list-page\n            \n\n            \n                styleUrls\n                ./archive-list-page.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./archive-list-page.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                collectionSize$\n                            \n                            \n                                first$\n                            \n                            \n                                size$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                updateResultPage\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/archives/components/archive-list/archive-list-page/archive-list-page.component.ts:27\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                        Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/archives/components/archive-list/archive-list-page/archive-list-page.component.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            updateResultPage\n                        \n                        \n                    \n                \n            \n            \n                \nupdateResultPage(currentPage)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/archives/components/archive-list/archive-list-page/archive-list-page.component.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    currentPage\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            collectionSize$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/archives/components/archive-list/archive-list-page/archive-list-page.component.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            first$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/archives/components/archive-list/archive-list-page/archive-list-page.component.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            size$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/archives/components/archive-list/archive-list-page/archive-list-page.component.ts:27\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, Input } from '@angular/core';\nimport {UpdateArchivePage} from '@ofActions/archive.actions';\nimport {Store, select} from '@ngrx/store';\nimport {AppState} from '@ofStore/index';\nimport { selectArchiveCount } from '@ofStore/selectors/archive.selectors';\nimport { tap, catchError } from 'rxjs/operators';\nimport { of, Observable } from 'rxjs';\nimport { buildConfigSelector } from '@ofStore/selectors/config.selectors';\n\n@Component({\n  selector: 'of-archive-list-page',\n  templateUrl: './archive-list-page.component.html',\n  styleUrls: ['./archive-list-page.component.scss']\n})\nexport class ArchiveListPageComponent implements OnInit {\n\n  collectionSize$: Observable;\n  first$: Observable;\n  size$: Observable;\n  constructor(private store: Store) {}\n  ngOnInit(): void {\n    this.collectionSize$ = this.store.pipe(\n      select(selectArchiveCount),\n      catchError(err => of(0))\n    );\n    this.size$ = this.store.select(buildConfigSelector('archive.filters.page.size'));\n    this.first$ = this.store.select(buildConfigSelector('archive.filters.page.first'));\n  }\n\n  updateResultPage(currentPage): void {\n    this.store.dispatch(new UpdateArchivePage({page: currentPage - 1}));\n  }\n}\n\n    \n\n    \n        \n\n\n\n\n\n (size$ | async)\"\n  [collectionSize]=\"collectionSize$ | async\"\n  [page]=\"first$ | async\"\n  (pageChange)=\"updateResultPage($event)\"\n  [maxSize]=\"3\"\n  [rotate]=\"true\">\n\n\n    \n\n    \n                \n                    ./archive-list-page.component.scss\n                \n                /* Copyright (c) 2020, RTE (http://www.rte-france.com)\n *\n * This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n */\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ' (size$ | async)\"  [collectionSize]=\"collectionSize$ | async\"  [page]=\"first$ | async\"  (pageChange)=\"updateResultPage($event)\"  [maxSize]=\"3\"  [rotate]=\"true\">'\n    var COMPONENTS = [{'name': 'ActionComponent', 'selector': 'of-action'},{'name': 'AppComponent', 'selector': 'of-root'},{'name': 'ArchiveFiltersComponent', 'selector': 'of-archive-filters'},{'name': 'ArchiveListComponent', 'selector': 'of-archive-list'},{'name': 'ArchiveListPageComponent', 'selector': 'of-archive-list-page'},{'name': 'ArchivesComponent', 'selector': 'of-archives'},{'name': 'BaseSettingComponent', 'selector': 'of-base-setting'},{'name': 'CardComponent', 'selector': 'of-card'},{'name': 'CardDetailsComponent', 'selector': 'of-card-details'},{'name': 'CardListComponent', 'selector': 'of-card-list'},{'name': 'ConfirmModalComponent', 'selector': 'confirm-modal-component'},{'name': 'CustomLogoComponent', 'selector': 'of-custom-logo'},{'name': 'CustomTimelineChartComponent', 'selector': 'of-custom-timeline-chart'},{'name': 'DatetimeFilterComponent', 'selector': 'of-datetime-filter'},{'name': 'DetailComponent', 'selector': 'of-detail'},{'name': 'DetailsComponent', 'selector': 'of-details'},{'name': 'EmailSettingComponent', 'selector': 'of-email-setting'},{'name': 'FeedComponent', 'selector': 'of-cards'},{'name': 'FiltersComponent', 'selector': 'of-filters'},{'name': 'IconComponent', 'selector': 'of-icon'},{'name': 'IframeDisplayComponent', 'selector': 'of-iframedisplay'},{'name': 'InfoComponent', 'selector': 'of-info'},{'name': 'InitChartComponent', 'selector': 'of-init-chart'},{'name': 'ListSettingComponent', 'selector': 'of-list-setting'},{'name': 'LoginComponent', 'selector': 'of-login'},{'name': 'MenuLinkComponent', 'selector': 'of-menu-link'},{'name': 'MultiFilterComponent', 'selector': 'of-multi-filter'},{'name': 'MultiSettingsComponent', 'selector': 'of-multi-settings'},{'name': 'NavbarComponent', 'selector': 'of-navbar'},{'name': 'NoSelectionComponent', 'selector': 'of-no-selection'},{'name': 'ResizableComponent', 'selector': 'of-resizable'},{'name': 'SettingsComponent', 'selector': 'of-settings'},{'name': 'TagsFilterComponent', 'selector': 'of-tags-filter'},{'name': 'TextSettingComponent', 'selector': 'of-text-setting'},{'name': 'TimeFilterComponent', 'selector': 'of-time-filter'},{'name': 'TimeLineComponent', 'selector': 'of-time-line'},{'name': 'TypeAheadSettingsComponent', 'selector': 'of-type-ahead-settings'},{'name': 'TypeFilterComponent', 'selector': 'of-type-filter'}];\n    var DIRECTIVES = [{'name': 'CalcHeightDirective', 'selector': '[calcHeightDirective]'},{'name': 'DraggableDirective', 'selector': '[appDraggable]'},{'name': 'MouseWheelDirective', 'selector': '[appMouseWheel]'}];\n    var ACTUAL_COMPONENT = {'name': 'ArchiveListPageComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ArchiveQuerySuccess.html":{"url":"classes/ArchiveQuerySuccess.html","title":"class - ArchiveQuerySuccess","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ArchiveQuerySuccess\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/archive.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/store/actions/archive.actions.ts:43\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/archive.actions.ts:45\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : ArchiveActionTypes.ArchiveQuerySuccess\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/archive.actions.ts:43\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Action} from '@ngrx/store';\nimport {LightCard} from '@ofModel/light-card.model';\nimport {Page} from '@ofModel/page.model';\n\nexport enum ArchiveActionTypes {\n    UpdateArchiveFilter = '[Archive] Update Filter',\n    SendArchiveQuery = '[Archive] Send Query',\n    ArchiveQuerySuccess = '[Archive] Query was successful',\n    UpdateArchivePage = '[Archive] Update query result page',\n    HandleUnexpectedError = '[Archive] Handle unexpected error related to archived card issue',\n    SelectArchivedLightCard = '[Archive] Select one archived light card'\n\n}\n\nexport class UpdateArchiveFilter implements Action {\n    readonly type = ArchiveActionTypes.UpdateArchiveFilter;\n    /* istanbul ignore next */\n    constructor(public payload: {filters: Map}) {}\n}\n\nexport class SendArchiveQuery implements Action {\n    readonly type = ArchiveActionTypes.SendArchiveQuery;\n    constructor(public payload: {params: Map}) {}\n}\n\nexport class HandleUnexpectedError implements Action {\n    /* istanbul ignore next */\n    readonly type = ArchiveActionTypes.HandleUnexpectedError;\n\n    /* istanbul ignore next */\n    constructor(public payload: {error: Error}) {}\n}\n\nexport class ArchiveQuerySuccess implements Action {\n    readonly type = ArchiveActionTypes.ArchiveQuerySuccess;\n    /* istanbul ignore next */\n    constructor(public payload: {resultPage: Page}) {}\n\n}\n\nexport class UpdateArchivePage implements Action {\n    readonly type = ArchiveActionTypes.UpdateArchivePage;\n    /* istanbul ignore next */\n    constructor(public payload: {page: number}) {}\n}\nexport class SelectArchivedLightCard implements Action {\n    /* istanbul ignore next */\n    readonly type = ArchiveActionTypes.SelectArchivedLightCard;\n    /* istanbul ignore next */\n    constructor(public payload: {selectedCardId: string}) {}\n}\n\nexport type ArchiveActions = UpdateArchiveFilter\n    | SendArchiveQuery\n    | HandleUnexpectedError\n    | ArchiveQuerySuccess\n    | UpdateArchivePage\n    | SelectArchivedLightCard;\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ArchiveState.html":{"url":"interfaces/ArchiveState.html","title":"interface - ArchiveState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ArchiveState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/states/archive.state.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        filters\n                                \n                                \n                                        loading\n                                \n                                \n                                        resultPage\n                                \n                                \n                                        selectedCardId\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        filters\n                                    \n                                \n                                \n                                    \n                                        filters:         Map\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Map\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        loading\n                                    \n                                \n                                \n                                    \n                                        loading:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        resultPage\n                                    \n                                \n                                \n                                    \n                                        resultPage:     Page\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Page\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        selectedCardId\n                                    \n                                \n                                \n                                    \n                                        selectedCardId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {LightCard} from '@ofModel/light-card.model';\nimport {Page} from '@ofModel/page.model';\n// import { IArchiveFilter } from '@ofModel/archive-filter.model';\n\nexport interface ArchiveState {\n    selectedCardId: string;\n    resultPage: Page;\n    filters: Map;\n    loading: boolean;\n}\n\nexport const archiveInitialState: ArchiveState = {\n        selectedCardId: null,\n        resultPage: new Page(1, 0 , []),\n        filters: new Map(),\n        loading: false\n};\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ArchivesComponent.html":{"url":"components/ArchivesComponent.html","title":"component - ArchivesComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ArchivesComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/archives/archives.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                of-archives\n            \n\n            \n                styleUrls\n                ./archives.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./archives.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                lightCards$\n                            \n                            \n                                selection$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/archives/archives.component.ts:25\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                        Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/archives/archives.component.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            lightCards$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/archives/archives.component.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            selection$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/archives/archives.component.ts:25\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import {Component, OnInit} from '@angular/core';\nimport {Observable, of} from 'rxjs';\nimport {LightCard} from '@ofModel/light-card.model';\nimport {select, Store} from '@ngrx/store';\nimport {catchError, map, tap} from 'rxjs/operators';\nimport {AppState} from '@ofStore/index';\nimport {selectArchiveLightCards, selectArchiveLightCardSelection} from '@ofSelectors/archive.selectors';\n\n@Component({\n  selector: 'of-archives',\n  templateUrl: './archives.component.html',\n  styleUrls: ['./archives.component.scss']\n})\nexport class ArchivesComponent implements OnInit {\n\n  lightCards$: Observable;\n  selection$: Observable;\n\n  constructor(private store: Store) { }\n\n  ngOnInit() {\n    this.lightCards$ = this.store.pipe(\n        select(selectArchiveLightCards),\n        catchError(err => of([]))\n    );\n    this.selection$ = this.store.select(selectArchiveLightCardSelection);\n  }\n\n}\n\n    \n\n    \n        \n\n\n\n\n\n\n\n    \n        \n    \n\n\n    \n        \n    \n    \n        \n    \n\n\n    \n\n    \n                \n                    ./archives.component.scss\n                \n                /* Copyright (c) 2020, RTE (http://www.rte-france.com)\n *\n * This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n */\n\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                '\n    var COMPONENTS = [{'name': 'ActionComponent', 'selector': 'of-action'},{'name': 'AppComponent', 'selector': 'of-root'},{'name': 'ArchiveFiltersComponent', 'selector': 'of-archive-filters'},{'name': 'ArchiveListComponent', 'selector': 'of-archive-list'},{'name': 'ArchiveListPageComponent', 'selector': 'of-archive-list-page'},{'name': 'ArchivesComponent', 'selector': 'of-archives'},{'name': 'BaseSettingComponent', 'selector': 'of-base-setting'},{'name': 'CardComponent', 'selector': 'of-card'},{'name': 'CardDetailsComponent', 'selector': 'of-card-details'},{'name': 'CardListComponent', 'selector': 'of-card-list'},{'name': 'ConfirmModalComponent', 'selector': 'confirm-modal-component'},{'name': 'CustomLogoComponent', 'selector': 'of-custom-logo'},{'name': 'CustomTimelineChartComponent', 'selector': 'of-custom-timeline-chart'},{'name': 'DatetimeFilterComponent', 'selector': 'of-datetime-filter'},{'name': 'DetailComponent', 'selector': 'of-detail'},{'name': 'DetailsComponent', 'selector': 'of-details'},{'name': 'EmailSettingComponent', 'selector': 'of-email-setting'},{'name': 'FeedComponent', 'selector': 'of-cards'},{'name': 'FiltersComponent', 'selector': 'of-filters'},{'name': 'IconComponent', 'selector': 'of-icon'},{'name': 'IframeDisplayComponent', 'selector': 'of-iframedisplay'},{'name': 'InfoComponent', 'selector': 'of-info'},{'name': 'InitChartComponent', 'selector': 'of-init-chart'},{'name': 'ListSettingComponent', 'selector': 'of-list-setting'},{'name': 'LoginComponent', 'selector': 'of-login'},{'name': 'MenuLinkComponent', 'selector': 'of-menu-link'},{'name': 'MultiFilterComponent', 'selector': 'of-multi-filter'},{'name': 'MultiSettingsComponent', 'selector': 'of-multi-settings'},{'name': 'NavbarComponent', 'selector': 'of-navbar'},{'name': 'NoSelectionComponent', 'selector': 'of-no-selection'},{'name': 'ResizableComponent', 'selector': 'of-resizable'},{'name': 'SettingsComponent', 'selector': 'of-settings'},{'name': 'TagsFilterComponent', 'selector': 'of-tags-filter'},{'name': 'TextSettingComponent', 'selector': 'of-text-setting'},{'name': 'TimeFilterComponent', 'selector': 'of-time-filter'},{'name': 'TimeLineComponent', 'selector': 'of-time-line'},{'name': 'TypeAheadSettingsComponent', 'selector': 'of-type-ahead-settings'},{'name': 'TypeFilterComponent', 'selector': 'of-type-filter'}];\n    var DIRECTIVES = [{'name': 'CalcHeightDirective', 'selector': '[calcHeightDirective]'},{'name': 'DraggableDirective', 'selector': '[appDraggable]'},{'name': 'MouseWheelDirective', 'selector': '[appMouseWheel]'}];\n    var ACTUAL_COMPONENT = {'name': 'ArchivesComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ArchivesModule.html":{"url":"modules/ArchivesModule.html","title":"module - ArchivesModule","body":"\n                   \n\n\n\n\n    Modules\n    ArchivesModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ArchivesModule\n\n\n\ncluster_ArchivesModule_declarations\n\n\n\ncluster_ArchivesModule_imports\n\n\n\n\nArchiveFiltersComponent\n\nArchiveFiltersComponent\n\n\n\nArchivesModule\n\nArchivesModule\n\nArchivesModule -->\n\nArchiveFiltersComponent->ArchivesModule\n\n\n\n\n\nArchiveListComponent\n\nArchiveListComponent\n\nArchivesModule -->\n\nArchiveListComponent->ArchivesModule\n\n\n\n\n\nArchiveListPageComponent\n\nArchiveListPageComponent\n\nArchivesModule -->\n\nArchiveListPageComponent->ArchivesModule\n\n\n\n\n\nArchivesComponent\n\nArchivesComponent\n\nArchivesModule -->\n\nArchivesComponent->ArchivesModule\n\n\n\n\n\nDatetimeFilterComponent\n\nDatetimeFilterComponent\n\nArchivesModule -->\n\nDatetimeFilterComponent->ArchivesModule\n\n\n\n\n\nMultiFilterComponent\n\nMultiFilterComponent\n\nArchivesModule -->\n\nMultiFilterComponent->ArchivesModule\n\n\n\n\n\nArchivesRoutingModule\n\nArchivesRoutingModule\n\nArchivesModule -->\n\nArchivesRoutingModule->ArchivesModule\n\n\n\n\n\nCardsModule\n\nCardsModule\n\nArchivesModule -->\n\nCardsModule->ArchivesModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/modules/archives/archives.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            ArchiveFiltersComponent\n                        \n                        \n                            ArchiveListComponent\n                        \n                        \n                            ArchiveListPageComponent\n                        \n                        \n                            ArchivesComponent\n                        \n                        \n                            DatetimeFilterComponent\n                        \n                        \n                            MultiFilterComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            ArchivesRoutingModule\n                        \n                        \n                            CardsModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        /* Copyright (c) 2020, RTE (http://www.rte-france.com)\n *\n * This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n */\n\n\nimport {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\nimport {ArchivesRoutingModule} from './archives-routing.module';\nimport { ArchiveListPageComponent } from './components/archive-list/archive-list-page/archive-list-page.component';\nimport {ArchivesComponent} from './archives.component';\nimport {ArchiveListComponent} from './components/archive-list/archive-list.component';\nimport { ArchiveFiltersComponent } from './components/archive-filters/archive-filters.component';\nimport { MultiFilterComponent } from './components/archive-filters/multi-filter/multi-filter.component';\nimport { DatetimeFilterComponent } from './components/archive-filters/datetime-filter/datetime-filter.component';\nimport {CardsModule} from '../cards/cards.module';\nimport {TranslateModule} from '@ngx-translate/core';\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    ArchivesRoutingModule,\n    CardsModule,\n    TranslateModule,\n    NgbModule\n  ],\n  declarations: [\n    ArchivesComponent,\n    ArchiveListComponent,\n    ArchiveFiltersComponent,\n    MultiFilterComponent,\n    ArchiveListPageComponent,\n    DatetimeFilterComponent\n  ]\n})\nexport class ArchivesModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ArchivesRoutingModule.html":{"url":"modules/ArchivesRoutingModule.html","title":"module - ArchivesRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    ArchivesRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/modules/archives/archives-routing.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        /* Copyright (c) 2020, RTE (http://www.rte-france.com)\n *\n * This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n */\n\n\nimport {NgModule} from '@angular/core';\nimport {RouterModule, Routes} from '@angular/router';\n// import {AuthenticationGuard} from \"@ofServices/guard.service\";\nimport {ArchivesComponent} from \"./archives.component\";\nimport {CardDetailsComponent} from \"../cards/components/card-details/card-details.component\";\nimport {DetailComponent} from \"../cards/components/detail/detail.component\";\n\nconst routes: Routes = [\n    {\n        path: '',\n        component: ArchivesComponent,\n        // canActivate: [AuthenticationGuard]\n        children: [\n            // {\n            //     path: '',\n            //     pathMatch: 'full',\n            //     redirectTo: 'cards'\n            // },\n            {\n                path: 'cards',\n                children : [\n                    {\n                        path: '',\n                        component: CardDetailsComponent,\n                    },\n                    {\n                        path: ':cid',\n                        component: CardDetailsComponent,\n                        children: [\n                            {\n                                path: 'details/:did',\n                                component: DetailComponent\n                            }\n                        ]\n                    }]\n            },\n        ]\n    },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class ArchivesRoutingModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AuthObject.html":{"url":"classes/AuthObject.html","title":"class - AuthObject","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AuthObject\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/authentication/authentication.service.ts\n        \n\n            \n                Description\n            \n            \n                class used to login using the authentication web service.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                access_token\n                            \n                            \n                                    Public\n                                clientId\n                            \n                            \n                                    Public\n                                expires_in\n                            \n                            \n                                    Public\n                                    Optional\n                                identifier\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(access_token: string, expires_in: number, clientId: Guid, identifier?: string)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/authentication/authentication.service.ts:422\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        access_token\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        expires_in\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        clientId\n                                                  \n                                                        \n                                                                    Guid\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        identifier\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            access_token\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/authentication/authentication.service.ts:425\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            clientId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Guid\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/authentication/authentication.service.ts:427\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            expires_in\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/authentication/authentication.service.ts:426\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            identifier\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/authentication/authentication.service.ts:428\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Injectable} from '@angular/core';\nimport {HttpClient, HttpHeaders} from '@angular/common/http';\nimport {Observable, of, throwError} from 'rxjs';\nimport {catchError, filter, map, switchMap, tap} from 'rxjs/operators';\nimport {Guid} from 'guid-typescript';\nimport {\n    ImplicitlyAuthenticated,\n    InitAuthStatus,\n    PayloadForSuccessfulAuthentication,\n    UnAuthenticationFromImplicitFlow\n} from '@ofActions/authentication.actions';\nimport {environment} from '@env/environment';\nimport {GuidService} from '@ofServices/guid.service';\nimport {AppState} from '@ofStore/index';\nimport {select, Store} from '@ngrx/store';\nimport {buildConfigSelector} from '@ofSelectors/config.selectors';\nimport * as jwt_decode from 'jwt-decode';\nimport * as _ from 'lodash';\nimport {User} from '@ofModel/user.model';\nimport {EventType as OAuthType, JwksValidationHandler, OAuthEvent, OAuthService} from 'angular-oauth2-oidc';\nimport {implicitAuthenticationConfigFallback} from '@ofServices/authentication/auth-implicit-flow.config';\nimport {selectExpirationTime, selectIsImplicitlyAuthenticated} from '@ofSelectors/authentication.selectors';\n\nexport enum LocalStorageAuthContent {\n    token = 'token',\n    expirationDate = 'expirationDate',\n    identifier = 'identifier',\n    clientId = 'clientId'\n}\n\nexport const ONE_SECOND = 1000;\n\n@Injectable()\nexport class AuthenticationService {\n\n    /** url to check authentication token (jwt) */\n    private checkTokenUrl = `${environment.urls.auth}/check_token`;\n    /** url to ask for an authentication token (jwt) */\n    private askTokenUrl = `${environment.urls.auth}/token`;\n    private userDataUrl = `${environment.urls.users}/users`;\n    private clientId: string;\n    private clientSecret: string;\n    private loginClaim: string;\n    private expireClaim: string;\n    private delegateUrl: string;\n    private givenNameClaim: string;\n    private familyNameClaim: string;\n    private mode: string;\n    private authModeHandler: AuthenticationModeHandler;\n    private implicitConf = implicitAuthenticationConfigFallback;\n\n    /**\n     * @constructor\n     * @param httpClient - Angular build-in\n     * @param guidService - create and store the unique id for this application and user\n     * @param store - NGRX store\n     * @param oauthService - manage implicit flow for OAuth2\n     */\n    constructor(private httpClient: HttpClient\n        , private guidService: GuidService\n        , private store: Store\n        , private oauthService: OAuthService\n    ) {\n        store.select(buildConfigSelector('security'))\n            .subscribe(oauth2Conf => {\n                this.assignConfigurationProperties(oauth2Conf);\n                this.authModeHandler = this.instantiateAuthModeHandler(this.mode);\n            });\n    }\n\n    /**\n     * Choose to handle the OAuth 2.0 using implicit workflow\n     * if mode equals to 'implicit' other manage password grand\n     * or code flow.\n     * @param mode - extracted from config web-service settings\n     */\n    instantiateAuthModeHandler(mode: string): AuthenticationModeHandler {\n        if (mode.toLowerCase() === 'implicit') {\n            this.instantiateImplicitFlowConfiguration();\n            return new ImplicitAuthenticationHandler(this, this.store, sessionStorage);\n        }\n        return new PasswordOrCodeAuthenticationHandler(this, this.store);\n    }\n\n    /**\n     * extract Oauth 2.0 configuration from settings and store it in the service\n     * @param oauth2Conf - settings return by the back-end config service\n     */\n    assignConfigurationProperties(oauth2Conf) {\n        this.clientId = _.get(oauth2Conf, 'oauth2.client-id', null);\n        this.clientSecret = _.get(oauth2Conf, 'oauth2.client-secret', null);\n        this.delegateUrl = _.get(oauth2Conf, 'oauth2.flow.delagate-url', null);\n        this.loginClaim = _.get(oauth2Conf, 'jwt.login-claim', 'sub');\n        this.givenNameClaim = _.get(oauth2Conf, 'jwt.given-name-claim', 'given_name');\n        this.familyNameClaim = _.get(oauth2Conf, 'jwt.family-name-claim', 'family_name');\n        this.expireClaim = _.get(oauth2Conf, 'jwt.expire-claim', 'exp');\n        this.mode = _.get(oauth2Conf, 'oauth2.flow.mode', 'PASSWORD');\n    }\n\n    // TODO push this part into ImplicitAuthenticationHandler class\n    instantiateImplicitFlowConfiguration(): void {\n        this.implicitConf = {...this.implicitConf, issuer: this.delegateUrl, clientId: this.clientId};\n    }\n\n    /**\n     * Call the web service which checks the authentication token. A valid token gives back the authentication information\n     * and an invalid one an message.\n     *\n     * @param token - jwt token\n     * @return an {Observable} which contains the deserializable content of the token\n     * an message is thrown otherwise\n     */\n    checkAuthentication(token: string): Observable {\n        if (!!token) {\n            // const postData = new FormData();\n            const postData = new URLSearchParams();\n            postData.append('token', token);\n            const headers = new HttpHeaders({'Content-type': 'application/x-www-form-urlencoded; charset=utf-8'});\n            return this.httpClient.post(this.checkTokenUrl, postData.toString(), {headers: headers}).pipe(\n                map(check => check),\n                catchError(function (error: any) {\n                    console.error(error);\n                    return throwError(error);\n                })\n            );\n        }\n        return of(null);\n    }\n\n    /**\n     * Given a pair of connection, ask the web service generating jwt authentication token a token if the pair is\n     * a registered one.\n     * @param code OIDC code from code flow\n     */\n    askTokenFromCode(code: string):\n        Observable {\n        if (!this.clientId || !this.clientSecret || !this.loginClaim) {\n            return throwError('The authentication service is no correctly initialized');\n        }\n        const params = new URLSearchParams();\n        params.append('code', code);\n        params.append('grant_type', 'authorization_code');\n// beware clientId for token defines a type of authentication\n        params.append('clientId', this.clientId);\n        params.append('redirect_uri', this.computeRedirectUri());\n\n        const headers = new HttpHeaders({'Content-type': 'application/x-www-form-urlencoded; charset=utf-8'});\n        return this.handleNewToken(this.httpClient.post(this.askTokenUrl, params.toString(), {headers: headers}));\n    }\n\n    /**\n     * Given a pair of connection, ask the web service generating jwt authentication token a token if the pair is\n     * a registered one.\n     * @param login\n     * @param password\n     */\n    askTokenFromPassword(login: string, password: string): Observable {\n        if (!this.clientId || !this.clientSecret) {\n            return throwError('The authentication service is no correctly initialized');\n        }\n        const params = new URLSearchParams();\n        params.append('username', login);\n        params.append('password', password);\n        params.append('grant_type', 'password');\n// beware clientId for access_token is an oauth parameters\n        params.append('clientId', this.clientId);\n        params.append('client_secret', this.clientSecret);\n\n        const headers = new HttpHeaders({'Content-type': 'application/x-www-form-urlencoded; charset=utf-8'});\n        return this.handleNewToken(this.httpClient.post(this.askTokenUrl, params.toString(), {headers: headers}));\n    }\n\n    private handleNewToken(call: Observable): Observable {\n        return call.pipe(\n            map(data => {\n                return {...data, clientId: this.guidService.getCurrentGuid()};\n            }),\n            map((auth: AuthObject) => this.convert(auth)),\n            tap(this.saveAuthenticationInformation),\n            catchError(function (error: any) {\n                console.error(error);\n                return throwError(error);\n            }),\n            switchMap((auth) => this.loadUserData(auth))\n        );\n    }\n\n    public loadUserData(auth: PayloadForSuccessfulAuthentication): Observable {\n        return this.httpClient.get(`${this.userDataUrl}/${auth.identifier}`)\n            .pipe(\n                map(u => {\n                    auth.firstName = u.firstName;\n                    auth.lastName = u.lastName;\n                    return auth;\n                }),\n                catchError(() => of(auth))\n            );\n    }\n\n    /**\n     * extract the jwt authentication token from the localstorage\n     */\n    public extractToken(): string {\n        const currentAuthModeHandler = this.authModeHandler;\n        return currentAuthModeHandler.extractToken();\n    }\n\n    /**\n     * @return true if the expiration date stored in the `localestorage` is still running, false otherwise.\n     */\n    verifyExpirationDate(): boolean {\n        // + to convert the stored number as a string back to number\n        const expirationDate = +localStorage.getItem(LocalStorageAuthContent.expirationDate);\n        const isNotANumber = isNaN(expirationDate);\n        const stillValid = isInTheFuture(expirationDate);\n        return !isNotANumber && stillValid;\n    }\n\n    /**\n     * @return true if the expiration date stored in the `localstorage` is over, false otherwise\n     */\n    isExpirationDateOver(): boolean {\n        return !this.verifyExpirationDate();\n    }\n\n    /**\n     * clear the `localstorage` from all its content.\n     */\n    clearAuthenticationInformation(): void {\n        localStorage.clear();\n        sessionStorage.clear();\n        this.oauthService.logOut();\n    }\n\n    /**\n     * save the authentication informatios such as identifier, jwt token, expiration date and clientId in the\n     * `localstorage`.\n     * @param payload\n     */\n    saveAuthenticationInformation(payload: PayloadForSuccessfulAuthentication) {\n        localStorage.setItem(LocalStorageAuthContent.identifier, payload.identifier);\n        localStorage.setItem(LocalStorageAuthContent.token, payload.token);\n        localStorage.setItem(LocalStorageAuthContent.expirationDate, payload.expirationDate.getTime().toString());\n        localStorage.setItem(LocalStorageAuthContent.clientId, payload.clientId.toString());\n    }\n\n    /**\n     * extract from the `localstorage` the authentication relevant information such as dentifier, jwt token,\n     * expiration date and clientId\n     * @return {PayloadForSuccessfulAuthentication}\n     */\n    extractIdentificationInformation(): PayloadForSuccessfulAuthentication {\n        return new PayloadForSuccessfulAuthentication(\n            localStorage.getItem(LocalStorageAuthContent.identifier),\n            Guid.parse(localStorage.getItem(LocalStorageAuthContent.clientId)),\n            localStorage.getItem(LocalStorageAuthContent.token),\n            // as getItem return a string, `+` is used to convert the string into number\n            new Date(+localStorage.getItem(LocalStorageAuthContent.expirationDate)),\n        );\n    }\n\n\n    /**\n     * helper method to convert an {AuthObject} instance into a {PayloadForSuccessfulAuthentication} instance.\n     * @param payload\n     */\n    public convert(payload: AuthObject):\n        PayloadForSuccessfulAuthentication {\n\n        let expirationDate;\n        const jwt = this.decodeToken(payload.access_token);\n        if (!!payload.expires_in) {\n            expirationDate = Date.now() + ONE_SECOND * payload.expires_in;\n        } else if (!!this.expireClaim) {\n            expirationDate = jwt[this.expireClaim];\n        } else {\n            expirationDate = 0;\n        }\n        return new PayloadForSuccessfulAuthentication(jwt[this.loginClaim],\n            payload.clientId,\n            payload.access_token,\n            new Date(expirationDate),\n            jwt[this.givenNameClaim],\n            jwt[this.familyNameClaim]\n        );\n    }        // await this.oauthService.tryLogin();\n    /**\n     * helper method to put the jwt token into an appropriate string usable as an http header\n     */\n    public getSecurityHeader() {\n        return {'Authorization': `Bearer ${this.extractToken()}`};\n    }\n\n    public moveToCodeFlowLoginPage() {\n        if (!this.clientId || !this.clientSecret) {\n            return throwError('The authentication service is no correctly iniitialized');\n        }\n        if (!this.delegateUrl) {\n            window.location.href = `${environment.urls.auth}/code/redirect_uri=${this.computeRedirectUri()}`;\n        } else {\n            window.location.href = `${this.delegateUrl}&redirect_uri=${this.computeRedirectUri()}`;\n        }\n    }\n\n    public async moveToImplicitFlowLoginPage() {\n        this.oauthService.configure(this.implicitConf);\n        await this.oauthService.loadDiscoveryDocument();\n        sessionStorage.setItem('flow', 'implicit');\n        this.oauthService.initImplicitFlow();\n    }\n\n    public async initAndLoadAuth() {\n        this.oauthService.configure(this.implicitConf);\n        this.oauthService.setupAutomaticSilentRefresh();\n        this.oauthService.tokenValidationHandler = new JwksValidationHandler();\n        await this.oauthService.loadDiscoveryDocument()\n            .then(() => {\n                    this.oauthService.tryLogin();\n                }\n            ).then(() => {\n                if (this.oauthService.hasValidAccessToken()) {\n                    return Promise.resolve();\n                }\n            });\n\n        this.oauthService.events\n            .pipe(filter(e => e.type === 'session_terminated'))\n            .subscribe(() => {\n                console.log('Your session has been terminated!');\n            });\n        this.askForOauthAccessToken();\n        this.dispatchAuthActionFromOAuthEvents();\n    }\n\n    computeRedirectUri() {\n        const uriBase = location.origin;\n        const pathEnd = (location.pathname.length > 1) ? location.pathname : '';\n        return `${uriBase}${pathEnd}`;\n    }\n\n    decodeToken(token: string): any {\n        try {\n            return jwt_decode(token);\n        } catch (Error) {\n            return null;\n        }\n    }\n\n    public dispatchAuthActionFromOAuthEvents() {\n        this.oauthService.events.subscribe(e => {\n            this.dispatchAppStateActionFromOAuth2Events(e);\n        });\n    }\n\n    public askForOauthAccessToken() {\n        return this.oauthService.getAccessToken();\n\n    }\n\n    public providePayloadForSuccessfulAuthenticationFromImplicitFlow(): PayloadForSuccessfulAuthentication {\n        const identityClaims = this.oauthService.getIdentityClaims();\n        const identifier = identityClaims['sub'];\n        const clientId = this.guidService.getCurrentGuid();\n        const token = this.askForOauthAccessToken();\n        const expirationDate = new Date(this.oauthService.getAccessTokenExpiration());\n        return new PayloadForSuccessfulAuthentication(identifier, clientId, token, expirationDate);\n    }\n\n    dispatchAppStateActionFromOAuth2Events(event: OAuthEvent): void {\n        const eventType: OAuthType = event.type;\n        switch (eventType) {\n            case ('token_received'): {\n                this.store.dispatch(new ImplicitlyAuthenticated());\n                break;\n            }\n            case ('token_error'):\n            case('token_refresh_error'):\n            case('logout'): {\n                this.store.dispatch(new UnAuthenticationFromImplicitFlow());\n                break;\n            }\n            default: {\n                // console.log('no action to dispatch for:', eventType);\n            }\n        }\n    }\n\n    public getAuthenticationMode(): string {\n        return this.mode;\n    }\n\n    public initializeAuthentication(): void {\n        this.authModeHandler.initializeAuthentication(window.location.href);\n    }\n\n    public linkAuthenticationStatus(linker: (isAuthenticated: boolean) => void): void {\n        this.authModeHandler.linkAuthenticationStatus(linker);\n    }\n\n    public move(): void {\n        this.authModeHandler.move();\n    }\n\n    public isAuthModeCodeOrImplicitFlow(): boolean {\n        const mode = this.getAuthenticationMode();\n        return mode === 'CODE' || mode === 'IMPLICIT';\n    }\n}\n\n\n/**\n * class used to login using the authentication web service.\n */\nexport class AuthObject {\n\n    constructor(\n        public access_token: string,\n        public expires_in: number,    // token_received,\n        public clientId: Guid,\n        public identifier?: string\n    ) {\n    }\n\n}    // token_received,\n\n\n/**\n * class corresponding to the response of the web service checking jwt token when this token is a valid one.\n */\nexport class CheckTokenResponse {\n    constructor(\n        public sub?: string,\n        public exp?: number,\n        public clientId?: string,\n    ) {\n    }\n}\n\n/**\n * helper @method to confirm or not if the number corresponding to a given time is in the futur regarding the present\n * moment.\n * @param time - a number corresponding to an UTC time to test\n * @return  true if time is in the future regarding the present moment, false otherwise\n */\nexport function isInTheFuture(time: number): boolean {\n    return time > Date.now();\n}\n\n/**\n * interface to handle the mode of authentication\n */\nexport interface AuthenticationModeHandler {\n    initializeAuthentication(currentHrefLocation: string): void;\n\n    linkAuthenticationStatus(linker: (isAuthenticated: boolean) => void): void;\n\n    extractToken(): string;\n\n    move(): void;\n}\n\n/**\n * Implementation class of @Interface AuthenticationModeHandler\n * use the OperatorFabric legacy code to manage the authentication in\n * OAuth 2.0 password grant or code flow mode\n */\nexport class PasswordOrCodeAuthenticationHandler implements AuthenticationModeHandler {\n\n    constructor(private authenticationService: AuthenticationService,\n                private store: Store) {\n    }\n\n    initializeAuthentication(currentLocationHref: string) {\n        const searchCodeString = 'code=';\n        const foundIndex = currentLocationHref.indexOf(searchCodeString);\n        if (foundIndex !== -1) {\n            this.store.dispatch(\n                new InitAuthStatus({code: currentLocationHref.substring(foundIndex + searchCodeString.length)}));\n        }\n    }\n\n    linkAuthenticationStatus(linker: (isAuthenticated: boolean) => void): void {\n        this.store.pipe(select(selectExpirationTime), map(isInTheFuture))\n            .subscribe(linker);\n    }\n\n    public extractToken(): string {\n        return localStorage.getItem(LocalStorageAuthContent.token);\n    }\n\n    move(): void {\n        this.authenticationService.moveToCodeFlowLoginPage();\n    }\n}\n\n/**\n * Implementation class of @Interface AuthenticationModeHandler\n * use the Oidc Connect library to manage OAuth 2.0 implicit authentication mode\n */\nexport class ImplicitAuthenticationHandler implements AuthenticationModeHandler {\n    constructor(private authenticationService: AuthenticationService\n        , private store: Store\n        , private storage: Storage) {\n    }\n\n    initializeAuthentication(currentLocationHref: string) {\n        if (this.authenticationService.getAuthenticationMode().toLowerCase() === 'implicit') {\n            this.authenticationService.initAndLoadAuth();\n        }\n    }\n\n    linkAuthenticationStatus(linker: (isAuthenticated: boolean) => void): void {\n        this.store.pipe(select(selectIsImplicitlyAuthenticated)).subscribe(linker);\n    }\n\n    public extractToken(): string {\n        return this.storage.getItem('access_token');\n    }\n\n    move() {\n        this.authenticationService.moveToImplicitFlowLoginPage();\n    }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/AuthState.html":{"url":"interfaces/AuthState.html","title":"interface - AuthState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  AuthState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/states/authentication.state.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        clientId\n                                \n                                \n                                        code\n                                \n                                \n                                        expirationDate\n                                \n                                \n                                        firstName\n                                \n                                \n                                        identifier\n                                \n                                \n                                        isImplicitlyAuthenticated\n                                \n                                \n                                        lastName\n                                \n                                \n                                        message\n                                \n                                \n                                        token\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        clientId\n                                    \n                                \n                                \n                                    \n                                        clientId:     Guid\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Guid\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        code\n                                    \n                                \n                                \n                                    \n                                        code:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        expirationDate\n                                    \n                                \n                                \n                                    \n                                        expirationDate:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        firstName\n                                    \n                                \n                                \n                                    \n                                        firstName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        identifier\n                                    \n                                \n                                \n                                    \n                                        identifier:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        isImplicitlyAuthenticated\n                                    \n                                \n                                \n                                    \n                                        isImplicitlyAuthenticated:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        lastName\n                                    \n                                \n                                \n                                    \n                                        lastName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        message\n                                    \n                                \n                                \n                                    \n                                        message:         Message\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Message\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        token\n                                    \n                                \n                                \n                                    \n                                        token:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {Guid} from 'guid-typescript';\nimport {Message} from \"@ofModel/message.model\";\n\nexport interface AuthState {\n    code: string;\n    identifier: string;\n    clientId: Guid;\n    token: string;\n    expirationDate: Date;\n    message: Message;\n    firstName: string;\n    lastName: string;\n    isImplicitlyAuthenticated: boolean;\n}\n\nexport const authInitialState: AuthState = {\n    code: null,\n    identifier: null,\n    clientId: null,\n    token: null,\n    expirationDate: new Date(0),\n    message: null,\n    firstName: null,\n    lastName: null,\n    isImplicitlyAuthenticated: false\n};\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthenticationEffects.html":{"url":"injectables/AuthenticationEffects.html","title":"injectable - AuthenticationEffects","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AuthenticationEffects\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/effects/authentication.effects.ts\n        \n\n            \n                Description\n            \n            \n                Management of the authentication of the current user\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                AcceptLogOut\n                            \n                            \n                                CheckAuthentication\n                            \n                            \n                                checkAuthenticationWhenReady\n                            \n                            \n                                CheckImplicitFlowAuthentication\n                            \n                            \n                                RejectLogInAttempt\n                            \n                            \n                                TryToLogIn\n                            \n                            \n                                TryToLogOut\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                handleErrorOnTokenGeneration\n                            \n                            \n                                handleRejectedLogin\n                            \n                            \n                                    Private\n                                resetState\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store, actions$: Actions, authService: AuthenticationService, cardService: CardService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/store/effects/authentication.effects.ts:45\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                        Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \n{Store} state manager\n\n\n                                                        \n                                                \n                                                \n                                                        actions$\n                                                  \n                                                        \n                                                                        Actions\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \n{Action} {Observable} of Action of the Application\n\n\n                                                        \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nservice implementing the authentication business rules\n\n\n                                                        \n                                                \n                                                \n                                                        cardService\n                                                  \n                                                        \n                                                                        CardService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nservice handling request of cards\n\nistanbul ignore next \n\n                                                        \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nrouter service to redirect user accordingly to the user authentication status or variation of it.\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            handleErrorOnTokenGeneration\n                        \n                        \n                    \n                \n            \n            \n                \nhandleErrorOnTokenGeneration(errorResponse, category: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/store/effects/authentication.effects.ts:261\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    errorResponse\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    category\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            handleRejectedLogin\n                        \n                        \n                    \n                \n            \n            \n                \nhandleRejectedLogin(errorMsg: Message)\n                \n            \n\n\n            \n                \n                    Defined in src/app/store/effects/authentication.effects.ts:283\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    errorMsg\n                                    \n                                                Message\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         AuthenticationActions\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            resetState\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    resetState()\n                \n            \n\n\n            \n                \n                    Defined in src/app/store/effects/authentication.effects.ts:289\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            AcceptLogOut\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Observable\n\n                        \n                    \n                    \n                        \n                            Default value : this.actions$.pipe(\n            ofType(AuthenticationActionTypes.AcceptLogOut),\n            map(() => {\n                this.router.navigate(['/login']);\n                return new AcceptLogOutSuccess();\n            })\n        )\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Effect()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/effects/authentication.effects.ts:143\n                            \n                        \n\n                \n                    \n                        This {Observable} of {AuthenticationActions} listens for {AuthenticationActionTypes.AcceptLogOut} type.\nIt tells the {Router} service to navigate to the Login page. and emit an {AcceptLogOutSucess} Action.\nThis {Effect} should be called as a consequence of a {TryLogOut} action\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            CheckAuthentication\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Observable\n\n                        \n                    \n                    \n                        \n                            Default value : this.actions$\n            .pipe(\n                ofType(AuthenticationActionTypes.CheckAuthenticationStatus),\n                switchMap(() => {\n                    return this.authService.checkAuthentication(this.authService.extractToken())\n                        .pipe(catchError(() => of(null)));\n\n                }),\n                withLatestFrom(this.store.select(selectCode)),\n                switchMap(([payload, code]) => {\n                        // no token stored or token invalid\n                        if (!payload) {\n                            if (!!code) {\n                                return this.authService.askTokenFromCode(code).pipe(\n                                    tap(() => {\n                                        redirectToCurrentLocation(this.router);\n                                    }),\n                                    map(authenticationInfo => new AcceptLogIn(authenticationInfo)),\n                                    catchError(errorResponse => {\n                                            return this.handleErrorOnTokenGeneration(errorResponse, 'code');\n                                        }\n                                    ));\n                            }\n                            return of(this.handleRejectedLogin(new Message('The stored token is invalid',\n                                MessageLevel.ERROR,\n                                new I18n('login.error.token.invalid'))));\n                        } else {\n                            if (!this.authService.isExpirationDateOver()) {\n                                const authInfo = this.authService.extractIdentificationInformation();\n                                return this.authService.loadUserData(authInfo)\n                                    .pipe(\n                                        map(auth => {\n                                            redirectToCurrentLocation(this.router);\n                                            return new AcceptLogIn(auth);\n                                        })\n                                    );\n                                // return of(new AcceptLogIn(authInfo));\n                            }\n                            return of(this.handleRejectedLogin(new Message('The stored token has expired',\n                                MessageLevel.ERROR,\n                                new I18n('login.error.token.expiration'))));\n                        }\n                    }\n                ),\n                catchError(err => {\n                    console.error(err);\n                    const parameters = new Map();\n                    parameters['message'] = err;\n                    return of(this.handleRejectedLogin(new Message(err,\n                        MessageLevel.ERROR,\n                        new I18n('login.error.unexpected', parameters)\n                    )));\n                })\n            )\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Effect()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/effects/authentication.effects.ts:186\n                            \n                        \n\n                \n                    \n                        This {Observable} of {AuthenticationActions} listens for {AuthenticationActionTypes.CheckAuthenticationStatus} type.\nIt extract the current authentication information if any and checks its validity, the expiration date.\n  If it's OK then an {AcceptLogIn} Action with check result as payload is emittedby calling\n  the {handleLogInAttempt} @method,\n  otherwise a {RejectedLogIn} Action is emitted by calling the {handleRejectedLogin} @method.\nThis {Effect} should be the first effect apply by the application to display the right page accordingly with the\ncurrent authentication state.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            checkAuthenticationWhenReady\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Observable\n\n                        \n                    \n                    \n                        \n                            Default value : this.actions$\n            .pipe(\n                ofType(ConfigActionTypes.LoadConfigSuccess),\n                map((loadConfigSuccess: LoadConfigSuccess) => {\n                    const flowMode = loadConfigSuccess.payload.config.security.oauth2.flow.mode;\n                    if (flowMode && flowMode === 'IMPLICIT') {\n                        return new CheckImplicitFlowAuthenticationStatus();\n                    }\n                    return new CheckAuthenticationStatus();\n                })\n            )\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Effect()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/effects/authentication.effects.ts:67\n                            \n                        \n\n                \n                    \n                        Triggers Authentication Check when the application is ready\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            CheckImplicitFlowAuthentication\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Observable\n\n                        \n                    \n                    \n                        \n                            Default value : this.actions$\n            .pipe(ofType(AuthenticationActionTypes.CheckImplicitFlowAuthenticationStatus),\n                flatMap(() => from(this.authService.initAndLoadAuth()).pipe(\n                    map ( response => {\n                        return response ;\n                    }),\n                    catchError( error => {\n                        return of(error);\n                    })\n                )),\n                // due to implicit flow mode an explicit rerouting to `/feed` is needed once authenticated\n                tap ( () => redirectToCurrentLocation(this.router)),\n                map(() => {\n                    return new  AcceptLogIn(this.authService.providePayloadForSuccessfulAuthenticationFromImplicitFlow());\n                }))\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Effect()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/effects/authentication.effects.ts:244\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            RejectLogInAttempt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Observable\n\n                        \n                    \n                    \n                        \n                            Default value : this.actions$.pipe(ofType(AuthenticationActionTypes.RejectLogIn),\n            tap(() => {\n                this.authService.clearAuthenticationInformation();\n            }),\n            map(() => new AcceptLogOut()))\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Effect()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/effects/authentication.effects.ts:162\n                            \n                        \n\n                \n                    \n                        This {Observable} of {AuthenticationActions} listens for {AuthenticationActionTypes.RejectLogIn} type.\nIt tells the {AuthenticationService} to clear authentication information from the system\nThis {Effect} should be called after a wrong login attempt.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            TryToLogIn\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Observable\n\n                        \n                    \n                    \n                        \n                            Default value : this.actions$\n            .pipe(\n                ofType(AuthenticationActionTypes.TryToLogIn),\n                switchMap((action: TryToLogIn) => {\n                    const payload = action.payload;\n                    return this.authService.askTokenFromPassword(payload.username, payload.password).pipe(\n                        map(authenticationInfo => new AcceptLogIn(authenticationInfo)),\n                        catchError(errorResponse => {\n                                return this.handleErrorOnTokenGeneration(errorResponse, 'authenticate');\n                            }\n                        ));\n                })\n            )\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Effect()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/effects/authentication.effects.ts:95\n                            \n                        \n\n                \n                    \n                        This {Observable} of {AuthenticationActions} listen {AuthenticationActionTypes.TryToLogIn} type and uses\nthe login payload to get an authentication token from the authentication service if the authentication is\nvalid and emit an {AcceptLogin} action with it.\nFor invalid authentication it emits a {RejectLogIn} Action with the message \"unable to authenticate the user\"\nas paload\nThis effect should take action after the user has submitted login information in the login page by clicking\non the login button.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            TryToLogOut\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Observable\n\n                        \n                    \n                    \n                        \n                            Default value : this.actions$.pipe(\n            ofType(AuthenticationActionTypes.TryToLogOut),\n            switchMap(() => {\n                this.resetState();\n                return of(new EmptyLightCards(), new ClearCard(), new AcceptLogOut());\n            })\n        )\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Effect()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/effects/authentication.effects.ts:122\n                            \n                        \n\n                \n                    \n                        This {Observable} of {AuthenticationActions} listens for {AuthenticationActionTypes.TryToLogOut} type.\nIt tells the {AuthenticationService} to clear the authentication information from the system and emit\nan {AcceptLogOut} Action.\nThis effect should take action after the Logout link/button has been clicked by the user.\n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import {Injectable} from '@angular/core';\nimport {Actions, Effect, ofType} from '@ngrx/effects';\nimport {from, Observable, of} from 'rxjs';\nimport {Action, Store} from '@ngrx/store';\nimport {\n    AcceptLogIn,\n    AcceptLogOut,\n    AcceptLogOutSuccess,\n    AuthenticationActions,\n    AuthenticationActionTypes,\n    CheckAuthenticationStatus,\n    CheckImplicitFlowAuthenticationStatus,\n    RejectLogIn,\n    TryToLogIn,\n} from '@ofActions/authentication.actions';\nimport {AuthenticationService} from '@ofServices/authentication/authentication.service';\nimport {catchError, flatMap, map, switchMap, tap, withLatestFrom} from 'rxjs/operators';\nimport {AppState} from '@ofStore/index';\nimport {Router} from '@angular/router';\nimport {ConfigActionTypes, LoadConfigSuccess} from '@ofActions/config.actions';\nimport {selectCode} from '@ofSelectors/authentication.selectors';\nimport {Message, MessageLevel} from '@ofModel/message.model';\nimport {I18n} from '@ofModel/i18n.model';\nimport {Map} from '@ofModel/map';\nimport {CardService} from '@ofServices/card.service';\nimport {EmptyLightCards} from '@ofActions/light-card.actions';\nimport {ClearCard} from '@ofActions/card.actions';\nimport {environment} from '@env/environment';\nimport { buildConfigSelector } from '@ofStore/selectors/config.selectors';\nimport {redirectToCurrentLocation} from \"../../app-routing.module\";\nimport { combineLatest } from 'rxjs';\n\n/**\n * Management of the authentication of the current user\n */\n@Injectable()\nexport class AuthenticationEffects {\n\n    /**\n     * @constructorCheckImplicitFlowAuthenticationStatus\n     * @param store - {Store} state manager\n     * @param actions$ - {Action} {Observable} of Action of the Application\n     * @param authService - service implementing the authentication business rules\n     * @param router - router service to redirect user accordingly to the user authentication status or variation of it.\n     * @param cardService - service handling request of cards\n     *\n     * istanbul ignore next */\n    constructor(private store: Store,\n                private actions$: Actions,\n                private authService: AuthenticationService,\n                private cardService: CardService,\n                private router: Router) {\n    }\n\n    /**\n     * Triggers Authentication Check when the application is ready\n     */\n    @Effect()\n    checkAuthenticationWhenReady: Observable =\n        this.actions$\n            .pipe(\n                ofType(ConfigActionTypes.LoadConfigSuccess),\n                map((loadConfigSuccess: LoadConfigSuccess) => {\n                    const flowMode = loadConfigSuccess.payload.config.security.oauth2.flow.mode;\n                    if (flowMode && flowMode === 'IMPLICIT') {\n                        return new CheckImplicitFlowAuthenticationStatus();\n                    }\n                    return new CheckAuthenticationStatus();\n                })\n            );\n\n    /**\n     * This {Observable} of {AuthenticationActions} listen {AuthenticationActionTypes.TryToLogIn} type and uses\n     * the login payload to get an authentication token from the authentication service if the authentication is\n     * valid and emit an {AcceptLogin} action with it.\n     * For invalid authentication it emits a {RejectLogIn} Action with the message \"unable to authenticate the user\"\n     * as paload\n     *\n     * This effect should take action after the user has submitted login information in the login page by clicking\n     * on the login button.\n     *\n     * @member\n     * @name TryToLogIn\n     * @typedef {Observable}\n     */\n    @Effect()\n    TryToLogIn: Observable =\n        this.actions$\n            .pipe(\n                ofType(AuthenticationActionTypes.TryToLogIn),\n                switchMap((action: TryToLogIn) => {\n                    const payload = action.payload;\n                    return this.authService.askTokenFromPassword(payload.username, payload.password).pipe(\n                        map(authenticationInfo => new AcceptLogIn(authenticationInfo)),\n                        catchError(errorResponse => {\n                                return this.handleErrorOnTokenGeneration(errorResponse, 'authenticate');\n                            }\n                        ));\n                })\n            );\n\n    /**\n     * This {Observable} of {AuthenticationActions} listens for {AuthenticationActionTypes.TryToLogOut} type.\n     * It tells the {AuthenticationService} to clear the authentication information from the system and emit\n     * an {AcceptLogOut} Action.\n     *\n     * This effect should take action after the Logout link/button has been clicked by the user.\n     *\n     * @member\n     * @name TryToLogOut\n     * @typedef {Observable}\n     */\n    @Effect()\n    TryToLogOut: Observable =\n        this.actions$.pipe(\n            ofType(AuthenticationActionTypes.TryToLogOut),\n            switchMap(() => {\n                this.resetState();\n                return of(new EmptyLightCards(), new ClearCard(), new AcceptLogOut());\n            })\n        );\n\n    /**\n     * This {Observable} of {AuthenticationActions} listens for {AuthenticationActionTypes.AcceptLogOut} type.\n     * It tells the {Router} service to navigate to the Login page. and emit an {AcceptLogOutSucess} Action.\n     *\n     * This {Effect} should be called as a consequence of a {TryLogOut} action\n     *\n     * @member\n     * @name AcceptLogOut flow on demand\n     * @typedef {Observable}\n     *\n     */\n    @Effect()\n    AcceptLogOut: Observable =\n        this.actions$.pipe(\n            ofType(AuthenticationActionTypes.AcceptLogOut),\n            map(() => {\n                this.router.navigate(['/login']);\n                return new AcceptLogOutSuccess();\n            })\n        );\n    /**\n     * This {Observable} of {AuthenticationActions} listens for {AuthenticationActionTypes.RejectLogIn} type.\n     * It tells the {AuthenticationService} to clear authentication information from the system\n     *\n     * This {Effect} should be called after a wrong login attempt.\n\n     * @member\n     * @name RejectLogInAttempt\n     * @typedef {Observable}\n     */\n    @Effect()\n    RejectLogInAttempt: Observable =\n        this.actions$.pipe(ofType(AuthenticationActionTypes.RejectLogIn),\n            tap(() => {\n                this.authService.clearAuthenticationInformation();\n            }),\n            map(() => new AcceptLogOut()));\n\n    /**\n     * This {Observable} of {AuthenticationActions} listens for {AuthenticationActionTypes.CheckAuthenticationStatus} type.\n     *It extract the current authentication information if any and checks its validity, the expiration date.\n     *  If it's OK then an {AcceptLogIn} Action with check result as payload is emittedby calling\n     *  the {handleLogInAttempt} @method,\n     *\n     *  otherwise a {RejectedLogIn} Action is emitted by calling the {handleRejectedLogin} @method.\n     *\n     * This {Effect} should be the first effect apply by the application to display the right page accordingly with the\n     * current authentication state.\n     *\n     * @member\n     * @name CheckAuthentication\n     * @typedef {Observable}\n     *\n     */\n    @Effect()\n    CheckAuthentication: Observable =\n        this.actions$\n            .pipe(\n                ofType(AuthenticationActionTypes.CheckAuthenticationStatus),\n                switchMap(() => {\n                    return this.authService.checkAuthentication(this.authService.extractToken())\n                        .pipe(catchError(() => of(null)));\n\n                }),\n                withLatestFrom(this.store.select(selectCode)),\n                switchMap(([payload, code]) => {\n                        // no token stored or token invalid\n                        if (!payload) {\n                            if (!!code) {\n                                return this.authService.askTokenFromCode(code).pipe(\n                                    tap(() => {\n                                        redirectToCurrentLocation(this.router);\n                                    }),\n                                    map(authenticationInfo => new AcceptLogIn(authenticationInfo)),\n                                    catchError(errorResponse => {\n                                            return this.handleErrorOnTokenGeneration(errorResponse, 'code');\n                                        }\n                                    ));\n                            }\n                            return of(this.handleRejectedLogin(new Message('The stored token is invalid',\n                                MessageLevel.ERROR,\n                                new I18n('login.error.token.invalid'))));\n                        } else {\n                            if (!this.authService.isExpirationDateOver()) {\n                                const authInfo = this.authService.extractIdentificationInformation();\n                                return this.authService.loadUserData(authInfo)\n                                    .pipe(\n                                        map(auth => {\n                                            redirectToCurrentLocation(this.router);\n                                            return new AcceptLogIn(auth);\n                                        })\n                                    );\n                                // return of(new AcceptLogIn(authInfo));\n                            }\n                            return of(this.handleRejectedLogin(new Message('The stored token has expired',\n                                MessageLevel.ERROR,\n                                new I18n('login.error.token.expiration'))));\n                        }\n                    }\n                ),\n                catchError(err => {\n                    console.error(err);\n                    const parameters = new Map();\n                    parameters['message'] = err;\n                    return of(this.handleRejectedLogin(new Message(err,\n                        MessageLevel.ERROR,\n                        new I18n('login.error.unexpected', parameters)\n                    )));\n                })\n            );\n\n\n    @Effect()\n    CheckImplicitFlowAuthentication: Observable =\n        this.actions$\n            .pipe(ofType(AuthenticationActionTypes.CheckImplicitFlowAuthenticationStatus),\n                flatMap(() => from(this.authService.initAndLoadAuth()).pipe(\n                    map ( response => {\n                        return response ;\n                    }),\n                    catchError( error => {\n                        return of(error);\n                    })\n                )),\n                // due to implicit flow mode an explicit rerouting to `/feed` is needed once authenticated\n                tap ( () => redirectToCurrentLocation(this.router)),\n                map(() => {\n                    return new  AcceptLogIn(this.authService.providePayloadForSuccessfulAuthenticationFromImplicitFlow());\n                }));\n\n    handleErrorOnTokenGeneration(errorResponse, category: string) {\n        let message, key;\n        const params = new Map();\n        switch (errorResponse.status) {\n            case 401:\n                message = 'Unable to authenticate the user';\n                key = `login.error.${category}`;\n                break;\n            case 0:\n            case 500:\n                message = 'Authentication service currently unavailable';\n                key = 'login.error.unavailable';\n                break;\n            default:\n                message = 'Unexpected error';\n                key = 'login.error.unexpected';\n                params['error'] = errorResponse.message;\n        }\n        console.error(message, errorResponse);\n        return of(new RejectLogIn({error: new Message(message, MessageLevel.ERROR, new I18n(key, params))}));\n    }\n\n    handleRejectedLogin(errorMsg: Message): AuthenticationActions {\n        this.authService.clearAuthenticationInformation();\n        return new RejectLogIn({error: errorMsg});\n\n    }\n\n    private resetState() {\n        this.authService.clearAuthenticationInformation();\n        combineLatest(\n            this.store.select(buildConfigSelector('security.provider-realm')),\n            this.store.select(buildConfigSelector('security.provider-url'))\n        ).subscribe(([realm, url]) => {\n            if(realm && url) {\n                const redirect = this.authService.computeRedirectUri();\n                window.location.href = `${url}/auth/realms/${realm}/protocol/openid-connect/logout?redirect_uri=${redirect}`;\n            }\n        });\n        this.cardService.unsubscribeCardOperation();\n    }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/AuthenticationModeHandler.html":{"url":"interfaces/AuthenticationModeHandler.html","title":"interface - AuthenticationModeHandler","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  AuthenticationModeHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/authentication/authentication.service.ts\n        \n\n            \n                Description\n            \n            \n                interface to handle the mode of authentication\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    extractToken\n                                \n                                \n                                    initializeAuthentication\n                                \n                                \n                                    linkAuthenticationStatus\n                                \n                                \n                                    move\n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            extractToken\n                        \n                        \n                    \n                \n            \n            \n                \nextractToken()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/authentication/authentication.service.ts:465\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            initializeAuthentication\n                        \n                        \n                    \n                \n            \n            \n                \ninitializeAuthentication(currentHrefLocation: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/authentication/authentication.service.ts:461\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    currentHrefLocation\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            linkAuthenticationStatus\n                        \n                        \n                    \n                \n            \n            \n                \nlinkAuthenticationStatus(linker: (isAuthenticated: boolean) => void)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/authentication/authentication.service.ts:463\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    linker\n                                    \n                                                function\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            move\n                        \n                        \n                    \n                \n            \n            \n                \nmove()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/authentication/authentication.service.ts:467\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {Injectable} from '@angular/core';\nimport {HttpClient, HttpHeaders} from '@angular/common/http';\nimport {Observable, of, throwError} from 'rxjs';\nimport {catchError, filter, map, switchMap, tap} from 'rxjs/operators';\nimport {Guid} from 'guid-typescript';\nimport {\n    ImplicitlyAuthenticated,\n    InitAuthStatus,\n    PayloadForSuccessfulAuthentication,\n    UnAuthenticationFromImplicitFlow\n} from '@ofActions/authentication.actions';\nimport {environment} from '@env/environment';\nimport {GuidService} from '@ofServices/guid.service';\nimport {AppState} from '@ofStore/index';\nimport {select, Store} from '@ngrx/store';\nimport {buildConfigSelector} from '@ofSelectors/config.selectors';\nimport * as jwt_decode from 'jwt-decode';\nimport * as _ from 'lodash';\nimport {User} from '@ofModel/user.model';\nimport {EventType as OAuthType, JwksValidationHandler, OAuthEvent, OAuthService} from 'angular-oauth2-oidc';\nimport {implicitAuthenticationConfigFallback} from '@ofServices/authentication/auth-implicit-flow.config';\nimport {selectExpirationTime, selectIsImplicitlyAuthenticated} from '@ofSelectors/authentication.selectors';\n\nexport enum LocalStorageAuthContent {\n    token = 'token',\n    expirationDate = 'expirationDate',\n    identifier = 'identifier',\n    clientId = 'clientId'\n}\n\nexport const ONE_SECOND = 1000;\n\n@Injectable()\nexport class AuthenticationService {\n\n    /** url to check authentication token (jwt) */\n    private checkTokenUrl = `${environment.urls.auth}/check_token`;\n    /** url to ask for an authentication token (jwt) */\n    private askTokenUrl = `${environment.urls.auth}/token`;\n    private userDataUrl = `${environment.urls.users}/users`;\n    private clientId: string;\n    private clientSecret: string;\n    private loginClaim: string;\n    private expireClaim: string;\n    private delegateUrl: string;\n    private givenNameClaim: string;\n    private familyNameClaim: string;\n    private mode: string;\n    private authModeHandler: AuthenticationModeHandler;\n    private implicitConf = implicitAuthenticationConfigFallback;\n\n    /**\n     * @constructor\n     * @param httpClient - Angular build-in\n     * @param guidService - create and store the unique id for this application and user\n     * @param store - NGRX store\n     * @param oauthService - manage implicit flow for OAuth2\n     */\n    constructor(private httpClient: HttpClient\n        , private guidService: GuidService\n        , private store: Store\n        , private oauthService: OAuthService\n    ) {\n        store.select(buildConfigSelector('security'))\n            .subscribe(oauth2Conf => {\n                this.assignConfigurationProperties(oauth2Conf);\n                this.authModeHandler = this.instantiateAuthModeHandler(this.mode);\n            });\n    }\n\n    /**\n     * Choose to handle the OAuth 2.0 using implicit workflow\n     * if mode equals to 'implicit' other manage password grand\n     * or code flow.\n     * @param mode - extracted from config web-service settings\n     */\n    instantiateAuthModeHandler(mode: string): AuthenticationModeHandler {\n        if (mode.toLowerCase() === 'implicit') {\n            this.instantiateImplicitFlowConfiguration();\n            return new ImplicitAuthenticationHandler(this, this.store, sessionStorage);\n        }\n        return new PasswordOrCodeAuthenticationHandler(this, this.store);\n    }\n\n    /**\n     * extract Oauth 2.0 configuration from settings and store it in the service\n     * @param oauth2Conf - settings return by the back-end config service\n     */\n    assignConfigurationProperties(oauth2Conf) {\n        this.clientId = _.get(oauth2Conf, 'oauth2.client-id', null);\n        this.clientSecret = _.get(oauth2Conf, 'oauth2.client-secret', null);\n        this.delegateUrl = _.get(oauth2Conf, 'oauth2.flow.delagate-url', null);\n        this.loginClaim = _.get(oauth2Conf, 'jwt.login-claim', 'sub');\n        this.givenNameClaim = _.get(oauth2Conf, 'jwt.given-name-claim', 'given_name');\n        this.familyNameClaim = _.get(oauth2Conf, 'jwt.family-name-claim', 'family_name');\n        this.expireClaim = _.get(oauth2Conf, 'jwt.expire-claim', 'exp');\n        this.mode = _.get(oauth2Conf, 'oauth2.flow.mode', 'PASSWORD');\n    }\n\n    // TODO push this part into ImplicitAuthenticationHandler class\n    instantiateImplicitFlowConfiguration(): void {\n        this.implicitConf = {...this.implicitConf, issuer: this.delegateUrl, clientId: this.clientId};\n    }\n\n    /**\n     * Call the web service which checks the authentication token. A valid token gives back the authentication information\n     * and an invalid one an message.\n     *\n     * @param token - jwt token\n     * @return an {Observable} which contains the deserializable content of the token\n     * an message is thrown otherwise\n     */\n    checkAuthentication(token: string): Observable {\n        if (!!token) {\n            // const postData = new FormData();\n            const postData = new URLSearchParams();\n            postData.append('token', token);\n            const headers = new HttpHeaders({'Content-type': 'application/x-www-form-urlencoded; charset=utf-8'});\n            return this.httpClient.post(this.checkTokenUrl, postData.toString(), {headers: headers}).pipe(\n                map(check => check),\n                catchError(function (error: any) {\n                    console.error(error);\n                    return throwError(error);\n                })\n            );\n        }\n        return of(null);\n    }\n\n    /**\n     * Given a pair of connection, ask the web service generating jwt authentication token a token if the pair is\n     * a registered one.\n     * @param code OIDC code from code flow\n     */\n    askTokenFromCode(code: string):\n        Observable {\n        if (!this.clientId || !this.clientSecret || !this.loginClaim) {\n            return throwError('The authentication service is no correctly initialized');\n        }\n        const params = new URLSearchParams();\n        params.append('code', code);\n        params.append('grant_type', 'authorization_code');\n// beware clientId for token defines a type of authentication\n        params.append('clientId', this.clientId);\n        params.append('redirect_uri', this.computeRedirectUri());\n\n        const headers = new HttpHeaders({'Content-type': 'application/x-www-form-urlencoded; charset=utf-8'});\n        return this.handleNewToken(this.httpClient.post(this.askTokenUrl, params.toString(), {headers: headers}));\n    }\n\n    /**\n     * Given a pair of connection, ask the web service generating jwt authentication token a token if the pair is\n     * a registered one.\n     * @param login\n     * @param password\n     */\n    askTokenFromPassword(login: string, password: string): Observable {\n        if (!this.clientId || !this.clientSecret) {\n            return throwError('The authentication service is no correctly initialized');\n        }\n        const params = new URLSearchParams();\n        params.append('username', login);\n        params.append('password', password);\n        params.append('grant_type', 'password');\n// beware clientId for access_token is an oauth parameters\n        params.append('clientId', this.clientId);\n        params.append('client_secret', this.clientSecret);\n\n        const headers = new HttpHeaders({'Content-type': 'application/x-www-form-urlencoded; charset=utf-8'});\n        return this.handleNewToken(this.httpClient.post(this.askTokenUrl, params.toString(), {headers: headers}));\n    }\n\n    private handleNewToken(call: Observable): Observable {\n        return call.pipe(\n            map(data => {\n                return {...data, clientId: this.guidService.getCurrentGuid()};\n            }),\n            map((auth: AuthObject) => this.convert(auth)),\n            tap(this.saveAuthenticationInformation),\n            catchError(function (error: any) {\n                console.error(error);\n                return throwError(error);\n            }),\n            switchMap((auth) => this.loadUserData(auth))\n        );\n    }\n\n    public loadUserData(auth: PayloadForSuccessfulAuthentication): Observable {\n        return this.httpClient.get(`${this.userDataUrl}/${auth.identifier}`)\n            .pipe(\n                map(u => {\n                    auth.firstName = u.firstName;\n                    auth.lastName = u.lastName;\n                    return auth;\n                }),\n                catchError(() => of(auth))\n            );\n    }\n\n    /**\n     * extract the jwt authentication token from the localstorage\n     */\n    public extractToken(): string {\n        const currentAuthModeHandler = this.authModeHandler;\n        return currentAuthModeHandler.extractToken();\n    }\n\n    /**\n     * @return true if the expiration date stored in the `localestorage` is still running, false otherwise.\n     */\n    verifyExpirationDate(): boolean {\n        // + to convert the stored number as a string back to number\n        const expirationDate = +localStorage.getItem(LocalStorageAuthContent.expirationDate);\n        const isNotANumber = isNaN(expirationDate);\n        const stillValid = isInTheFuture(expirationDate);\n        return !isNotANumber && stillValid;\n    }\n\n    /**\n     * @return true if the expiration date stored in the `localstorage` is over, false otherwise\n     */\n    isExpirationDateOver(): boolean {\n        return !this.verifyExpirationDate();\n    }\n\n    /**\n     * clear the `localstorage` from all its content.\n     */\n    clearAuthenticationInformation(): void {\n        localStorage.clear();\n        sessionStorage.clear();\n        this.oauthService.logOut();\n    }\n\n    /**\n     * save the authentication informatios such as identifier, jwt token, expiration date and clientId in the\n     * `localstorage`.\n     * @param payload\n     */\n    saveAuthenticationInformation(payload: PayloadForSuccessfulAuthentication) {\n        localStorage.setItem(LocalStorageAuthContent.identifier, payload.identifier);\n        localStorage.setItem(LocalStorageAuthContent.token, payload.token);\n        localStorage.setItem(LocalStorageAuthContent.expirationDate, payload.expirationDate.getTime().toString());\n        localStorage.setItem(LocalStorageAuthContent.clientId, payload.clientId.toString());\n    }\n\n    /**\n     * extract from the `localstorage` the authentication relevant information such as dentifier, jwt token,\n     * expiration date and clientId\n     * @return {PayloadForSuccessfulAuthentication}\n     */\n    extractIdentificationInformation(): PayloadForSuccessfulAuthentication {\n        return new PayloadForSuccessfulAuthentication(\n            localStorage.getItem(LocalStorageAuthContent.identifier),\n            Guid.parse(localStorage.getItem(LocalStorageAuthContent.clientId)),\n            localStorage.getItem(LocalStorageAuthContent.token),\n            // as getItem return a string, `+` is used to convert the string into number\n            new Date(+localStorage.getItem(LocalStorageAuthContent.expirationDate)),\n        );\n    }\n\n\n    /**\n     * helper method to convert an {AuthObject} instance into a {PayloadForSuccessfulAuthentication} instance.\n     * @param payload\n     */\n    public convert(payload: AuthObject):\n        PayloadForSuccessfulAuthentication {\n\n        let expirationDate;\n        const jwt = this.decodeToken(payload.access_token);\n        if (!!payload.expires_in) {\n            expirationDate = Date.now() + ONE_SECOND * payload.expires_in;\n        } else if (!!this.expireClaim) {\n            expirationDate = jwt[this.expireClaim];\n        } else {\n            expirationDate = 0;\n        }\n        return new PayloadForSuccessfulAuthentication(jwt[this.loginClaim],\n            payload.clientId,\n            payload.access_token,\n            new Date(expirationDate),\n            jwt[this.givenNameClaim],\n            jwt[this.familyNameClaim]\n        );\n    }        // await this.oauthService.tryLogin();\n    /**\n     * helper method to put the jwt token into an appropriate string usable as an http header\n     */\n    public getSecurityHeader() {\n        return {'Authorization': `Bearer ${this.extractToken()}`};\n    }\n\n    public moveToCodeFlowLoginPage() {\n        if (!this.clientId || !this.clientSecret) {\n            return throwError('The authentication service is no correctly iniitialized');\n        }\n        if (!this.delegateUrl) {\n            window.location.href = `${environment.urls.auth}/code/redirect_uri=${this.computeRedirectUri()}`;\n        } else {\n            window.location.href = `${this.delegateUrl}&redirect_uri=${this.computeRedirectUri()}`;\n        }\n    }\n\n    public async moveToImplicitFlowLoginPage() {\n        this.oauthService.configure(this.implicitConf);\n        await this.oauthService.loadDiscoveryDocument();\n        sessionStorage.setItem('flow', 'implicit');\n        this.oauthService.initImplicitFlow();\n    }\n\n    public async initAndLoadAuth() {\n        this.oauthService.configure(this.implicitConf);\n        this.oauthService.setupAutomaticSilentRefresh();\n        this.oauthService.tokenValidationHandler = new JwksValidationHandler();\n        await this.oauthService.loadDiscoveryDocument()\n            .then(() => {\n                    this.oauthService.tryLogin();\n                }\n            ).then(() => {\n                if (this.oauthService.hasValidAccessToken()) {\n                    return Promise.resolve();\n                }\n            });\n\n        this.oauthService.events\n            .pipe(filter(e => e.type === 'session_terminated'))\n            .subscribe(() => {\n                console.log('Your session has been terminated!');\n            });\n        this.askForOauthAccessToken();\n        this.dispatchAuthActionFromOAuthEvents();\n    }\n\n    computeRedirectUri() {\n        const uriBase = location.origin;\n        const pathEnd = (location.pathname.length > 1) ? location.pathname : '';\n        return `${uriBase}${pathEnd}`;\n    }\n\n    decodeToken(token: string): any {\n        try {\n            return jwt_decode(token);\n        } catch (Error) {\n            return null;\n        }\n    }\n\n    public dispatchAuthActionFromOAuthEvents() {\n        this.oauthService.events.subscribe(e => {\n            this.dispatchAppStateActionFromOAuth2Events(e);\n        });\n    }\n\n    public askForOauthAccessToken() {\n        return this.oauthService.getAccessToken();\n\n    }\n\n    public providePayloadForSuccessfulAuthenticationFromImplicitFlow(): PayloadForSuccessfulAuthentication {\n        const identityClaims = this.oauthService.getIdentityClaims();\n        const identifier = identityClaims['sub'];\n        const clientId = this.guidService.getCurrentGuid();\n        const token = this.askForOauthAccessToken();\n        const expirationDate = new Date(this.oauthService.getAccessTokenExpiration());\n        return new PayloadForSuccessfulAuthentication(identifier, clientId, token, expirationDate);\n    }\n\n    dispatchAppStateActionFromOAuth2Events(event: OAuthEvent): void {\n        const eventType: OAuthType = event.type;\n        switch (eventType) {\n            case ('token_received'): {\n                this.store.dispatch(new ImplicitlyAuthenticated());\n                break;\n            }\n            case ('token_error'):\n            case('token_refresh_error'):\n            case('logout'): {\n                this.store.dispatch(new UnAuthenticationFromImplicitFlow());\n                break;\n            }\n            default: {\n                // console.log('no action to dispatch for:', eventType);\n            }\n        }\n    }\n\n    public getAuthenticationMode(): string {\n        return this.mode;\n    }\n\n    public initializeAuthentication(): void {\n        this.authModeHandler.initializeAuthentication(window.location.href);\n    }\n\n    public linkAuthenticationStatus(linker: (isAuthenticated: boolean) => void): void {\n        this.authModeHandler.linkAuthenticationStatus(linker);\n    }\n\n    public move(): void {\n        this.authModeHandler.move();\n    }\n\n    public isAuthModeCodeOrImplicitFlow(): boolean {\n        const mode = this.getAuthenticationMode();\n        return mode === 'CODE' || mode === 'IMPLICIT';\n    }\n}\n\n\n/**\n * class used to login using the authentication web service.\n */\nexport class AuthObject {\n\n    constructor(\n        public access_token: string,\n        public expires_in: number,    // token_received,\n        public clientId: Guid,\n        public identifier?: string\n    ) {\n    }\n\n}    // token_received,\n\n\n/**\n * class corresponding to the response of the web service checking jwt token when this token is a valid one.\n */\nexport class CheckTokenResponse {\n    constructor(\n        public sub?: string,\n        public exp?: number,\n        public clientId?: string,\n    ) {\n    }\n}\n\n/**\n * helper @method to confirm or not if the number corresponding to a given time is in the futur regarding the present\n * moment.\n * @param time - a number corresponding to an UTC time to test\n * @return  true if time is in the future regarding the present moment, false otherwise\n */\nexport function isInTheFuture(time: number): boolean {\n    return time > Date.now();\n}\n\n/**\n * interface to handle the mode of authentication\n */\nexport interface AuthenticationModeHandler {\n    initializeAuthentication(currentHrefLocation: string): void;\n\n    linkAuthenticationStatus(linker: (isAuthenticated: boolean) => void): void;\n\n    extractToken(): string;\n\n    move(): void;\n}\n\n/**\n * Implementation class of @Interface AuthenticationModeHandler\n * use the OperatorFabric legacy code to manage the authentication in\n * OAuth 2.0 password grant or code flow mode\n */\nexport class PasswordOrCodeAuthenticationHandler implements AuthenticationModeHandler {\n\n    constructor(private authenticationService: AuthenticationService,\n                private store: Store) {\n    }\n\n    initializeAuthentication(currentLocationHref: string) {\n        const searchCodeString = 'code=';\n        const foundIndex = currentLocationHref.indexOf(searchCodeString);\n        if (foundIndex !== -1) {\n            this.store.dispatch(\n                new InitAuthStatus({code: currentLocationHref.substring(foundIndex + searchCodeString.length)}));\n        }\n    }\n\n    linkAuthenticationStatus(linker: (isAuthenticated: boolean) => void): void {\n        this.store.pipe(select(selectExpirationTime), map(isInTheFuture))\n            .subscribe(linker);\n    }\n\n    public extractToken(): string {\n        return localStorage.getItem(LocalStorageAuthContent.token);\n    }\n\n    move(): void {\n        this.authenticationService.moveToCodeFlowLoginPage();\n    }\n}\n\n/**\n * Implementation class of @Interface AuthenticationModeHandler\n * use the Oidc Connect library to manage OAuth 2.0 implicit authentication mode\n */\nexport class ImplicitAuthenticationHandler implements AuthenticationModeHandler {\n    constructor(private authenticationService: AuthenticationService\n        , private store: Store\n        , private storage: Storage) {\n    }\n\n    initializeAuthentication(currentLocationHref: string) {\n        if (this.authenticationService.getAuthenticationMode().toLowerCase() === 'implicit') {\n            this.authenticationService.initAndLoadAuth();\n        }\n    }\n\n    linkAuthenticationStatus(linker: (isAuthenticated: boolean) => void): void {\n        this.store.pipe(select(selectIsImplicitlyAuthenticated)).subscribe(linker);\n    }\n\n    public extractToken(): string {\n        return this.storage.getItem('access_token');\n    }\n\n    move() {\n        this.authenticationService.moveToImplicitFlowLoginPage();\n    }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/BaseSettingComponent.html":{"url":"components/BaseSettingComponent.html","title":"component - BaseSettingComponent","body":"\n                   \n\n\n\n\n\n  Components\n  BaseSettingComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/settings/components/settings/base-setting/base-setting.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                of-base-setting\n            \n\n\n\n\n            \n                templateUrl\n                ./base-setting.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                baseSettings\n                            \n                            \n                                form\n                            \n                            \n                                    Private\n                                ngUnsubscribe$\n                            \n                            \n                                    Protected\n                                placeholder$\n                            \n                            \n                                    Protected\n                                setting$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                convert\n                            \n                            \n                                    Private\n                                dispatch\n                            \n                            \n                                    Protected\n                                initFormGroup\n                            \n                            \n                                    Protected\n                                isEqual\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                    Protected\n                                submitValue\n                            \n                            \n                                    Protected\n                                updateValue\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                messagePlaceholder\n                            \n                            \n                                requiredField\n                            \n                            \n                                settingPath\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/settings/components/settings/base-setting/base-setting.component.ts:34\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                        Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        messagePlaceholder\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/settings/components/settings/base-setting/base-setting.component.ts:28\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        requiredField\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/settings/components/settings/base-setting/base-setting.component.ts:29\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        settingPath\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/settings/components/settings/base-setting/base-setting.component.ts:27\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            convert\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    convert(value: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/settings/components/settings/base-setting/base-setting.component.ts:83\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            dispatch\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    dispatch(value: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/settings/components/settings/base-setting/base-setting.component.ts:88\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            initFormGroup\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    initFormGroup()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/settings/components/settings/base-setting/base-setting.component.ts:79\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         FormGroup\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            isEqual\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    isEqual(formA, formB)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/settings/components/settings/base-setting/base-setting.component.ts:94\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    formA\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    formB\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/settings/components/settings/base-setting/base-setting.component.ts:70\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/settings/components/settings/base-setting/base-setting.component.ts:40\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            submitValue\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    submitValue()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/settings/components/settings/base-setting/base-setting.component.ts:98\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            updateValue\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updateValue(value: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/settings/components/settings/base-setting/base-setting.component.ts:75\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            baseSettings\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {}\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/settings/components/settings/base-setting/base-setting.component.ts:34\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            form\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormGroup\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/settings/components/settings/base-setting/base-setting.component.ts:33\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            ngUnsubscribe$\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Subject()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/settings/components/settings/base-setting/base-setting.component.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            placeholder$\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/settings/components/settings/base-setting/base-setting.component.ts:32\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            setting$\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/settings/components/settings/base-setting/base-setting.component.ts:31\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import {Component, Input, OnDestroy, OnInit} from '@angular/core';\nimport {AppState} from \"@ofStore/index\";\nimport {Store} from \"@ngrx/store\";\nimport {PatchSettings} from \"@ofActions/settings.actions\";\nimport {buildSettingsSelector} from \"@ofSelectors/settings.selectors\";\nimport {buildConfigSelector} from \"@ofSelectors/config.selectors\";\nimport {Subject, timer} from \"rxjs\";\nimport {debounce, distinctUntilChanged, filter, first, map, takeUntil} from \"rxjs/operators\";\nimport {FormGroup} from \"@angular/forms\";\nimport * as _ from \"lodash\";\nimport {selectIdentifier} from \"@ofSelectors/authentication.selectors\";\n\n@Component({\n    selector: 'of-base-setting',\n    templateUrl: './base-setting.component.html'\n})\nexport class BaseSettingComponent implements OnInit, OnDestroy {\n\n    @Input() public settingPath: string;\n    @Input() public messagePlaceholder: string;\n    @Input() public requiredField: boolean;\n    private ngUnsubscribe$ = new Subject();\n    protected setting$;\n    protected placeholder$;\n    form: FormGroup;\n    private baseSettings = {};\n\n    constructor(protected store: Store) {\n\n    }\n\n    ngOnInit() {\n        this.form = this.initFormGroup();\n        if(!this.form){\n            throw 'Trying to instanciate component without form';\n        }\n        this.setting$ = this.store.select(buildSettingsSelector(this.settingPath))\n            .pipe(takeUntil(this.ngUnsubscribe$));\n            this.setting$.subscribe(next => this.updateValue(next));\n        this.setting$\n            .pipe(first())\n            .subscribe(()=>\n                this.form.valueChanges\n                    .pipe(\n                        takeUntil(this.ngUnsubscribe$),\n                        filter(()=>this.form.valid),\n                        distinctUntilChanged((formA, formB) => this.isEqual(formA, formB)),\n                        debounce(() => timer(500))\n                    )\n                    .subscribe(next=>this.dispatch(this.convert(next)))\n            );\n        this.placeholder$ = this.store.select(buildConfigSelector(`settings.${this.settingPath}`))\n            .pipe(takeUntil(this.ngUnsubscribe$));\n        this.store.select(selectIdentifier)\n            .pipe(\n                takeUntil(this.ngUnsubscribe$),\n                map(id=>{return {login:id}}))\n            .subscribe(next=>this.baseSettings = next);\n\n    }\n\n    ngOnDestroy() {\n        this.ngUnsubscribe$.next();\n        this.ngUnsubscribe$.complete();\n    }\n\n    protected updateValue(value:any){\n\n    }\n\n    protected initFormGroup():FormGroup{\n        return null\n    }\n\n    protected convert(value:any):any{\n        return value;\n    }\n\n\n    private dispatch(value:any) {\n        const settings = {...this.baseSettings};\n        settings[this.settingPath] = value.setting;\n        this.store.dispatch(new PatchSettings({settings: settings}));\n    }\n\n    protected isEqual(formA, formB):boolean{\n        return _.isEqual(formA, formB);\n    }\n\n    protected submitValue(){\n        alert('submitted');\n    }\n\n}\n\n    \n\n    \n        \n\n\n\n\n\n\n\n  base-setting works!\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  base-setting works!'\n    var COMPONENTS = [{'name': 'ActionComponent', 'selector': 'of-action'},{'name': 'AppComponent', 'selector': 'of-root'},{'name': 'ArchiveFiltersComponent', 'selector': 'of-archive-filters'},{'name': 'ArchiveListComponent', 'selector': 'of-archive-list'},{'name': 'ArchiveListPageComponent', 'selector': 'of-archive-list-page'},{'name': 'ArchivesComponent', 'selector': 'of-archives'},{'name': 'BaseSettingComponent', 'selector': 'of-base-setting'},{'name': 'CardComponent', 'selector': 'of-card'},{'name': 'CardDetailsComponent', 'selector': 'of-card-details'},{'name': 'CardListComponent', 'selector': 'of-card-list'},{'name': 'ConfirmModalComponent', 'selector': 'confirm-modal-component'},{'name': 'CustomLogoComponent', 'selector': 'of-custom-logo'},{'name': 'CustomTimelineChartComponent', 'selector': 'of-custom-timeline-chart'},{'name': 'DatetimeFilterComponent', 'selector': 'of-datetime-filter'},{'name': 'DetailComponent', 'selector': 'of-detail'},{'name': 'DetailsComponent', 'selector': 'of-details'},{'name': 'EmailSettingComponent', 'selector': 'of-email-setting'},{'name': 'FeedComponent', 'selector': 'of-cards'},{'name': 'FiltersComponent', 'selector': 'of-filters'},{'name': 'IconComponent', 'selector': 'of-icon'},{'name': 'IframeDisplayComponent', 'selector': 'of-iframedisplay'},{'name': 'InfoComponent', 'selector': 'of-info'},{'name': 'InitChartComponent', 'selector': 'of-init-chart'},{'name': 'ListSettingComponent', 'selector': 'of-list-setting'},{'name': 'LoginComponent', 'selector': 'of-login'},{'name': 'MenuLinkComponent', 'selector': 'of-menu-link'},{'name': 'MultiFilterComponent', 'selector': 'of-multi-filter'},{'name': 'MultiSettingsComponent', 'selector': 'of-multi-settings'},{'name': 'NavbarComponent', 'selector': 'of-navbar'},{'name': 'NoSelectionComponent', 'selector': 'of-no-selection'},{'name': 'ResizableComponent', 'selector': 'of-resizable'},{'name': 'SettingsComponent', 'selector': 'of-settings'},{'name': 'TagsFilterComponent', 'selector': 'of-tags-filter'},{'name': 'TextSettingComponent', 'selector': 'of-text-setting'},{'name': 'TimeFilterComponent', 'selector': 'of-time-filter'},{'name': 'TimeLineComponent', 'selector': 'of-time-line'},{'name': 'TypeAheadSettingsComponent', 'selector': 'of-type-ahead-settings'},{'name': 'TypeFilterComponent', 'selector': 'of-type-filter'}];\n    var DIRECTIVES = [{'name': 'CalcHeightDirective', 'selector': '[calcHeightDirective]'},{'name': 'DraggableDirective', 'selector': '[appDraggable]'},{'name': 'MouseWheelDirective', 'selector': '[appMouseWheel]'}];\n    var ACTUAL_COMPONENT = {'name': 'BaseSettingComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/CalcHeightDirective.html":{"url":"directives/CalcHeightDirective.html","title":"directive - CalcHeightDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  CalcHeightDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/modules/utilities/calc-height.directive.ts\n        \n\n\n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        [calcHeightDirective]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _resizeSubject$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                calcHeight\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                calcHeightClass\n                            \n                            \n                                fixedHeightClass\n                            \n                            \n                                parentId\n                            \n                        \n                    \n                \n\n\n\n                \n                    \n                        HostListeners\n                    \n                \n                \n                    \n                        \n                            \n                                window:resize\n                            \n                        \n                    \n                \n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(el: ElementRef)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/utilities/calc-height.directive.ts:30\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        el\n                                                  \n                                                        \n                                                                        ElementRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        calcHeightClass\n                    \n                \n                \n                    \n                        Type :         any\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/utilities/calc-height.directive.ts:28\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        fixedHeightClass\n                    \n                \n                \n                    \n                        Type :         any\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/utilities/calc-height.directive.ts:25\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        parentId\n                    \n                \n                \n                    \n                        Type :         any\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/utilities/calc-height.directive.ts:22\n                            \n                        \n            \n        \n\n\n\n            \n    HostListeners    \n        \n            \n                \n                    \n                    \n                        \n                            window:resize\n                        \n                        \n                    \n                \n            \n            \n                \nwindow:resize()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/utilities/calc-height.directive.ts:42\n                \n            \n\n\n        \n    \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            calcHeight\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    calcHeight(parentId: string, fixedHeightClass: string, calcHeightClass: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/utilities/calc-height.directive.ts:46\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    parentId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    fixedHeightClass\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    calcHeightClass\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _resizeSubject$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subject\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/utilities/calc-height.directive.ts:30\n                            \n                        \n\n\n            \n        \n\n\n\n    \n\n\n    \n        import {\n    Directive, ElementRef,\n    Input, HostListener, OnInit\n} from '@angular/core';\nimport {debounceTime} from \"rxjs/operators\";\nimport {Subject} from \"rxjs\";\n\n@Directive({\n    selector: '[calcHeightDirective]'\n})\nexport class CalcHeightDirective {\n\n    @Input()\n    parentId: any;\n\n    @Input()\n    fixedHeightClass: any;\n\n    @Input()\n    calcHeightClass: any;\n\n    private _resizeSubject$: Subject;\n\n    constructor(private el: ElementRef) {\n\n        this._resizeSubject$ = new Subject();\n        this._resizeSubject$.asObservable().pipe(\n            debounceTime(300),\n        ).subscribe(x => this.calcHeight(this.parentId, this.fixedHeightClass, this.calcHeightClass));\n\n    }\n\n    @HostListener('window:resize')\n    onResize() {\n        this._resizeSubject$.next();\n    }\n\n    private calcHeight(parentId: string, fixedHeightClass: string, calcHeightClass: string) {\n\n        let parent : HTMLElement;\n\n        parent = document.getElementById(this.parentId);\n\n        //If no parentId was provided or search didn't yield any element, fallback is element calling the directive\n        if(!parent){\n            parent = this.el.nativeElement;\n        }\n\n        if(!parent){\n            return;\n        }\n\n        //Get elements that should be allowed to define their own height (based on content), which are then \"fixed\" for this calculation\n        const fixedElements = parent.getElementsByClassName(fixedHeightClass);\n\n        //Get elements that for which the height should be calculated\n        //For now all elements bearing the calcHeightClass will have their height updated to the same calculated value\n        //Which makes sense if they're next to one another, but another option would be to divide the available height equally\n        const calcElements = parent.getElementsByClassName(calcHeightClass);\n\n        if (!calcElements) return;\n\n        //Sum heights of fixed elements\n        const sumFixElemHeights = Array.from(fixedElements)\n            .map(x => x.getBoundingClientRect().height).reduce((prev, curr) => {\n                return prev + curr;\n            }, 0);\n\n        // Calculate available height by subtracting the heights of fixed elements from the total window height\n        let availableHeight = parent.clientHeight - sumFixElemHeights;\n\n        //console.log(\"CalcHeightDirective \"+fixedHeightClass+\" \"+parent.clientHeight+\" \"+sumFixElemHeights+\" \"+availableHeight);\n\n        // Apply height and overflow\n        Array.from(calcElements)\n            .forEach((x: HTMLElement) => x.style.height = `${availableHeight}px`\n            );\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Card.html":{"url":"classes/Card.html","title":"class - Card","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Card\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/model/card.model.ts\n        \n\n\n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(uid: string, id: string, publisher: string, publisherVersion: string, publishDate: number, startDate: number, endDate: number, severity: Severity, mainRecipient: string, process?: string, processId?: string, state?: string, lttd?: number, title?: I18n, summary?: I18n, data?: any, details?: Detail[])\n                    \n                \n                        \n                            \n                                Defined in src/app/model/card.model.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        uid\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        id\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        publisher\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        publisherVersion\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        publishDate\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        startDate\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        endDate\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        severity\n                                                  \n                                                        \n                                                                        Severity\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        mainRecipient\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        process\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        processId\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        state\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        lttd\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        title\n                                                  \n                                                        \n                                                                        I18n\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        summary\n                                                  \n                                                        \n                                                                        I18n\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        data\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        details\n                                                  \n                                                        \n                                                                        Detail[]\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Severity} from \"@ofModel/light-card.model\";\nimport {I18n} from \"@ofModel/i18n.model\";\n\nexport class Card {\n    /* istanbul ignore next */\n    constructor(\n        readonly uid: string,\n        readonly id: string,\n        readonly publisher: string,\n        readonly publisherVersion: string,\n        readonly publishDate: number,\n        readonly startDate: number,\n        readonly endDate: number,\n        readonly severity: Severity,\n        readonly mainRecipient: string,\n        readonly process?: string,\n        readonly processId?: string,\n        readonly state?: string,\n        readonly lttd?: number,\n        readonly title?: I18n,\n        readonly summary?: I18n,\n        readonly  data?: any,\n        readonly  details?: Detail[],\n    ) {\n    }\n}\n\nexport enum TitlePosition {\n    UP, DOWN, NONE\n\n}\n\nexport class Detail {\n    /* istanbul ignore next */\n    constructor(\n        readonly titlePosition: TitlePosition,\n        readonly title: I18n,\n        readonly titleStyle: string,\n        readonly templateName: string,\n        readonly styles: string[]) {\n    }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CardComponent.html":{"url":"components/CardComponent.html","title":"component - CardComponent","body":"\n                   \n\n\n\n\n\n  Components\n  CardComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/cards/components/card/card.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                of-card\n            \n\n            \n                styleUrls\n                ./card.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./card.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                _i18nPrefix\n                            \n                            \n                                    Private\n                                actions\n                            \n                            \n                                actionsAppear\n                            \n                            \n                                actionsUrlPath\n                            \n                            \n                                currentPath\n                            \n                            \n                                dateToDisplay\n                            \n                            \n                                    Private\n                                ngUnsubscribe\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                computeDisplayedDates\n                            \n                            \n                                getActions\n                            \n                            \n                                handleDate\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                    Public\n                                select\n                            \n                            \n                                transformActionMapToArray\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                lightCard\n                            \n                            \n                                open\n                            \n                        \n                    \n                \n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    i18nPrefix\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router, store: Store, translate: TranslateService, time: TimeService)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/cards/components/card/card.component.ts:40\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                        Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        translate\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        time\n                                                  \n                                                        \n                                                                        TimeService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        lightCard\n                    \n                \n                \n                    \n                        Type :         LightCard\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/cards/components/card/card.component.ts:32\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        open\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/cards/components/card/card.component.ts:31\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            computeDisplayedDates\n                        \n                        \n                    \n                \n            \n            \n                \ncomputeDisplayedDates(config: string, lightCard: LightCard)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/cards/components/card/card.component.ts:75\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    config\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    lightCard\n                                    \n                                                LightCard\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getActions\n                        \n                        \n                    \n                \n            \n            \n                \ngetActions()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/cards/components/card/card.component.ts:100\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     {}\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            handleDate\n                        \n                        \n                    \n                \n            \n            \n                \nhandleDate(timeStamp: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/cards/components/card/card.component.ts:90\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    timeStamp\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/cards/components/card/card.component.ts:122\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/cards/components/card/card.component.ts:50\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            select\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    select()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/cards/components/card/card.component.ts:94\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            transformActionMapToArray\n                        \n                        \n                    \n                \n            \n            \n                \ntransformActionMapToArray()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/cards/components/card/card.component.ts:107\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            _i18nPrefix\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/cards/components/card/card.component.ts:34\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            actions\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Action[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/cards/components/card/card.component.ts:37\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            actionsAppear\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/cards/components/card/card.component.ts:38\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            actionsUrlPath\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/cards/components/card/card.component.ts:36\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            currentPath\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/cards/components/card/card.component.ts:33\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            dateToDisplay\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/cards/components/card/card.component.ts:35\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            ngUnsubscribe\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subject\n\n                        \n                    \n                    \n                        \n                            Default value : new Subject()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/cards/components/card/card.component.ts:40\n                            \n                        \n\n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        i18nPrefix\n                    \n                \n\n                \n                    \n                        geti18nPrefix()\n                    \n                \n                            \n                                \n                                    Defined in src/app/modules/cards/components/card/card.component.ts:118\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import {Component, Input, OnDestroy, OnInit} from '@angular/core';\nimport {LightCard} from '@ofModel/light-card.model';\nimport {Router} from '@angular/router';\nimport {selectCurrentUrl} from '@ofStore/selectors/router.selectors';\nimport {Store} from '@ngrx/store';\nimport {AppState} from '@ofStore/index';\nimport {map, takeUntil} from 'rxjs/operators';\nimport {buildConfigSelector} from '@ofSelectors/config.selectors';\nimport {TranslateService} from '@ngx-translate/core';\nimport {TimeService} from '@ofServices/time.service';\nimport {Action} from '@ofModel/thirds.model';\nimport {Subject} from 'rxjs';\nimport { AddActionsAppear } from '@ofStore/actions/card.actions';\nimport { selectCardActionsAppearState } from '@ofStore/selectors/card.selectors';\n\n@Component({\n    selector: 'of-card',\n    templateUrl: './card.component.html',\n    styleUrls: ['./card.component.scss']\n})\nexport class CardComponent implements OnInit, OnDestroy {\n\n    @Input() public open: boolean = false;\n    @Input() public lightCard: LightCard;\n    currentPath: any;\n    protected _i18nPrefix: string;\n    dateToDisplay: string;\n    actionsUrlPath: string;\n    private actions: Action[];\n    actionsAppear = false;\n\n    private ngUnsubscribe: Subject = new Subject();\n\n    /* istanbul ignore next */\n    constructor(private router: Router,\n                private store: Store,\n                private translate: TranslateService,\n                private time: TimeService\n    ) {\n    }\n\n    ngOnInit() {\n        const card = this.lightCard;\n        this._i18nPrefix = `${card.publisher}.${card.publisherVersion}.`;\n        this.store.select(selectCurrentUrl).subscribe(url => {\n            if (url) {\n                const urlParts = url.split('/');\n                this.currentPath = urlParts[1];\n            }\n        });\n        this.store.select(buildConfigSelector('feed.card.time.display'))\n        // use configuration to compute date\n            .pipe(map(config => this.computeDisplayedDates(config, card)))\n            .pipe(takeUntil(this.ngUnsubscribe))\n            .subscribe(computedDate => this.dateToDisplay = computedDate);\n\n        this.actionsUrlPath = `/publisher/${card.publisher}/process/${card.processId}/states/${card.state}/actions`;\n        // check if the current card is in the store\n        this.store.select(selectCardActionsAppearState).subscribe(d => {\n            const currentSelected = card.id;\n            if (d.includes(currentSelected)) {\n                this.actionsAppear = true;\n            }\n        });\n    }\n\n    computeDisplayedDates(config: string, lightCard: LightCard): string {\n        switch (config) {\n            case 'NONE':\n                return '';\n            case 'LTTD':\n                return this.handleDate(lightCard.lttd);\n            case 'PUBLICATION':\n                return this.handleDate(lightCard.publishDate);\n            case 'BUSINESS_START':\n                return this.handleDate(lightCard.startDate);\n            default:\n                return `${this.handleDate(lightCard.startDate)} - ${this.handleDate(lightCard.endDate)}`\n        }\n    }\n\n    handleDate(timeStamp: number): string {\n        return this.time.formatDateTime(timeStamp);\n    }\n\n    public select() {\n        this.store.dispatch(new AddActionsAppear(this.lightCard.id));\n        this.router.navigate(['/' + this.currentPath, 'cards', this.lightCard.id]);\n    }\n\n    /* necessary otherwise action buttons are weirdly refresh */\n    getActions() {\n        if (!this.actions) {\n            this.actions = this.transformActionMapToArray();\n        }\n        return this.actions;\n    }\n\n    transformActionMapToArray() {\n        const actions = this.lightCard.actions;\n        if (actions) {\n            const entries = Array.from(actions.entries());\n            return entries.map(([key, action]: [string, Action]) => {\n                return {...action, key: key}\n            });\n        }\n        return [];\n    }\n\n    get i18nPrefix(): string {\n        return this._i18nPrefix;\n    }\n\n    ngOnDestroy(): void {\n        this.ngUnsubscribe.next();\n        this.ngUnsubscribe.complete();\n    }\n}\n\n    \n\n    \n        \n\n\n\n\n\n\n\n    \n        \n        \n        \n            {{i18nPrefix + lightCard.title.key}}\n            ({{this.dateToDisplay}})\n        \n    \n    \n        \n        \n            {{i18nPrefix + lightCard.summary.key}}\n                \n                    \n                    \n                \n        \n    \n\n    \n    \n\n    \n                \n                    ./card.component.scss\n                \n                /* Copyright (c) 2020, RTE (http://www.rte-france.com)\n *\n * This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n */\n\n\n.light-card-detail {\n  max-width: 400px;\n}\n\n.card {\n  margin-bottom: 5px;\n  word-break: break-all;\n}\n\n.card-title {\n  font-variant: small-caps;\n  font-size: larger;\n}\n\n.card-subtitle {\n  font-size: small;\n}\n\n.card-text {\n  font-size: small;\n}\n\n.badge-border {\n  width: 30px;\n  text-align: center;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                        {{i18nPrefix + lightCard.title.key}}            ({{this.dateToDisplay}})                                            {{i18nPrefix + lightCard.summary.key}}                                                                                        '\n    var COMPONENTS = [{'name': 'ActionComponent', 'selector': 'of-action'},{'name': 'AppComponent', 'selector': 'of-root'},{'name': 'ArchiveFiltersComponent', 'selector': 'of-archive-filters'},{'name': 'ArchiveListComponent', 'selector': 'of-archive-list'},{'name': 'ArchiveListPageComponent', 'selector': 'of-archive-list-page'},{'name': 'ArchivesComponent', 'selector': 'of-archives'},{'name': 'BaseSettingComponent', 'selector': 'of-base-setting'},{'name': 'CardComponent', 'selector': 'of-card'},{'name': 'CardDetailsComponent', 'selector': 'of-card-details'},{'name': 'CardListComponent', 'selector': 'of-card-list'},{'name': 'ConfirmModalComponent', 'selector': 'confirm-modal-component'},{'name': 'CustomLogoComponent', 'selector': 'of-custom-logo'},{'name': 'CustomTimelineChartComponent', 'selector': 'of-custom-timeline-chart'},{'name': 'DatetimeFilterComponent', 'selector': 'of-datetime-filter'},{'name': 'DetailComponent', 'selector': 'of-detail'},{'name': 'DetailsComponent', 'selector': 'of-details'},{'name': 'EmailSettingComponent', 'selector': 'of-email-setting'},{'name': 'FeedComponent', 'selector': 'of-cards'},{'name': 'FiltersComponent', 'selector': 'of-filters'},{'name': 'IconComponent', 'selector': 'of-icon'},{'name': 'IframeDisplayComponent', 'selector': 'of-iframedisplay'},{'name': 'InfoComponent', 'selector': 'of-info'},{'name': 'InitChartComponent', 'selector': 'of-init-chart'},{'name': 'ListSettingComponent', 'selector': 'of-list-setting'},{'name': 'LoginComponent', 'selector': 'of-login'},{'name': 'MenuLinkComponent', 'selector': 'of-menu-link'},{'name': 'MultiFilterComponent', 'selector': 'of-multi-filter'},{'name': 'MultiSettingsComponent', 'selector': 'of-multi-settings'},{'name': 'NavbarComponent', 'selector': 'of-navbar'},{'name': 'NoSelectionComponent', 'selector': 'of-no-selection'},{'name': 'ResizableComponent', 'selector': 'of-resizable'},{'name': 'SettingsComponent', 'selector': 'of-settings'},{'name': 'TagsFilterComponent', 'selector': 'of-tags-filter'},{'name': 'TextSettingComponent', 'selector': 'of-text-setting'},{'name': 'TimeFilterComponent', 'selector': 'of-time-filter'},{'name': 'TimeLineComponent', 'selector': 'of-time-line'},{'name': 'TypeAheadSettingsComponent', 'selector': 'of-type-ahead-settings'},{'name': 'TypeFilterComponent', 'selector': 'of-type-filter'}];\n    var DIRECTIVES = [{'name': 'CalcHeightDirective', 'selector': '[calcHeightDirective]'},{'name': 'DraggableDirective', 'selector': '[appDraggable]'},{'name': 'MouseWheelDirective', 'selector': '[appMouseWheel]'}];\n    var ACTUAL_COMPONENT = {'name': 'CardComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CardDetailsComponent.html":{"url":"components/CardDetailsComponent.html","title":"component - CardDetailsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  CardDetailsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/cards/components/card-details/card-details.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                of-card-details\n            \n\n\n\n\n            \n                templateUrl\n                ./card-details.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                card\n                            \n                            \n                                currentPath\n                            \n                            \n                                details\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                closeDetails\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store, thirdsService: ThirdsService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/cards/components/card-details/card-details.component.ts:26\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                        Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        thirdsService\n                                                  \n                                                        \n                                                                        ThirdsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            closeDetails\n                        \n                        \n                    \n                \n            \n            \n                \ncloseDetails()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/cards/components/card-details/card-details.component.ts:62\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/cards/components/card-details/card-details.component.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            card\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Card\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/cards/components/card-details/card-details.component.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            currentPath\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/cards/components/card-details/card-details.component.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            details\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Detail[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/cards/components/card-details/card-details.component.ts:25\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import {Component, OnInit} from '@angular/core';\nimport {Card, Detail} from '@ofModel/card.model';\nimport {Store} from '@ngrx/store';\nimport {AppState} from '@ofStore/index';\nimport * as cardSelectors from '@ofStore/selectors/card.selectors';\nimport {ThirdsService} from \"@ofServices/thirds.service\";\nimport { ClearLightCardSelection } from '@ofStore/actions/light-card.actions';\nimport { Router } from '@angular/router';\nimport {selectCurrentUrl} from '@ofStore/selectors/router.selectors';\n@Component({\n    selector: 'of-card-details',\n    templateUrl: './card-details.component.html',\n})\nexport class CardDetailsComponent implements OnInit {\n\n    card: Card;\n    details: Detail[];\n    currentPath: any;\n\n    constructor(private store: Store,\n        private thirdsService: ThirdsService,\n        private router: Router) {\n    }\n\n    ngOnInit() {\n        this.store.select(cardSelectors.selectCardStateSelected)\n            .subscribe(card => {\n                this.card = card;\n                if (card) {\n                    if (card.details) {\n                        this.details = [...card.details];\n                    } else {\n                        this.details = [];\n                    }\n                    this.thirdsService.queryThird(this.card.publisher, this.card.publisherVersion).subscribe(third => {\n                            if (third) {\n                                const state = third.extractState(this.card);\n                                if (state != null) {\n                                    this.details.push(...state.details);\n                                }\n                            }\n                        },\n                        error => console.log(`something went wrong while trying to fetch third for ${this.card.publisher} with ${this.card.publisherVersion} version.`))\n                    ;\n                }\n            });\n            this.store.select(selectCurrentUrl).subscribe(url => {\n                if (url) {\n                    const urlParts = url.split('/');\n                    this.currentPath = urlParts[1];\n                }\n            });\n    }\n    closeDetails() {\n        this.store.dispatch(new ClearLightCardSelection());\n        this.router.navigate(['/' + this.currentPath, 'cards']);\n    }\n\n\n}\n\n    \n\n    \n        \n\n\n\n\n\n\n\n  \n    \n      &times;\n    \n    \n  \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            ×          '\n    var COMPONENTS = [{'name': 'ActionComponent', 'selector': 'of-action'},{'name': 'AppComponent', 'selector': 'of-root'},{'name': 'ArchiveFiltersComponent', 'selector': 'of-archive-filters'},{'name': 'ArchiveListComponent', 'selector': 'of-archive-list'},{'name': 'ArchiveListPageComponent', 'selector': 'of-archive-list-page'},{'name': 'ArchivesComponent', 'selector': 'of-archives'},{'name': 'BaseSettingComponent', 'selector': 'of-base-setting'},{'name': 'CardComponent', 'selector': 'of-card'},{'name': 'CardDetailsComponent', 'selector': 'of-card-details'},{'name': 'CardListComponent', 'selector': 'of-card-list'},{'name': 'ConfirmModalComponent', 'selector': 'confirm-modal-component'},{'name': 'CustomLogoComponent', 'selector': 'of-custom-logo'},{'name': 'CustomTimelineChartComponent', 'selector': 'of-custom-timeline-chart'},{'name': 'DatetimeFilterComponent', 'selector': 'of-datetime-filter'},{'name': 'DetailComponent', 'selector': 'of-detail'},{'name': 'DetailsComponent', 'selector': 'of-details'},{'name': 'EmailSettingComponent', 'selector': 'of-email-setting'},{'name': 'FeedComponent', 'selector': 'of-cards'},{'name': 'FiltersComponent', 'selector': 'of-filters'},{'name': 'IconComponent', 'selector': 'of-icon'},{'name': 'IframeDisplayComponent', 'selector': 'of-iframedisplay'},{'name': 'InfoComponent', 'selector': 'of-info'},{'name': 'InitChartComponent', 'selector': 'of-init-chart'},{'name': 'ListSettingComponent', 'selector': 'of-list-setting'},{'name': 'LoginComponent', 'selector': 'of-login'},{'name': 'MenuLinkComponent', 'selector': 'of-menu-link'},{'name': 'MultiFilterComponent', 'selector': 'of-multi-filter'},{'name': 'MultiSettingsComponent', 'selector': 'of-multi-settings'},{'name': 'NavbarComponent', 'selector': 'of-navbar'},{'name': 'NoSelectionComponent', 'selector': 'of-no-selection'},{'name': 'ResizableComponent', 'selector': 'of-resizable'},{'name': 'SettingsComponent', 'selector': 'of-settings'},{'name': 'TagsFilterComponent', 'selector': 'of-tags-filter'},{'name': 'TextSettingComponent', 'selector': 'of-text-setting'},{'name': 'TimeFilterComponent', 'selector': 'of-time-filter'},{'name': 'TimeLineComponent', 'selector': 'of-time-line'},{'name': 'TypeAheadSettingsComponent', 'selector': 'of-type-ahead-settings'},{'name': 'TypeFilterComponent', 'selector': 'of-type-filter'}];\n    var DIRECTIVES = [{'name': 'CalcHeightDirective', 'selector': '[calcHeightDirective]'},{'name': 'DraggableDirective', 'selector': '[appDraggable]'},{'name': 'MouseWheelDirective', 'selector': '[appMouseWheel]'}];\n    var ACTUAL_COMPONENT = {'name': 'CardDetailsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CardEffects.html":{"url":"injectables/CardEffects.html","title":"injectable - CardEffects","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  CardEffects\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/effects/card.effects.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                clearCardSelection\n                            \n                            \n                                loadArchivedById\n                            \n                            \n                                loadById\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store, actions$: Actions, service: CardService)\n                    \n                \n                        \n                            \n                                Defined in src/app/store/effects/card.effects.ts:34\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                        Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        actions$\n                                                  \n                                                        \n                                                                        Actions\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        service\n                                                  \n                                                        \n                                                                        CardService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            clearCardSelection\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Observable\n\n                        \n                    \n                    \n                        \n                            Default value : this.actions$.pipe(\n        ofType(LightCardActionTypes.ClearLightCardSelection),\n        map(() => {\n            return new ClearCard();\n        })\n    )\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Effect()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/effects/card.effects.ts:68\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loadArchivedById\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Observable\n\n                        \n                    \n                    \n                        \n                            Default value : this.actions$.pipe(\n        ofType(CardActionTypes.LoadArchivedCard),\n        switchMap(action => this.service.loadArchivedCard(action.payload.id)),\n        map((card: Card) => {\n            return new LoadArchivedCardSuccess({card: card});\n        }),\n        catchError((err, caught) => {\n            this.store.dispatch(new LoadArchivedCardFailure(err));\n            return caught;\n        })\n    )\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Effect()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/effects/card.effects.ts:55\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loadById\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Observable\n\n                        \n                    \n                    \n                        \n                            Default value : this.actions$.pipe(\n        ofType(CardActionTypes.LoadCard),\n        switchMap(action => this.service.loadCard(action.payload.id)),\n        map((card: Card) => {\n            return new LoadCardSuccess({card: card});\n        }),\n        catchError((err, caught) => {\n            this.store.dispatch(new LoadCardFailure(err));\n            return caught;\n        })\n    )\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Effect()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/effects/card.effects.ts:42\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import {Injectable} from '@angular/core';\nimport {Actions, Effect, ofType} from '@ngrx/effects';\nimport {Action, Store} from '@ngrx/store';\nimport {Observable} from 'rxjs';\nimport {catchError, map, switchMap} from 'rxjs/operators';\nimport {CardService} from '@ofServices/card.service';\nimport {AppState} from '@ofStore/index';\nimport {CardActionTypes,\n        LoadArchivedCard, LoadArchivedCardFailure,\n        LoadArchivedCardSuccess,\n        LoadCard,\n        LoadCardFailure,\n        LoadCardSuccess,\n        ClearCard} from '@ofActions/card.actions';\nimport {Card} from '@ofModel/card.model';\nimport { ClearLightCardSelection, LightCardActionTypes } from '@ofStore/actions/light-card.actions';\n\n// those effects are unused for the moment\n@Injectable()\nexport class CardEffects {\n\n    /* istanbul ignore next */\n    constructor(private store: Store,\n                private actions$: Actions,\n                private service: CardService) {}\n\n    @Effect()\n    loadById: Observable = this.actions$.pipe(\n        ofType(CardActionTypes.LoadCard),\n        switchMap(action => this.service.loadCard(action.payload.id)),\n        map((card: Card) => {\n            return new LoadCardSuccess({card: card});\n        }),\n        catchError((err, caught) => {\n            this.store.dispatch(new LoadCardFailure(err));\n            return caught;\n        })\n    );\n\n    @Effect()\n    loadArchivedById: Observable = this.actions$.pipe(\n        ofType(CardActionTypes.LoadArchivedCard),\n        switchMap(action => this.service.loadArchivedCard(action.payload.id)),\n        map((card: Card) => {\n            return new LoadArchivedCardSuccess({card: card});\n        }),\n        catchError((err, caught) => {\n            this.store.dispatch(new LoadArchivedCardFailure(err));\n            return caught;\n        })\n    );\n\n    @Effect()\n    clearCardSelection: Observable = this.actions$.pipe(\n        ofType(LightCardActionTypes.ClearLightCardSelection),\n        map(() => {\n            return new ClearCard();\n        })\n    );\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CardFeedState.html":{"url":"interfaces/CardFeedState.html","title":"interface - CardFeedState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  CardFeedState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/states/feed.state.ts\n        \n\n            \n                Description\n            \n            \n                The Feed State consist of:\n\nEntityState of LightCard\nselectedCardId: the currently selected card id\nlastCards the last cards added / updated to the feed\nloading: whether there is an ongoing state modification\nmessage: last message during state processing\nfilters: a collection of filter to apply to the rendered feed\n\n\n            \n\n            \n                Extends\n            \n            \n                        EntityState\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        error\n                                \n                                \n                                        filters\n                                \n                                \n                                        lastCards\n                                \n                                \n                                        loading\n                                \n                                \n                                        selectedCardId\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        error\n                                    \n                                \n                                \n                                    \n                                        error:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        filters\n                                    \n                                \n                                \n                                    \n                                        filters:         Map\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Map\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        lastCards\n                                    \n                                \n                                \n                                    \n                                        lastCards:     LightCard[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     LightCard[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        loading\n                                    \n                                \n                                \n                                    \n                                        loading:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        selectedCardId\n                                    \n                                \n                                \n                                    \n                                        selectedCardId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {createEntityAdapter, EntityAdapter, EntityState} from '@ngrx/entity';\nimport {LightCard, severityOrdinal} from '@ofModel/light-card.model';\nimport {Filter} from \"@ofModel/feed-filter.model\";\nimport {FilterType} from \"@ofServices/filter.service\";\n\n/**\n * The Feed State consist of:\n *  * EntityState of LightCard\n *  * selectedCardId: the currently selected card id\n *  * lastCards the last cards added / updated to the feed\n *  * loading: whether there is an ongoing state modification\n *  * message: last message during state processing\n *  * filters: a collection of filter to apply to the rendered feed\n */\nexport interface CardFeedState extends EntityState {\n    selectedCardId: string;\n    lastCards: LightCard[];\n    loading: boolean;\n    error: string;\n    filters: Map;\n}\n\nexport function compareByStartDate(card1: LightCard, card2: LightCard){\n    return card1.startDate - card2.startDate\n}\n\nexport function compareBySeverity(card1: LightCard, card2: LightCard){\n    return severityOrdinal(card1.severity) - severityOrdinal(card2.severity);\n}\n\nexport function compareByLttd(card1: LightCard, card2: LightCard){\n    return card1.lttd - card2.lttd;\n}\n\nexport function compareByPublishDate(card1: LightCard, card2: LightCard){\n    return card2.publishDate - card1.publishDate;\n}\n\nexport function compareBySeverityLttdPublishDate(card1: LightCard, card2: LightCard){\n    let result = compareBySeverity(card1,card2);\n    if(result==0)\n        result = compareByLttd(card1,card2);\n    if(result == 0)\n        result = compareByPublishDate(card1,card2);\n    return result;\n}\n\nexport const LightCardAdapter: EntityAdapter = createEntityAdapter({\n    sortComparer:compareBySeverityLttdPublishDate\n});\n\nexport const feedInitialState: CardFeedState = LightCardAdapter.getInitialState(\n    {\n        selectedCardId: null,\n        lastCards: [],\n        loading: false,\n        error: '',\n        filters: new Map()\n    });\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CardListComponent.html":{"url":"components/CardListComponent.html","title":"component - CardListComponent","body":"\n                   \n\n\n\n\n\n  Components\n  CardListComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/feed/components/card-list/card-list.component.ts\n\n\n\n    \n        Extends\n    \n    \n                ResizableComponent\n    \n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                of-card-list\n            \n\n            \n                styleUrls\n                ./card-list.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./card-list.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                resized\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                ngAfterViewInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                lightCards\n                            \n                            \n                                selection\n                            \n                        \n                    \n                \n\n\n\n                \n                    \n                        HostListeners\n                    \n                \n                \n                    \n                        \n                            \n                                window:resize\n                            \n                        \n                    \n                \n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/feed/components/card-list/card-list.component.ts:26\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                        Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        lightCards\n                    \n                \n                \n                    \n                        Type :     LightCard[]\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/feed/components/card-list/card-list.component.ts:25\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        selection\n                    \n                \n                \n                    \n                        Type :     Observable\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/feed/components/card-list/card-list.component.ts:26\n                            \n                        \n            \n        \n\n\n\n    \n    HostListeners    \n        \n            \n                \n                    \n                    \n                        \n                            window:resize\n                        \n                        \n                    \n                \n            \n            \n                \nwindow:resize()\n                \n            \n\n\n            \n                \n                    Inherited from         ResizableComponent\n\n                \n            \n            \n                \n                        Defined in         ResizableComponent:34\n\n                \n            \n\n\n        \n    \n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/feed/components/card-list/card-list.component.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngAfterViewInit\n                        \n                        \n                    \n                \n            \n            \n                \nngAfterViewInit()\n                \n            \n\n\n            \n                \n                    Inherited from         ResizableComponent\n\n                \n            \n            \n                \n                        Defined in         ResizableComponent:19\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            resized\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                            \n                                \n                                    Inherited from         ResizableComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         ResizableComponent:17\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import {Component, Input, OnInit} from '@angular/core';\nimport {LightCard} from '@ofModel/light-card.model';\nimport {Observable} from 'rxjs';\nimport { ResizableComponent } from 'app/modules/utilities/components/resizable/resizable.component';\nimport { Store } from '@ngrx/store';\nimport { AppState } from '@ofStore/index';\nimport { selectCurrentUrl } from '@ofStore/selectors/router.selectors';\nimport { AddActionsAppear } from '@ofStore/actions/card.actions';\n\n@Component({\n  selector: 'of-card-list',\n  templateUrl: './card-list.component.html',\n  styleUrls: ['./card-list.component.scss']\n})\nexport class CardListComponent extends ResizableComponent implements OnInit {\n\n  @Input() public lightCards: LightCard[];\n  @Input() public selection: Observable;\n\n  constructor(private store: Store) {\n    super();\n  }\n\n  ngOnInit(): void {\n    this.store.select(selectCurrentUrl).subscribe(url => {\n      if (url) {\n          const urlParts = url.split('/');\n          if (urlParts[3]) {\n              this.store.dispatch(new AddActionsAppear(urlParts[3]));\n          }\n      }\n    });\n  }\n}\n\n    \n\n    \n        \n\n\n\n\n\n\n\n  \n    \n  \n  \n    \n      \n        \n      \n    \n  \n\n\n\n    \n\n    \n                \n                    ./card-list.component.scss\n                \n                /* Copyright (c) 2020, RTE (http://www.rte-france.com)\n *\n * This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n */\n\n\n.feed-content {\n  height: 100%;\n}\n\n.calc-height-feed-content {\n  overflow-x: hidden;\n  overflow-y: auto;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                        '\n    var COMPONENTS = [{'name': 'ActionComponent', 'selector': 'of-action'},{'name': 'AppComponent', 'selector': 'of-root'},{'name': 'ArchiveFiltersComponent', 'selector': 'of-archive-filters'},{'name': 'ArchiveListComponent', 'selector': 'of-archive-list'},{'name': 'ArchiveListPageComponent', 'selector': 'of-archive-list-page'},{'name': 'ArchivesComponent', 'selector': 'of-archives'},{'name': 'BaseSettingComponent', 'selector': 'of-base-setting'},{'name': 'CardComponent', 'selector': 'of-card'},{'name': 'CardDetailsComponent', 'selector': 'of-card-details'},{'name': 'CardListComponent', 'selector': 'of-card-list'},{'name': 'ConfirmModalComponent', 'selector': 'confirm-modal-component'},{'name': 'CustomLogoComponent', 'selector': 'of-custom-logo'},{'name': 'CustomTimelineChartComponent', 'selector': 'of-custom-timeline-chart'},{'name': 'DatetimeFilterComponent', 'selector': 'of-datetime-filter'},{'name': 'DetailComponent', 'selector': 'of-detail'},{'name': 'DetailsComponent', 'selector': 'of-details'},{'name': 'EmailSettingComponent', 'selector': 'of-email-setting'},{'name': 'FeedComponent', 'selector': 'of-cards'},{'name': 'FiltersComponent', 'selector': 'of-filters'},{'name': 'IconComponent', 'selector': 'of-icon'},{'name': 'IframeDisplayComponent', 'selector': 'of-iframedisplay'},{'name': 'InfoComponent', 'selector': 'of-info'},{'name': 'InitChartComponent', 'selector': 'of-init-chart'},{'name': 'ListSettingComponent', 'selector': 'of-list-setting'},{'name': 'LoginComponent', 'selector': 'of-login'},{'name': 'MenuLinkComponent', 'selector': 'of-menu-link'},{'name': 'MultiFilterComponent', 'selector': 'of-multi-filter'},{'name': 'MultiSettingsComponent', 'selector': 'of-multi-settings'},{'name': 'NavbarComponent', 'selector': 'of-navbar'},{'name': 'NoSelectionComponent', 'selector': 'of-no-selection'},{'name': 'ResizableComponent', 'selector': 'of-resizable'},{'name': 'SettingsComponent', 'selector': 'of-settings'},{'name': 'TagsFilterComponent', 'selector': 'of-tags-filter'},{'name': 'TextSettingComponent', 'selector': 'of-text-setting'},{'name': 'TimeFilterComponent', 'selector': 'of-time-filter'},{'name': 'TimeLineComponent', 'selector': 'of-time-line'},{'name': 'TypeAheadSettingsComponent', 'selector': 'of-type-ahead-settings'},{'name': 'TypeFilterComponent', 'selector': 'of-type-filter'}];\n    var DIRECTIVES = [{'name': 'CalcHeightDirective', 'selector': '[calcHeightDirective]'},{'name': 'DraggableDirective', 'selector': '[appDraggable]'},{'name': 'MouseWheelDirective', 'selector': '[appMouseWheel]'}];\n    var ACTUAL_COMPONENT = {'name': 'CardListComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CardOperation.html":{"url":"classes/CardOperation.html","title":"class - CardOperation","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CardOperation\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/model/card-operation.model.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            CardOperation\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                convertTypeIntoEnum\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(number: number, publicationDate: number, type: CardOperationType, cards?: LightCard[], cardIds?: string[])\n                    \n                \n                        \n                            \n                                Defined in src/app/model/card-operation.model.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        number\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        publicationDate\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        type\n                                                  \n                                                        \n                                                                        CardOperationType\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        cards\n                                                  \n                                                        \n                                                                    LightCard[]\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        cardIds\n                                                  \n                                                        \n                                                                    string[]\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            convertTypeIntoEnum\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    convertTypeIntoEnum(key: string, value: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/model/card-operation.model.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    value\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {LightCard} from './light-card.model';\n\nexport class CardOperation implements CardOperation {\n    /* istanbul ignore next */\n    constructor(\n        readonly number: number,\n        readonly publicationDate: number,\n        readonly type: CardOperationType,\n        readonly cards?: LightCard[],\n        readonly cardIds?: string[]\n    ) {\n    }\n\n    static convertTypeIntoEnum(key:string, value:string){\n        if(key === 'type'){\n            return CardOperationType[value]\n        }\n        return value;\n    }\n\n}\n\nexport enum CardOperationType {\n    ADD , UPDATE, DELETE\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CardOperationEffects.html":{"url":"injectables/CardOperationEffects.html","title":"injectable - CardOperationEffects","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  CardOperationEffects\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/effects/card-operation.effects.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                refreshIfSelectedCard\n                            \n                            \n                                subscribe\n                            \n                            \n                                updateSubscription\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store, actions$: Actions, service: CardService)\n                    \n                \n                        \n                            \n                                Defined in src/app/store/effects/card-operation.effects.ts:33\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                        Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        actions$\n                                                  \n                                                        \n                                                                        Actions\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        service\n                                                  \n                                                        \n                                                                        CardService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            refreshIfSelectedCard\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Observable\n\n                        \n                    \n                    \n                        \n                            Default value : this.actions$\n        .pipe(\n            ofType(LightCardActionTypes.LoadLightCardsSuccess),\n            map((a: LoadLightCardsSuccess) => a.payload.lightCards), //retrieve list of added light cards from action payload\n            withLatestFrom(this.store.select(selectCardStateSelectedId)), //retrieve currently selected card\n            switchMap(([lightCards, selectedCardId]) => lightCards.filter(card => card.id.indexOf(selectedCardId) >= 0)), //keep only lightCards matching the process id of current selected card\n            map(lightCard => new LoadCard({id: lightCard.id})) //if any, trigger refresh by firing LoadCard\n        )\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Effect()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/effects/card-operation.effects.ts:93\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            subscribe\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                    \n                        \n                            Default value : this.actions$\n        .pipe(\n            // loads card operations only after authentication of a default user ok.\n            ofType(UserActionsTypes.UserApplicationRegistered),\n            switchMap(() => this.service.getCardOperation()\n                .pipe(\n                    takeUntil(this.service.unsubscribe$),\n                    map(operation => {\n                        switch (operation.type) {\n                            case CardOperationType.ADD:\n                                return new LoadLightCardsSuccess({lightCards: operation.cards});\n                            case CardOperationType.DELETE:\n                                return new RemoveLightCard({cards: operation.cardIds});\n                            default:\n                                return new AddLightCardFailure(\n                                    {error: new Error(`unhandled action type '${operation.type}'`)}\n                                );\n                        }\n                    }),\n                    catchError((error, caught) => {\n                        this.store.dispatch(new AddLightCardFailure({error: error}));\n                        return caught;\n                    })\n                )\n            ),\n\n            catchError((error, caught) => {\n                this.store.dispatch(new HandleUnexpectedError({error: error}));\n                return caught;\n            }))\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Effect()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/effects/card-operation.effects.ts:42\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updateSubscription\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                    \n                        \n                            Default value : this.actions$\n        .pipe(\n            // loads card operations only after authentication of a default user ok.\n            ofType(FeedActionTypes.ApplyFilter),\n            filter((af: ApplyFilter) => af.payload.name == FilterType.TIME_FILTER),\n            switchMap((af: ApplyFilter) => this.service.updateCardSubscriptionWithDates(af.payload.status.start, af.payload.status.end)\n                .pipe(\n                    map(() => {\n                        return new UpdatedSubscription();\n                    })\n                )\n            ),\n            catchError((error, caught) => {\n                this.store.dispatch(new HandleUnexpectedError({error: error}))\n                return caught;\n            })\n        )\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Effect()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/effects/card-operation.effects.ts:74\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import {Injectable} from '@angular/core';\nimport {Actions, Effect, ofType} from '@ngrx/effects';\nimport {CardService} from '@ofServices/card.service';\nimport {Observable} from 'rxjs';\nimport {catchError, filter, map, switchMap, takeUntil, withLatestFrom} from 'rxjs/operators';\nimport {\n    AddLightCardFailure,\n    HandleUnexpectedError,\n    LightCardActions,\n    LightCardActionTypes,\n    LoadLightCardsSuccess,\n    RemoveLightCard,\n    UpdatedSubscription\n} from '@ofActions/light-card.actions';\nimport {Action, Store} from \"@ngrx/store\";\nimport {AppState} from \"@ofStore/index\";\nimport {ApplyFilter, FeedActionTypes} from \"@ofActions/feed.actions\";\nimport {FilterType} from \"@ofServices/filter.service\";\nimport {selectCardStateSelectedId} from \"@ofSelectors/card.selectors\";\nimport {LoadCard} from \"@ofActions/card.actions\";\nimport {CardOperationType} from \"@ofModel/card-operation.model\";\nimport { UserActionsTypes } from '@ofStore/actions/user.actions';\n\n@Injectable()\nexport class CardOperationEffects {\n\n    /* istanbul ignore next */\n    constructor(private store: Store,\n                private actions$: Actions,\n                private service: CardService) {\n    }\n\n    @Effect()\n    subscribe: Observable = this.actions$\n        .pipe(\n            // loads card operations only after authentication of a default user ok.\n            ofType(UserActionsTypes.UserApplicationRegistered),\n            switchMap(() => this.service.getCardOperation()\n                .pipe(\n                    takeUntil(this.service.unsubscribe$),\n                    map(operation => {\n                        switch (operation.type) {\n                            case CardOperationType.ADD:\n                                return new LoadLightCardsSuccess({lightCards: operation.cards});\n                            case CardOperationType.DELETE:\n                                return new RemoveLightCard({cards: operation.cardIds});\n                            default:\n                                return new AddLightCardFailure(\n                                    {error: new Error(`unhandled action type '${operation.type}'`)}\n                                );\n                        }\n                    }),\n                    catchError((error, caught) => {\n                        this.store.dispatch(new AddLightCardFailure({error: error}));\n                        return caught;\n                    })\n                )\n            ),\n\n            catchError((error, caught) => {\n                this.store.dispatch(new HandleUnexpectedError({error: error}));\n                return caught;\n            }));\n\n    @Effect()\n    updateSubscription: Observable = this.actions$\n        .pipe(\n            // loads card operations only after authentication of a default user ok.\n            ofType(FeedActionTypes.ApplyFilter),\n            filter((af: ApplyFilter) => af.payload.name == FilterType.TIME_FILTER),\n            switchMap((af: ApplyFilter) => this.service.updateCardSubscriptionWithDates(af.payload.status.start, af.payload.status.end)\n                .pipe(\n                    map(() => {\n                        return new UpdatedSubscription();\n                    })\n                )\n            ),\n            catchError((error, caught) => {\n                this.store.dispatch(new HandleUnexpectedError({error: error}))\n                return caught;\n            })\n        );\n\n    @Effect()\n    refreshIfSelectedCard: Observable = this.actions$\n        .pipe(\n            ofType(LightCardActionTypes.LoadLightCardsSuccess),\n            map((a: LoadLightCardsSuccess) => a.payload.lightCards), //retrieve list of added light cards from action payload\n            withLatestFrom(this.store.select(selectCardStateSelectedId)), //retrieve currently selected card\n            switchMap(([lightCards, selectedCardId]) => lightCards.filter(card => card.id.indexOf(selectedCardId) >= 0)), //keep only lightCards matching the process id of current selected card\n            map(lightCard => new LoadCard({id: lightCard.id})) //if any, trigger refresh by firing LoadCard\n        )\n    ;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CardService.html":{"url":"injectables/CardService.html","title":"injectable - CardService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  CardService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/card.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                archivesUrl\n                            \n                            \n                                    Readonly\n                                cardOperationsUrl\n                            \n                            \n                                    Readonly\n                                cardsUrl\n                            \n                            \n                                    Readonly\n                                unsubscribe$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                fetchArchivedCards\n                            \n                            \n                                fetchCardOperation\n                            \n                            \n                                getCardOperation\n                            \n                            \n                                loadArchivedCard\n                            \n                            \n                                loadCard\n                            \n                            \n                                unsubscribeCardOperation\n                            \n                            \n                                    Public\n                                updateCardSubscriptionWithDates\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(httpClient: HttpClient, notifyService: NotifyService, guidService: GuidService, timeService: TimeService, authService: AuthenticationService)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/card.service.ts:28\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        httpClient\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        notifyService\n                                                  \n                                                        \n                                                                        NotifyService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        guidService\n                                                  \n                                                        \n                                                                        GuidService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        timeService\n                                                  \n                                                        \n                                                                        TimeService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            fetchArchivedCards\n                        \n                        \n                    \n                \n            \n            \n                \nfetchArchivedCards(filters: Map)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/card.service.ts:99\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filters\n                                    \n                                                Map\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            fetchCardOperation\n                        \n                        \n                    \n                \n            \n            \n                \nfetchCardOperation(eventSource: EventSourcePolyfill)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/card.service.ts:63\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    eventSource\n                                    \n                                            EventSourcePolyfill\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getCardOperation\n                        \n                        \n                    \n                \n            \n            \n                \ngetCardOperation()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/card.service.ts:46\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            loadArchivedCard\n                        \n                        \n                    \n                \n            \n            \n                \nloadArchivedCard(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/card.service.ts:95\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            loadCard\n                        \n                        \n                    \n                \n            \n            \n                \nloadCard(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/card.service.ts:42\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            unsubscribeCardOperation\n                        \n                        \n                    \n                \n            \n            \n                \nunsubscribeCardOperation()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/card.service.ts:59\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            updateCardSubscriptionWithDates\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updateCardSubscriptionWithDates(rangeStart: number, rangeEnd: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/card.service.ts:89\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    rangeStart\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    rangeEnd\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            archivesUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/card.service.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            cardOperationsUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/card.service.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            cardsUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/card.service.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            unsubscribe$\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Subject()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/card.service.ts:25\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import {Injectable} from '@angular/core';\nimport {Observable, of, Subject} from 'rxjs';\nimport {CardOperation} from '@ofModel/card-operation.model';\nimport {EventSourcePolyfill} from 'ng-event-source';\nimport {AuthenticationService} from './authentication/authentication.service';\nimport {Card} from '@ofModel/card.model';\nimport {HttpClient, HttpParams} from '@angular/common/http';\nimport {environment} from '@env/environment';\nimport {GuidService} from '@ofServices/guid.service';\nimport {LightCard} from '@ofModel/light-card.model';\nimport {Page} from '@ofModel/page.model';\nimport { TimeService } from '@ofServices/time.service';\nimport { NotifyService } from '@ofServices/notify.service';\n\n@Injectable()\nexport class CardService {\n    readonly unsubscribe$ = new Subject();\n    readonly cardOperationsUrl: string;\n    readonly cardsUrl: string;\n    readonly archivesUrl: string;\n\n\n    constructor(private httpClient: HttpClient,\n                private notifyService: NotifyService,\n                private guidService: GuidService,\n                private timeService: TimeService,\n                private authService: AuthenticationService) {\n        const clientId = this.guidService.getCurrentGuidString();\n        this.cardOperationsUrl = `${environment.urls.cards}/cardSubscription?clientId=${clientId}`;\n        this.cardsUrl = `${environment.urls.cards}/cards`;\n        this.archivesUrl = `${environment.urls.cards}/archives`;\n    }\n\n    loadCard(id: string): Observable {\n        return this.httpClient.get(`${this.cardsUrl}/${id}`);\n    }\n\n    getCardOperation(): Observable {\n        const minus2Hour = new Date(new Date().valueOf() - 2 * 60 * 60 * 1000);\n        const plus48Hours = new Date(minus2Hour.valueOf() + 48 * 60 * 60 * 1000);\n        // security header needed here as SSE request are not intercepted by our header interceptor\n        return this.fetchCardOperation(new EventSourcePolyfill(\n            `${this.cardOperationsUrl}&notification=true&rangeStart=${minus2Hour.valueOf()}&rangeEnd=${plus48Hours.valueOf()}`\n            , {\n                headers: this.authService.getSecurityHeader(),\n                heartbeatTimeout: 600000\n            }));\n    }\n\n\n    unsubscribeCardOperation() {\n        this.unsubscribe$.next();\n    }\n\n    fetchCardOperation(eventSource: EventSourcePolyfill): Observable {\n        return Observable.create(observer => {\n            try {\n                eventSource.onmessage = message => {\n                    this.notifyService.createNotification(`New cards are being pushed`);\n                    if (!message) {\n                        return observer.error(message);\n                    }\n                    return observer.next(JSON.parse(message.data, CardOperation.convertTypeIntoEnum));\n                };\n                eventSource.onerror = error => {\n                    console.error(`error occurred from ES: ${error.toString()}`);\n                };\n\n            } catch (error) {\n                console.error('an error occurred', error);\n                return observer.error(error);\n            }\n            return () => {\n                if (eventSource && eventSource.readyState !== eventSource.CLOSED) {\n                    eventSource.close();\n                }\n            };\n        });\n    }\n\n    public updateCardSubscriptionWithDates(rangeStart: number, rangeEnd: number): Observable {\n        return this.httpClient.post(\n            `${this.cardOperationsUrl}`,\n            {rangeStart: rangeStart, rangeEnd: rangeEnd});\n    }\n\n    loadArchivedCard(id: string): Observable {\n        return this.httpClient.get(`${this.archivesUrl}/${id}`);\n    }\n\n    fetchArchivedCards(filters: Map): Observable> {\n        let params = new HttpParams();\n        filters.forEach((values, key) => values.forEach(value => params = params.append(key, value)));\n        // const tmp = new HttpParams().set('publisher', 'defaultPublisher').set('size', '10');\n        return this.httpClient.get>(`${this.archivesUrl}/`, {params});\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CardState.html":{"url":"interfaces/CardState.html","title":"interface - CardState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  CardState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/states/card.state.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        actionsAppear\n                                \n                                \n                                        error\n                                \n                                \n                                        loading\n                                \n                                \n                                        selected\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        actionsAppear\n                                    \n                                \n                                \n                                    \n                                        actionsAppear:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        error\n                                    \n                                \n                                \n                                    \n                                        error:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        loading\n                                    \n                                \n                                \n                                    \n                                        loading:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        selected\n                                    \n                                \n                                \n                                    \n                                        selected:         Card\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Card\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {Card} from '@ofModel/card.model';\n\nexport interface CardState {\n    selected: Card;\n    loading: boolean;\n    error: string;\n    actionsAppear: string[];\n}\n\nexport const cardInitialState: CardState = {\n    selected: null,\n    loading: false,\n    error: null,\n    actionsAppear: []\n};\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/CardsModule.html":{"url":"modules/CardsModule.html","title":"module - CardsModule","body":"\n                   \n\n\n\n\n    Modules\n    CardsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_CardsModule\n\n\n\ncluster_CardsModule_declarations\n\n\n\ncluster_CardsModule_imports\n\n\n\ncluster_CardsModule_exports\n\n\n\ncluster_CardsModule_providers\n\n\n\n\nActionComponent\n\nActionComponent\n\n\n\nCardsModule\n\nCardsModule\n\nCardsModule -->\n\nActionComponent->CardsModule\n\n\n\n\n\nCardComponent\n\nCardComponent\n\nCardsModule -->\n\nCardComponent->CardsModule\n\n\n\n\n\nCardDetailsComponent\n\nCardDetailsComponent\n\nCardsModule -->\n\nCardDetailsComponent->CardsModule\n\n\n\n\n\nConfirmModalComponent\n\nConfirmModalComponent\n\nCardsModule -->\n\nConfirmModalComponent->CardsModule\n\n\n\n\n\nDetailComponent\n\nDetailComponent\n\nCardsModule -->\n\nDetailComponent->CardsModule\n\n\n\n\n\nDetailsComponent\n\nDetailsComponent\n\nCardsModule -->\n\nDetailsComponent->CardsModule\n\n\n\n\n\nCardComponent \n\nCardComponent \n\nCardComponent  -->\n\nCardsModule->CardComponent \n\n\n\n\n\nCardDetailsComponent \n\nCardDetailsComponent \n\nCardDetailsComponent  -->\n\nCardsModule->CardDetailsComponent \n\n\n\n\n\nConfirmModalComponent \n\nConfirmModalComponent \n\nConfirmModalComponent  -->\n\nCardsModule->ConfirmModalComponent \n\n\n\n\n\nDetailComponent \n\nDetailComponent \n\nDetailComponent  -->\n\nCardsModule->DetailComponent \n\n\n\n\n\nDetailsComponent \n\nDetailsComponent \n\nDetailsComponent  -->\n\nCardsModule->DetailsComponent \n\n\n\n\n\nUtilitiesModule\n\nUtilitiesModule\n\nCardsModule -->\n\nUtilitiesModule->CardsModule\n\n\n\n\n\nHandlebarsService\n\nHandlebarsService\n\nCardsModule -->\n\nHandlebarsService->CardsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/modules/cards/cards.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            ActionComponent\n                        \n                        \n                            CardComponent\n                        \n                        \n                            CardDetailsComponent\n                        \n                        \n                            ConfirmModalComponent\n                        \n                        \n                            DetailComponent\n                        \n                        \n                            DetailsComponent\n                        \n                    \n                \n                \n                    EntryComponents\n                    \n                        \n                            ConfirmModalComponent\n                        \n                    \n                \n                \n                    Providers\n                    \n                        \n                            HandlebarsService\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            UtilitiesModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            CardComponent\n                        \n                        \n                            CardDetailsComponent\n                        \n                        \n                            ConfirmModalComponent\n                        \n                        \n                            DetailComponent\n                        \n                        \n                            DetailsComponent\n                        \n                    \n                \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            forRoot\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    forRoot()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/cards/cards.module.ts:46\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         ModuleWithProviders\n\n                    \n                \n            \n        \n    \n\n    \n\n\n    \n        /* Copyright (c) 2020, RTE (http://www.rte-france.com)\n *\n * This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n */\n\n\nimport {ModuleWithProviders, NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {CardComponent} from \"./components/card/card.component\";\nimport {CardDetailsComponent} from \"./components/card-details/card-details.component\";\nimport {DetailsComponent} from \"./components/details/details.component\";\nimport {DetailComponent} from \"./components/detail/detail.component\";\nimport {TranslateModule} from \"@ngx-translate/core\";\nimport {ThirdsService} from \"../../services/thirds.service\";\nimport {HandlebarsService} from \"./services/handlebars.service\";\nimport {UtilitiesModule} from \"../utilities/utilities.module\";\nimport {ActionComponent} from './components/action/action.component';\nimport {NgbModule} from \"@ng-bootstrap/ng-bootstrap\";\nimport {ConfirmModalComponent} from \"./components/action/confirm-modal/confirm-modal.component\";\n\n@NgModule({\n  declarations: [CardComponent\n      , CardDetailsComponent\n      , DetailsComponent\n      , DetailComponent\n      , ActionComponent\n      , ConfirmModalComponent],\n  imports: [\n    CommonModule,\n      TranslateModule,\n      UtilitiesModule,\n      NgbModule\n  ],\n    exports: [CardComponent\n        , CardDetailsComponent\n        , DetailsComponent\n        , DetailComponent\n        , ConfirmModalComponent\n    ],\n    providers: [HandlebarsService],\n    entryComponents: [ConfirmModalComponent]\n})\nexport class CardsModule {\n    static forRoot(): ModuleWithProviders{\n        return {\n            ngModule: CardsModule,\n            providers: [ThirdsService]\n        }\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CheckAuthenticationStatus.html":{"url":"classes/CheckAuthenticationStatus.html","title":"class - CheckAuthenticationStatus","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CheckAuthenticationStatus\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/authentication.actions.ts\n        \n\n            \n                Description\n            \n            \n                It aims to validate the current authentication if exists.\n\n            \n\n\n            \n                Implements\n            \n            \n                            Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : AuthenticationActionTypes.CheckAuthenticationStatus\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/authentication.actions.ts:59\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Action} from '@ngrx/store';\nimport {Guid} from 'guid-typescript';\nimport {Message} from \"@ofModel/message.model\";\nimport {ExtractI18nBuilderOptions} from \"@angular-devkit/build-angular\";\n\nexport enum AuthenticationActionTypes {\n    InitAuthStatus = '[Authentication] Init Authentication Status',\n    CheckAuthenticationStatus = '[Authentication] Check Authentication Status',\n    AcceptLogIn = '[Authentication] Accept the user log in attempt',\n    RejectLogIn = '[Authentication] Reject the user log in attempt',\n    TryToLogIn = '[Authentication] Try to log the user in',\n    TryToLogOut = '[Authentication] Try to log the user out',\n    AcceptLogOut = '[Authentication] Accept the user log out attempt',\n    AcceptLogOutSuccess = '[Authentication] Success Accept the user log out attempt',\n    CheckImplicitFlowAuthenticationStatus = '[Authentication] Check Authentication Status specifically for the Implicit Flow',\n    UselessAuthAction = '[Authentication] test purpose action'\n    // TODO the following actions should be merge with password and code flow management of authentication\n    , ImplicitallyAuthenticated = '[Authentication] user is authentication using Implicit Flow' //\n    , UnAuthenticationFromImplicitFlow = '[Authentication[ user is log out by implicit Flow internal managment'\n}\n\n/**\n * Authentication success payload\n */\nexport class PayloadForSuccessfulAuthentication {\n    constructor(public identifier: string,\n                public clientId: Guid,\n                public token: string,\n                public expirationDate: Date,\n                public firstName?:string,\n                public lastName?:string) {\n    }\n}\n\n/**\n * It aims to validate the current authentication if exists.\n *\n */\nexport class InitAuthStatus implements Action {\n    readonly type = AuthenticationActionTypes.InitAuthStatus;\n    /* istanbul ignore next */\n    constructor(public payload:{code: string}){}\n}\n\n/**\n * It aims to validate the current authentication if exists.\n *\n */\nexport class CheckAuthenticationStatus implements Action {\n    /* istanbul ignore next */\n    readonly type = AuthenticationActionTypes.CheckAuthenticationStatus;\n}\n\n/**\n * Action used to update the state with the authentication information\n *\n * Emitted by {AuthenticationEffects} in the following {Observable} @members:\n *  * TryToLogIn\n *  * CheckAuthentication via handleLogInAttempt @method\n *\n * Used in the {function} reducer of the {authentication.reducer.ts} file to create a new state\n * containing the authentication information by filtering on the {AuthenticationActionTypes.AcceptLogIn} type.\n *\n */\nexport class AcceptLogIn implements Action {\n    readonly type = AuthenticationActionTypes.AcceptLogIn;\n\n    /* istanbul ignore next */\n    constructor(public payload: PayloadForSuccessfulAuthentication) {}\n}\n\n/**\n * Action used to push login/password pair to the authentication service\n *\n * Emitted by {LoginComponent} in the onSubmit @method which is called\n * when the user click on the `Login` button of the login page form.\n */\nexport class TryToLogIn implements Action {\n    readonly type= AuthenticationActionTypes.TryToLogIn;\n\n    /* istanbul ignore next */\n    constructor(public payload: {username: string, password: string}){}\n}\n\n/**\n * Action used when the user logout\n *\n * Emitted by {NavbarComponent} win the logOut @method which is called\n * when the user click on the `logOut` button of the `navbar`\n */\nexport class TryToLogOut implements Action {\n    /* istanbul ignore next */\n    readonly type = AuthenticationActionTypes.TryToLogOut;\n}\n\n/**\n * Action used to notify the store that the authentication is not possible.\n *\n * Emmited by {AuthenticationEffect} in the following {Observable} @members:\n *  * `TryToLogin`;\n *  *  `CheckAuthentication`\n *  and in the `handleRejectedLogin` @method called by the `ChecAuthentication` {Observable}\n *\n * Used in the {function} reducer of the {authentication.reducer.ts} file to create a new state\n * without any authentication information and containing a message about login rejection\n * by filtering on the {AuthenticationActionTypes.RejectLogIn} type.\n *\n */\nexport class RejectLogIn implements Action {\n    readonly type = AuthenticationActionTypes.RejectLogIn;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Message }) {}\n}\n\n/**\n * Action used to removes authentication information of the system and thus logOut the user.\n *\n * Emitted by {AuthenticationEffect} in the following {Observable} @members:\n *  * `TryToLogOut`\n *  * `RejectLogInAttempt`\n *\n *  Consume by {AuthenticationEffect} in the `AcceptLogOut` {Observable} @member\n *\n */\nexport class AcceptLogOut implements Action {\n    readonly type = AuthenticationActionTypes.AcceptLogOut;\n\n    /* istanbul ignore next */\n    constructor(){}\n}\n\n/**\n * Action used to notify the store to remove authentication information\n *\n * Emitted by {AuthenticationEffect} in `AcceptLogOut` {Observable} @member.\n *\n * Used in the {function} reducer of the {authentication.reducer.ts} file to create a new state\n * without any authentication information by filtering on the {AuthenticationActionTypes.AcceptLogOut} type.\n */\nexport class AcceptLogOutSuccess implements Action {\n    /* istanbul ignore next */\n    readonly type = AuthenticationActionTypes.AcceptLogOutSuccess;\n}\n\nexport class CheckImplicitFlowAuthenticationStatus implements Action {\n    readonly type = AuthenticationActionTypes.CheckImplicitFlowAuthenticationStatus;\n}\n\nexport class UselessAuthAction implements  Action{\n    readonly type = AuthenticationActionTypes.UselessAuthAction;\n\n}\n\nexport class ImplicitlyAuthenticated implements Action {\n    readonly type = AuthenticationActionTypes.ImplicitallyAuthenticated;\n}\n\nexport class UnAuthenticationFromImplicitFlow implements Action {\n    readonly type = AuthenticationActionTypes.UnAuthenticationFromImplicitFlow;\n}\nexport type AuthenticationActions =\n    InitAuthStatus\n    | AcceptLogIn\n    | RejectLogIn\n    | TryToLogIn\n    | TryToLogOut\n    | CheckAuthenticationStatus\n    | AcceptLogOut\n    | AcceptLogOutSuccess\n    | CheckImplicitFlowAuthenticationStatus\n    | UselessAuthAction\n    | ImplicitlyAuthenticated\n    |UnAuthenticationFromImplicitFlow;\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CheckImplicitFlowAuthenticationStatus.html":{"url":"classes/CheckImplicitFlowAuthenticationStatus.html","title":"class - CheckImplicitFlowAuthenticationStatus","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CheckImplicitFlowAuthenticationStatus\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/authentication.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : AuthenticationActionTypes.CheckImplicitFlowAuthenticationStatus\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/authentication.actions.ts:155\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Action} from '@ngrx/store';\nimport {Guid} from 'guid-typescript';\nimport {Message} from \"@ofModel/message.model\";\nimport {ExtractI18nBuilderOptions} from \"@angular-devkit/build-angular\";\n\nexport enum AuthenticationActionTypes {\n    InitAuthStatus = '[Authentication] Init Authentication Status',\n    CheckAuthenticationStatus = '[Authentication] Check Authentication Status',\n    AcceptLogIn = '[Authentication] Accept the user log in attempt',\n    RejectLogIn = '[Authentication] Reject the user log in attempt',\n    TryToLogIn = '[Authentication] Try to log the user in',\n    TryToLogOut = '[Authentication] Try to log the user out',\n    AcceptLogOut = '[Authentication] Accept the user log out attempt',\n    AcceptLogOutSuccess = '[Authentication] Success Accept the user log out attempt',\n    CheckImplicitFlowAuthenticationStatus = '[Authentication] Check Authentication Status specifically for the Implicit Flow',\n    UselessAuthAction = '[Authentication] test purpose action'\n    // TODO the following actions should be merge with password and code flow management of authentication\n    , ImplicitallyAuthenticated = '[Authentication] user is authentication using Implicit Flow' //\n    , UnAuthenticationFromImplicitFlow = '[Authentication[ user is log out by implicit Flow internal managment'\n}\n\n/**\n * Authentication success payload\n */\nexport class PayloadForSuccessfulAuthentication {\n    constructor(public identifier: string,\n                public clientId: Guid,\n                public token: string,\n                public expirationDate: Date,\n                public firstName?:string,\n                public lastName?:string) {\n    }\n}\n\n/**\n * It aims to validate the current authentication if exists.\n *\n */\nexport class InitAuthStatus implements Action {\n    readonly type = AuthenticationActionTypes.InitAuthStatus;\n    /* istanbul ignore next */\n    constructor(public payload:{code: string}){}\n}\n\n/**\n * It aims to validate the current authentication if exists.\n *\n */\nexport class CheckAuthenticationStatus implements Action {\n    /* istanbul ignore next */\n    readonly type = AuthenticationActionTypes.CheckAuthenticationStatus;\n}\n\n/**\n * Action used to update the state with the authentication information\n *\n * Emitted by {AuthenticationEffects} in the following {Observable} @members:\n *  * TryToLogIn\n *  * CheckAuthentication via handleLogInAttempt @method\n *\n * Used in the {function} reducer of the {authentication.reducer.ts} file to create a new state\n * containing the authentication information by filtering on the {AuthenticationActionTypes.AcceptLogIn} type.\n *\n */\nexport class AcceptLogIn implements Action {\n    readonly type = AuthenticationActionTypes.AcceptLogIn;\n\n    /* istanbul ignore next */\n    constructor(public payload: PayloadForSuccessfulAuthentication) {}\n}\n\n/**\n * Action used to push login/password pair to the authentication service\n *\n * Emitted by {LoginComponent} in the onSubmit @method which is called\n * when the user click on the `Login` button of the login page form.\n */\nexport class TryToLogIn implements Action {\n    readonly type= AuthenticationActionTypes.TryToLogIn;\n\n    /* istanbul ignore next */\n    constructor(public payload: {username: string, password: string}){}\n}\n\n/**\n * Action used when the user logout\n *\n * Emitted by {NavbarComponent} win the logOut @method which is called\n * when the user click on the `logOut` button of the `navbar`\n */\nexport class TryToLogOut implements Action {\n    /* istanbul ignore next */\n    readonly type = AuthenticationActionTypes.TryToLogOut;\n}\n\n/**\n * Action used to notify the store that the authentication is not possible.\n *\n * Emmited by {AuthenticationEffect} in the following {Observable} @members:\n *  * `TryToLogin`;\n *  *  `CheckAuthentication`\n *  and in the `handleRejectedLogin` @method called by the `ChecAuthentication` {Observable}\n *\n * Used in the {function} reducer of the {authentication.reducer.ts} file to create a new state\n * without any authentication information and containing a message about login rejection\n * by filtering on the {AuthenticationActionTypes.RejectLogIn} type.\n *\n */\nexport class RejectLogIn implements Action {\n    readonly type = AuthenticationActionTypes.RejectLogIn;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Message }) {}\n}\n\n/**\n * Action used to removes authentication information of the system and thus logOut the user.\n *\n * Emitted by {AuthenticationEffect} in the following {Observable} @members:\n *  * `TryToLogOut`\n *  * `RejectLogInAttempt`\n *\n *  Consume by {AuthenticationEffect} in the `AcceptLogOut` {Observable} @member\n *\n */\nexport class AcceptLogOut implements Action {\n    readonly type = AuthenticationActionTypes.AcceptLogOut;\n\n    /* istanbul ignore next */\n    constructor(){}\n}\n\n/**\n * Action used to notify the store to remove authentication information\n *\n * Emitted by {AuthenticationEffect} in `AcceptLogOut` {Observable} @member.\n *\n * Used in the {function} reducer of the {authentication.reducer.ts} file to create a new state\n * without any authentication information by filtering on the {AuthenticationActionTypes.AcceptLogOut} type.\n */\nexport class AcceptLogOutSuccess implements Action {\n    /* istanbul ignore next */\n    readonly type = AuthenticationActionTypes.AcceptLogOutSuccess;\n}\n\nexport class CheckImplicitFlowAuthenticationStatus implements Action {\n    readonly type = AuthenticationActionTypes.CheckImplicitFlowAuthenticationStatus;\n}\n\nexport class UselessAuthAction implements  Action{\n    readonly type = AuthenticationActionTypes.UselessAuthAction;\n\n}\n\nexport class ImplicitlyAuthenticated implements Action {\n    readonly type = AuthenticationActionTypes.ImplicitallyAuthenticated;\n}\n\nexport class UnAuthenticationFromImplicitFlow implements Action {\n    readonly type = AuthenticationActionTypes.UnAuthenticationFromImplicitFlow;\n}\nexport type AuthenticationActions =\n    InitAuthStatus\n    | AcceptLogIn\n    | RejectLogIn\n    | TryToLogIn\n    | TryToLogOut\n    | CheckAuthenticationStatus\n    | AcceptLogOut\n    | AcceptLogOutSuccess\n    | CheckImplicitFlowAuthenticationStatus\n    | UselessAuthAction\n    | ImplicitlyAuthenticated\n    |UnAuthenticationFromImplicitFlow;\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CheckTokenResponse.html":{"url":"classes/CheckTokenResponse.html","title":"class - CheckTokenResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CheckTokenResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/authentication/authentication.service.ts\n        \n\n            \n                Description\n            \n            \n                class corresponding to the response of the web service checking jwt token when this token is a valid one.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Optional\n                                clientId\n                            \n                            \n                                    Public\n                                    Optional\n                                exp\n                            \n                            \n                                    Public\n                                    Optional\n                                sub\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(sub?: string, exp?: number, clientId?: string)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/authentication/authentication.service.ts:438\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        sub\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        exp\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        clientId\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            clientId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/authentication/authentication.service.ts:442\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            exp\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/authentication/authentication.service.ts:441\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            sub\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/authentication/authentication.service.ts:440\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Injectable} from '@angular/core';\nimport {HttpClient, HttpHeaders} from '@angular/common/http';\nimport {Observable, of, throwError} from 'rxjs';\nimport {catchError, filter, map, switchMap, tap} from 'rxjs/operators';\nimport {Guid} from 'guid-typescript';\nimport {\n    ImplicitlyAuthenticated,\n    InitAuthStatus,\n    PayloadForSuccessfulAuthentication,\n    UnAuthenticationFromImplicitFlow\n} from '@ofActions/authentication.actions';\nimport {environment} from '@env/environment';\nimport {GuidService} from '@ofServices/guid.service';\nimport {AppState} from '@ofStore/index';\nimport {select, Store} from '@ngrx/store';\nimport {buildConfigSelector} from '@ofSelectors/config.selectors';\nimport * as jwt_decode from 'jwt-decode';\nimport * as _ from 'lodash';\nimport {User} from '@ofModel/user.model';\nimport {EventType as OAuthType, JwksValidationHandler, OAuthEvent, OAuthService} from 'angular-oauth2-oidc';\nimport {implicitAuthenticationConfigFallback} from '@ofServices/authentication/auth-implicit-flow.config';\nimport {selectExpirationTime, selectIsImplicitlyAuthenticated} from '@ofSelectors/authentication.selectors';\n\nexport enum LocalStorageAuthContent {\n    token = 'token',\n    expirationDate = 'expirationDate',\n    identifier = 'identifier',\n    clientId = 'clientId'\n}\n\nexport const ONE_SECOND = 1000;\n\n@Injectable()\nexport class AuthenticationService {\n\n    /** url to check authentication token (jwt) */\n    private checkTokenUrl = `${environment.urls.auth}/check_token`;\n    /** url to ask for an authentication token (jwt) */\n    private askTokenUrl = `${environment.urls.auth}/token`;\n    private userDataUrl = `${environment.urls.users}/users`;\n    private clientId: string;\n    private clientSecret: string;\n    private loginClaim: string;\n    private expireClaim: string;\n    private delegateUrl: string;\n    private givenNameClaim: string;\n    private familyNameClaim: string;\n    private mode: string;\n    private authModeHandler: AuthenticationModeHandler;\n    private implicitConf = implicitAuthenticationConfigFallback;\n\n    /**\n     * @constructor\n     * @param httpClient - Angular build-in\n     * @param guidService - create and store the unique id for this application and user\n     * @param store - NGRX store\n     * @param oauthService - manage implicit flow for OAuth2\n     */\n    constructor(private httpClient: HttpClient\n        , private guidService: GuidService\n        , private store: Store\n        , private oauthService: OAuthService\n    ) {\n        store.select(buildConfigSelector('security'))\n            .subscribe(oauth2Conf => {\n                this.assignConfigurationProperties(oauth2Conf);\n                this.authModeHandler = this.instantiateAuthModeHandler(this.mode);\n            });\n    }\n\n    /**\n     * Choose to handle the OAuth 2.0 using implicit workflow\n     * if mode equals to 'implicit' other manage password grand\n     * or code flow.\n     * @param mode - extracted from config web-service settings\n     */\n    instantiateAuthModeHandler(mode: string): AuthenticationModeHandler {\n        if (mode.toLowerCase() === 'implicit') {\n            this.instantiateImplicitFlowConfiguration();\n            return new ImplicitAuthenticationHandler(this, this.store, sessionStorage);\n        }\n        return new PasswordOrCodeAuthenticationHandler(this, this.store);\n    }\n\n    /**\n     * extract Oauth 2.0 configuration from settings and store it in the service\n     * @param oauth2Conf - settings return by the back-end config service\n     */\n    assignConfigurationProperties(oauth2Conf) {\n        this.clientId = _.get(oauth2Conf, 'oauth2.client-id', null);\n        this.clientSecret = _.get(oauth2Conf, 'oauth2.client-secret', null);\n        this.delegateUrl = _.get(oauth2Conf, 'oauth2.flow.delagate-url', null);\n        this.loginClaim = _.get(oauth2Conf, 'jwt.login-claim', 'sub');\n        this.givenNameClaim = _.get(oauth2Conf, 'jwt.given-name-claim', 'given_name');\n        this.familyNameClaim = _.get(oauth2Conf, 'jwt.family-name-claim', 'family_name');\n        this.expireClaim = _.get(oauth2Conf, 'jwt.expire-claim', 'exp');\n        this.mode = _.get(oauth2Conf, 'oauth2.flow.mode', 'PASSWORD');\n    }\n\n    // TODO push this part into ImplicitAuthenticationHandler class\n    instantiateImplicitFlowConfiguration(): void {\n        this.implicitConf = {...this.implicitConf, issuer: this.delegateUrl, clientId: this.clientId};\n    }\n\n    /**\n     * Call the web service which checks the authentication token. A valid token gives back the authentication information\n     * and an invalid one an message.\n     *\n     * @param token - jwt token\n     * @return an {Observable} which contains the deserializable content of the token\n     * an message is thrown otherwise\n     */\n    checkAuthentication(token: string): Observable {\n        if (!!token) {\n            // const postData = new FormData();\n            const postData = new URLSearchParams();\n            postData.append('token', token);\n            const headers = new HttpHeaders({'Content-type': 'application/x-www-form-urlencoded; charset=utf-8'});\n            return this.httpClient.post(this.checkTokenUrl, postData.toString(), {headers: headers}).pipe(\n                map(check => check),\n                catchError(function (error: any) {\n                    console.error(error);\n                    return throwError(error);\n                })\n            );\n        }\n        return of(null);\n    }\n\n    /**\n     * Given a pair of connection, ask the web service generating jwt authentication token a token if the pair is\n     * a registered one.\n     * @param code OIDC code from code flow\n     */\n    askTokenFromCode(code: string):\n        Observable {\n        if (!this.clientId || !this.clientSecret || !this.loginClaim) {\n            return throwError('The authentication service is no correctly initialized');\n        }\n        const params = new URLSearchParams();\n        params.append('code', code);\n        params.append('grant_type', 'authorization_code');\n// beware clientId for token defines a type of authentication\n        params.append('clientId', this.clientId);\n        params.append('redirect_uri', this.computeRedirectUri());\n\n        const headers = new HttpHeaders({'Content-type': 'application/x-www-form-urlencoded; charset=utf-8'});\n        return this.handleNewToken(this.httpClient.post(this.askTokenUrl, params.toString(), {headers: headers}));\n    }\n\n    /**\n     * Given a pair of connection, ask the web service generating jwt authentication token a token if the pair is\n     * a registered one.\n     * @param login\n     * @param password\n     */\n    askTokenFromPassword(login: string, password: string): Observable {\n        if (!this.clientId || !this.clientSecret) {\n            return throwError('The authentication service is no correctly initialized');\n        }\n        const params = new URLSearchParams();\n        params.append('username', login);\n        params.append('password', password);\n        params.append('grant_type', 'password');\n// beware clientId for access_token is an oauth parameters\n        params.append('clientId', this.clientId);\n        params.append('client_secret', this.clientSecret);\n\n        const headers = new HttpHeaders({'Content-type': 'application/x-www-form-urlencoded; charset=utf-8'});\n        return this.handleNewToken(this.httpClient.post(this.askTokenUrl, params.toString(), {headers: headers}));\n    }\n\n    private handleNewToken(call: Observable): Observable {\n        return call.pipe(\n            map(data => {\n                return {...data, clientId: this.guidService.getCurrentGuid()};\n            }),\n            map((auth: AuthObject) => this.convert(auth)),\n            tap(this.saveAuthenticationInformation),\n            catchError(function (error: any) {\n                console.error(error);\n                return throwError(error);\n            }),\n            switchMap((auth) => this.loadUserData(auth))\n        );\n    }\n\n    public loadUserData(auth: PayloadForSuccessfulAuthentication): Observable {\n        return this.httpClient.get(`${this.userDataUrl}/${auth.identifier}`)\n            .pipe(\n                map(u => {\n                    auth.firstName = u.firstName;\n                    auth.lastName = u.lastName;\n                    return auth;\n                }),\n                catchError(() => of(auth))\n            );\n    }\n\n    /**\n     * extract the jwt authentication token from the localstorage\n     */\n    public extractToken(): string {\n        const currentAuthModeHandler = this.authModeHandler;\n        return currentAuthModeHandler.extractToken();\n    }\n\n    /**\n     * @return true if the expiration date stored in the `localestorage` is still running, false otherwise.\n     */\n    verifyExpirationDate(): boolean {\n        // + to convert the stored number as a string back to number\n        const expirationDate = +localStorage.getItem(LocalStorageAuthContent.expirationDate);\n        const isNotANumber = isNaN(expirationDate);\n        const stillValid = isInTheFuture(expirationDate);\n        return !isNotANumber && stillValid;\n    }\n\n    /**\n     * @return true if the expiration date stored in the `localstorage` is over, false otherwise\n     */\n    isExpirationDateOver(): boolean {\n        return !this.verifyExpirationDate();\n    }\n\n    /**\n     * clear the `localstorage` from all its content.\n     */\n    clearAuthenticationInformation(): void {\n        localStorage.clear();\n        sessionStorage.clear();\n        this.oauthService.logOut();\n    }\n\n    /**\n     * save the authentication informatios such as identifier, jwt token, expiration date and clientId in the\n     * `localstorage`.\n     * @param payload\n     */\n    saveAuthenticationInformation(payload: PayloadForSuccessfulAuthentication) {\n        localStorage.setItem(LocalStorageAuthContent.identifier, payload.identifier);\n        localStorage.setItem(LocalStorageAuthContent.token, payload.token);\n        localStorage.setItem(LocalStorageAuthContent.expirationDate, payload.expirationDate.getTime().toString());\n        localStorage.setItem(LocalStorageAuthContent.clientId, payload.clientId.toString());\n    }\n\n    /**\n     * extract from the `localstorage` the authentication relevant information such as dentifier, jwt token,\n     * expiration date and clientId\n     * @return {PayloadForSuccessfulAuthentication}\n     */\n    extractIdentificationInformation(): PayloadForSuccessfulAuthentication {\n        return new PayloadForSuccessfulAuthentication(\n            localStorage.getItem(LocalStorageAuthContent.identifier),\n            Guid.parse(localStorage.getItem(LocalStorageAuthContent.clientId)),\n            localStorage.getItem(LocalStorageAuthContent.token),\n            // as getItem return a string, `+` is used to convert the string into number\n            new Date(+localStorage.getItem(LocalStorageAuthContent.expirationDate)),\n        );\n    }\n\n\n    /**\n     * helper method to convert an {AuthObject} instance into a {PayloadForSuccessfulAuthentication} instance.\n     * @param payload\n     */\n    public convert(payload: AuthObject):\n        PayloadForSuccessfulAuthentication {\n\n        let expirationDate;\n        const jwt = this.decodeToken(payload.access_token);\n        if (!!payload.expires_in) {\n            expirationDate = Date.now() + ONE_SECOND * payload.expires_in;\n        } else if (!!this.expireClaim) {\n            expirationDate = jwt[this.expireClaim];\n        } else {\n            expirationDate = 0;\n        }\n        return new PayloadForSuccessfulAuthentication(jwt[this.loginClaim],\n            payload.clientId,\n            payload.access_token,\n            new Date(expirationDate),\n            jwt[this.givenNameClaim],\n            jwt[this.familyNameClaim]\n        );\n    }        // await this.oauthService.tryLogin();\n    /**\n     * helper method to put the jwt token into an appropriate string usable as an http header\n     */\n    public getSecurityHeader() {\n        return {'Authorization': `Bearer ${this.extractToken()}`};\n    }\n\n    public moveToCodeFlowLoginPage() {\n        if (!this.clientId || !this.clientSecret) {\n            return throwError('The authentication service is no correctly iniitialized');\n        }\n        if (!this.delegateUrl) {\n            window.location.href = `${environment.urls.auth}/code/redirect_uri=${this.computeRedirectUri()}`;\n        } else {\n            window.location.href = `${this.delegateUrl}&redirect_uri=${this.computeRedirectUri()}`;\n        }\n    }\n\n    public async moveToImplicitFlowLoginPage() {\n        this.oauthService.configure(this.implicitConf);\n        await this.oauthService.loadDiscoveryDocument();\n        sessionStorage.setItem('flow', 'implicit');\n        this.oauthService.initImplicitFlow();\n    }\n\n    public async initAndLoadAuth() {\n        this.oauthService.configure(this.implicitConf);\n        this.oauthService.setupAutomaticSilentRefresh();\n        this.oauthService.tokenValidationHandler = new JwksValidationHandler();\n        await this.oauthService.loadDiscoveryDocument()\n            .then(() => {\n                    this.oauthService.tryLogin();\n                }\n            ).then(() => {\n                if (this.oauthService.hasValidAccessToken()) {\n                    return Promise.resolve();\n                }\n            });\n\n        this.oauthService.events\n            .pipe(filter(e => e.type === 'session_terminated'))\n            .subscribe(() => {\n                console.log('Your session has been terminated!');\n            });\n        this.askForOauthAccessToken();\n        this.dispatchAuthActionFromOAuthEvents();\n    }\n\n    computeRedirectUri() {\n        const uriBase = location.origin;\n        const pathEnd = (location.pathname.length > 1) ? location.pathname : '';\n        return `${uriBase}${pathEnd}`;\n    }\n\n    decodeToken(token: string): any {\n        try {\n            return jwt_decode(token);\n        } catch (Error) {\n            return null;\n        }\n    }\n\n    public dispatchAuthActionFromOAuthEvents() {\n        this.oauthService.events.subscribe(e => {\n            this.dispatchAppStateActionFromOAuth2Events(e);\n        });\n    }\n\n    public askForOauthAccessToken() {\n        return this.oauthService.getAccessToken();\n\n    }\n\n    public providePayloadForSuccessfulAuthenticationFromImplicitFlow(): PayloadForSuccessfulAuthentication {\n        const identityClaims = this.oauthService.getIdentityClaims();\n        const identifier = identityClaims['sub'];\n        const clientId = this.guidService.getCurrentGuid();\n        const token = this.askForOauthAccessToken();\n        const expirationDate = new Date(this.oauthService.getAccessTokenExpiration());\n        return new PayloadForSuccessfulAuthentication(identifier, clientId, token, expirationDate);\n    }\n\n    dispatchAppStateActionFromOAuth2Events(event: OAuthEvent): void {\n        const eventType: OAuthType = event.type;\n        switch (eventType) {\n            case ('token_received'): {\n                this.store.dispatch(new ImplicitlyAuthenticated());\n                break;\n            }\n            case ('token_error'):\n            case('token_refresh_error'):\n            case('logout'): {\n                this.store.dispatch(new UnAuthenticationFromImplicitFlow());\n                break;\n            }\n            default: {\n                // console.log('no action to dispatch for:', eventType);\n            }\n        }\n    }\n\n    public getAuthenticationMode(): string {\n        return this.mode;\n    }\n\n    public initializeAuthentication(): void {\n        this.authModeHandler.initializeAuthentication(window.location.href);\n    }\n\n    public linkAuthenticationStatus(linker: (isAuthenticated: boolean) => void): void {\n        this.authModeHandler.linkAuthenticationStatus(linker);\n    }\n\n    public move(): void {\n        this.authModeHandler.move();\n    }\n\n    public isAuthModeCodeOrImplicitFlow(): boolean {\n        const mode = this.getAuthenticationMode();\n        return mode === 'CODE' || mode === 'IMPLICIT';\n    }\n}\n\n\n/**\n * class used to login using the authentication web service.\n */\nexport class AuthObject {\n\n    constructor(\n        public access_token: string,\n        public expires_in: number,    // token_received,\n        public clientId: Guid,\n        public identifier?: string\n    ) {\n    }\n\n}    // token_received,\n\n\n/**\n * class corresponding to the response of the web service checking jwt token when this token is a valid one.\n */\nexport class CheckTokenResponse {\n    constructor(\n        public sub?: string,\n        public exp?: number,\n        public clientId?: string,\n    ) {\n    }\n}\n\n/**\n * helper @method to confirm or not if the number corresponding to a given time is in the futur regarding the present\n * moment.\n * @param time - a number corresponding to an UTC time to test\n * @return  true if time is in the future regarding the present moment, false otherwise\n */\nexport function isInTheFuture(time: number): boolean {\n    return time > Date.now();\n}\n\n/**\n * interface to handle the mode of authentication\n */\nexport interface AuthenticationModeHandler {\n    initializeAuthentication(currentHrefLocation: string): void;\n\n    linkAuthenticationStatus(linker: (isAuthenticated: boolean) => void): void;\n\n    extractToken(): string;\n\n    move(): void;\n}\n\n/**\n * Implementation class of @Interface AuthenticationModeHandler\n * use the OperatorFabric legacy code to manage the authentication in\n * OAuth 2.0 password grant or code flow mode\n */\nexport class PasswordOrCodeAuthenticationHandler implements AuthenticationModeHandler {\n\n    constructor(private authenticationService: AuthenticationService,\n                private store: Store) {\n    }\n\n    initializeAuthentication(currentLocationHref: string) {\n        const searchCodeString = 'code=';\n        const foundIndex = currentLocationHref.indexOf(searchCodeString);\n        if (foundIndex !== -1) {\n            this.store.dispatch(\n                new InitAuthStatus({code: currentLocationHref.substring(foundIndex + searchCodeString.length)}));\n        }\n    }\n\n    linkAuthenticationStatus(linker: (isAuthenticated: boolean) => void): void {\n        this.store.pipe(select(selectExpirationTime), map(isInTheFuture))\n            .subscribe(linker);\n    }\n\n    public extractToken(): string {\n        return localStorage.getItem(LocalStorageAuthContent.token);\n    }\n\n    move(): void {\n        this.authenticationService.moveToCodeFlowLoginPage();\n    }\n}\n\n/**\n * Implementation class of @Interface AuthenticationModeHandler\n * use the Oidc Connect library to manage OAuth 2.0 implicit authentication mode\n */\nexport class ImplicitAuthenticationHandler implements AuthenticationModeHandler {\n    constructor(private authenticationService: AuthenticationService\n        , private store: Store\n        , private storage: Storage) {\n    }\n\n    initializeAuthentication(currentLocationHref: string) {\n        if (this.authenticationService.getAuthenticationMode().toLowerCase() === 'implicit') {\n            this.authenticationService.initAndLoadAuth();\n        }\n    }\n\n    linkAuthenticationStatus(linker: (isAuthenticated: boolean) => void): void {\n        this.store.pipe(select(selectIsImplicitlyAuthenticated)).subscribe(linker);\n    }\n\n    public extractToken(): string {\n        return this.storage.getItem('access_token');\n    }\n\n    move() {\n        this.authenticationService.moveToImplicitFlowLoginPage();\n    }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ClearCard.html":{"url":"classes/ClearCard.html","title":"class - ClearCard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ClearCard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/card.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : CardActionTypes.ClearCard\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/card.actions.ts:25\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Action} from '@ngrx/store';\nimport {Card} from '@ofModel/card.model';\n\nexport enum CardActionTypes {\n    ClearCard = '[Card] Clear',\n    LoadCard = '[Card] Load Card',\n    LoadCardSuccess = '[Card] Load Card Success',\n    LoadCardFailure = '[Card] Load Card Fail',\n    LoadArchivedCard = '[Card] Load Archived Card',\n    LoadArchivedCardSuccess = '[Card] Load Archived Card Success',\n    LoadArchivedCardFailure = '[Card] Load Archived Card Fail',\n    HandleUnexpectedError = '[Card] Handle unexpected error related to card issue',\n    AddActionsAppear = '[Card] Add Actions Appear'\n}\n// needed by NGRX entities\nexport class ClearCard implements Action {\n    readonly type = CardActionTypes.ClearCard;\n}\nexport class LoadCard implements Action {\n    readonly type = CardActionTypes.LoadCard;\n\n    /* istanbul ignore next */\n    constructor(public payload: { id: string }) {}\n}\nexport class LoadCardFailure implements Action {\n    readonly type = CardActionTypes.LoadCardFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {}\n}\n\nexport class LoadCardSuccess implements Action {\n    readonly type = CardActionTypes.LoadCardSuccess;\n\n    /* istanbul ignore next */\n    constructor(public payload: { card: Card }) {}\n}\n\nexport class LoadArchivedCard implements Action {\n    readonly type = CardActionTypes.LoadArchivedCard;\n\n    /* istanbul ignore next */\n    constructor(public payload: { id: string }) {}\n}\nexport class LoadArchivedCardFailure implements Action {\n    readonly type = CardActionTypes.LoadArchivedCardFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {}\n}\n\nexport class LoadArchivedCardSuccess implements Action {\n    readonly type = CardActionTypes.LoadArchivedCardSuccess;\n\n    /* istanbul ignore next */\n    constructor(public payload: { card: Card }) {}\n}\n\nexport class HandleUnexpectedError implements Action {\n    /* istanbul ignore next */\n    readonly type = CardActionTypes.HandleUnexpectedError;\n\n    /* istanbul ignore next */\n    constructor(public payload: {error: Error}) {}\n}\n\nexport class AddActionsAppear implements Action {\n    readonly type = CardActionTypes.AddActionsAppear;\n    /* istanbul ignore next */\n    constructor(public payload: string) {}\n}\n\nexport type CardActions = ClearCard\n    | LoadCard\n    | LoadCardSuccess\n    | LoadCardFailure\n    | LoadArchivedCard\n    | LoadArchivedCardSuccess\n    | LoadArchivedCardFailure\n    | HandleUnexpectedError\n    | AddActionsAppear;\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ClearLightCardSelection.html":{"url":"classes/ClearLightCardSelection.html","title":"class - ClearLightCardSelection","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ClearLightCardSelection\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/light-card.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/store/actions/light-card.actions.ts:83\n                            \n                        \n\n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : LightCardActionTypes.ClearLightCardSelection\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/light-card.actions.ts:83\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Action} from '@ngrx/store';\nimport {LightCard} from '@ofModel/light-card.model';\nimport {Action as ThirdAction, ActionStatus} from '@ofModel/thirds.model';\nimport {Update} from \"@ngrx/entity\";\n\nexport enum LightCardActionTypes {\n    LoadLightCards = '[LCard] Load',\n    EmptyLightCards = '[LCard] Empty',\n    LoadLightCardsSuccess = '[LCard] Load Success',\n    LoadLightCardsExtendedData = '[LCard] Load Extended Data',\n    LoadLightCardsFailure = '[LCard] Load Fail',\n    SelectLightCard = '[LCard] Select One',\n    ClearLightCardSelection = '[LCard] Clear Light Card Selection',\n    AddLightCardFailure = '[LCard] Add Light Card Fail',\n    UpdatedSubscription = '[LCard] UpdateSubscription',\n    HandleUnexpectedError = '[LCard] Handle unexpected error related to authentication issue',\n    RemoveLightCard = '[LCard] Remove a card',\n    AddThirdActions = '[LCard] Adds some Third Actions to existing card',\n    UpdateALightCard = '[LCard] Update a Light Card',\n    UpdateAnAction = '[LCard] Update one Action of a LightCard',\n    UpdateAnActionFailure = '[LCard] No actions where available to update for the current selected card in the state',\n    ThirdActionAlreadyLoaded = '[LCard] Light Card contains actions',\n    ThirdActionAlreadyUpdated = '[LCard] Third Action unchanged',\n    DelayedLightCardUpdate = '[LCard] update Light Card actions later',\n    LightCardAlreadyUpdated = '[LCard] Light Card already Updated'\n}\n\n// needed by NGRX entities\nexport class LoadLightCards implements Action {\n    /* istanbul ignore next */\n    readonly type = LightCardActionTypes.LoadLightCards;\n}\n\nexport class EmptyLightCards implements Action {\n    /* istanbul ignore next */\n    readonly type = LightCardActionTypes.EmptyLightCards;\n}\n\nexport class LoadLightCardsSuccess implements Action {\n    readonly type = LightCardActionTypes.LoadLightCardsSuccess;\n\n    /* istanbul ignore next */\n    constructor(public payload: { lightCards: LightCard[] }) {\n    }\n}\n\nexport class LoadLightCardsExtendedData implements Action {\n    readonly type = LightCardActionTypes.LoadLightCardsExtendedData;\n\n    /* istanbul ignore next */\n    constructor() {\n    }\n}\n\nexport class LoadLightCardsFailure implements Action {\n    readonly type = LightCardActionTypes.LoadLightCardsFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport class SelectLightCard implements Action {\n    /* istanbul ignore next */\n    readonly type = LightCardActionTypes.SelectLightCard;\n\n    /* istanbul ignore next */\n    constructor(public payload: { selectedCardId: string }) {\n    }\n\n}\n\nexport class ClearLightCardSelection implements Action {\n\n    readonly type = LightCardActionTypes.ClearLightCardSelection;\n\n    constructor() {\n    }\n}\n\nexport class AddLightCardFailure implements Action {\n    readonly type = LightCardActionTypes.AddLightCardFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport class UpdatedSubscription implements Action {\n    readonly type = LightCardActionTypes.UpdatedSubscription;\n\n    /* istanbul ignore next */\n    constructor() {\n    }\n}\n\nexport class HandleUnexpectedError implements Action {\n    /* istanbul ignore next */\n    readonly type = LightCardActionTypes.HandleUnexpectedError;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport class RemoveLightCard implements Action {\n    readonly type = LightCardActionTypes.RemoveLightCard;\n\n    constructor(public  payload: { cards: string[] }) {\n    }\n}\n\nexport class AddThirdActions implements Action {\n    readonly type = LightCardActionTypes.AddThirdActions;\n\n    constructor(public payload: { card: LightCard, actions: Map }) {\n    }\n}\n\nexport class UpdateALightCard implements Action {\n    readonly type = LightCardActionTypes.UpdateALightCard;\n\n    constructor(public payload: { card: LightCard }) {\n    }\n}\n\nexport class UpdateAnAction implements Action {\n    readonly type = LightCardActionTypes.UpdateAnAction;\n\n    constructor(public payload: { cardId: string, actionKey: string, status: ActionStatus }) {\n    }\n}\n\nexport class UpdateAnActionFailure implements Action {\n    readonly type = LightCardActionTypes.UpdateAnActionFailure;\n\n    constructor() {\n    }\n}\n\nexport class ThirdActionAlreadyLoaded implements Action {\n    readonly type = LightCardActionTypes.ThirdActionAlreadyLoaded;\n\n    constructor() {\n    }\n}\n\nexport class ThirdActionAlreadyUpdated implements Action {\n    readonly type = LightCardActionTypes.ThirdActionAlreadyUpdated;\n\n    constructor() {\n    }\n}\n\nexport class DelayedLightCardUpdate implements Action {\n    readonly type = LightCardActionTypes.DelayedLightCardUpdate;\n\n    constructor(public payload: { card: LightCard }) {\n    }\n}\n\nexport class LightCardAlreadyUpdated implements Action {\n    readonly type = LightCardActionTypes.LightCardAlreadyUpdated;\n\n    constructor() {\n    }\n}\n\nexport type LightCardActions =\n    LoadLightCards\n    | LoadLightCardsSuccess\n    | LoadLightCardsFailure\n    | SelectLightCard\n    | ClearLightCardSelection\n    | AddLightCardFailure\n    | UpdatedSubscription\n    | HandleUnexpectedError\n    | EmptyLightCards\n    | AddThirdActions\n    | UpdateALightCard\n    | UpdateAnAction\n    | UpdateAnActionFailure\n    | ThirdActionAlreadyLoaded\n    | ThirdActionAlreadyUpdated\n    | DelayedLightCardUpdate\n    | LightCardAlreadyUpdated\n    | RemoveLightCard;\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ConfigEffects.html":{"url":"injectables/ConfigEffects.html","title":"injectable - ConfigEffects","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ConfigEffects\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/effects/config.effects.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                loadConfiguration\n                            \n                            \n                                retryConfigurationLoading\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store, actions$: Actions, service: ConfigService, retryDelay: number)\n                    \n                \n                        \n                            \n                                Defined in src/app/store/effects/config.effects.ts:22\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                        Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        actions$\n                                                  \n                                                        \n                                                                        Actions\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        service\n                                                  \n                                                        \n                                                                        ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        retryDelay\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loadConfiguration\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Observable\n\n                        \n                    \n                    \n                        \n                            Default value : this.actions$\n        .pipe(\n            ofType(ConfigActionTypes.LoadConfig),\n            switchMap(action => this.service.fetchConfiguration()),\n            map((config: any) => {\n                return new LoadConfigSuccess({config: config});\n            }),\n            catchError((err, caught) => {\n                this.store.dispatch(new LoadConfigFailure(err));\n                return caught;\n            })\n        )\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Effect()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/effects/config.effects.ts:55\n                            \n                        \n\n                \n                    \n                        Manages configuration load -> service request -> success/message\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            retryConfigurationLoading\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Observable\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Effect()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/effects/config.effects.ts:72\n                            \n                        \n\n                \n                    \n                        Manages load retry upon message\n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import {Inject, Injectable} from '@angular/core';\nimport {Actions, Effect, ofType} from '@ngrx/effects';\nimport {Action, Store} from '@ngrx/store';\nimport {Observable} from 'rxjs';\nimport {catchError, delay, filter, map, switchMap, withLatestFrom} from 'rxjs/operators';\nimport {ConfigService} from '@ofServices/config.service';\nimport {AppState} from \"@ofStore/index\";\nimport {ConfigActionTypes, LoadConfig, LoadConfigFailure, LoadConfigSuccess} from \"@ofActions/config.actions\";\nimport {selectConfigRetry} from \"@ofSelectors/config.selectors\";\nimport {CONFIG_LOAD_MAX_RETRIES} from \"@ofStates/config.state\";\n\n// those effects are unused for the moment\n@Injectable()\nexport class ConfigEffects {\n\n    /* istanbul ignore next */\n    constructor(private store: Store,\n                private actions$: Actions,\n                private service: ConfigService,\n                @Inject('configRetryDelay')\n                private retryDelay: number = 5000,\n    ) {\n\n        if (this.retryDelay > 0)\n            this.retryConfigurationLoading = this.actions$\n                .pipe(\n                    ofType(ConfigActionTypes.LoadConfigFailure),\n                    withLatestFrom(this.store.select(selectConfigRetry)),\n                    filter(([action, retry]) => retry  new LoadConfig()),\n                    delay(this.retryDelay)\n                );\n        else\n            this.retryConfigurationLoading = this.actions$\n                .pipe(\n                    ofType(ConfigActionTypes.LoadConfigFailure),\n                    withLatestFrom(this.store.select(selectConfigRetry)),\n                    filter(([action, retry]) => retry  new LoadConfig())\n                );\n    }\n\n    /**\n     * Manages configuration load -> service request -> success/message\n     */\n    @Effect()\n    loadConfiguration: Observable = this.actions$\n        .pipe(\n            ofType(ConfigActionTypes.LoadConfig),\n            switchMap(action => this.service.fetchConfiguration()),\n            map((config: any) => {\n                return new LoadConfigSuccess({config: config});\n            }),\n            catchError((err, caught) => {\n                this.store.dispatch(new LoadConfigFailure(err));\n                return caught;\n            })\n        );\n\n    /**\n     * Manages load retry upon message\n     */\n    @Effect()\n    retryConfigurationLoading: Observable;\n    \n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ConfigService.html":{"url":"injectables/ConfigService.html","title":"injectable - ConfigService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ConfigService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/config.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                configUrl\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                fetchConfiguration\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(httpClient: HttpClient, store: Store)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/config.service.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        httpClient\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                        Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            fetchConfiguration\n                        \n                        \n                    \n                \n            \n            \n                \nfetchConfiguration()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/config.service.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            configUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/config.service.ts:18\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import {Injectable} from '@angular/core';\nimport {Observable} from \"rxjs\";\nimport {HttpClient} from \"@angular/common/http\";\nimport {Store} from \"@ngrx/store\";\nimport {AppState} from \"@ofStore/index\";\nimport {environment} from \"@env/environment\";\n\n@Injectable()\nexport class ConfigService {\n    private configUrl: string;\n\n    constructor(private httpClient: HttpClient,\n                private store: Store) {\n        this.configUrl = `${environment.urls.config}`;\n    }\n\n    fetchConfiguration(): Observable {\n        return this.httpClient.get(`${this.configUrl}`)\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ConfigState.html":{"url":"interfaces/ConfigState.html","title":"interface - ConfigState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ConfigState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/states/config.state.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        config\n                                \n                                \n                                        error\n                                \n                                \n                                        loaded\n                                \n                                \n                                        loading\n                                \n                                \n                                        retry\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        config\n                                    \n                                \n                                \n                                    \n                                        config:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        error\n                                    \n                                \n                                \n                                    \n                                        error:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        loaded\n                                    \n                                \n                                \n                                    \n                                        loaded:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        loading\n                                    \n                                \n                                \n                                    \n                                        loading:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        retry\n                                    \n                                \n                                \n                                    \n                                        retry:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export const CONFIG_LOAD_MAX_RETRIES = 5;\n\nexport interface ConfigState{\n    config:any,\n    loading: boolean,\n    loaded: boolean,\n    error: string,\n    retry: number\n}\n\nexport const configInitialState: ConfigState = {\n    config:{},\n    loading: false,\n    loaded: false,\n    error: null,\n    retry: 0\n}\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ConfirmModalComponent.html":{"url":"components/ConfirmModalComponent.html","title":"component - ConfirmModalComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ConfirmModalComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/cards/components/action/confirm-modal/confirm-modal.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                confirm-modal-component\n            \n\n\n\n\n            \n                templateUrl\n                ./confirm-modal.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                modal\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                cancel\n                            \n                            \n                                dismiss\n                            \n                            \n                                ok\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(modal: NgbActiveModal)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/cards/components/action/confirm-modal/confirm-modal.component.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        modal\n                                                  \n                                                        \n                                                                    NgbActiveModal\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            cancel\n                        \n                        \n                    \n                \n            \n            \n                \ncancel()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/cards/components/action/confirm-modal/confirm-modal.component.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            dismiss\n                        \n                        \n                    \n                \n            \n            \n                \ndismiss()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/cards/components/action/confirm-modal/confirm-modal.component.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ok\n                        \n                        \n                    \n                \n            \n            \n                \nok()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/cards/components/action/confirm-modal/confirm-modal.component.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            modal\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     NgbActiveModal\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/cards/components/action/confirm-modal/confirm-modal.component.ts:16\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import {NgbActiveModal} from \"@ng-bootstrap/ng-bootstrap\";\nimport {Component} from \"@angular/core\";\n\n@Component({\n    selector:'confirm-modal-component',\n    templateUrl: './confirm-modal.component.html'\n})\nexport class ConfirmModalComponent {\n    constructor(public modal: NgbActiveModal) {}\n    dismiss(){\n        this.modal.dismiss(ThirdActionComporentModalReturn.DISMISS);\n    }\n\n    ok(){\n        this.modal.close(ThirdActionComporentModalReturn.OK);\n    }\n\n    cancel(){\n        this.modal.dismiss(ThirdActionComporentModalReturn.CANCEL);\n    }\n}\n\nexport enum ThirdActionComporentModalReturn{\n    CANCEL,OK,DISMISS\n}\n\n    \n\n    \n        \n\n\n\n\n\n\n    Action Status Changed\n    \n        &times;\n    \n\n\n    The status of the Action your are about to perform has changed\" \n    Either you send another time the action or you just update the new status.\n        This operation can not be undone.\n    \n\n\n    Save action\n    Send action anyway\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    Action Status Changed            ×        The status of the Action your are about to perform has changed\"     Either you send another time the action or you just update the new status.        This operation can not be undone.        Save action    Send action anyway'\n    var COMPONENTS = [{'name': 'ActionComponent', 'selector': 'of-action'},{'name': 'AppComponent', 'selector': 'of-root'},{'name': 'ArchiveFiltersComponent', 'selector': 'of-archive-filters'},{'name': 'ArchiveListComponent', 'selector': 'of-archive-list'},{'name': 'ArchiveListPageComponent', 'selector': 'of-archive-list-page'},{'name': 'ArchivesComponent', 'selector': 'of-archives'},{'name': 'BaseSettingComponent', 'selector': 'of-base-setting'},{'name': 'CardComponent', 'selector': 'of-card'},{'name': 'CardDetailsComponent', 'selector': 'of-card-details'},{'name': 'CardListComponent', 'selector': 'of-card-list'},{'name': 'ConfirmModalComponent', 'selector': 'confirm-modal-component'},{'name': 'CustomLogoComponent', 'selector': 'of-custom-logo'},{'name': 'CustomTimelineChartComponent', 'selector': 'of-custom-timeline-chart'},{'name': 'DatetimeFilterComponent', 'selector': 'of-datetime-filter'},{'name': 'DetailComponent', 'selector': 'of-detail'},{'name': 'DetailsComponent', 'selector': 'of-details'},{'name': 'EmailSettingComponent', 'selector': 'of-email-setting'},{'name': 'FeedComponent', 'selector': 'of-cards'},{'name': 'FiltersComponent', 'selector': 'of-filters'},{'name': 'IconComponent', 'selector': 'of-icon'},{'name': 'IframeDisplayComponent', 'selector': 'of-iframedisplay'},{'name': 'InfoComponent', 'selector': 'of-info'},{'name': 'InitChartComponent', 'selector': 'of-init-chart'},{'name': 'ListSettingComponent', 'selector': 'of-list-setting'},{'name': 'LoginComponent', 'selector': 'of-login'},{'name': 'MenuLinkComponent', 'selector': 'of-menu-link'},{'name': 'MultiFilterComponent', 'selector': 'of-multi-filter'},{'name': 'MultiSettingsComponent', 'selector': 'of-multi-settings'},{'name': 'NavbarComponent', 'selector': 'of-navbar'},{'name': 'NoSelectionComponent', 'selector': 'of-no-selection'},{'name': 'ResizableComponent', 'selector': 'of-resizable'},{'name': 'SettingsComponent', 'selector': 'of-settings'},{'name': 'TagsFilterComponent', 'selector': 'of-tags-filter'},{'name': 'TextSettingComponent', 'selector': 'of-text-setting'},{'name': 'TimeFilterComponent', 'selector': 'of-time-filter'},{'name': 'TimeLineComponent', 'selector': 'of-time-line'},{'name': 'TypeAheadSettingsComponent', 'selector': 'of-type-ahead-settings'},{'name': 'TypeFilterComponent', 'selector': 'of-type-filter'}];\n    var DIRECTIVES = [{'name': 'CalcHeightDirective', 'selector': '[calcHeightDirective]'},{'name': 'DraggableDirective', 'selector': '[appDraggable]'},{'name': 'MouseWheelDirective', 'selector': '[appMouseWheel]'}];\n    var ACTUAL_COMPONENT = {'name': 'ConfirmModalComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateUserApplication.html":{"url":"classes/CreateUserApplication.html","title":"class - CreateUserApplication","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateUserApplication\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/user.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/store/actions/user.actions.ts:35\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/user.actions.ts:36\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : UserActionsTypes.CreateUserApplication\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/user.actions.ts:35\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {User} from '@ofModel/user.model';\nimport {Action} from '@ngrx/store';\n\nexport enum UserActionsTypes {\n\n    UserApplicationRegistered =         '[User] User application registered',\n    UserApplicationNotRegistered =      '[User] User application not registered',\n    CreateUserApplication =             '[User] Create the User in the application',\n    CreateUserApplicationOnSuccess =    '[User] Create the User in the application on success',\n    CreateUserApplicationOnFailure =    '[User] Create the User in the application on failure',\n    HandleUnexpectedError =             '[User] Handle unexpected error related to user creation issue'\n}\n\nexport class UserApplicationRegistered implements Action {\n    /* istanbul ignore next */ \n    readonly type = UserActionsTypes.UserApplicationRegistered;\n    constructor(public payload : {user : User}) {}\n}\n\nexport class UserApplicationNotRegistered implements Action {\n    /* istanbul ignore next */ \n    readonly type = UserActionsTypes.UserApplicationNotRegistered;\n    constructor(public payload : {error : Error, user : User}) {}\n}\n\nexport class CreateUserApplication implements Action {\n    /* istanbul ignore next */ \n    readonly type = UserActionsTypes.CreateUserApplication;\n    constructor(public payload : {user : User}) {}\n}\n\n\nexport class CreateUserApplicationOnSuccess implements Action {\n    /* istanbul ignore next */ \n    readonly type = UserActionsTypes.CreateUserApplicationOnSuccess;\n    constructor(public payload : {user : User}) {}\n}\n\nexport class CreateUserApplicationOnFailure implements Action {\n    /* istanbul ignore next */ \n    readonly type = UserActionsTypes.CreateUserApplicationOnFailure;\n    constructor(public payload : {error : Error}) {}\n}\n\n\nexport class HandleUnexpectedError implements Action {\n    /* istanbul ignore next */ \n    readonly type = UserActionsTypes.HandleUnexpectedError;\n    constructor(public payload : {error : Error}) {}\n}\n\nexport type UserActions = UserApplicationRegistered\n    | UserApplicationNotRegistered\n    | CreateUserApplication\n    | CreateUserApplicationOnSuccess\n    | CreateUserApplicationOnFailure\n    | HandleUnexpectedError;\n\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateUserApplicationOnFailure.html":{"url":"classes/CreateUserApplicationOnFailure.html","title":"class - CreateUserApplicationOnFailure","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateUserApplicationOnFailure\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/user.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/store/actions/user.actions.ts:48\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/user.actions.ts:49\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : UserActionsTypes.CreateUserApplicationOnFailure\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/user.actions.ts:48\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {User} from '@ofModel/user.model';\nimport {Action} from '@ngrx/store';\n\nexport enum UserActionsTypes {\n\n    UserApplicationRegistered =         '[User] User application registered',\n    UserApplicationNotRegistered =      '[User] User application not registered',\n    CreateUserApplication =             '[User] Create the User in the application',\n    CreateUserApplicationOnSuccess =    '[User] Create the User in the application on success',\n    CreateUserApplicationOnFailure =    '[User] Create the User in the application on failure',\n    HandleUnexpectedError =             '[User] Handle unexpected error related to user creation issue'\n}\n\nexport class UserApplicationRegistered implements Action {\n    /* istanbul ignore next */ \n    readonly type = UserActionsTypes.UserApplicationRegistered;\n    constructor(public payload : {user : User}) {}\n}\n\nexport class UserApplicationNotRegistered implements Action {\n    /* istanbul ignore next */ \n    readonly type = UserActionsTypes.UserApplicationNotRegistered;\n    constructor(public payload : {error : Error, user : User}) {}\n}\n\nexport class CreateUserApplication implements Action {\n    /* istanbul ignore next */ \n    readonly type = UserActionsTypes.CreateUserApplication;\n    constructor(public payload : {user : User}) {}\n}\n\n\nexport class CreateUserApplicationOnSuccess implements Action {\n    /* istanbul ignore next */ \n    readonly type = UserActionsTypes.CreateUserApplicationOnSuccess;\n    constructor(public payload : {user : User}) {}\n}\n\nexport class CreateUserApplicationOnFailure implements Action {\n    /* istanbul ignore next */ \n    readonly type = UserActionsTypes.CreateUserApplicationOnFailure;\n    constructor(public payload : {error : Error}) {}\n}\n\n\nexport class HandleUnexpectedError implements Action {\n    /* istanbul ignore next */ \n    readonly type = UserActionsTypes.HandleUnexpectedError;\n    constructor(public payload : {error : Error}) {}\n}\n\nexport type UserActions = UserApplicationRegistered\n    | UserApplicationNotRegistered\n    | CreateUserApplication\n    | CreateUserApplicationOnSuccess\n    | CreateUserApplicationOnFailure\n    | HandleUnexpectedError;\n\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateUserApplicationOnSuccess.html":{"url":"classes/CreateUserApplicationOnSuccess.html","title":"class - CreateUserApplicationOnSuccess","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateUserApplicationOnSuccess\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/user.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/store/actions/user.actions.ts:42\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/user.actions.ts:43\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : UserActionsTypes.CreateUserApplicationOnSuccess\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/user.actions.ts:42\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {User} from '@ofModel/user.model';\nimport {Action} from '@ngrx/store';\n\nexport enum UserActionsTypes {\n\n    UserApplicationRegistered =         '[User] User application registered',\n    UserApplicationNotRegistered =      '[User] User application not registered',\n    CreateUserApplication =             '[User] Create the User in the application',\n    CreateUserApplicationOnSuccess =    '[User] Create the User in the application on success',\n    CreateUserApplicationOnFailure =    '[User] Create the User in the application on failure',\n    HandleUnexpectedError =             '[User] Handle unexpected error related to user creation issue'\n}\n\nexport class UserApplicationRegistered implements Action {\n    /* istanbul ignore next */ \n    readonly type = UserActionsTypes.UserApplicationRegistered;\n    constructor(public payload : {user : User}) {}\n}\n\nexport class UserApplicationNotRegistered implements Action {\n    /* istanbul ignore next */ \n    readonly type = UserActionsTypes.UserApplicationNotRegistered;\n    constructor(public payload : {error : Error, user : User}) {}\n}\n\nexport class CreateUserApplication implements Action {\n    /* istanbul ignore next */ \n    readonly type = UserActionsTypes.CreateUserApplication;\n    constructor(public payload : {user : User}) {}\n}\n\n\nexport class CreateUserApplicationOnSuccess implements Action {\n    /* istanbul ignore next */ \n    readonly type = UserActionsTypes.CreateUserApplicationOnSuccess;\n    constructor(public payload : {user : User}) {}\n}\n\nexport class CreateUserApplicationOnFailure implements Action {\n    /* istanbul ignore next */ \n    readonly type = UserActionsTypes.CreateUserApplicationOnFailure;\n    constructor(public payload : {error : Error}) {}\n}\n\n\nexport class HandleUnexpectedError implements Action {\n    /* istanbul ignore next */ \n    readonly type = UserActionsTypes.HandleUnexpectedError;\n    constructor(public payload : {error : Error}) {}\n}\n\nexport type UserActions = UserApplicationRegistered\n    | UserApplicationNotRegistered\n    | CreateUserApplication\n    | CreateUserApplicationOnSuccess\n    | CreateUserApplicationOnFailure\n    | HandleUnexpectedError;\n\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CustomLogoComponent.html":{"url":"components/CustomLogoComponent.html","title":"component - CustomLogoComponent","body":"\n                   \n\n\n\n\n\n  Components\n  CustomLogoComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/navbar/custom-logo/custom-logo.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                of-custom-logo\n            \n\n            \n                styleUrls\n                ./custom-logo.component.css\n            \n\n\n\n            \n                templateUrl\n                ./custom-logo.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                DEFAULT_HEIGHT\n                            \n                            \n                                DEFAULT_WIDTH\n                            \n                            \n                                    Public\n                                domSanitizationService\n                            \n                            \n                                MAX_HEIGHT\n                            \n                            \n                                MAX_WIDTH\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getImage\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                    Private\n                                setHeightAndWidth\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                base64\n                            \n                            \n                                height\n                            \n                            \n                                limitSize\n                            \n                            \n                                width\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(domSanitizationService: DomSanitizer)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/navbar/custom-logo/custom-logo.component.ts:28\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        domSanitizationService\n                                                  \n                                                        \n                                                                        DomSanitizer\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        base64\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/navbar/custom-logo/custom-logo.component.ts:18\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        height\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/navbar/custom-logo/custom-logo.component.ts:21\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        limitSize\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/navbar/custom-logo/custom-logo.component.ts:20\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        width\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/navbar/custom-logo/custom-logo.component.ts:22\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getImage\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getImage()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/navbar/custom-logo/custom-logo.component.ts:63\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         SafeUrl\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/navbar/custom-logo/custom-logo.component.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            setHeightAndWidth\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setHeightAndWidth()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/navbar/custom-logo/custom-logo.component.ts:53\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            DEFAULT_HEIGHT\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/navbar/custom-logo/custom-logo.component.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            DEFAULT_WIDTH\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/navbar/custom-logo/custom-logo.component.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            domSanitizationService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         DomSanitizer\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/navbar/custom-logo/custom-logo.component.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            MAX_HEIGHT\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/navbar/custom-logo/custom-logo.component.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            MAX_WIDTH\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/navbar/custom-logo/custom-logo.component.ts:28\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, Input } from '@angular/core';\nimport { DomSanitizer, SafeUrl } from '@angular/platform-browser';\n\n@Component({\n  selector: 'of-custom-logo',\n  templateUrl: './custom-logo.component.html',\n  styleUrls: ['./custom-logo.component.css']\n})\nexport class CustomLogoComponent implements OnInit {\n\n  @Input() base64: string;\n\n  @Input() limitSize: boolean;\n  @Input() height: number;\n  @Input() width: number;\n\n  DEFAULT_HEIGHT: number;\n  DEFAULT_WIDTH: number;\n\n  MAX_HEIGHT: number;\n  MAX_WIDTH: number;\n\n  constructor(public domSanitizationService: DomSanitizer) { \n    this.DEFAULT_HEIGHT = 32;\n    this.DEFAULT_WIDTH = 150;\n  \n    this.MAX_HEIGHT = 32;\n    this.MAX_WIDTH = 200;\n  }\n\n  ngOnInit() {\n    // default value, Administrator has to change explicitly\n    if (this.base64 == undefined || this.base64 == '') {\n      console.error(\"no custom-logo base64 configured, no picture loaded\");\n    }\n    if (this.height == undefined)\n      this.height = this.DEFAULT_HEIGHT;\n    if (this.width == undefined)\n      this.width = this.DEFAULT_WIDTH;\n    if (this.limitSize == undefined)\n      this.limitSize = true;   \n\n    this.setHeightAndWidth();\n  }\n\n  private setHeightAndWidth() {\n    // in case, we want to limit the customLogo size. By default, it is limited.\n    if (this.limitSize) {\n      if (this.height > this.MAX_HEIGHT)\n        this.height = this.MAX_HEIGHT;\n      if (this.width > this.MAX_WIDTH)\n        this.width = this.MAX_WIDTH;\n    } \n  }\n\n  public getImage(): SafeUrl {\n    return this.domSanitizationService.bypassSecurityTrustUrl(this.base64);\n  }\n\n}\n\n    \n\n    \n        \n\n\n\n\n\n\n\n    \n\n    \n                \n                    ./custom-logo.component.css\n                \n                /* Copyright (c) 2020, RTE (http://www.rte-france.com)\n *\n * This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n */\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'ActionComponent', 'selector': 'of-action'},{'name': 'AppComponent', 'selector': 'of-root'},{'name': 'ArchiveFiltersComponent', 'selector': 'of-archive-filters'},{'name': 'ArchiveListComponent', 'selector': 'of-archive-list'},{'name': 'ArchiveListPageComponent', 'selector': 'of-archive-list-page'},{'name': 'ArchivesComponent', 'selector': 'of-archives'},{'name': 'BaseSettingComponent', 'selector': 'of-base-setting'},{'name': 'CardComponent', 'selector': 'of-card'},{'name': 'CardDetailsComponent', 'selector': 'of-card-details'},{'name': 'CardListComponent', 'selector': 'of-card-list'},{'name': 'ConfirmModalComponent', 'selector': 'confirm-modal-component'},{'name': 'CustomLogoComponent', 'selector': 'of-custom-logo'},{'name': 'CustomTimelineChartComponent', 'selector': 'of-custom-timeline-chart'},{'name': 'DatetimeFilterComponent', 'selector': 'of-datetime-filter'},{'name': 'DetailComponent', 'selector': 'of-detail'},{'name': 'DetailsComponent', 'selector': 'of-details'},{'name': 'EmailSettingComponent', 'selector': 'of-email-setting'},{'name': 'FeedComponent', 'selector': 'of-cards'},{'name': 'FiltersComponent', 'selector': 'of-filters'},{'name': 'IconComponent', 'selector': 'of-icon'},{'name': 'IframeDisplayComponent', 'selector': 'of-iframedisplay'},{'name': 'InfoComponent', 'selector': 'of-info'},{'name': 'InitChartComponent', 'selector': 'of-init-chart'},{'name': 'ListSettingComponent', 'selector': 'of-list-setting'},{'name': 'LoginComponent', 'selector': 'of-login'},{'name': 'MenuLinkComponent', 'selector': 'of-menu-link'},{'name': 'MultiFilterComponent', 'selector': 'of-multi-filter'},{'name': 'MultiSettingsComponent', 'selector': 'of-multi-settings'},{'name': 'NavbarComponent', 'selector': 'of-navbar'},{'name': 'NoSelectionComponent', 'selector': 'of-no-selection'},{'name': 'ResizableComponent', 'selector': 'of-resizable'},{'name': 'SettingsComponent', 'selector': 'of-settings'},{'name': 'TagsFilterComponent', 'selector': 'of-tags-filter'},{'name': 'TextSettingComponent', 'selector': 'of-text-setting'},{'name': 'TimeFilterComponent', 'selector': 'of-time-filter'},{'name': 'TimeLineComponent', 'selector': 'of-time-line'},{'name': 'TypeAheadSettingsComponent', 'selector': 'of-type-ahead-settings'},{'name': 'TypeFilterComponent', 'selector': 'of-type-filter'}];\n    var DIRECTIVES = [{'name': 'CalcHeightDirective', 'selector': '[calcHeightDirective]'},{'name': 'DraggableDirective', 'selector': '[appDraggable]'},{'name': 'MouseWheelDirective', 'selector': '[appMouseWheel]'}];\n    var ACTUAL_COMPONENT = {'name': 'CustomLogoComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CustomRouterEffects.html":{"url":"injectables/CustomRouterEffects.html","title":"injectable - CustomRouterEffects","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  CustomRouterEffects\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/effects/custom-router.effects.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                navigateAwayFromFeed\n                            \n                            \n                                navigateToArchivedCard\n                            \n                            \n                                navigateToCard\n                            \n                            \n                                navigateToMenuURL\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store, actions$: Actions)\n                    \n                \n                        \n                            \n                                Defined in src/app/store/effects/custom-router.effects.ts:28\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                        Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        actions$\n                                                  \n                                                        \n                                                                        Actions\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            navigateAwayFromFeed\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Observable\n\n                        \n                    \n                    \n                        \n                            Default value : this.actions$.pipe(\n        ofType(ROUTER_REQUEST),\n        filter((action: RouterRequestAction, index)=> {\n            return (action.payload.routerState.url.indexOf(\"/feed/cards/\")>=0) && (action.payload.event.url.indexOf(\"/feed/\") new ClearLightCardSelection())\n    )\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Effect()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/effects/custom-router.effects.ts:86\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            navigateToArchivedCard\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Observable\n\n                        \n                    \n                    \n                        \n                            Default value : this.actions$.pipe(\n        ofType(ROUTER_NAVIGATION),\n        filter((action: RouterNavigationAction, index)=> {\n            return action.payload.event.url.indexOf(\"/archives/cards/\")>=0;\n        }),\n        switchMap(action=>{\n            const routerState:any = action.payload.routerState;\n            return [\n                new LoadArchivedCard({id: routerState.params['cid']}),\n                new SelectArchivedLightCard({selectedCardId: routerState.params['cid']})\n            ];\n        })\n    )\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Effect()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/effects/custom-router.effects.ts:50\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            navigateToCard\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Observable\n\n                        \n                    \n                    \n                        \n                            Default value : this.actions$.pipe(\n        ofType(ROUTER_NAVIGATION),\n        filter((action: RouterNavigationAction, index)=> {\n            return action.payload.event.url.indexOf(\"/feed/cards/\")>=0;\n        }),\n        switchMap(action=>{\n            const routerState:any = action.payload.routerState;\n            return [\n                new LoadCard({id: routerState.params['cid']}),\n                new SelectLightCard({selectedCardId: routerState.params['cid']})\n            ];\n        })\n    )\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Effect()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/effects/custom-router.effects.ts:35\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            navigateToMenuURL\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Observable\n\n                        \n                    \n                    \n                        \n                            Default value : this.actions$.pipe(\n        ofType(ROUTER_NAVIGATION),\n        filter((action: RouterNavigationAction, index)=> {\n            return action.payload.event.url.indexOf(\"/thirdparty/\")>=0;\n        }),\n        switchMap(action=>{\n            const routerState:any = action.payload.routerState;\n            return [\n                new SelectMenuLink({menu_id: routerState.params['menu_id'], menu_version: routerState.params['menu_version'],menu_entry_id: routerState.params['menu_entry_id']})\n            ];\n        })\n    )\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Effect()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/effects/custom-router.effects.ts:72\n                            \n                        \n\n                \n                    \n                        This {Observable} listens for {ROUTER_NAVIGATION} type, filtering only actions navigating to an url containing \"/thirdparty/\".\nThis will typically be triggered when clicking on a third-party menu link.\nIt then fires a {SelectMenuLink} action containing the route parameters (identifying the third-party menu entry that was clicked) as payload.\n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import {Injectable} from \"@angular/core\";\nimport {Action, Store} from \"@ngrx/store\";\nimport {AppState} from \"@ofStore/index\";\nimport {Actions, Effect, ofType} from \"@ngrx/effects\";\nimport {Observable, of} from \"rxjs\";\nimport {\n    ROUTER_NAVIGATED,\n    ROUTER_NAVIGATION,\n    ROUTER_REQUEST,\n    RouterNavigationAction,\n    RouterRequestAction\n} from \"@ngrx/router-store\";\nimport {filter, map, switchMap} from \"rxjs/operators\";\nimport {LoadArchivedCard, LoadCard} from \"@ofActions/card.actions\";\nimport {ClearLightCardSelection, SelectLightCard} from \"@ofActions/light-card.actions\";\nimport {SelectMenuLink} from \"@ofActions/menu.actions\";\nimport {SelectArchivedLightCard} from \"@ofActions/archive.actions\";\n\n@Injectable()\nexport class CustomRouterEffects {\n\n    constructor(private store: Store,\n                private actions$: Actions\n    ) {}\n\n    @Effect()\n    navigateToCard: Observable = this.actions$.pipe(\n        ofType(ROUTER_NAVIGATION),\n        filter((action: RouterNavigationAction, index)=> {\n            return action.payload.event.url.indexOf(\"/feed/cards/\")>=0;\n        }),\n        switchMap(action=>{\n            const routerState:any = action.payload.routerState;\n            return [\n                new LoadCard({id: routerState.params['cid']}),\n                new SelectLightCard({selectedCardId: routerState.params['cid']})\n            ];\n        })\n    );\n\n    @Effect()\n    navigateToArchivedCard: Observable = this.actions$.pipe(\n        ofType(ROUTER_NAVIGATION),\n        filter((action: RouterNavigationAction, index)=> {\n            return action.payload.event.url.indexOf(\"/archives/cards/\")>=0;\n        }),\n        switchMap(action=>{\n            const routerState:any = action.payload.routerState;\n            return [\n                new LoadArchivedCard({id: routerState.params['cid']}),\n                new SelectArchivedLightCard({selectedCardId: routerState.params['cid']})\n            ];\n        })\n    );\n\n    /**\n     * This {Observable} listens for {ROUTER_NAVIGATION} type, filtering only actions navigating to an url containing \"/thirdparty/\".\n     * This will typically be triggered when clicking on a third-party menu link.\n     * It then fires a {SelectMenuLink} action containing the route parameters (identifying the third-party menu entry that was clicked) as payload.\n\n     * @name navigateToMenuURL\n     */\n    @Effect()\n    navigateToMenuURL: Observable = this.actions$.pipe(\n        ofType(ROUTER_NAVIGATION),\n        filter((action: RouterNavigationAction, index)=> {\n            return action.payload.event.url.indexOf(\"/thirdparty/\")>=0;\n        }),\n        switchMap(action=>{\n            const routerState:any = action.payload.routerState;\n            return [\n                new SelectMenuLink({menu_id: routerState.params['menu_id'], menu_version: routerState.params['menu_version'],menu_entry_id: routerState.params['menu_entry_id']})\n            ];\n        })\n    );\n\n    @Effect()\n    navigateAwayFromFeed: Observable = this.actions$.pipe(\n        ofType(ROUTER_REQUEST),\n        filter((action: RouterRequestAction, index)=> {\n            return (action.payload.routerState.url.indexOf(\"/feed/cards/\")>=0) && (action.payload.event.url.indexOf(\"/feed/\") new ClearLightCardSelection())\n    )\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CustomRouterStateSerializer.html":{"url":"classes/CustomRouterStateSerializer.html","title":"class - CustomRouterStateSerializer","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CustomRouterStateSerializer\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/states/router.state.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            RouterStateSerializer\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                extractParams\n                            \n                            \n                                serialize\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            extractParams\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    extractParams(state: ActivatedRouteSnapshot)\n                \n            \n\n\n            \n                \n                    Defined in src/app/store/states/router.state.ts:56\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    state\n                                    \n                                                ActivatedRouteSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Params\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            serialize\n                        \n                        \n                    \n                \n            \n            \n                \nserialize(routerState: RouterStateSnapshot)\n                \n            \n\n\n            \n                \n                    Defined in src/app/store/states/router.state.ts:49\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    routerState\n                                    \n                                                RouterStateSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         RouterStateUrl\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {RouterStateSerializer} from \"@ngrx/router-store\";\nimport {ActivatedRouteSnapshot, Params, RouterStateSnapshot} from \"@angular/router\";\n\nexport const initialState = {\n    state: {\n        url: window.location.pathname,\n        params: {},\n        queryParams: {}\n    },\n    navigationId: 0\n}\n\n/**\n * The RouterStateSerializer takes the current RouterStateSnapshot\n * and returns any pertinent information needed. The snapshot contains\n * all information about the state of the router at the given point in time.\n * The entire snapshot is complex and not always needed. In this case, you only\n * need the URL and query parameters from the snapshot in the store. Other items could be\n * returned such as route parameters and static route data.\n *\n * source: https://github.com/briebug/ngrx-complex-forms\n *\n */\n\nexport class RouterStateUrl {\n    /* istanbul ignore next */\n    constructor(\n        readonly url: string,\n        readonly params: Params,\n        readonly queryParams: Params) {\n    }\n}\n\nexport class CustomRouterStateSerializer\n    implements RouterStateSerializer {\n    serialize(routerState: RouterStateSnapshot): RouterStateUrl {\n        const {url} = routerState;\n        const params = this.extractParams(routerState.root);\n        const queryParams = routerState.root.queryParams;\n        return new RouterStateUrl(url, params, queryParams);\n    }\n\n    private extractParams(state: ActivatedRouteSnapshot): Params {\n        let params: Params = {...state.params};\n        for (let child of state.children) {\n            params = {...params, ...this.extractParams(child)}\n        }\n        return params;\n    }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DateTimeNgb.html":{"url":"classes/DateTimeNgb.html","title":"class - DateTimeNgb","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DateTimeNgb\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/model/datetime-ngb.model.ts\n        \n\n\n            \n                Extends\n            \n            \n                    NgbDateParserFormatter\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                format\n                            \n                            \n                                formatDateTime\n                            \n                            \n                                formatTime\n                            \n                            \n                                parse\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(date?: NgbDateStruct, time?: NgbTimeStruct)\n                    \n                \n                        \n                            \n                                Defined in src/app/model/datetime-ngb.model.ts:23\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        date\n                                                  \n                                                        \n                                                                    NgbDateStruct\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        time\n                                                  \n                                                        \n                                                                    NgbTimeStruct\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            format\n                        \n                        \n                    \n                \n            \n            \n                \nformat()\n                \n            \n\n\n            \n                \n                    Defined in src/app/model/datetime-ngb.model.ts:42\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            formatDateTime\n                        \n                        \n                    \n                \n            \n            \n                \nformatDateTime()\n                \n            \n\n\n            \n                \n                    Defined in src/app/model/datetime-ngb.model.ts:56\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            formatTime\n                        \n                        \n                    \n                \n            \n            \n                \nformatTime()\n                \n            \n\n\n            \n                \n                    Defined in src/app/model/datetime-ngb.model.ts:50\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            parse\n                        \n                        \n                    \n                \n            \n            \n                \nparse(value: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/model/datetime-ngb.model.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     NgbDateStruct\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { NgbDateParserFormatter, NgbDateStruct, NgbTimeStruct } from '@ng-bootstrap/ng-bootstrap';\n\nexport function padNumber(value: any) {\n  if (isNumber(value)) {\n    return `0${value}`.slice(-2);\n  } else {\n    return '';\n  }\n}\nexport function toInteger(value: any): number {\n  return parseInt(`${value}`, 10);\n}\nexport function isNumber(value: any): value is number {\n  return !isNaN(toInteger(value));\n}\nexport class DateTimeNgb extends NgbDateParserFormatter {\n\n  /* istanbul ignore next */\n  constructor(readonly date?: NgbDateStruct, private time?: NgbTimeStruct) {\n    super();\n  }\n  parse(value: string): NgbDateStruct {\n    if (value) {\n      const dateParts = value.trim().split('-').reverse();\n      if (dateParts.length === 1 && isNumber(dateParts[0])) {\n        return {day: toInteger(dateParts[0]), month: null, year: null};\n      } else if (dateParts.length === 2 && isNumber(dateParts[0]) && isNumber(dateParts[1])) {\n        return {day: toInteger(dateParts[0]), month: toInteger(dateParts[1]), year: null};\n      } else if (dateParts.length === 3 && isNumber(dateParts[0]) && isNumber(dateParts[1]) && isNumber(dateParts[2])) {\n        return {day: toInteger(dateParts[0]), month: toInteger(dateParts[1]), year: toInteger(dateParts[2])};\n      }\n    }\n    return null;\n  }\n  format(): string {\n    const {date} = this;\n    return date ?\n        `${date.year}-${isNumber(date.month) ? padNumber(date.month) : ''}-${isNumber(date.day) ? padNumber(date.day) : ''}` :\n        '';\n  }\n\n  // a function that transform timestruct to string\n  formatTime(): string {\n    const {time} = this;\n    return time ?\n    `${isNumber(time.hour) ? padNumber(time.hour) : ''}:${isNumber(time.minute) ? padNumber(time.minute) : ''}` : '';\n  }\n\n  formatDateTime() {\n    let result = '';\n    const {date, time} = this;\n    // if date is present\n    if (date) {\n      if (!time) {\n        this.time = {hour: 0, minute: 0, second: 0};\n      }\n      result = `${this.format()}T${this.formatTime()}`;\n    }\n    return result;\n  }\n\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DatetimeFilterComponent.html":{"url":"components/DatetimeFilterComponent.html","title":"component - DatetimeFilterComponent","body":"\n                   \n\n\n\n\n\n  Components\n  DatetimeFilterComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/archives/components/archive-filters/datetime-filter/datetime-filter.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    ControlValueAccessor\n                    Validator\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                                {\n    provide: NG_VALUE_ACCESSOR, useExisting: forwardRef(() => DatetimeFilterComponent), multi: true\n}\n                                {\n    provide: NG_VALIDATORS, useExisting: forwardRef(() => DatetimeFilterComponent), multi: true\n}\n                \n            \n\n\n            \n                selector\n                of-datetime-filter\n            \n\n            \n                styleUrls\n                ./datetime-filter.component.css\n            \n\n\n\n            \n                templateUrl\n                ./datetime-filter.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                datetimeForm\n                            \n                            \n                                disabled\n                            \n                            \n                                    Public\n                                onTouched\n                            \n                            \n                                time\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                onChange\n                            \n                            \n                                onChanges\n                            \n                            \n                                registerOnChange\n                            \n                            \n                                registerOnTouched\n                            \n                            \n                                    Optional\n                                setDisabledState\n                            \n                            \n                                validate\n                            \n                            \n                                writeValue\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                filterPath\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/archives/components/archive-filters/datetime-filter/datetime-filter.component.ts:40\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        filterPath\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/archives/components/archive-filters/datetime-filter/datetime-filter.component.ts:36\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onChange\n                        \n                        \n                    \n                \n            \n            \n                \nonChange(event)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/archives/components/archive-filters/datetime-filter/datetime-filter.component.ts:75\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onChanges\n                        \n                        \n                    \n                \n            \n            \n                \nonChanges()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/archives/components/archive-filters/datetime-filter/datetime-filter.component.ts:67\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            registerOnChange\n                        \n                        \n                    \n                \n            \n            \n                \nregisterOnChange(fn: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/archives/components/archive-filters/datetime-filter/datetime-filter.component.ts:51\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    fn\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            registerOnTouched\n                        \n                        \n                    \n                \n            \n            \n                \nregisterOnTouched(fn: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/archives/components/archive-filters/datetime-filter/datetime-filter.component.ts:55\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    fn\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Optional\n                            setDisabledState\n                        \n                        \n                    \n                \n            \n            \n                \nsetDisabledState(isDisabled: boolean)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/archives/components/archive-filters/datetime-filter/datetime-filter.component.ts:59\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    isDisabled\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            validate\n                        \n                        \n                    \n                \n            \n            \n                \nvalidate(c: AbstractControl)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/archives/components/archive-filters/datetime-filter/datetime-filter.component.ts:63\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    c\n                                    \n                                                AbstractControl\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     ValidationErrors | null\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            writeValue\n                        \n                        \n                    \n                \n            \n            \n                \nwriteValue(val: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/archives/components/archive-filters/datetime-filter/datetime-filter.component.ts:47\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    val\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            datetimeForm\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormGroup\n\n                        \n                    \n                    \n                        \n                            Default value : new FormGroup({\n    date: new FormControl(),\n    time: new FormControl()\n  })\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/archives/components/archive-filters/datetime-filter/datetime-filter.component.ts:37\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            disabled\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/archives/components/archive-filters/datetime-filter/datetime-filter.component.ts:34\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            onTouched\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         function\n\n                        \n                    \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/archives/components/archive-filters/datetime-filter/datetime-filter.component.ts:45\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            time\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {hour: 0, minute: 0}\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/archives/components/archive-filters/datetime-filter/datetime-filter.component.ts:35\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, Input, forwardRef } from '@angular/core';\nimport { ControlValueAccessor, FormGroup, FormControl,\n  Validators,\n  AbstractControl,\n  ValidationErrors,\n  NG_VALUE_ACCESSOR,\n  NG_VALIDATORS,\n  Validator} from '@angular/forms';\n\n@Component({\n  selector: 'of-datetime-filter',\n  templateUrl: './datetime-filter.component.html',\n  styleUrls: ['./datetime-filter.component.css'],\n  providers: [{\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => DatetimeFilterComponent),\n    multi: true\n  }, {\n   provide: NG_VALIDATORS,\n   useExisting: forwardRef(() => DatetimeFilterComponent),\n   multi: true\n }\n]\n})\nexport class DatetimeFilterComponent implements ControlValueAccessor, Validator {\n\n  disabled = true;\n  time = {hour: 0, minute: 0};\n  @Input() filterPath: string;\n  public datetimeForm: FormGroup = new FormGroup({\n    date: new FormControl(),\n    time: new FormControl()\n  });\n  constructor() {\n    this.onChanges();\n  }\n  /* istanbul ignore next */\n  public onTouched: () => void = () => {};\n  /* istanbul ignore next */\n  writeValue(val: any): void {\n    val && this.datetimeForm.setValue(val, { emitEvent: false });\n  }\n  /* istanbul ignore next */\n  registerOnChange(fn: any): void {\n    this.datetimeForm.valueChanges.subscribe(fn);\n  }\n  /* istanbul ignore next */\n  registerOnTouched(fn: any): void {\n    this.onTouched = fn;\n  }\n  /* istanbul ignore next */\n  setDisabledState?(isDisabled: boolean): void {\n    isDisabled ? this.datetimeForm.disable() : this.datetimeForm.enable();\n  }\n  /* istanbul ignore next */\n  validate(c: AbstractControl): ValidationErrors | null {\n    return this.datetimeForm.valid ? null : { invalidForm: {valid: false, message: 'datetimeForm fields are invalid'}};\n  }\n  /* istanbul ignore next */\n  onChanges(): void {\n    this.datetimeForm.get('date').valueChanges.subscribe(val => {\n      if (val) {\n        this.disabled = false;\n      }\n    });\n  }\n  /* istanbul ignore next */\n  onChange(event): void {\n    if (event.target.value === '') {\n      this.disabled = true;\n      this.time = {hour: 0, minute: 0};\n    }\n  }\n\n}\n\n    \n\n    \n        \n\n\n\n\n\n\n    \n        \n            archive.filters.{{filterPath}}\n            \n        \n        \n            Time\n            \n        \n    \n\n\n    \n\n    \n                \n                    ./datetime-filter.component.css\n                \n                /* Copyright (c) 2020, RTE (http://www.rte-france.com)\n *\n * This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n */\n\n.nomarginrow {\n    margin-left:0;\n    margin-right:0;\n  }\n  .nopaddingrow {\n    padding-right:0;\n    padding-left:0;\n  }\n  legend.accessibility {\n    position:absolute;\n    left:-9999px;\n    width:100px;\n    height:auto;\n    overflow:hidden;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                        archive.filters.{{filterPath}}                                        Time                        '\n    var COMPONENTS = [{'name': 'ActionComponent', 'selector': 'of-action'},{'name': 'AppComponent', 'selector': 'of-root'},{'name': 'ArchiveFiltersComponent', 'selector': 'of-archive-filters'},{'name': 'ArchiveListComponent', 'selector': 'of-archive-list'},{'name': 'ArchiveListPageComponent', 'selector': 'of-archive-list-page'},{'name': 'ArchivesComponent', 'selector': 'of-archives'},{'name': 'BaseSettingComponent', 'selector': 'of-base-setting'},{'name': 'CardComponent', 'selector': 'of-card'},{'name': 'CardDetailsComponent', 'selector': 'of-card-details'},{'name': 'CardListComponent', 'selector': 'of-card-list'},{'name': 'ConfirmModalComponent', 'selector': 'confirm-modal-component'},{'name': 'CustomLogoComponent', 'selector': 'of-custom-logo'},{'name': 'CustomTimelineChartComponent', 'selector': 'of-custom-timeline-chart'},{'name': 'DatetimeFilterComponent', 'selector': 'of-datetime-filter'},{'name': 'DetailComponent', 'selector': 'of-detail'},{'name': 'DetailsComponent', 'selector': 'of-details'},{'name': 'EmailSettingComponent', 'selector': 'of-email-setting'},{'name': 'FeedComponent', 'selector': 'of-cards'},{'name': 'FiltersComponent', 'selector': 'of-filters'},{'name': 'IconComponent', 'selector': 'of-icon'},{'name': 'IframeDisplayComponent', 'selector': 'of-iframedisplay'},{'name': 'InfoComponent', 'selector': 'of-info'},{'name': 'InitChartComponent', 'selector': 'of-init-chart'},{'name': 'ListSettingComponent', 'selector': 'of-list-setting'},{'name': 'LoginComponent', 'selector': 'of-login'},{'name': 'MenuLinkComponent', 'selector': 'of-menu-link'},{'name': 'MultiFilterComponent', 'selector': 'of-multi-filter'},{'name': 'MultiSettingsComponent', 'selector': 'of-multi-settings'},{'name': 'NavbarComponent', 'selector': 'of-navbar'},{'name': 'NoSelectionComponent', 'selector': 'of-no-selection'},{'name': 'ResizableComponent', 'selector': 'of-resizable'},{'name': 'SettingsComponent', 'selector': 'of-settings'},{'name': 'TagsFilterComponent', 'selector': 'of-tags-filter'},{'name': 'TextSettingComponent', 'selector': 'of-text-setting'},{'name': 'TimeFilterComponent', 'selector': 'of-time-filter'},{'name': 'TimeLineComponent', 'selector': 'of-time-line'},{'name': 'TypeAheadSettingsComponent', 'selector': 'of-type-ahead-settings'},{'name': 'TypeFilterComponent', 'selector': 'of-type-filter'}];\n    var DIRECTIVES = [{'name': 'CalcHeightDirective', 'selector': '[calcHeightDirective]'},{'name': 'DraggableDirective', 'selector': '[appDraggable]'},{'name': 'MouseWheelDirective', 'selector': '[appMouseWheel]'}];\n    var ACTUAL_COMPONENT = {'name': 'DatetimeFilterComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DelayedLightCardUpdate.html":{"url":"classes/DelayedLightCardUpdate.html","title":"class - DelayedLightCardUpdate","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DelayedLightCardUpdate\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/light-card.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/store/actions/light-card.actions.ts:164\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/light-card.actions.ts:166\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : LightCardActionTypes.DelayedLightCardUpdate\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/light-card.actions.ts:164\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Action} from '@ngrx/store';\nimport {LightCard} from '@ofModel/light-card.model';\nimport {Action as ThirdAction, ActionStatus} from '@ofModel/thirds.model';\nimport {Update} from \"@ngrx/entity\";\n\nexport enum LightCardActionTypes {\n    LoadLightCards = '[LCard] Load',\n    EmptyLightCards = '[LCard] Empty',\n    LoadLightCardsSuccess = '[LCard] Load Success',\n    LoadLightCardsExtendedData = '[LCard] Load Extended Data',\n    LoadLightCardsFailure = '[LCard] Load Fail',\n    SelectLightCard = '[LCard] Select One',\n    ClearLightCardSelection = '[LCard] Clear Light Card Selection',\n    AddLightCardFailure = '[LCard] Add Light Card Fail',\n    UpdatedSubscription = '[LCard] UpdateSubscription',\n    HandleUnexpectedError = '[LCard] Handle unexpected error related to authentication issue',\n    RemoveLightCard = '[LCard] Remove a card',\n    AddThirdActions = '[LCard] Adds some Third Actions to existing card',\n    UpdateALightCard = '[LCard] Update a Light Card',\n    UpdateAnAction = '[LCard] Update one Action of a LightCard',\n    UpdateAnActionFailure = '[LCard] No actions where available to update for the current selected card in the state',\n    ThirdActionAlreadyLoaded = '[LCard] Light Card contains actions',\n    ThirdActionAlreadyUpdated = '[LCard] Third Action unchanged',\n    DelayedLightCardUpdate = '[LCard] update Light Card actions later',\n    LightCardAlreadyUpdated = '[LCard] Light Card already Updated'\n}\n\n// needed by NGRX entities\nexport class LoadLightCards implements Action {\n    /* istanbul ignore next */\n    readonly type = LightCardActionTypes.LoadLightCards;\n}\n\nexport class EmptyLightCards implements Action {\n    /* istanbul ignore next */\n    readonly type = LightCardActionTypes.EmptyLightCards;\n}\n\nexport class LoadLightCardsSuccess implements Action {\n    readonly type = LightCardActionTypes.LoadLightCardsSuccess;\n\n    /* istanbul ignore next */\n    constructor(public payload: { lightCards: LightCard[] }) {\n    }\n}\n\nexport class LoadLightCardsExtendedData implements Action {\n    readonly type = LightCardActionTypes.LoadLightCardsExtendedData;\n\n    /* istanbul ignore next */\n    constructor() {\n    }\n}\n\nexport class LoadLightCardsFailure implements Action {\n    readonly type = LightCardActionTypes.LoadLightCardsFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport class SelectLightCard implements Action {\n    /* istanbul ignore next */\n    readonly type = LightCardActionTypes.SelectLightCard;\n\n    /* istanbul ignore next */\n    constructor(public payload: { selectedCardId: string }) {\n    }\n\n}\n\nexport class ClearLightCardSelection implements Action {\n\n    readonly type = LightCardActionTypes.ClearLightCardSelection;\n\n    constructor() {\n    }\n}\n\nexport class AddLightCardFailure implements Action {\n    readonly type = LightCardActionTypes.AddLightCardFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport class UpdatedSubscription implements Action {\n    readonly type = LightCardActionTypes.UpdatedSubscription;\n\n    /* istanbul ignore next */\n    constructor() {\n    }\n}\n\nexport class HandleUnexpectedError implements Action {\n    /* istanbul ignore next */\n    readonly type = LightCardActionTypes.HandleUnexpectedError;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport class RemoveLightCard implements Action {\n    readonly type = LightCardActionTypes.RemoveLightCard;\n\n    constructor(public  payload: { cards: string[] }) {\n    }\n}\n\nexport class AddThirdActions implements Action {\n    readonly type = LightCardActionTypes.AddThirdActions;\n\n    constructor(public payload: { card: LightCard, actions: Map }) {\n    }\n}\n\nexport class UpdateALightCard implements Action {\n    readonly type = LightCardActionTypes.UpdateALightCard;\n\n    constructor(public payload: { card: LightCard }) {\n    }\n}\n\nexport class UpdateAnAction implements Action {\n    readonly type = LightCardActionTypes.UpdateAnAction;\n\n    constructor(public payload: { cardId: string, actionKey: string, status: ActionStatus }) {\n    }\n}\n\nexport class UpdateAnActionFailure implements Action {\n    readonly type = LightCardActionTypes.UpdateAnActionFailure;\n\n    constructor() {\n    }\n}\n\nexport class ThirdActionAlreadyLoaded implements Action {\n    readonly type = LightCardActionTypes.ThirdActionAlreadyLoaded;\n\n    constructor() {\n    }\n}\n\nexport class ThirdActionAlreadyUpdated implements Action {\n    readonly type = LightCardActionTypes.ThirdActionAlreadyUpdated;\n\n    constructor() {\n    }\n}\n\nexport class DelayedLightCardUpdate implements Action {\n    readonly type = LightCardActionTypes.DelayedLightCardUpdate;\n\n    constructor(public payload: { card: LightCard }) {\n    }\n}\n\nexport class LightCardAlreadyUpdated implements Action {\n    readonly type = LightCardActionTypes.LightCardAlreadyUpdated;\n\n    constructor() {\n    }\n}\n\nexport type LightCardActions =\n    LoadLightCards\n    | LoadLightCardsSuccess\n    | LoadLightCardsFailure\n    | SelectLightCard\n    | ClearLightCardSelection\n    | AddLightCardFailure\n    | UpdatedSubscription\n    | HandleUnexpectedError\n    | EmptyLightCards\n    | AddThirdActions\n    | UpdateALightCard\n    | UpdateAnAction\n    | UpdateAnActionFailure\n    | ThirdActionAlreadyLoaded\n    | ThirdActionAlreadyUpdated\n    | DelayedLightCardUpdate\n    | LightCardAlreadyUpdated\n    | RemoveLightCard;\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Detail.html":{"url":"classes/Detail.html","title":"class - Detail","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Detail\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/model/card.model.ts\n        \n\n\n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(titlePosition: TitlePosition, title: I18n, titleStyle: string, templateName: string, styles: string[])\n                    \n                \n                        \n                            \n                                Defined in src/app/model/card.model.ts:41\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        titlePosition\n                                                  \n                                                        \n                                                                        TitlePosition\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        title\n                                                  \n                                                        \n                                                                        I18n\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        titleStyle\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        templateName\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        styles\n                                                  \n                                                        \n                                                                    string[]\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Severity} from \"@ofModel/light-card.model\";\nimport {I18n} from \"@ofModel/i18n.model\";\n\nexport class Card {\n    /* istanbul ignore next */\n    constructor(\n        readonly uid: string,\n        readonly id: string,\n        readonly publisher: string,\n        readonly publisherVersion: string,\n        readonly publishDate: number,\n        readonly startDate: number,\n        readonly endDate: number,\n        readonly severity: Severity,\n        readonly mainRecipient: string,\n        readonly process?: string,\n        readonly processId?: string,\n        readonly state?: string,\n        readonly lttd?: number,\n        readonly title?: I18n,\n        readonly summary?: I18n,\n        readonly  data?: any,\n        readonly  details?: Detail[],\n    ) {\n    }\n}\n\nexport enum TitlePosition {\n    UP, DOWN, NONE\n\n}\n\nexport class Detail {\n    /* istanbul ignore next */\n    constructor(\n        readonly titlePosition: TitlePosition,\n        readonly title: I18n,\n        readonly titleStyle: string,\n        readonly templateName: string,\n        readonly styles: string[]) {\n    }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DetailComponent.html":{"url":"components/DetailComponent.html","title":"component - DetailComponent","body":"\n                   \n\n\n\n\n\n  Components\n  DetailComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/cards/components/detail/detail.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n                    OnChanges\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                of-detail\n            \n\n\n\n\n            \n                templateUrl\n                ./detail.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _htmlContent\n                            \n                            \n                                    Public\n                                active\n                            \n                            \n                                currentCard\n                            \n                            \n                                    Readonly\n                                hrefsOfCssLink\n                            \n                            \n                                    Private\n                                userContext\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                attachAction\n                            \n                            \n                                bindActions\n                            \n                            \n                                    Private\n                                handelActionButtonText\n                            \n                            \n                                    Private\n                                initializeHandlebarsTemplates\n                            \n                            \n                                    Private\n                                initializeHrefsOfCssLink\n                            \n                            \n                                ngOnChanges\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                reinsertScripts\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                card\n                            \n                            \n                                detail\n                            \n                        \n                    \n                \n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    htmlContent\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(element: ElementRef, thirds: ThirdsService, handlebars: HandlebarsService, sanitizer: DomSanitizer, store: Store, translate: TranslateService)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/cards/components/detail/detail.component.ts:35\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        element\n                                                  \n                                                        \n                                                                        ElementRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        thirds\n                                                  \n                                                        \n                                                                        ThirdsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        handlebars\n                                                  \n                                                        \n                                                                        HandlebarsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        sanitizer\n                                                  \n                                                        \n                                                                        DomSanitizer\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                        Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        translate\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        card\n                    \n                \n                \n                    \n                        Type :         Card\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/cards/components/detail/detail.component.ts:31\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        detail\n                    \n                \n                \n                    \n                        Type :         Detail\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/cards/components/detail/detail.component.ts:30\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            attachAction\n                        \n                        \n                    \n                \n            \n            \n                \nattachAction(button: HTMLButtonElement, action: Action, actionId: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/cards/components/detail/detail.component.ts:130\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    button\n                                    \n                                            HTMLButtonElement\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    action\n                                    \n                                                Action\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    actionId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            bindActions\n                        \n                        \n                    \n                \n            \n            \n                \nbindActions(third: Third)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/cards/components/detail/detail.component.ts:113\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    third\n                                    \n                                                Third\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            handelActionButtonText\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    handelActionButtonText(label: I18n)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/cards/components/detail/detail.component.ts:154\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    label\n                                    \n                                                I18n\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            initializeHandlebarsTemplates\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    initializeHandlebarsTemplates()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/cards/components/detail/detail.component.ts:78\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            initializeHrefsOfCssLink\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    initializeHrefsOfCssLink()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/cards/components/detail/detail.component.ts:62\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnChanges\n                        \n                        \n                    \n                \n            \n            \n                \nngOnChanges()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/cards/components/detail/detail.component.ts:57\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/cards/components/detail/detail.component.ts:45\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            reinsertScripts\n                        \n                        \n                    \n                \n            \n            \n                \nreinsertScripts()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/cards/components/detail/detail.component.ts:98\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _htmlContent\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         SafeHtml\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/cards/components/detail/detail.component.ts:34\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            active\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/cards/components/detail/detail.component.ts:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            currentCard\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Card\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/cards/components/detail/detail.component.ts:32\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            hrefsOfCssLink\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Array()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/cards/components/detail/detail.component.ts:33\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            userContext\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         UserContext\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/cards/components/detail/detail.component.ts:35\n                            \n                        \n\n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        htmlContent\n                    \n                \n\n                \n                    \n                        gethtmlContent()\n                    \n                \n                            \n                                \n                                    Defined in src/app/modules/cards/components/detail/detail.component.ts:94\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import {Component, ElementRef, Input, OnInit, SimpleChanges, OnChanges} from '@angular/core';\nimport {Card, Detail} from '@ofModel/card.model';\nimport {ThirdsService} from '@ofServices/thirds.service';\nimport {HandlebarsService} from '../../services/handlebars.service';\nimport {DomSanitizer, SafeHtml, SafeResourceUrl} from '@angular/platform-browser';\nimport {Action, Third} from '@ofModel/thirds.model';\nimport {zip} from 'rxjs';\nimport {DetailContext} from '@ofModel/detail-context.model';\nimport {Store} from '@ngrx/store';\nimport {AppState} from '@ofStore/index';\nimport {selectAuthenticationState} from '@ofSelectors/authentication.selectors';\nimport {UserContext} from '@ofModel/user-context.model';\nimport {TranslateService} from '@ngx-translate/core';\nimport {I18n} from '@ofModel/i18n.model';\n\n@Component({\n    selector: 'of-detail',\n    templateUrl: './detail.component.html',\n})\nexport class DetailComponent implements OnInit, OnChanges {\n    public active = false;\n    @Input() detail: Detail;\n    @Input() card: Card;\n    currentCard: Card;\n    readonly hrefsOfCssLink = new Array();\n    private _htmlContent: SafeHtml;\n    private userContext: UserContext;\n\n    constructor(private element: ElementRef,\n                private thirds: ThirdsService,\n                private handlebars: HandlebarsService,\n                private sanitizer: DomSanitizer,\n                private store: Store,\n                private translate: TranslateService ) {\n    }\n\n    ngOnInit() {\n        this.initializeHrefsOfCssLink();\n        this.initializeHandlebarsTemplates();\n        this.store.select(selectAuthenticationState).subscribe(authState => {\n            this.userContext = new UserContext(\n                authState.identifier,\n                authState.token,\n                authState.firstName,\n                authState.lastName\n            );\n        });\n    }\n    ngOnChanges(): void {\n        this.initializeHrefsOfCssLink();\n        this.initializeHandlebarsTemplates();\n    }\n\n    private initializeHrefsOfCssLink() {\n        if (this.detail && this.detail.styles) {\n            const publisher = this.card.publisher;\n            const publisherVersion = this.card.publisherVersion;\n            this.detail.styles.forEach(style => {\n                const cssUrl = this.thirds.computeThirdCssUrl(publisher, style, publisherVersion);\n                // needed to instantiate href of link for css in component rendering\n                const safeCssUrl = this.sanitizer.bypassSecurityTrustResourceUrl(cssUrl);\n                this.hrefsOfCssLink.push(safeCssUrl);\n\n                console.log(`this is the safe resource Url for css '${safeCssUrl.toString()}'\n                and with local version '${safeCssUrl.toLocaleString()}'`);\n            });\n        }\n    }\n\n    private initializeHandlebarsTemplates() {\n\n        zip(this.thirds.queryThirdFromCard(this.card),\n        this.handlebars.executeTemplate(this.detail.templateName, new DetailContext(this.card,null)))\n            .subscribe(\n                ([third, html]) => {\n                this._htmlContent = this.sanitizer.bypassSecurityTrustHtml(html);\n                setTimeout(() => { // wait for DOM rendering\n                    this.reinsertScripts();\n                    this.bindActions(third);\n                });\n            }\n        );\n    }\n\n\n    get htmlContent() {\n        return this._htmlContent;\n    }\n\n    reinsertScripts(): void {\n        const scripts = this.element.nativeElement.getElementsByTagName('script');\n        const scriptsInitialLength = scripts.length;\n        for (let i = 0; i this.element.nativeElement.getElementsByTagName('button');\n\n        for (const button of buttons) {\n            if (button.attributes['action-id']) {\n                const actionId = button.attributes['action-id'].nodeValue;\n                if (actionId) {\n                    const state = third.extractState(this.card);\n                    if (!!state && !!state.actions[actionId]) {\n                        this.attachAction(button, state.actions[actionId], actionId);\n                    }\n                }\n            }\n        }\n    }\n\n    attachAction(button: HTMLButtonElement, action: Action, actionId: string) {\n        button.classList.add('btn');\n        if (action.buttonStyle) {\n            for (const c of action.buttonStyle.split(' ')) {\n                button.classList.add(c);\n            }\n        } else {\n            button.classList.add('btn-light');\n        }\n        if (action.contentStyle) {\n            for (let c of action.contentStyle.split(' ')) {\n                button.children[0].classList.add(c);\n            }\n        } else {\n            button.children[0].classList.add('fa', 'fa-warning', 'text-dark');\n        }\n\n        button.children[0].textContent = this.handelActionButtonText(action.label);\n\n        button.addEventListener('click', (event: Event) => {\n            alert(`${actionId} was triggered.\\nAction handling is not yet implemented`);\n        });\n    }\n\n    private handelActionButtonText(label: I18n) {\n        if (label) {\n            if (this.card) {\n                console.log('card exists!');\n            } else {\n                console.log(`card doesn't exist yet`);\n            }\n            return this.translate.instant(`${this.card.publisher}.${this.card.publisherVersion}.${label.key}`, label.parameters);\n        }\n        return 'Undefined';\n    }\n}\n\n    \n\n    \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'ActionComponent', 'selector': 'of-action'},{'name': 'AppComponent', 'selector': 'of-root'},{'name': 'ArchiveFiltersComponent', 'selector': 'of-archive-filters'},{'name': 'ArchiveListComponent', 'selector': 'of-archive-list'},{'name': 'ArchiveListPageComponent', 'selector': 'of-archive-list-page'},{'name': 'ArchivesComponent', 'selector': 'of-archives'},{'name': 'BaseSettingComponent', 'selector': 'of-base-setting'},{'name': 'CardComponent', 'selector': 'of-card'},{'name': 'CardDetailsComponent', 'selector': 'of-card-details'},{'name': 'CardListComponent', 'selector': 'of-card-list'},{'name': 'ConfirmModalComponent', 'selector': 'confirm-modal-component'},{'name': 'CustomLogoComponent', 'selector': 'of-custom-logo'},{'name': 'CustomTimelineChartComponent', 'selector': 'of-custom-timeline-chart'},{'name': 'DatetimeFilterComponent', 'selector': 'of-datetime-filter'},{'name': 'DetailComponent', 'selector': 'of-detail'},{'name': 'DetailsComponent', 'selector': 'of-details'},{'name': 'EmailSettingComponent', 'selector': 'of-email-setting'},{'name': 'FeedComponent', 'selector': 'of-cards'},{'name': 'FiltersComponent', 'selector': 'of-filters'},{'name': 'IconComponent', 'selector': 'of-icon'},{'name': 'IframeDisplayComponent', 'selector': 'of-iframedisplay'},{'name': 'InfoComponent', 'selector': 'of-info'},{'name': 'InitChartComponent', 'selector': 'of-init-chart'},{'name': 'ListSettingComponent', 'selector': 'of-list-setting'},{'name': 'LoginComponent', 'selector': 'of-login'},{'name': 'MenuLinkComponent', 'selector': 'of-menu-link'},{'name': 'MultiFilterComponent', 'selector': 'of-multi-filter'},{'name': 'MultiSettingsComponent', 'selector': 'of-multi-settings'},{'name': 'NavbarComponent', 'selector': 'of-navbar'},{'name': 'NoSelectionComponent', 'selector': 'of-no-selection'},{'name': 'ResizableComponent', 'selector': 'of-resizable'},{'name': 'SettingsComponent', 'selector': 'of-settings'},{'name': 'TagsFilterComponent', 'selector': 'of-tags-filter'},{'name': 'TextSettingComponent', 'selector': 'of-text-setting'},{'name': 'TimeFilterComponent', 'selector': 'of-time-filter'},{'name': 'TimeLineComponent', 'selector': 'of-time-line'},{'name': 'TypeAheadSettingsComponent', 'selector': 'of-type-ahead-settings'},{'name': 'TypeFilterComponent', 'selector': 'of-type-filter'}];\n    var DIRECTIVES = [{'name': 'CalcHeightDirective', 'selector': '[calcHeightDirective]'},{'name': 'DraggableDirective', 'selector': '[appDraggable]'},{'name': 'MouseWheelDirective', 'selector': '[appMouseWheel]'}];\n    var ACTUAL_COMPONENT = {'name': 'DetailComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DetailContext.html":{"url":"classes/DetailContext.html","title":"class - DetailContext","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DetailContext\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/model/detail-context.model.ts\n        \n\n\n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(card: Card, userContext: UserContext)\n                    \n                \n                        \n                            \n                                Defined in src/app/model/detail-context.model.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        card\n                                                  \n                                                        \n                                                                        Card\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userContext\n                                                  \n                                                        \n                                                                        UserContext\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Card} from \"@ofModel/card.model\";\nimport {UserContext} from \"@ofModel/user-context.model\";\n\nexport class DetailContext{\n    constructor(readonly card:Card, readonly userContext: UserContext){}\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DetailsComponent.html":{"url":"components/DetailsComponent.html","title":"component - DetailsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  DetailsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/cards/components/details/details.component.ts\n\n\n\n    \n        Extends\n    \n    \n                ResizableComponent\n    \n\n    \n        Implements\n    \n    \n                    AfterViewInit\n                    OnChanges\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                of-details\n            \n\n            \n                styleUrls\n                ./details.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./details.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _i18nPrefix\n                            \n                            \n                                details\n                            \n                            \n                                resized\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngAfterViewInit\n                            \n                            \n                                ngOnChanges\n                            \n                            \n                                selectDetail\n                            \n                            \n                                    Private\n                                updateAsync\n                            \n                            \n                                ngAfterViewInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                card\n                            \n                        \n                    \n                \n\n\n\n                \n                    \n                        HostListeners\n                    \n                \n                \n                    \n                        \n                            \n                                window:resize\n                            \n                        \n                    \n                \n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    i18nPrefix\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/cards/components/details/details.component.ts:23\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        card\n                    \n                \n                \n                    \n                        Type :         Card\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/cards/components/details/details.component.ts:22\n                            \n                        \n            \n        \n\n\n\n    \n    HostListeners    \n        \n            \n                \n                    \n                    \n                        \n                            window:resize\n                        \n                        \n                    \n                \n            \n            \n                \nwindow:resize()\n                \n            \n\n\n            \n                \n                    Inherited from         ResizableComponent\n\n                \n            \n            \n                \n                        Defined in         ResizableComponent:34\n\n                \n            \n\n\n        \n    \n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngAfterViewInit\n                        \n                        \n                    \n                \n            \n            \n                \nngAfterViewInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/cards/components/details/details.component.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnChanges\n                        \n                        \n                    \n                \n            \n            \n                \nngOnChanges(changes: SimpleChanges)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/cards/components/details/details.component.ts:61\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    changes\n                                    \n                                                SimpleChanges\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            selectDetail\n                        \n                        \n                    \n                \n            \n            \n                \nselectDetail(detail: DetailComponent)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/cards/components/details/details.component.ts:48\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    detail\n                                    \n                                                DetailComponent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            updateAsync\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updateAsync()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/cards/components/details/details.component.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngAfterViewInit\n                        \n                        \n                    \n                \n            \n            \n                \nngAfterViewInit()\n                \n            \n\n\n            \n                \n                    Inherited from         ResizableComponent\n\n                \n            \n            \n                \n                        Defined in         ResizableComponent:19\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _i18nPrefix\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/cards/components/details/details.component.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            details\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         QueryList\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ContentChildren(DetailComponent)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/cards/components/details/details.component.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            resized\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                            \n                                \n                                    Inherited from         ResizableComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         ResizableComponent:17\n\n                            \n                        \n\n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        i18nPrefix\n                    \n                \n\n                \n                    \n                        geti18nPrefix()\n                    \n                \n                            \n                                \n                                    Defined in src/app/modules/cards/components/details/details.component.ts:57\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import {AfterViewInit, Component, ContentChildren, Input, OnChanges, QueryList, SimpleChanges} from '@angular/core';\nimport {DetailComponent} from \"../detail/detail.component\";\nimport {Card} from \"@ofModel/card.model\";\nimport { ResizableComponent } from 'app/modules/utilities/components/resizable/resizable.component';\n\n@Component({\n    selector: 'of-details',\n    templateUrl: './details.component.html',\n    styleUrls: ['./details.component.scss']\n})\nexport class DetailsComponent extends ResizableComponent implements AfterViewInit, OnChanges {\n\n    @ContentChildren(DetailComponent) details: QueryList;\n    @Input() card: Card;\n    private _i18nPrefix: string;\n\n    constructor() {\n        super();\n    }\n\n    ngAfterViewInit(): void {\n        this.updateAsync();\n        this.details.changes.subscribe(\n            () => {\n                this.updateAsync();\n            }\n        );\n    }\n\n    private updateAsync() {\n        setTimeout(() => {\n            let activeDetail = this.details.filter((tab) => tab.active)\n            // if there is no active tab set, activate the first\n            if (activeDetail.length === 0) {\n                this.selectDetail(this.details.first);\n            }\n        });\n    }\n\n    selectDetail(detail: DetailComponent) {\n        // deactivate all tabs\n        this.details.toArray().forEach(detail => detail.active = false);\n\n        // activate the tab the user has clicked on.\n        if (detail)\n            detail.active = true;\n    }\n\n    public get i18nPrefix(){\n        return this._i18nPrefix;\n    }\n\n    ngOnChanges(changes: SimpleChanges): void {\n        if(changes['card'].currentValue)\n            this._i18nPrefix = changes['card'].currentValue.publisher+'.'+changes['card'].currentValue.publisherVersion+'.';\n    }\n}\n\n    \n\n    \n        \n\n\n\n\n\n\n\n  \n    \n      {{i18nPrefix+detailC.detail.title.key}}\n    \n  \n  \n    \n  \n\n\n    \n\n    \n                \n                    ./details.component.scss\n                \n                /* Copyright (c) 2020, RTE (http://www.rte-france.com)\n *\n * This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n */\n\n\n.calc-height-details {\n  overflow-x: hidden;\n  overflow-y: auto;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            {{i18nPrefix+detailC.detail.title.key}}              '\n    var COMPONENTS = [{'name': 'ActionComponent', 'selector': 'of-action'},{'name': 'AppComponent', 'selector': 'of-root'},{'name': 'ArchiveFiltersComponent', 'selector': 'of-archive-filters'},{'name': 'ArchiveListComponent', 'selector': 'of-archive-list'},{'name': 'ArchiveListPageComponent', 'selector': 'of-archive-list-page'},{'name': 'ArchivesComponent', 'selector': 'of-archives'},{'name': 'BaseSettingComponent', 'selector': 'of-base-setting'},{'name': 'CardComponent', 'selector': 'of-card'},{'name': 'CardDetailsComponent', 'selector': 'of-card-details'},{'name': 'CardListComponent', 'selector': 'of-card-list'},{'name': 'ConfirmModalComponent', 'selector': 'confirm-modal-component'},{'name': 'CustomLogoComponent', 'selector': 'of-custom-logo'},{'name': 'CustomTimelineChartComponent', 'selector': 'of-custom-timeline-chart'},{'name': 'DatetimeFilterComponent', 'selector': 'of-datetime-filter'},{'name': 'DetailComponent', 'selector': 'of-detail'},{'name': 'DetailsComponent', 'selector': 'of-details'},{'name': 'EmailSettingComponent', 'selector': 'of-email-setting'},{'name': 'FeedComponent', 'selector': 'of-cards'},{'name': 'FiltersComponent', 'selector': 'of-filters'},{'name': 'IconComponent', 'selector': 'of-icon'},{'name': 'IframeDisplayComponent', 'selector': 'of-iframedisplay'},{'name': 'InfoComponent', 'selector': 'of-info'},{'name': 'InitChartComponent', 'selector': 'of-init-chart'},{'name': 'ListSettingComponent', 'selector': 'of-list-setting'},{'name': 'LoginComponent', 'selector': 'of-login'},{'name': 'MenuLinkComponent', 'selector': 'of-menu-link'},{'name': 'MultiFilterComponent', 'selector': 'of-multi-filter'},{'name': 'MultiSettingsComponent', 'selector': 'of-multi-settings'},{'name': 'NavbarComponent', 'selector': 'of-navbar'},{'name': 'NoSelectionComponent', 'selector': 'of-no-selection'},{'name': 'ResizableComponent', 'selector': 'of-resizable'},{'name': 'SettingsComponent', 'selector': 'of-settings'},{'name': 'TagsFilterComponent', 'selector': 'of-tags-filter'},{'name': 'TextSettingComponent', 'selector': 'of-text-setting'},{'name': 'TimeFilterComponent', 'selector': 'of-time-filter'},{'name': 'TimeLineComponent', 'selector': 'of-time-line'},{'name': 'TypeAheadSettingsComponent', 'selector': 'of-type-ahead-settings'},{'name': 'TypeFilterComponent', 'selector': 'of-type-filter'}];\n    var DIRECTIVES = [{'name': 'CalcHeightDirective', 'selector': '[calcHeightDirective]'},{'name': 'DraggableDirective', 'selector': '[appDraggable]'},{'name': 'MouseWheelDirective', 'selector': '[appMouseWheel]'}];\n    var ACTUAL_COMPONENT = {'name': 'DetailsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/DraggableDirective.html":{"url":"directives/DraggableDirective.html","title":"directive - DraggableDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  DraggableDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/modules/feed/components/time-line/directives/app-draggable.ts\n        \n\n\n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        [appDraggable]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                dragging\n                            \n                        \n                    \n                \n\n\n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                dragEnd\n                            \n                            \n                                dragMove\n                            \n                            \n                                dragStart\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        HostListeners\n                    \n                \n                \n                    \n                        \n                            \n                                pointerdown\n                            \n                            \n                                pointermove\n                            \n                            \n                                pointerup\n                            \n                        \n                    \n                \n\n        \n    \n\n\n\n\n            \n    Outputs\n        \n            \n                \n                    \n                        \n                        dragEnd\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/feed/components/time-line/directives/app-draggable.ts:16\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        dragMove\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/feed/components/time-line/directives/app-draggable.ts:15\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        dragStart\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/feed/components/time-line/directives/app-draggable.ts:14\n                            \n                        \n            \n        \n\n\n            \n    HostListeners    \n        \n            \n                \n                    \n                    \n                        \n                            pointerdown\n                        \n                        \n                    \n                \n            \n            \n                \n                    Arguments : '$event' \n                \n            \n            \n                \npointerdown(event: PointerEvent)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/feed/components/time-line/directives/app-draggable.ts:25\n                \n            \n\n\n            \n                \n                    if drag is true emit drag start event\n\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            pointermove\n                        \n                        \n                    \n                \n            \n            \n                \n                    Arguments : '$event' \n                \n            \n            \n                \npointermove(event: PointerEvent)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/feed/components/time-line/directives/app-draggable.ts:35\n                \n            \n\n\n            \n                \n                    if drag is true emit drag move event\n\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            pointerup\n                        \n                        \n                    \n                \n            \n            \n                \n                    Arguments : '$event' \n                \n            \n            \n                \npointerup(event: PointerEvent)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/feed/components/time-line/directives/app-draggable.ts:47\n                \n            \n\n\n            \n                \n                    if drag is true emit drag end event\n\n\n                \n            \n        \n    \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            dragging\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/feed/components/time-line/directives/app-draggable.ts:18\n                            \n                        \n\n\n            \n        \n\n\n\n    \n\n\n    \n        import {Directive, EventEmitter, HostListener, Output} from '@angular/core';\n\n@Directive({\n  selector: '[appDraggable]'\n})\nexport class DraggableDirective {\n  @Output() dragStart = new EventEmitter();\n  @Output() dragMove = new EventEmitter();\n  @Output() dragEnd = new EventEmitter();\n\n  private dragging = false;\n\n  /**\n   * if drag is true emit drag start event\n   * @param event\n   */\n  @HostListener('pointerdown', ['$event'])\n  onPointerDown(event: PointerEvent): void {\n    this.dragging = true;\n    this.dragStart.emit(event);\n  }\n\n  /**\n   * if drag is true emit drag move event\n   * @param event\n   */\n  @HostListener('pointermove', ['$event'])\n  onPointerMove(event: PointerEvent): void {\n    if (!this.dragging) {\n      return;\n    }\n    this.dragMove.emit(event);\n  }\n\n  /**\n   * if drag is true emit drag end event\n   * @param event\n   */\n  @HostListener('pointerup', ['$event'])\n  onPointerUp(event: PointerEvent): void {\n    if (!this.dragging) {\n      return;\n    }\n    this.dragging = false;\n    this.dragEnd.emit(event);\n  }\n\n  // Uncomment if you delete the unselection set inside css,\n  // this code will block the movement when u select some text\n  // !!! a little movement still appear !!!\n  /* @HostListener('document:dragstart', ['$event'])\n   onDragEnd(event: DragEvent): void {\n     if (!this.dragging) {\n       return;\n     }\n     this.dragging = false;\n   }*/\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/EmailSettingComponent.html":{"url":"components/EmailSettingComponent.html","title":"component - EmailSettingComponent","body":"\n                   \n\n\n\n\n\n  Components\n  EmailSettingComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/settings/components/settings/email-setting/email-setting.component.ts\n\n\n\n    \n        Extends\n    \n    \n                TextSettingComponent\n    \n\n    \n        Implements\n    \n    \n                    OnInit\n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                of-email-setting\n            \n\n\n\n\n            \n                templateUrl\n                ./email-setting.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                baseSettings\n                            \n                            \n                                form\n                            \n                            \n                                    Private\n                                ngUnsubscribe$\n                            \n                            \n                                    Protected\n                                placeholder$\n                            \n                            \n                                    Protected\n                                setting$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                computeTextValidators\n                            \n                            \n                                    Protected\n                                computeTextValidators\n                            \n                            \n                                initFormGroup\n                            \n                            \n                                    Protected\n                                isEqual\n                            \n                            \n                                updateValue\n                            \n                            \n                                    Protected\n                                convert\n                            \n                            \n                                    Private\n                                dispatch\n                            \n                            \n                                    Protected\n                                initFormGroup\n                            \n                            \n                                    Protected\n                                isEqual\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                    Protected\n                                submitValue\n                            \n                            \n                                    Protected\n                                updateValue\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                disabled\n                            \n                            \n                                disabled\n                            \n                            \n                                pattern\n                            \n                            \n                                messagePlaceholder\n                            \n                            \n                                requiredField\n                            \n                            \n                                settingPath\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/settings/components/settings/email-setting/email-setting.component.ts:21\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                        Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        disabled\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/settings/components/settings/email-setting/email-setting.component.ts:21\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        disabled\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                            \n                                \n                                    Inherited from         TextSettingComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         TextSettingComponent:23\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        pattern\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                            \n                                \n                                    Inherited from         TextSettingComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         TextSettingComponent:22\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        messagePlaceholder\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                            \n                                \n                                    Inherited from         BaseSettingComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseSettingComponent:28\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        requiredField\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                            \n                                \n                                    Inherited from         BaseSettingComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseSettingComponent:29\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        settingPath\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                            \n                                \n                                    Inherited from         BaseSettingComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseSettingComponent:27\n\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            computeTextValidators\n                        \n                        \n                    \n                \n            \n            \n                \ncomputeTextValidators()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/settings/components/settings/email-setting/email-setting.component.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            computeTextValidators\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    computeTextValidators()\n                \n            \n\n\n            \n                \n                    Inherited from         TextSettingComponent\n\n                \n            \n            \n                \n                        Defined in         TextSettingComponent:36\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     {}\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            initFormGroup\n                        \n                        \n                    \n                \n            \n            \n                \ninitFormGroup()\n                \n            \n\n\n            \n                \n                    Inherited from         TextSettingComponent\n\n                \n            \n            \n                \n                        Defined in         TextSettingComponent:29\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            isEqual\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    isEqual(formA, formB)\n                \n            \n\n\n            \n                \n                    Inherited from         TextSettingComponent\n\n                \n            \n            \n                \n                        Defined in         TextSettingComponent:51\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    formA\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    formB\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            updateValue\n                        \n                        \n                    \n                \n            \n            \n                \nupdateValue(value)\n                \n            \n\n\n            \n                \n                    Inherited from         TextSettingComponent\n\n                \n            \n            \n                \n                        Defined in         TextSettingComponent:47\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            convert\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    convert(value: any)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseSettingComponent\n\n                \n            \n            \n                \n                        Defined in         BaseSettingComponent:83\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            dispatch\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    dispatch(value: any)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseSettingComponent\n\n                \n            \n            \n                \n                        Defined in         BaseSettingComponent:88\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            initFormGroup\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    initFormGroup()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseSettingComponent\n\n                \n            \n            \n                \n                        Defined in         BaseSettingComponent:79\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         FormGroup\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            isEqual\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    isEqual(formA, formB)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseSettingComponent\n\n                \n            \n            \n                \n                        Defined in         BaseSettingComponent:94\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    formA\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    formB\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseSettingComponent\n\n                \n            \n            \n                \n                        Defined in         BaseSettingComponent:70\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseSettingComponent\n\n                \n            \n            \n                \n                        Defined in         BaseSettingComponent:40\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            submitValue\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    submitValue()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseSettingComponent\n\n                \n            \n            \n                \n                        Defined in         BaseSettingComponent:98\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            updateValue\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updateValue(value: any)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseSettingComponent\n\n                \n            \n            \n                \n                        Defined in         BaseSettingComponent:75\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            baseSettings\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {}\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseSettingComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseSettingComponent:34\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            form\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormGroup\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseSettingComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseSettingComponent:33\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            ngUnsubscribe$\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Subject()\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseSettingComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseSettingComponent:30\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            placeholder$\n                            \n                        \n                    \n                \n                            \n                                \n                                    Inherited from         BaseSettingComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseSettingComponent:32\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            setting$\n                            \n                        \n                    \n                \n                            \n                                \n                                    Inherited from         BaseSettingComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseSettingComponent:31\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import {Component, OnDestroy, OnInit, Input} from '@angular/core';\nimport {TextSettingComponent} from '../text-setting/text-setting.component';\nimport {Store} from '@ngrx/store';\nimport {AppState} from '@ofStore/index';\nimport {Validators} from '@angular/forms';\n\n@Component({\n  selector: 'of-email-setting',\n  templateUrl: './email-setting.component.html'\n})\nexport class EmailSettingComponent extends TextSettingComponent implements OnInit, OnDestroy {\n\n    @Input() disabled: boolean;\n    constructor(protected store: Store) {\n        super(store);\n        console.log(this.disabled);\n    }\n\n    computeTextValidators() {\n      const validators = super.computeTextValidators();\n      validators.push(Validators.email);\n      return validators;\n    }\n\n}\n\n    \n\n    \n        \n\n\n\n\n\n\n\n  \n    settings.{{settingPath}}\n    \n    \n    Incorrect submission\n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      settings.{{settingPath}}            Incorrect submission  '\n    var COMPONENTS = [{'name': 'ActionComponent', 'selector': 'of-action'},{'name': 'AppComponent', 'selector': 'of-root'},{'name': 'ArchiveFiltersComponent', 'selector': 'of-archive-filters'},{'name': 'ArchiveListComponent', 'selector': 'of-archive-list'},{'name': 'ArchiveListPageComponent', 'selector': 'of-archive-list-page'},{'name': 'ArchivesComponent', 'selector': 'of-archives'},{'name': 'BaseSettingComponent', 'selector': 'of-base-setting'},{'name': 'CardComponent', 'selector': 'of-card'},{'name': 'CardDetailsComponent', 'selector': 'of-card-details'},{'name': 'CardListComponent', 'selector': 'of-card-list'},{'name': 'ConfirmModalComponent', 'selector': 'confirm-modal-component'},{'name': 'CustomLogoComponent', 'selector': 'of-custom-logo'},{'name': 'CustomTimelineChartComponent', 'selector': 'of-custom-timeline-chart'},{'name': 'DatetimeFilterComponent', 'selector': 'of-datetime-filter'},{'name': 'DetailComponent', 'selector': 'of-detail'},{'name': 'DetailsComponent', 'selector': 'of-details'},{'name': 'EmailSettingComponent', 'selector': 'of-email-setting'},{'name': 'FeedComponent', 'selector': 'of-cards'},{'name': 'FiltersComponent', 'selector': 'of-filters'},{'name': 'IconComponent', 'selector': 'of-icon'},{'name': 'IframeDisplayComponent', 'selector': 'of-iframedisplay'},{'name': 'InfoComponent', 'selector': 'of-info'},{'name': 'InitChartComponent', 'selector': 'of-init-chart'},{'name': 'ListSettingComponent', 'selector': 'of-list-setting'},{'name': 'LoginComponent', 'selector': 'of-login'},{'name': 'MenuLinkComponent', 'selector': 'of-menu-link'},{'name': 'MultiFilterComponent', 'selector': 'of-multi-filter'},{'name': 'MultiSettingsComponent', 'selector': 'of-multi-settings'},{'name': 'NavbarComponent', 'selector': 'of-navbar'},{'name': 'NoSelectionComponent', 'selector': 'of-no-selection'},{'name': 'ResizableComponent', 'selector': 'of-resizable'},{'name': 'SettingsComponent', 'selector': 'of-settings'},{'name': 'TagsFilterComponent', 'selector': 'of-tags-filter'},{'name': 'TextSettingComponent', 'selector': 'of-text-setting'},{'name': 'TimeFilterComponent', 'selector': 'of-time-filter'},{'name': 'TimeLineComponent', 'selector': 'of-time-line'},{'name': 'TypeAheadSettingsComponent', 'selector': 'of-type-ahead-settings'},{'name': 'TypeFilterComponent', 'selector': 'of-type-filter'}];\n    var DIRECTIVES = [{'name': 'CalcHeightDirective', 'selector': '[calcHeightDirective]'},{'name': 'DraggableDirective', 'selector': '[appDraggable]'},{'name': 'MouseWheelDirective', 'selector': '[appMouseWheel]'}];\n    var ACTUAL_COMPONENT = {'name': 'EmailSettingComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/EmptyLightCards.html":{"url":"classes/EmptyLightCards.html","title":"class - EmptyLightCards","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  EmptyLightCards\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/light-card.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : LightCardActionTypes.EmptyLightCards\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/light-card.actions.ts:44\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Action} from '@ngrx/store';\nimport {LightCard} from '@ofModel/light-card.model';\nimport {Action as ThirdAction, ActionStatus} from '@ofModel/thirds.model';\nimport {Update} from \"@ngrx/entity\";\n\nexport enum LightCardActionTypes {\n    LoadLightCards = '[LCard] Load',\n    EmptyLightCards = '[LCard] Empty',\n    LoadLightCardsSuccess = '[LCard] Load Success',\n    LoadLightCardsExtendedData = '[LCard] Load Extended Data',\n    LoadLightCardsFailure = '[LCard] Load Fail',\n    SelectLightCard = '[LCard] Select One',\n    ClearLightCardSelection = '[LCard] Clear Light Card Selection',\n    AddLightCardFailure = '[LCard] Add Light Card Fail',\n    UpdatedSubscription = '[LCard] UpdateSubscription',\n    HandleUnexpectedError = '[LCard] Handle unexpected error related to authentication issue',\n    RemoveLightCard = '[LCard] Remove a card',\n    AddThirdActions = '[LCard] Adds some Third Actions to existing card',\n    UpdateALightCard = '[LCard] Update a Light Card',\n    UpdateAnAction = '[LCard] Update one Action of a LightCard',\n    UpdateAnActionFailure = '[LCard] No actions where available to update for the current selected card in the state',\n    ThirdActionAlreadyLoaded = '[LCard] Light Card contains actions',\n    ThirdActionAlreadyUpdated = '[LCard] Third Action unchanged',\n    DelayedLightCardUpdate = '[LCard] update Light Card actions later',\n    LightCardAlreadyUpdated = '[LCard] Light Card already Updated'\n}\n\n// needed by NGRX entities\nexport class LoadLightCards implements Action {\n    /* istanbul ignore next */\n    readonly type = LightCardActionTypes.LoadLightCards;\n}\n\nexport class EmptyLightCards implements Action {\n    /* istanbul ignore next */\n    readonly type = LightCardActionTypes.EmptyLightCards;\n}\n\nexport class LoadLightCardsSuccess implements Action {\n    readonly type = LightCardActionTypes.LoadLightCardsSuccess;\n\n    /* istanbul ignore next */\n    constructor(public payload: { lightCards: LightCard[] }) {\n    }\n}\n\nexport class LoadLightCardsExtendedData implements Action {\n    readonly type = LightCardActionTypes.LoadLightCardsExtendedData;\n\n    /* istanbul ignore next */\n    constructor() {\n    }\n}\n\nexport class LoadLightCardsFailure implements Action {\n    readonly type = LightCardActionTypes.LoadLightCardsFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport class SelectLightCard implements Action {\n    /* istanbul ignore next */\n    readonly type = LightCardActionTypes.SelectLightCard;\n\n    /* istanbul ignore next */\n    constructor(public payload: { selectedCardId: string }) {\n    }\n\n}\n\nexport class ClearLightCardSelection implements Action {\n\n    readonly type = LightCardActionTypes.ClearLightCardSelection;\n\n    constructor() {\n    }\n}\n\nexport class AddLightCardFailure implements Action {\n    readonly type = LightCardActionTypes.AddLightCardFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport class UpdatedSubscription implements Action {\n    readonly type = LightCardActionTypes.UpdatedSubscription;\n\n    /* istanbul ignore next */\n    constructor() {\n    }\n}\n\nexport class HandleUnexpectedError implements Action {\n    /* istanbul ignore next */\n    readonly type = LightCardActionTypes.HandleUnexpectedError;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport class RemoveLightCard implements Action {\n    readonly type = LightCardActionTypes.RemoveLightCard;\n\n    constructor(public  payload: { cards: string[] }) {\n    }\n}\n\nexport class AddThirdActions implements Action {\n    readonly type = LightCardActionTypes.AddThirdActions;\n\n    constructor(public payload: { card: LightCard, actions: Map }) {\n    }\n}\n\nexport class UpdateALightCard implements Action {\n    readonly type = LightCardActionTypes.UpdateALightCard;\n\n    constructor(public payload: { card: LightCard }) {\n    }\n}\n\nexport class UpdateAnAction implements Action {\n    readonly type = LightCardActionTypes.UpdateAnAction;\n\n    constructor(public payload: { cardId: string, actionKey: string, status: ActionStatus }) {\n    }\n}\n\nexport class UpdateAnActionFailure implements Action {\n    readonly type = LightCardActionTypes.UpdateAnActionFailure;\n\n    constructor() {\n    }\n}\n\nexport class ThirdActionAlreadyLoaded implements Action {\n    readonly type = LightCardActionTypes.ThirdActionAlreadyLoaded;\n\n    constructor() {\n    }\n}\n\nexport class ThirdActionAlreadyUpdated implements Action {\n    readonly type = LightCardActionTypes.ThirdActionAlreadyUpdated;\n\n    constructor() {\n    }\n}\n\nexport class DelayedLightCardUpdate implements Action {\n    readonly type = LightCardActionTypes.DelayedLightCardUpdate;\n\n    constructor(public payload: { card: LightCard }) {\n    }\n}\n\nexport class LightCardAlreadyUpdated implements Action {\n    readonly type = LightCardActionTypes.LightCardAlreadyUpdated;\n\n    constructor() {\n    }\n}\n\nexport type LightCardActions =\n    LoadLightCards\n    | LoadLightCardsSuccess\n    | LoadLightCardsFailure\n    | SelectLightCard\n    | ClearLightCardSelection\n    | AddLightCardFailure\n    | UpdatedSubscription\n    | HandleUnexpectedError\n    | EmptyLightCards\n    | AddThirdActions\n    | UpdateALightCard\n    | UpdateAnAction\n    | UpdateAnActionFailure\n    | ThirdActionAlreadyLoaded\n    | ThirdActionAlreadyUpdated\n    | DelayedLightCardUpdate\n    | LightCardAlreadyUpdated\n    | RemoveLightCard;\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/FailToUpdateTimeReference.html":{"url":"classes/FailToUpdateTimeReference.html","title":"class - FailToUpdateTimeReference","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  FailToUpdateTimeReference\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/time.actions.ts\n        \n\n            \n                Description\n            \n            \n                Notify that something went wrong while changing the virtual time.\nNothing has been done and an error is reported\n\n            \n\n\n            \n                Implements\n            \n            \n                            Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/store/actions/time.actions.ts:53\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/time.actions.ts:54\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : TimeActionTypes.FailToUpdateTimeReference\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/time.actions.ts:53\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Action} from \"@ngrx/store\";\nimport {TimeReference} from \"@ofModel/time.model\";\nimport {Message} from \"@ofModel/message.model\";\nimport * as moment from \"moment-timezone\";\n\nexport enum TimeActionTypes{\n    Tick='[Time] tick',\n    UpdateTimeReference='[Time] try to update the time reference',\n    FailToUpdateTimeReference='[Time] fail to update the time reference'\n}\n\n/**\n * Heart beat of the application change current date\n * Contains the elapsed virtual time since the previous heart beat so any components following the clock\n * can shift their timespan accordingly\n */\nexport class Tick implements  Action{\n    readonly type=TimeActionTypes.Tick;\n    constructor(public payload:TickPayload){}\n}\n\n/**\n * Clock tick (heart beat) payload\n */\nexport class TickPayload {\n    constructor(public currentTime: moment.Moment,\n                public elapsedSinceLast: number) {\n    }\n}\n\n/**\n * Action dispatch to update the current virtual time of the application\n */\n\nexport class UpdateTimeReference implements Action{\n    readonly type=TimeActionTypes.UpdateTimeReference;\n    constructor(public payload:{timeReference:TimeReference}){};\n}\n\n\n/**\n * Notify that something went wrong while changing the virtual time.\n * Nothing has been done and an error is reported\n */\nexport class FailToUpdateTimeReference implements Action{\n    readonly type = TimeActionTypes.FailToUpdateTimeReference;\n    constructor(public payload:{ error: Message;}){}\n}\n\n\nexport type TimeActions =\n      Tick\n    | UpdateTimeReference\n    | FailToUpdateTimeReference;\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/FeedComponent.html":{"url":"components/FeedComponent.html","title":"component - FeedComponent","body":"\n                   \n\n\n\n\n\n  Components\n  FeedComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/feed/feed.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n                    AfterViewInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                of-cards\n            \n\n            \n                styleUrls\n                ./feed.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./feed.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                hideTimeLine\n                            \n                            \n                                lightCards$\n                            \n                            \n                                selection$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngAfterViewInit\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store, notifyService: NotifyService)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/feed/feed.component.ts:29\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                        Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        notifyService\n                                                  \n                                                        \n                                                                        NotifyService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngAfterViewInit\n                        \n                        \n                    \n                \n            \n            \n                \nngAfterViewInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/feed/feed.component.ts:55\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/feed/feed.component.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            hideTimeLine\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/feed/feed.component.ts:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            lightCards$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/feed/feed.component.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            selection$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/feed/feed.component.ts:28\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import {AfterViewInit, Component, OnInit} from '@angular/core';\nimport {select, Store} from '@ngrx/store';\nimport {AppState} from '@ofStore/index';\nimport {Observable, of} from 'rxjs';\nimport {LightCard} from '@ofModel/light-card.model';\nimport * as feedSelectors from '@ofSelectors/feed.selectors';\nimport {catchError} from 'rxjs/operators';\nimport {buildConfigSelector} from '@ofSelectors/config.selectors';\nimport * as moment from 'moment';\nimport { NotifyService } from '@ofServices/notify.service';\n\n@Component({\n    selector: 'of-cards',\n    templateUrl: './feed.component.html',\n    styleUrls: ['./feed.component.scss']\n})\nexport class FeedComponent implements OnInit, AfterViewInit {\n\n    lightCards$: Observable;\n    selection$: Observable;\n    hideTimeLine: boolean;\n\n    constructor(private store: Store, private notifyService: NotifyService) {\n    }\n\n    ngOnInit() {\n        this.lightCards$ = this.store.pipe(\n            select(feedSelectors.selectFilteredFeed),\n            catchError(err => of([]))\n        );\n        this.selection$ = this.store.select(feedSelectors.selectLightCardSelection);\n        this.store.select(buildConfigSelector('feed.timeline.hide')).subscribe(\n            v => this.hideTimeLine = v\n        );\n        moment.updateLocale('en', { week: {\n            dow: 6, // First day of week is Saturday\n            doy: 12 // First week of year must contain 1 January (7 + 6 - 1)\n        }});\n        this.store.select(buildConfigSelector('feed.notify')).subscribe(\n            (notif) => {\n                if (notif) {\n                    this.notifyService.requestPermission();\n                }\n            }\n        );\n    }\n    ngAfterViewInit() {\n    }\n}\n\n    \n\n    \n        \n\n\n\n\n\n\n\n    \n        \n            \n        \n    \n    \n        \n            \n        \n        \n            \n        \n    \n\n\n\n    \n\n    \n                \n                    ./feed.component.scss\n                \n                /* Copyright (c) 2020, RTE (http://www.rte-france.com)\n *\n * This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n */\n\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                                                    '\n    var COMPONENTS = [{'name': 'ActionComponent', 'selector': 'of-action'},{'name': 'AppComponent', 'selector': 'of-root'},{'name': 'ArchiveFiltersComponent', 'selector': 'of-archive-filters'},{'name': 'ArchiveListComponent', 'selector': 'of-archive-list'},{'name': 'ArchiveListPageComponent', 'selector': 'of-archive-list-page'},{'name': 'ArchivesComponent', 'selector': 'of-archives'},{'name': 'BaseSettingComponent', 'selector': 'of-base-setting'},{'name': 'CardComponent', 'selector': 'of-card'},{'name': 'CardDetailsComponent', 'selector': 'of-card-details'},{'name': 'CardListComponent', 'selector': 'of-card-list'},{'name': 'ConfirmModalComponent', 'selector': 'confirm-modal-component'},{'name': 'CustomLogoComponent', 'selector': 'of-custom-logo'},{'name': 'CustomTimelineChartComponent', 'selector': 'of-custom-timeline-chart'},{'name': 'DatetimeFilterComponent', 'selector': 'of-datetime-filter'},{'name': 'DetailComponent', 'selector': 'of-detail'},{'name': 'DetailsComponent', 'selector': 'of-details'},{'name': 'EmailSettingComponent', 'selector': 'of-email-setting'},{'name': 'FeedComponent', 'selector': 'of-cards'},{'name': 'FiltersComponent', 'selector': 'of-filters'},{'name': 'IconComponent', 'selector': 'of-icon'},{'name': 'IframeDisplayComponent', 'selector': 'of-iframedisplay'},{'name': 'InfoComponent', 'selector': 'of-info'},{'name': 'InitChartComponent', 'selector': 'of-init-chart'},{'name': 'ListSettingComponent', 'selector': 'of-list-setting'},{'name': 'LoginComponent', 'selector': 'of-login'},{'name': 'MenuLinkComponent', 'selector': 'of-menu-link'},{'name': 'MultiFilterComponent', 'selector': 'of-multi-filter'},{'name': 'MultiSettingsComponent', 'selector': 'of-multi-settings'},{'name': 'NavbarComponent', 'selector': 'of-navbar'},{'name': 'NoSelectionComponent', 'selector': 'of-no-selection'},{'name': 'ResizableComponent', 'selector': 'of-resizable'},{'name': 'SettingsComponent', 'selector': 'of-settings'},{'name': 'TagsFilterComponent', 'selector': 'of-tags-filter'},{'name': 'TextSettingComponent', 'selector': 'of-text-setting'},{'name': 'TimeFilterComponent', 'selector': 'of-time-filter'},{'name': 'TimeLineComponent', 'selector': 'of-time-line'},{'name': 'TypeAheadSettingsComponent', 'selector': 'of-type-ahead-settings'},{'name': 'TypeFilterComponent', 'selector': 'of-type-filter'}];\n    var DIRECTIVES = [{'name': 'CalcHeightDirective', 'selector': '[calcHeightDirective]'},{'name': 'DraggableDirective', 'selector': '[appDraggable]'},{'name': 'MouseWheelDirective', 'selector': '[appMouseWheel]'}];\n    var ACTUAL_COMPONENT = {'name': 'FeedComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/FeedFiltersEffects.html":{"url":"injectables/FeedFiltersEffects.html","title":"injectable - FeedFiltersEffects","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  FeedFiltersEffects\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/effects/feed-filters.effects.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                elapsedSoFar\n                            \n                            \n                                    Private\n                                followClockTick\n                            \n                            \n                                initTagFilterOnLoadedSettings\n                            \n                            \n                                loadFeedFilterOnAuthenticationSuccess\n                            \n                            \n                                    Private\n                                refreshThreshold\n                            \n                            \n                                updateFilterOnClockTick\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store, actions$: Actions, service: FilterService)\n                    \n                \n                        \n                            \n                                Defined in src/app/store/effects/feed-filters.effects.ts:32\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                        Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        actions$\n                                                  \n                                                        \n                                                                        Actions\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        service\n                                                  \n                                                        \n                                                                        FilterService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            elapsedSoFar\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 0\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/effects/feed-filters.effects.ts:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            followClockTick\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/effects/feed-filters.effects.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            initTagFilterOnLoadedSettings\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Observable\n\n                        \n                    \n                    \n                        \n                            Default value : this.actions$\n        .pipe(\n            // tap(v=>console.log(\"initTagFilterOnLoadedSettings: action start\", v)),\n            ofType(SettingsActionTypes.LoadSettingsSuccess),\n            withLatestFrom(this.store.select(buildConfigSelector('settings.defaultTags'))),\n            // tap(v=>console.log(\"initTagFilterOnLoadedSettings: latest config\", v)),\n            map(([action,configTags])=>{\n                if(action.payload.settings.defaultTags && action.payload.settings.defaultTags.length>0)\n                    return action.payload.settings.defaultTags;\n                else if (configTags && configTags.length > 0)\n                    return configTags;\n                return null;\n            }),\n            // tap(v=>console.log(\"initTagFilterOnLoadedSettings: mapped tag array\", v)),\n            filter(v=>!!v),\n            // tap(v=>console.log(\"initTagFilterOnLoadedSettings: filtered empty array\", v)),\n            map(v=>new ApplyFilter({name:FilterType.TAG_FILTER,active:true,status:{tags:v}})),\n            // tap(v=>console.log(\"initTagFilterOnLoadedSettings: mapped action\", v))\n        )\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Effect()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/effects/feed-filters.effects.ts:55\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loadFeedFilterOnAuthenticationSuccess\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Observable\n\n                        \n                    \n                    \n                        \n                            Default value : this.actions$\n        .pipe(\n            // loads card operations only after authentication of a default user ok.\n            // tap(v=>console.log(\"loadFeedFilterOnAuthenticationSuccess: action start\", v)),\n            ofType(UserActionsTypes.UserApplicationRegistered),\n            map((action) => {\n                return new InitFilters({filters:this.service.defaultFilters()});\n            }))\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Effect()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/effects/feed-filters.effects.ts:45\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            refreshThreshold\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 60000\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/effects/feed-filters.effects.ts:32\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updateFilterOnClockTick\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                    \n                        \n                            Default value : this.actions$\n        .pipe(\n            filter(x => this.followClockTick),\n            ofType(TimeActionTypes.Tick),\n            map( tick => {\n                const newElapsedSoFar = this.elapsedSoFar+tick.payload.elapsedSinceLast;\n                if(newElapsedSoFar>=this.refreshThreshold){\n                    this.elapsedSoFar = newElapsedSoFar - this.refreshThreshold;\n                    return this.refreshThreshold;\n                } else {\n                    this.elapsedSoFar = newElapsedSoFar;\n                    return newElapsedSoFar;\n                }\n            }),\n            filter(time => (time >= this.refreshThreshold)), //Only emit accumulation values that are above the threshold\n            withLatestFrom(this.store.select(buildFilterSelector(FilterType.TIME_FILTER))),\n            filter(([elapsedSinceLast, currentTimeFilter]) => (currentTimeFilter.active && (!!currentTimeFilter.status.start || !!currentTimeFilter.status.end))),\n            //updates should only be sent if the filter is active and if there is something to shift (start or end)\n            map(([elapsedSinceLast, currentTimeFilter]) => {\n                const start = currentTimeFilter.status.start == null ? null : currentTimeFilter.status.start + elapsedSinceLast;\n                const end = currentTimeFilter.status.end == null ? null : currentTimeFilter.status.end + elapsedSinceLast;\n                return new ApplyFilter({\n                    name: FilterType.TIME_FILTER,\n                    active: true,\n                    status: {\n                        start: start,\n                        end: end,\n                    }\n                })\n            }))\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Effect()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/effects/feed-filters.effects.ts:76\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import {Injectable} from '@angular/core';\nimport {Actions, Effect, ofType} from '@ngrx/effects';\nimport {Observable} from 'rxjs';\nimport {filter, map, withLatestFrom} from 'rxjs/operators';\nimport {Action, Store} from \"@ngrx/store\";\nimport {AppState} from \"@ofStore/index\";\nimport {FilterService, FilterType} from \"@ofServices/filter.service\";\nimport {ApplyFilter, InitFilters} from \"@ofActions/feed.actions\";\nimport {LoadSettingsSuccess, SettingsActionTypes} from \"@ofActions/settings.actions\";\nimport {buildConfigSelector} from \"@ofSelectors/config.selectors\";\nimport {Tick, TimeActionTypes} from \"@ofActions/time.actions\";\nimport {buildFilterSelector} from \"@ofSelectors/feed.selectors\";\nimport { UserActionsTypes } from '@ofStore/actions/user.actions';\n\n@Injectable()\nexport class FeedFiltersEffects {\n\n    private followClockTick = false;\n\n    //Constants used by the updateFilterOnClockTick effect if the feed.timeFilter.followClockTick property is set to true\n    private elapsedSoFar = 0;\n    /*The time filter should only be refreshed once the accumulated shift in time is 1m\n    (since the time filter component only displays the time up to minutes)*/\n    private refreshThreshold = 60000;\n\n\n    /* istanbul ignore next */\n    constructor(private store: Store,\n                private actions$: Actions,\n                private service: FilterService) {\n\n        this.store.select(buildConfigSelector('feed.timeFilter.followClockTick')).subscribe(x => this.followClockTick = x);\n\n    }\n\n    @Effect()\n    loadFeedFilterOnAuthenticationSuccess: Observable = this.actions$\n        .pipe(\n            // loads card operations only after authentication of a default user ok.\n            // tap(v=>console.log(\"loadFeedFilterOnAuthenticationSuccess: action start\", v)),\n            ofType(UserActionsTypes.UserApplicationRegistered),\n            map((action) => {\n                return new InitFilters({filters:this.service.defaultFilters()});\n            }));\n\n    @Effect()\n    initTagFilterOnLoadedSettings: Observable = this.actions$\n        .pipe(\n            // tap(v=>console.log(\"initTagFilterOnLoadedSettings: action start\", v)),\n            ofType(SettingsActionTypes.LoadSettingsSuccess),\n            withLatestFrom(this.store.select(buildConfigSelector('settings.defaultTags'))),\n            // tap(v=>console.log(\"initTagFilterOnLoadedSettings: latest config\", v)),\n            map(([action,configTags])=>{\n                if(action.payload.settings.defaultTags && action.payload.settings.defaultTags.length>0)\n                    return action.payload.settings.defaultTags;\n                else if (configTags && configTags.length > 0)\n                    return configTags;\n                return null;\n            }),\n            // tap(v=>console.log(\"initTagFilterOnLoadedSettings: mapped tag array\", v)),\n            filter(v=>!!v),\n            // tap(v=>console.log(\"initTagFilterOnLoadedSettings: filtered empty array\", v)),\n            map(v=>new ApplyFilter({name:FilterType.TAG_FILTER,active:true,status:{tags:v}})),\n            // tap(v=>console.log(\"initTagFilterOnLoadedSettings: mapped action\", v))\n        );\n\n    @Effect()\n    updateFilterOnClockTick: Observable = this.actions$\n        .pipe(\n            filter(x => this.followClockTick),\n            ofType(TimeActionTypes.Tick),\n            map( tick => {\n                const newElapsedSoFar = this.elapsedSoFar+tick.payload.elapsedSinceLast;\n                if(newElapsedSoFar>=this.refreshThreshold){\n                    this.elapsedSoFar = newElapsedSoFar - this.refreshThreshold;\n                    return this.refreshThreshold;\n                } else {\n                    this.elapsedSoFar = newElapsedSoFar;\n                    return newElapsedSoFar;\n                }\n            }),\n            filter(time => (time >= this.refreshThreshold)), //Only emit accumulation values that are above the threshold\n            withLatestFrom(this.store.select(buildFilterSelector(FilterType.TIME_FILTER))),\n            filter(([elapsedSinceLast, currentTimeFilter]) => (currentTimeFilter.active && (!!currentTimeFilter.status.start || !!currentTimeFilter.status.end))),\n            //updates should only be sent if the filter is active and if there is something to shift (start or end)\n            map(([elapsedSinceLast, currentTimeFilter]) => {\n                const start = currentTimeFilter.status.start == null ? null : currentTimeFilter.status.start + elapsedSinceLast;\n                const end = currentTimeFilter.status.end == null ? null : currentTimeFilter.status.end + elapsedSinceLast;\n                return new ApplyFilter({\n                    name: FilterType.TIME_FILTER,\n                    active: true,\n                    status: {\n                        start: start,\n                        end: end,\n                    }\n                })\n            }))\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/FeedModule.html":{"url":"modules/FeedModule.html","title":"module - FeedModule","body":"\n                   \n\n\n\n\n    Modules\n    FeedModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_FeedModule\n\n\n\ncluster_FeedModule_declarations\n\n\n\ncluster_FeedModule_imports\n\n\n\ncluster_FeedModule_exports\n\n\n\n\nCardListComponent\n\nCardListComponent\n\n\n\nFeedModule\n\nFeedModule\n\nFeedModule -->\n\nCardListComponent->FeedModule\n\n\n\n\n\nCustomTimelineChartComponent\n\nCustomTimelineChartComponent\n\nFeedModule -->\n\nCustomTimelineChartComponent->FeedModule\n\n\n\n\n\nDraggableDirective\n\nDraggableDirective\n\nFeedModule -->\n\nDraggableDirective->FeedModule\n\n\n\n\n\nFeedComponent\n\nFeedComponent\n\nFeedModule -->\n\nFeedComponent->FeedModule\n\n\n\n\n\nFiltersComponent\n\nFiltersComponent\n\nFeedModule -->\n\nFiltersComponent->FeedModule\n\n\n\n\n\nInitChartComponent\n\nInitChartComponent\n\nFeedModule -->\n\nInitChartComponent->FeedModule\n\n\n\n\n\nMouseWheelDirective\n\nMouseWheelDirective\n\nFeedModule -->\n\nMouseWheelDirective->FeedModule\n\n\n\n\n\nNoSelectionComponent\n\nNoSelectionComponent\n\nFeedModule -->\n\nNoSelectionComponent->FeedModule\n\n\n\n\n\nTagsFilterComponent\n\nTagsFilterComponent\n\nFeedModule -->\n\nTagsFilterComponent->FeedModule\n\n\n\n\n\nTimeFilterComponent\n\nTimeFilterComponent\n\nFeedModule -->\n\nTimeFilterComponent->FeedModule\n\n\n\n\n\nTimeLineComponent\n\nTimeLineComponent\n\nFeedModule -->\n\nTimeLineComponent->FeedModule\n\n\n\n\n\nTypeFilterComponent\n\nTypeFilterComponent\n\nFeedModule -->\n\nTypeFilterComponent->FeedModule\n\n\n\n\n\nXAxisTickFormatPipe\n\nXAxisTickFormatPipe\n\nFeedModule -->\n\nXAxisTickFormatPipe->FeedModule\n\n\n\n\n\nFeedComponent \n\nFeedComponent \n\nFeedComponent  -->\n\nFeedModule->FeedComponent \n\n\n\n\n\nCardsModule\n\nCardsModule\n\nFeedModule -->\n\nCardsModule->FeedModule\n\n\n\n\n\nFeedRoutingModule\n\nFeedRoutingModule\n\nFeedModule -->\n\nFeedRoutingModule->FeedModule\n\n\n\n\n\nUtilitiesModule\n\nUtilitiesModule\n\nFeedModule -->\n\nUtilitiesModule->FeedModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/modules/feed/feed.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            CardListComponent\n                        \n                        \n                            CustomTimelineChartComponent\n                        \n                        \n                            DraggableDirective\n                        \n                        \n                            FeedComponent\n                        \n                        \n                            FiltersComponent\n                        \n                        \n                            InitChartComponent\n                        \n                        \n                            MouseWheelDirective\n                        \n                        \n                            NoSelectionComponent\n                        \n                        \n                            TagsFilterComponent\n                        \n                        \n                            TimeFilterComponent\n                        \n                        \n                            TimeLineComponent\n                        \n                        \n                            TypeFilterComponent\n                        \n                        \n                            XAxisTickFormatPipe\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            CardsModule\n                        \n                        \n                            FeedRoutingModule\n                        \n                        \n                            UtilitiesModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            FeedComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        /* Copyright (c) 2020, RTE (http://www.rte-france.com)\n *\n * This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n */\n\n\nimport {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {CardListComponent} from './components/card-list/card-list.component';\nimport {FeedComponent} from './feed.component';\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\nimport {FeedRoutingModule} from \"./feed-routing.module\";\nimport {NoSelectionComponent} from './components/no-selection/no-selection.component';\nimport {TimeLineComponent} from './components/time-line/time-line.component';\nimport {CardsModule} from \"../cards/cards.module\";\nimport {FiltersComponent} from './components/card-list/filters/filters.component';\nimport {TypeFilterComponent} from './components/card-list/filters/type-filter/type-filter.component';\nimport {NgbModule} from \"@ng-bootstrap/ng-bootstrap\";\nimport {TranslateModule} from \"@ngx-translate/core\";\nimport {TimeFilterComponent} from './components/card-list/filters/time-filter/time-filter.component';\nimport {FontAwesomeModule} from \"@fortawesome/angular-fontawesome\";\nimport {library} from \"@fortawesome/fontawesome-svg-core\";\nimport {faClock} from \"@fortawesome/free-solid-svg-icons\";\nimport {ChartCommonModule, NgxChartsModule} from \"@swimlane/ngx-charts\";\nimport {CustomTimelineChartComponent} from \"./components/time-line/custom-timeline-chart/custom-timeline-chart.component\";\nimport {XAxisTickFormatPipe} from \"./components/time-line/tick-format-pipe/x-axis-tick-format.pipe\";\nimport {MouseWheelDirective} from \"./components/time-line/directives/mouse-wheel.directive\";\nimport {DraggableDirective} from \"./components/time-line/directives/app-draggable\";\nimport {InitChartComponent} from \"./components/time-line/init-chart/init-chart.component\";\nimport {TagsFilterComponent} from './components/card-list/filters/tags-filter/tags-filter.component';\nimport {TypeaheadModule} from \"ngx-type-ahead\";\nimport {TimeService} from \"@ofServices/time.service\";\nimport {UtilitiesModule} from \"../utilities/utilities.module\";\n\nlibrary.add(faClock);\n\n@NgModule({\n    imports: [\n        TypeaheadModule,\n        CommonModule,\n        FormsModule,\n        NgxChartsModule,\n        ChartCommonModule,\n        ReactiveFormsModule,\n        TranslateModule,\n        NgbModule.forRoot(),\n        CardsModule,\n        FeedRoutingModule,\n        FontAwesomeModule,\n        UtilitiesModule\n    ],\n    declarations: [CardListComponent, FeedComponent, NoSelectionComponent, TimeLineComponent, FiltersComponent, TypeFilterComponent, TimeFilterComponent,\n        InitChartComponent,\n        CustomTimelineChartComponent,\n        DraggableDirective,\n        MouseWheelDirective,\n        XAxisTickFormatPipe,\n        TagsFilterComponent],\n    exports: [FeedComponent],\n    providers: [ {provide: TimeService, useClass: TimeService}]\n})\nexport class FeedModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/FeedRoutingModule.html":{"url":"modules/FeedRoutingModule.html","title":"module - FeedRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    FeedRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/modules/feed/feed-routing.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        /* Copyright (c) 2020, RTE (http://www.rte-france.com)\n *\n * This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n */\n\n\nimport {NgModule} from '@angular/core';\nimport {FeedComponent} from \"./feed.component\";\n// import {AuthenticationGuard} from \"@ofServices/guard.service\";\nimport {RouterModule, Routes} from \"@angular/router\";\nimport {DetailComponent} from \"../cards/components/detail/detail.component\";\nimport {CardDetailsComponent} from \"../cards/components/card-details/card-details.component\";\n\nconst routes: Routes = [\n    {\n        path: '',\n        component: FeedComponent,\n        // canActivate: [AuthenticationGuard],\n        children: [\n            // {\n            //     path: '',\n            //     pathMatch: 'full',\n            //     redirectTo: 'cards'\n            // },\n            {\n                path: 'cards',\n                children : [\n                    {\n                        path: '',\n                        component: CardDetailsComponent,\n                    },\n                    {\n                        path: ':cid',\n                        component: CardDetailsComponent,\n                        children: [\n                            {\n                                path: 'details/:did',\n                                component: DetailComponent\n                            }\n                        ]\n                    }]\n            },\n            ]\n    },\n]\n\n@NgModule({\n    imports: [RouterModule.forChild(routes)],\n    exports: [RouterModule]\n})\nexport class FeedRoutingModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Filter.html":{"url":"classes/Filter.html","title":"class - Filter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Filter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/model/feed-filter.model.ts\n        \n\n            \n                Description\n            \n            \n                A Filter gather both the feed filtering behaviour and the filter status for\nfiltering parametrization and component state\nThe function property funktion takes two arguments :\n\ncard: the card for which to evaluate filter\nstatus: the status of the current filter\n\nBeware: we use a copy constructor for replication of filters as a store state so take care of funktion scope\nin Filter implementation (Instanciation and Inheritance). This is the reason why we pass the filter status upon\nfunktion\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                active\n                            \n                            \n                                    Public\n                                status\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                applyFilter\n                            \n                            \n                                chainFilter\n                            \n                            \n                                    Static\n                                chainFilter\n                            \n                            \n                                clone\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(funktion: (undefined,undefined) => void, active: boolean, status: any)\n                    \n                \n                        \n                            \n                                Defined in src/app/model/feed-filter.model.ts:23\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        funktion\n                                                  \n                                                        \n                                                                        function\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        active\n                                                  \n                                                        \n                                                                        boolean\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        status\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            active\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/model/feed-filter.model.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            status\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/model/feed-filter.model.ts:29\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            applyFilter\n                        \n                        \n                    \n                \n            \n            \n                \napplyFilter(card: LightCard)\n                \n            \n\n\n            \n                \n                    Defined in src/app/model/feed-filter.model.ts:44\n                \n            \n\n\n            \n                \n                    apply the filter to the card, returns true if the card passes the filter, false otherwise\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    card\n                                    \n                                                LightCard\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            chainFilter\n                        \n                        \n                    \n                \n            \n            \n                \nchainFilter(card: LightCard, next: Filter[])\n                \n            \n\n\n            \n                \n                    Defined in src/app/model/feed-filter.model.ts:57\n                \n            \n\n\n            \n                \n                    Apply this filter to a card, then a chain of filter recursively.\nThe recursion stops when the card is filtered out\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    card\n                                    \n                                                LightCard\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    next\n                                    \n                                                Filter[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            chainFilter\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    chainFilter(card: LightCard, next: Filter[])\n                \n            \n\n\n            \n                \n                    Defined in src/app/model/feed-filter.model.ts:68\n                \n            \n\n\n            \n                \n                    Sequentially applies a chain of filters to a card\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    card\n                                    \n                                                LightCard\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    next\n                                    \n                                                Filter[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            clone\n                        \n                        \n                    \n                \n            \n            \n                \nclone()\n                \n            \n\n\n            \n                \n                    Defined in src/app/model/feed-filter.model.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Filter\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {LightCard} from \"@ofModel/light-card.model\";\n\n/**\n * A Filter gather both the feed filtering behaviour and the filter status for\n * filtering parametrization and component state\n *\n * The function property funktion takes two arguments :\n *  * card: the card for which to evaluate filter\n *  * status: the status of the current filter\n *\n * Beware: we use a copy constructor for replication of filters as a store state so take care of funktion scope\n * in Filter implementation (Instanciation and Inheritance). This is the reason why we pass the filter status upon\n * funktion\n */\nexport class Filter {\n\n    /* istanbul ignore next */\n    constructor(\n        readonly funktion: (LightCard,any) => boolean,\n        public active:boolean,\n        public status: any\n    ) {\n    }\n\n    clone():Filter {\n        return new Filter(\n            this.funktion,\n            this.active,\n            this.status);\n    }\n\n    /**\n     * apply the filter to the card, returns true if the card passes the filter, false otherwise\n     * @param card\n     */\n    applyFilter(card: LightCard):boolean{\n        if(this.active){\n            return this.funktion(card,this.status);\n        }\n        return true;\n    }\n\n    /**\n     * Apply this filter to a card, then a chain of filter recursively.\n     * The recursion stops when the card is filtered out\n     * @param card\n     * @param next\n     */\n    chainFilter(card: LightCard, next: Filter[]){\n        if(this.applyFilter(card))\n            return !next || next.length == 0 || next[0].chainFilter(card,next.slice(1));\n        return false\n    }\n\n    /**\n     * Sequentially applies a chain of filters to a card\n     * @param card\n     * @param next\n     */\n    static chainFilter(card: LightCard, next: Filter[]){\n        return !next||next.length == 0 || next[0].chainFilter(card,next.slice(1));\n    }\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/FilterService.html":{"url":"injectables/FilterService.html","title":"injectable - FilterService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  FilterService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/filter.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _defaultFilters\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                defaultFilters\n                            \n                            \n                                    Private\n                                initFilters\n                            \n                            \n                                    Private\n                                initTagFilter\n                            \n                            \n                                    Private\n                                initTimeFilter\n                            \n                            \n                                    Private\n                                initTypeFilter\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/services/filter.service.ts:19\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            defaultFilters\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    defaultFilters()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/filter.service.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Map\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            initFilters\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    initFilters()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/filter.service.ts:85\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Map\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            initTagFilter\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    initTagFilter()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/filter.service.ts:54\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            initTimeFilter\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    initTimeFilter()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/filter.service.ts:63\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            initTypeFilter\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    initTypeFilter()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/filter.service.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _defaultFilters\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Map()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/filter.service.ts:19\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import {Injectable} from '@angular/core';\nimport {Filter} from \"@ofModel/feed-filter.model\";\nimport {LightCard, Severity} from \"@ofModel/light-card.model\";\nimport * as _ from \"lodash\";\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class FilterService {\n\n    private _defaultFilters = new Map();\n\n    constructor() {\n        this._defaultFilters = this.initFilters();\n    }\n\n    public defaultFilters(): Map {\n        return this._defaultFilters;\n    }\n\n\n    private initTypeFilter() {\n        const alarm = Severity.ALARM;\n        const action = Severity.ACTION;\n        const compliant = Severity.COMPLIANT;\n        const information = Severity.INFORMATION;\n        return new Filter(\n            (card, status) => {\n                const result =\n                    status.alarm && card.severity == alarm ||\n                    status.action && card.severity == action ||\n                    status.compliant && card.severity == compliant ||\n                    status.information && card.severity == information;\n                return result;\n            },\n            true,\n            {\n                alarm: true,\n                action: true,\n                compliant: true,\n                information: true\n            }\n        );\n    }\n\n    private initTagFilter() {\n        return new Filter(\n            (card, status) => _.intersection(card.tags,status.tags).length > 0,\n            false,\n            {tags:[]}\n        );\n    }\n\n\n    private initTimeFilter() {\n        return new Filter(\n            (card:LightCard, status) => {\n                if (!!status.start && !!status.end) {\n                    if (!card.endDate)\n                        return card.startDate  {\n        const filters = new Map();\n        filters.set(FilterType.TYPE_FILTER, this.initTypeFilter());\n        filters.set(FilterType.TIME_FILTER, this.initTimeFilter());\n        filters.set(FilterType.TAG_FILTER, this.initTagFilter());\n        return filters;\n    }\n}\n\nexport enum FilterType {\n    TYPE_FILTER,\n    RECIPIENT_FILTER,\n    TAG_FILTER,\n    TIME_FILTER,\n    TEST_FILTER\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/FiltersComponent.html":{"url":"components/FiltersComponent.html","title":"component - FiltersComponent","body":"\n                   \n\n\n\n\n\n  Components\n  FiltersComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/feed/components/card-list/filters/filters.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                of-filters\n            \n\n\n\n\n            \n                templateUrl\n                ./filters.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                hideTags$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/feed/components/card-list/filters/filters.component.ts:21\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                        Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/feed/components/card-list/filters/filters.component.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            hideTags$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/feed/components/card-list/filters/filters.component.ts:21\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import {Component, OnInit} from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { Store } from '@ngrx/store';\nimport { AppState } from '@ofStore/index';\nimport { buildConfigSelector } from '@ofStore/selectors/config.selectors';\n\n@Component({\n  selector: 'of-filters',\n  templateUrl: './filters.component.html',\n})\nexport class FiltersComponent implements OnInit {\n\n  hideTags$: Observable;\n\n  constructor(private store: Store) { }\n\n  ngOnInit() {\n    this.hideTags$ = this.store.select(buildConfigSelector('settings.tags.hide'));\n  }\n\n}\n\n    \n\n    \n        \n\n\n\n\n\n\n    \n    \n    \n    \n    \n        \n    \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                '\n    var COMPONENTS = [{'name': 'ActionComponent', 'selector': 'of-action'},{'name': 'AppComponent', 'selector': 'of-root'},{'name': 'ArchiveFiltersComponent', 'selector': 'of-archive-filters'},{'name': 'ArchiveListComponent', 'selector': 'of-archive-list'},{'name': 'ArchiveListPageComponent', 'selector': 'of-archive-list-page'},{'name': 'ArchivesComponent', 'selector': 'of-archives'},{'name': 'BaseSettingComponent', 'selector': 'of-base-setting'},{'name': 'CardComponent', 'selector': 'of-card'},{'name': 'CardDetailsComponent', 'selector': 'of-card-details'},{'name': 'CardListComponent', 'selector': 'of-card-list'},{'name': 'ConfirmModalComponent', 'selector': 'confirm-modal-component'},{'name': 'CustomLogoComponent', 'selector': 'of-custom-logo'},{'name': 'CustomTimelineChartComponent', 'selector': 'of-custom-timeline-chart'},{'name': 'DatetimeFilterComponent', 'selector': 'of-datetime-filter'},{'name': 'DetailComponent', 'selector': 'of-detail'},{'name': 'DetailsComponent', 'selector': 'of-details'},{'name': 'EmailSettingComponent', 'selector': 'of-email-setting'},{'name': 'FeedComponent', 'selector': 'of-cards'},{'name': 'FiltersComponent', 'selector': 'of-filters'},{'name': 'IconComponent', 'selector': 'of-icon'},{'name': 'IframeDisplayComponent', 'selector': 'of-iframedisplay'},{'name': 'InfoComponent', 'selector': 'of-info'},{'name': 'InitChartComponent', 'selector': 'of-init-chart'},{'name': 'ListSettingComponent', 'selector': 'of-list-setting'},{'name': 'LoginComponent', 'selector': 'of-login'},{'name': 'MenuLinkComponent', 'selector': 'of-menu-link'},{'name': 'MultiFilterComponent', 'selector': 'of-multi-filter'},{'name': 'MultiSettingsComponent', 'selector': 'of-multi-settings'},{'name': 'NavbarComponent', 'selector': 'of-navbar'},{'name': 'NoSelectionComponent', 'selector': 'of-no-selection'},{'name': 'ResizableComponent', 'selector': 'of-resizable'},{'name': 'SettingsComponent', 'selector': 'of-settings'},{'name': 'TagsFilterComponent', 'selector': 'of-tags-filter'},{'name': 'TextSettingComponent', 'selector': 'of-text-setting'},{'name': 'TimeFilterComponent', 'selector': 'of-time-filter'},{'name': 'TimeLineComponent', 'selector': 'of-time-line'},{'name': 'TypeAheadSettingsComponent', 'selector': 'of-type-ahead-settings'},{'name': 'TypeFilterComponent', 'selector': 'of-type-filter'}];\n    var DIRECTIVES = [{'name': 'CalcHeightDirective', 'selector': '[calcHeightDirective]'},{'name': 'DraggableDirective', 'selector': '[appDraggable]'},{'name': 'MouseWheelDirective', 'selector': '[appMouseWheel]'}];\n    var ACTUAL_COMPONENT = {'name': 'FiltersComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GuidService.html":{"url":"classes/GuidService.html","title":"class - GuidService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GuidService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/guid.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                guid\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getCurrentGuid\n                            \n                            \n                                getCurrentGuidString\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/services/guid.service.ts:17\n                            \n                        \n\n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Readonly\n                            guid\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Guid\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/guid.service.ts:17\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getCurrentGuid\n                        \n                        \n                    \n                \n            \n            \n                \ngetCurrentGuid()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/guid.service.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Guid\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getCurrentGuidString\n                        \n                        \n                    \n                \n            \n            \n                \ngetCurrentGuidString()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/guid.service.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {Inject} from \"@angular/core\";\nimport {Guid} from \"guid-typescript\";\n\n@Inject({\n    providedIn: 'root'\n})\nexport class GuidService {\n\n    private readonly guid: Guid;\n\n    constructor() {\n        this.guid = Guid.create();\n    }\n\n    getCurrentGuid(): Guid {\n        return this.guid;\n    }\n\n    getCurrentGuidString(): string {\n        return this.getCurrentGuid().toString();\n    }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/HandleUnexpectedError.html":{"url":"classes/HandleUnexpectedError.html","title":"class - HandleUnexpectedError","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  HandleUnexpectedError\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/archive.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/store/actions/archive.actions.ts:36\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/archive.actions.ts:39\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : ArchiveActionTypes.HandleUnexpectedError\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/archive.actions.ts:36\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Action} from '@ngrx/store';\nimport {LightCard} from '@ofModel/light-card.model';\nimport {Page} from '@ofModel/page.model';\n\nexport enum ArchiveActionTypes {\n    UpdateArchiveFilter = '[Archive] Update Filter',\n    SendArchiveQuery = '[Archive] Send Query',\n    ArchiveQuerySuccess = '[Archive] Query was successful',\n    UpdateArchivePage = '[Archive] Update query result page',\n    HandleUnexpectedError = '[Archive] Handle unexpected error related to archived card issue',\n    SelectArchivedLightCard = '[Archive] Select one archived light card'\n\n}\n\nexport class UpdateArchiveFilter implements Action {\n    readonly type = ArchiveActionTypes.UpdateArchiveFilter;\n    /* istanbul ignore next */\n    constructor(public payload: {filters: Map}) {}\n}\n\nexport class SendArchiveQuery implements Action {\n    readonly type = ArchiveActionTypes.SendArchiveQuery;\n    constructor(public payload: {params: Map}) {}\n}\n\nexport class HandleUnexpectedError implements Action {\n    /* istanbul ignore next */\n    readonly type = ArchiveActionTypes.HandleUnexpectedError;\n\n    /* istanbul ignore next */\n    constructor(public payload: {error: Error}) {}\n}\n\nexport class ArchiveQuerySuccess implements Action {\n    readonly type = ArchiveActionTypes.ArchiveQuerySuccess;\n    /* istanbul ignore next */\n    constructor(public payload: {resultPage: Page}) {}\n\n}\n\nexport class UpdateArchivePage implements Action {\n    readonly type = ArchiveActionTypes.UpdateArchivePage;\n    /* istanbul ignore next */\n    constructor(public payload: {page: number}) {}\n}\nexport class SelectArchivedLightCard implements Action {\n    /* istanbul ignore next */\n    readonly type = ArchiveActionTypes.SelectArchivedLightCard;\n    /* istanbul ignore next */\n    constructor(public payload: {selectedCardId: string}) {}\n}\n\nexport type ArchiveActions = UpdateArchiveFilter\n    | SendArchiveQuery\n    | HandleUnexpectedError\n    | ArchiveQuerySuccess\n    | UpdateArchivePage\n    | SelectArchivedLightCard;\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/HandleUnexpectedError-1.html":{"url":"classes/HandleUnexpectedError-1.html","title":"class - HandleUnexpectedError-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  HandleUnexpectedError\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/card.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/store/actions/card.actions.ts:69\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/card.actions.ts:72\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : CardActionTypes.HandleUnexpectedError\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/card.actions.ts:69\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Action} from '@ngrx/store';\nimport {Card} from '@ofModel/card.model';\n\nexport enum CardActionTypes {\n    ClearCard = '[Card] Clear',\n    LoadCard = '[Card] Load Card',\n    LoadCardSuccess = '[Card] Load Card Success',\n    LoadCardFailure = '[Card] Load Card Fail',\n    LoadArchivedCard = '[Card] Load Archived Card',\n    LoadArchivedCardSuccess = '[Card] Load Archived Card Success',\n    LoadArchivedCardFailure = '[Card] Load Archived Card Fail',\n    HandleUnexpectedError = '[Card] Handle unexpected error related to card issue',\n    AddActionsAppear = '[Card] Add Actions Appear'\n}\n// needed by NGRX entities\nexport class ClearCard implements Action {\n    readonly type = CardActionTypes.ClearCard;\n}\nexport class LoadCard implements Action {\n    readonly type = CardActionTypes.LoadCard;\n\n    /* istanbul ignore next */\n    constructor(public payload: { id: string }) {}\n}\nexport class LoadCardFailure implements Action {\n    readonly type = CardActionTypes.LoadCardFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {}\n}\n\nexport class LoadCardSuccess implements Action {\n    readonly type = CardActionTypes.LoadCardSuccess;\n\n    /* istanbul ignore next */\n    constructor(public payload: { card: Card }) {}\n}\n\nexport class LoadArchivedCard implements Action {\n    readonly type = CardActionTypes.LoadArchivedCard;\n\n    /* istanbul ignore next */\n    constructor(public payload: { id: string }) {}\n}\nexport class LoadArchivedCardFailure implements Action {\n    readonly type = CardActionTypes.LoadArchivedCardFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {}\n}\n\nexport class LoadArchivedCardSuccess implements Action {\n    readonly type = CardActionTypes.LoadArchivedCardSuccess;\n\n    /* istanbul ignore next */\n    constructor(public payload: { card: Card }) {}\n}\n\nexport class HandleUnexpectedError implements Action {\n    /* istanbul ignore next */\n    readonly type = CardActionTypes.HandleUnexpectedError;\n\n    /* istanbul ignore next */\n    constructor(public payload: {error: Error}) {}\n}\n\nexport class AddActionsAppear implements Action {\n    readonly type = CardActionTypes.AddActionsAppear;\n    /* istanbul ignore next */\n    constructor(public payload: string) {}\n}\n\nexport type CardActions = ClearCard\n    | LoadCard\n    | LoadCardSuccess\n    | LoadCardFailure\n    | LoadArchivedCard\n    | LoadArchivedCardSuccess\n    | LoadArchivedCardFailure\n    | HandleUnexpectedError\n    | AddActionsAppear;\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/HandleUnexpectedError-2.html":{"url":"classes/HandleUnexpectedError-2.html","title":"class - HandleUnexpectedError-2","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  HandleUnexpectedError\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/config.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/store/actions/config.actions.ts:39\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/config.actions.ts:41\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : ConfigActionTypes.HandleUnexpectedError\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/config.actions.ts:39\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Action} from '@ngrx/store';\n\nexport enum ConfigActionTypes {\n    LoadConfig = '[Config] Load Config',\n    LoadConfigSuccess = '[Config] Load Config Success',\n    LoadConfigFailure = '[Config] Load Config Fail',\n    HandleUnexpectedError = '[Config] Handle unexpected error related to configuration issue'\n}\n// needed by NGRX entities\nexport class LoadConfig implements Action {\n    readonly type = ConfigActionTypes.LoadConfig;\n}\nexport class LoadConfigFailure implements Action {\n    readonly type = ConfigActionTypes.LoadConfigFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport class LoadConfigSuccess implements Action {\n    readonly type = ConfigActionTypes.LoadConfigSuccess;\n\n    /* istanbul ignore next */\n    constructor(public payload: { config: any }) {\n    }\n}\n\nexport class HandleUnexpectedError implements Action {\n    /* istanbul ignore next */\n    readonly type = ConfigActionTypes.HandleUnexpectedError;\n    /* istanbul ignore next */\n    constructor(public payload: {error: Error}) {\n\n    }\n}\n\nexport type ConfigActions =\n    LoadConfig\n    | LoadConfigSuccess\n    | LoadConfigFailure\n    | HandleUnexpectedError;\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/HandleUnexpectedError-3.html":{"url":"classes/HandleUnexpectedError-3.html","title":"class - HandleUnexpectedError-3","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  HandleUnexpectedError\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/light-card.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/store/actions/light-card.actions.ts:107\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/light-card.actions.ts:110\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : LightCardActionTypes.HandleUnexpectedError\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/light-card.actions.ts:107\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Action} from '@ngrx/store';\nimport {LightCard} from '@ofModel/light-card.model';\nimport {Action as ThirdAction, ActionStatus} from '@ofModel/thirds.model';\nimport {Update} from \"@ngrx/entity\";\n\nexport enum LightCardActionTypes {\n    LoadLightCards = '[LCard] Load',\n    EmptyLightCards = '[LCard] Empty',\n    LoadLightCardsSuccess = '[LCard] Load Success',\n    LoadLightCardsExtendedData = '[LCard] Load Extended Data',\n    LoadLightCardsFailure = '[LCard] Load Fail',\n    SelectLightCard = '[LCard] Select One',\n    ClearLightCardSelection = '[LCard] Clear Light Card Selection',\n    AddLightCardFailure = '[LCard] Add Light Card Fail',\n    UpdatedSubscription = '[LCard] UpdateSubscription',\n    HandleUnexpectedError = '[LCard] Handle unexpected error related to authentication issue',\n    RemoveLightCard = '[LCard] Remove a card',\n    AddThirdActions = '[LCard] Adds some Third Actions to existing card',\n    UpdateALightCard = '[LCard] Update a Light Card',\n    UpdateAnAction = '[LCard] Update one Action of a LightCard',\n    UpdateAnActionFailure = '[LCard] No actions where available to update for the current selected card in the state',\n    ThirdActionAlreadyLoaded = '[LCard] Light Card contains actions',\n    ThirdActionAlreadyUpdated = '[LCard] Third Action unchanged',\n    DelayedLightCardUpdate = '[LCard] update Light Card actions later',\n    LightCardAlreadyUpdated = '[LCard] Light Card already Updated'\n}\n\n// needed by NGRX entities\nexport class LoadLightCards implements Action {\n    /* istanbul ignore next */\n    readonly type = LightCardActionTypes.LoadLightCards;\n}\n\nexport class EmptyLightCards implements Action {\n    /* istanbul ignore next */\n    readonly type = LightCardActionTypes.EmptyLightCards;\n}\n\nexport class LoadLightCardsSuccess implements Action {\n    readonly type = LightCardActionTypes.LoadLightCardsSuccess;\n\n    /* istanbul ignore next */\n    constructor(public payload: { lightCards: LightCard[] }) {\n    }\n}\n\nexport class LoadLightCardsExtendedData implements Action {\n    readonly type = LightCardActionTypes.LoadLightCardsExtendedData;\n\n    /* istanbul ignore next */\n    constructor() {\n    }\n}\n\nexport class LoadLightCardsFailure implements Action {\n    readonly type = LightCardActionTypes.LoadLightCardsFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport class SelectLightCard implements Action {\n    /* istanbul ignore next */\n    readonly type = LightCardActionTypes.SelectLightCard;\n\n    /* istanbul ignore next */\n    constructor(public payload: { selectedCardId: string }) {\n    }\n\n}\n\nexport class ClearLightCardSelection implements Action {\n\n    readonly type = LightCardActionTypes.ClearLightCardSelection;\n\n    constructor() {\n    }\n}\n\nexport class AddLightCardFailure implements Action {\n    readonly type = LightCardActionTypes.AddLightCardFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport class UpdatedSubscription implements Action {\n    readonly type = LightCardActionTypes.UpdatedSubscription;\n\n    /* istanbul ignore next */\n    constructor() {\n    }\n}\n\nexport class HandleUnexpectedError implements Action {\n    /* istanbul ignore next */\n    readonly type = LightCardActionTypes.HandleUnexpectedError;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport class RemoveLightCard implements Action {\n    readonly type = LightCardActionTypes.RemoveLightCard;\n\n    constructor(public  payload: { cards: string[] }) {\n    }\n}\n\nexport class AddThirdActions implements Action {\n    readonly type = LightCardActionTypes.AddThirdActions;\n\n    constructor(public payload: { card: LightCard, actions: Map }) {\n    }\n}\n\nexport class UpdateALightCard implements Action {\n    readonly type = LightCardActionTypes.UpdateALightCard;\n\n    constructor(public payload: { card: LightCard }) {\n    }\n}\n\nexport class UpdateAnAction implements Action {\n    readonly type = LightCardActionTypes.UpdateAnAction;\n\n    constructor(public payload: { cardId: string, actionKey: string, status: ActionStatus }) {\n    }\n}\n\nexport class UpdateAnActionFailure implements Action {\n    readonly type = LightCardActionTypes.UpdateAnActionFailure;\n\n    constructor() {\n    }\n}\n\nexport class ThirdActionAlreadyLoaded implements Action {\n    readonly type = LightCardActionTypes.ThirdActionAlreadyLoaded;\n\n    constructor() {\n    }\n}\n\nexport class ThirdActionAlreadyUpdated implements Action {\n    readonly type = LightCardActionTypes.ThirdActionAlreadyUpdated;\n\n    constructor() {\n    }\n}\n\nexport class DelayedLightCardUpdate implements Action {\n    readonly type = LightCardActionTypes.DelayedLightCardUpdate;\n\n    constructor(public payload: { card: LightCard }) {\n    }\n}\n\nexport class LightCardAlreadyUpdated implements Action {\n    readonly type = LightCardActionTypes.LightCardAlreadyUpdated;\n\n    constructor() {\n    }\n}\n\nexport type LightCardActions =\n    LoadLightCards\n    | LoadLightCardsSuccess\n    | LoadLightCardsFailure\n    | SelectLightCard\n    | ClearLightCardSelection\n    | AddLightCardFailure\n    | UpdatedSubscription\n    | HandleUnexpectedError\n    | EmptyLightCards\n    | AddThirdActions\n    | UpdateALightCard\n    | UpdateAnAction\n    | UpdateAnActionFailure\n    | ThirdActionAlreadyLoaded\n    | ThirdActionAlreadyUpdated\n    | DelayedLightCardUpdate\n    | LightCardAlreadyUpdated\n    | RemoveLightCard;\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/HandleUnexpectedError-4.html":{"url":"classes/HandleUnexpectedError-4.html","title":"class - HandleUnexpectedError-4","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  HandleUnexpectedError\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/menu.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/store/actions/menu.actions.ts:46\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/menu.actions.ts:49\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : MenuActionTypes.HandleUnexpectedError\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/menu.actions.ts:46\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Action} from '@ngrx/store';\nimport {ThirdMenu} from \"@ofModel/thirds.model\";\n\nexport enum MenuActionTypes {\n    LoadMenu = '[Menu] Load Menu',\n    LoadMenuSuccess = '[Menu] Load Menu Success',\n    LoadMenuFailure = '[Menu] Load Menu Fail',\n    HandleUnexpectedError = '[Menu] Handle unexpected error',\n    SelectMenuLink = '[Menu] Select Menu Link',\n    SelectMenuLinkSuccess = '[Menu] Select Menu Link Success',\n    SelectMenuLinkFailure = '[Menu] Select Menu Link Failure',\n}\n// needed by NGRX entities\nexport class LoadMenu implements Action {\n    readonly type = MenuActionTypes.LoadMenu;\n\n    /* istanbul ignore next */\n    constructor() {\n    }\n}\nexport class LoadMenuFailure implements Action {\n    readonly type = MenuActionTypes.LoadMenuFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport class LoadMenuSuccess implements Action {\n    readonly type = MenuActionTypes.LoadMenuSuccess;\n\n    /* istanbul ignore next */\n    constructor(public payload: { menu: ThirdMenu[] }) {\n    }\n}\n\nexport class HandleUnexpectedError implements Action {\n    readonly type = MenuActionTypes.HandleUnexpectedError;\n\n    /* istanbul ignore next */\n    constructor(public payload: {error: Error}) {\n\n    }\n}\n\n/**\n * Action triggered by navigation to /thirparty/*** (for example by clicking on a third-party menu link)\n * Payload contains route parameters identifying the clicked menu entry (menu id, menu version and menu entry id)\n * Emitted by {CustomRouterEffects} in the following {Observable} @member: navigateToMenuURL\n */\nexport class SelectMenuLink implements Action {\n    readonly type = MenuActionTypes.SelectMenuLink;\n\n    /* istanbul ignore next */\n    constructor(public payload: {menu_id: string, menu_version: string, menu_entry_id: string}) {}\n}\n\n/**\n * Action triggered if menu link url was correctly computed from the given parameters (menu_id, menu_version and menu_entry_id)\n * Payload contains the computed url\n */\nexport class SelectMenuLinkSuccess implements Action {\n    readonly type = MenuActionTypes.SelectMenuLinkSuccess;\n\n    /* istanbul ignore next */\n    constructor(public payload: {iframe_url: string}) {}\n}\n\n/**\n * Action triggered if no menu entry was found for the given parameters (menu_id, menu_version and menu_entry_id)\n * Payload contains the error\n */\nexport class SelectMenuLinkFailure implements Action {\n    readonly type = MenuActionTypes.SelectMenuLinkFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport type MenuActions =\n    LoadMenu\n    | LoadMenuSuccess\n    | LoadMenuFailure\n    | HandleUnexpectedError\n    | SelectMenuLink\n    | SelectMenuLinkSuccess\n    | SelectMenuLinkFailure;\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/HandleUnexpectedError-5.html":{"url":"classes/HandleUnexpectedError-5.html","title":"class - HandleUnexpectedError-5","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  HandleUnexpectedError\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/settings.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/store/actions/settings.actions.ts:65\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/settings.actions.ts:67\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : SettingsActionTypes.HandleUnexpectedError\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/settings.actions.ts:65\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Action} from '@ngrx/store';\n\nexport enum SettingsActionTypes {\n    LoadSettings = '[Settings] Load Settings',\n    LoadSettingsSuccess = '[Settings] Load Settings Success',\n    LoadSettingsFailure = '[Settings] Load Settings Fail',\n\n    PatchSettings = '[Settings] Patch Settings',\n    PatchSettingsSuccess = '[Settings] Patch Settings Success',\n    PatchSettingsFailure = '[Settings] Patch Settings Fail',\n\n    HandleUnexpectedError = '[Settings] Handle unexpected error related to user settings issue'\n}\n// needed by NGRX entities\n\nexport class LoadSettings implements Action {\n    readonly type = SettingsActionTypes.LoadSettings;\n}\nexport class LoadSettingsFailure implements Action {\n    readonly type = SettingsActionTypes.LoadSettingsFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport class LoadSettingsSuccess implements Action {\n    readonly type = SettingsActionTypes.LoadSettingsSuccess;\n\n    /* istanbul ignore next */\n    constructor(public payload: { settings: any }) {\n    }\n}\n\nexport class PatchSettings implements Action {\n    readonly type = SettingsActionTypes.PatchSettings;\n    constructor(public payload: {settings:any}){}\n}\nexport class PatchSettingsFailure implements Action {\n    readonly type = SettingsActionTypes.PatchSettingsFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport class PatchSettingsSuccess implements Action {\n    readonly type = SettingsActionTypes.PatchSettingsSuccess;\n\n    /* istanbul ignore next */\n    constructor(public payload: { settings: any }) {\n    }\n}\n\nexport class HandleUnexpectedError implements Action {\n    /* istanbul ignore next */\n    readonly type = SettingsActionTypes.HandleUnexpectedError;\n    /* istanbul ignore next */\n    constructor(public payload: {error: Error}) {\n\n    }\n}\n\nexport type SettingsActions =\n    LoadSettings\n    | LoadSettingsSuccess\n    | LoadSettingsFailure\n    | PatchSettings\n    | PatchSettingsSuccess\n    | PatchSettingsFailure\n    | HandleUnexpectedError;\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/HandleUnexpectedError-6.html":{"url":"classes/HandleUnexpectedError-6.html","title":"class - HandleUnexpectedError-6","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  HandleUnexpectedError\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/user.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/store/actions/user.actions.ts:55\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/user.actions.ts:56\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : UserActionsTypes.HandleUnexpectedError\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/user.actions.ts:55\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {User} from '@ofModel/user.model';\nimport {Action} from '@ngrx/store';\n\nexport enum UserActionsTypes {\n\n    UserApplicationRegistered =         '[User] User application registered',\n    UserApplicationNotRegistered =      '[User] User application not registered',\n    CreateUserApplication =             '[User] Create the User in the application',\n    CreateUserApplicationOnSuccess =    '[User] Create the User in the application on success',\n    CreateUserApplicationOnFailure =    '[User] Create the User in the application on failure',\n    HandleUnexpectedError =             '[User] Handle unexpected error related to user creation issue'\n}\n\nexport class UserApplicationRegistered implements Action {\n    /* istanbul ignore next */ \n    readonly type = UserActionsTypes.UserApplicationRegistered;\n    constructor(public payload : {user : User}) {}\n}\n\nexport class UserApplicationNotRegistered implements Action {\n    /* istanbul ignore next */ \n    readonly type = UserActionsTypes.UserApplicationNotRegistered;\n    constructor(public payload : {error : Error, user : User}) {}\n}\n\nexport class CreateUserApplication implements Action {\n    /* istanbul ignore next */ \n    readonly type = UserActionsTypes.CreateUserApplication;\n    constructor(public payload : {user : User}) {}\n}\n\n\nexport class CreateUserApplicationOnSuccess implements Action {\n    /* istanbul ignore next */ \n    readonly type = UserActionsTypes.CreateUserApplicationOnSuccess;\n    constructor(public payload : {user : User}) {}\n}\n\nexport class CreateUserApplicationOnFailure implements Action {\n    /* istanbul ignore next */ \n    readonly type = UserActionsTypes.CreateUserApplicationOnFailure;\n    constructor(public payload : {error : Error}) {}\n}\n\n\nexport class HandleUnexpectedError implements Action {\n    /* istanbul ignore next */ \n    readonly type = UserActionsTypes.HandleUnexpectedError;\n    constructor(public payload : {error : Error}) {}\n}\n\nexport type UserActions = UserApplicationRegistered\n    | UserApplicationNotRegistered\n    | CreateUserApplication\n    | CreateUserApplicationOnSuccess\n    | CreateUserApplicationOnFailure\n    | HandleUnexpectedError;\n\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/HandlebarsService.html":{"url":"injectables/HandlebarsService.html","title":"injectable - HandlebarsService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  HandlebarsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/modules/cards/services/handlebars.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _locale\n                            \n                            \n                                    Private\n                                templateCache\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                changeLocale\n                            \n                            \n                                    Public\n                                executeTemplate\n                            \n                            \n                                    Private\n                                queryTemplate\n                            \n                            \n                                    Private\n                                registerArrayAtIndex\n                            \n                            \n                                    Private\n                                registerArrayAtIndexLength\n                            \n                            \n                                    Private\n                                registerBool\n                            \n                            \n                                    Private\n                                registerCardAction\n                            \n                            \n                                    Private\n                                registerDateFormat\n                            \n                            \n                                    Private\n                                registerI18n\n                            \n                            \n                                    Private\n                                registerJson\n                            \n                            \n                                    Private\n                                registerMath\n                            \n                            \n                                    Private\n                                registerNow\n                            \n                            \n                                    Private\n                                registerNumberFormat\n                            \n                            \n                                    Private\n                                registerPreserveSpace\n                            \n                            \n                                    Private\n                                registerSlice\n                            \n                            \n                                    Private\n                                registerSort\n                            \n                            \n                                    Private\n                                registerSplit\n                            \n                            \n                                    Private\n                                registerSvg\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(time: TimeService, translate: TranslateService, thirds: ThirdsService, store: Store)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/cards/services/handlebars.service.ts:29\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        time\n                                                  \n                                                        \n                                                                        TimeService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        translate\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        thirds\n                                                  \n                                                        \n                                                                        ThirdsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                        Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            changeLocale\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    changeLocale(locale: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/cards/services/handlebars.service.ts:53\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    locale\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            executeTemplate\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    executeTemplate(templateName: string, context: DetailContext)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/cards/services/handlebars.service.ts:63\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    templateName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    context\n                                    \n                                                DetailContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            queryTemplate\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    queryTemplate(publisher: string, version: string, name: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/cards/services/handlebars.service.ts:68\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    publisher\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    version\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            registerArrayAtIndex\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    registerArrayAtIndex()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/cards/services/handlebars.service.ts:145\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            registerArrayAtIndexLength\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    registerArrayAtIndexLength()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/cards/services/handlebars.service.ts:116\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            registerBool\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    registerBool()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/cards/services/handlebars.service.ts:87\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            registerCardAction\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    registerCardAction()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/cards/services/handlebars.service.ts:254\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            registerDateFormat\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    registerDateFormat()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/cards/services/handlebars.service.ts:268\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            registerI18n\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    registerI18n()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/cards/services/handlebars.service.ts:210\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            registerJson\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    registerJson()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/cards/services/handlebars.service.ts:81\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            registerMath\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    registerMath()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/cards/services/handlebars.service.ts:131\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            registerNow\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    registerNow()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/cards/services/handlebars.service.ts:283\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            registerNumberFormat\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    registerNumberFormat()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/cards/services/handlebars.service.ts:276\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            registerPreserveSpace\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    registerPreserveSpace()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/cards/services/handlebars.service.ts:290\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            registerSlice\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    registerSlice()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/cards/services/handlebars.service.ts:151\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            registerSort\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    registerSort()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/cards/services/handlebars.service.ts:168\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            registerSplit\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    registerSplit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/cards/services/handlebars.service.ts:122\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            registerSvg\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    registerSvg()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/cards/services/handlebars.service.ts:236\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _locale\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/cards/services/handlebars.service.ts:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            templateCache\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Map\n\n                        \n                    \n                    \n                        \n                            Default value : new Map()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/cards/services/handlebars.service.ts:28\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import {Injectable} from \"@angular/core\";\nimport {Card} from \"@ofModel/card.model\";\nimport * as Handlebars from \"handlebars/dist/handlebars.js\"\nimport {TimeService} from \"@ofServices/time.service\";\nimport {TranslateService} from \"@ngx-translate/core\";\nimport * as moment from 'moment';\nimport {Map} from \"@ofModel/map\";\nimport {Observable, of} from \"rxjs\";\nimport {map, tap} from \"rxjs/operators\";\nimport {ThirdsService} from \"../../../services/thirds.service\";\nimport {Guid} from \"guid-typescript\";\nimport {DetailContext} from \"@ofModel/detail-context.model\";\nimport {Store} from \"@ngrx/store\";\nimport {AppState} from \"@ofStore/index\";\nimport {buildSettingsOrConfigSelector} from \"@ofSelectors/settings.x.config.selectors\";\n\n@Injectable()\nexport class HandlebarsService {\n\n    private templateCache:Map = new Map();\n    private _locale: string;\n\n    constructor(private time: TimeService,\n                private translate: TranslateService,\n                private thirds: ThirdsService,\n                private store: Store){\n        this.registerPreserveSpace();\n        this.registerNumberFormat();\n        this.registerDateFormat();\n        this.registerCardAction();\n        this.registerSvg();\n        this.registerI18n();\n        this.registerSort();\n        this.registerSlice();\n        this.registerArrayAtIndex();\n        this.registerMath();\n        this.registerSplit();\n        this.registerArrayAtIndexLength();\n        this.registerBool();\n        this.registerNow();\n        this.registerJson();\n        this.store.select(buildSettingsOrConfigSelector('locale')).subscribe(locale => this.changeLocale(locale))\n    }\n\n    public changeLocale(locale:string){ //TODO Refactor as common with i18n service ? Common fallback handling ?\n        if(locale) {\n            this._locale = locale;\n        }else{\n            this._locale = 'en';\n        }\n        moment.locale(this._locale);\n        this.translate.use(this._locale);\n    }\n\n    public executeTemplate(templateName: string, context: DetailContext):Observable {\n        return this.queryTemplate(context.card.publisher,context.card.publisherVersion,templateName).pipe(\n            map(t=>t(context)));\n    }\n\n    private queryTemplate(publisher:string, version:string, name: string):Observable {\n        const locale = this._locale;\n        const key = `${publisher}.${version}.${name}.${locale}`;\n        let template = this.templateCache[key];\n        if(template){\n           return of(template);\n        }\n        return this.thirds.fetchHbsTemplate(publisher,version,name,locale).pipe(\n            map(s=>Handlebars.compile(s)),\n            tap(t=>this.templateCache[key]=t)\n        );\n    }\n\n    private registerJson() {\n        Handlebars.registerHelper('json', function (obj) {\n            return new Handlebars.SafeString(JSON.stringify(obj))\n        });\n    }\n\n    private registerBool() {\n        Handlebars.registerHelper('bool', function (v1, operator, v2, options) {\n            switch (operator) {\n                case '==':\n                    return (v1 == v2);\n                case '===':\n                    return (v1 === v2);\n                case '!=':\n                    return (v1 != v2);\n                case '!==':\n                    return (v1 !== v2);\n                case '':\n                    return (v1 > v2);\n                case '>=':\n                    return (v1 >= v2);\n                case '&&':\n                    return (v1 && v2);\n                case '||':\n                    return (v1 || v2);\n                default:\n                    return true;\n            }\n        });\n    }\n\n    private registerArrayAtIndexLength() {\n        Handlebars.registerHelper('arrayAtIndexLength', function (value, index, options) {\n            return value[index].length;\n        });\n    }\n\n    private registerSplit() {\n        Handlebars.registerHelper('split', function (...args: any[]) {\n            if(args.length === 3)\n                return args[0].split(args[1]);\n            if(args.length === 4)\n                return args[0].split(args[1])[args[2]];\n        });\n    }\n\n    private registerMath(){\n        Handlebars.registerHelper(\"math\", function(lvalue, operator, rvalue, options) {\n            let result;\n            switch(operator) {\n                case \"+\": result = lvalue + rvalue; break;\n                case \"-\": result = lvalue - rvalue; break;\n                case \"*\": result = lvalue * rvalue; break;\n                case \"/\": result = lvalue / rvalue; break;\n                case \"%\": result = lvalue % rvalue; break;\n            }\n            return result;\n        });\n    }\n\n    private registerArrayAtIndex() {\n        Handlebars.registerHelper('arrayAtIndex', function (value, index, options) {\n            return value[index];\n        });\n    }\n\n    private registerSlice() {\n        Handlebars.registerHelper('slice', function () {\n            let args = [];\n            for (let index = 0; index =3) {\n                to = args[2];\n                return value.slice(from, to);\n            }\n            return value.slice(from);\n        });\n    }\n\n    private registerSort() {\n        Handlebars.registerHelper('sort', function () {\n            let args = [];\n            for (let index = 0; index  {\n            let args = [],\n                options = fctArgs[fctArgs.length - 1];\n            for (let i = 0; i \n                    document.getElementById('${svgUid}').addEventListener('load', function(){\n                            svgPanZoom(document.getElementById('${svgUid}'));});\n                    `\n        });\n    }\n\n    private registerCardAction() {\n        Handlebars.registerHelper('action', function () {\n            let args = [];\n            for (let i = 0; i `\n        });\n    }\n\n    private registerDateFormat() {\n        Handlebars.registerHelper('dateFormat', (value, options) => {\n            const m = moment(new Date(value));\n            m.locale(this._locale);\n            return m.format(options.hash.format);\n        });\n    }\n\n    private registerNumberFormat() {\n        Handlebars.registerHelper('numberFormat', (value, options) => {\n            const formatter = new Intl.NumberFormat(this._locale, options.hash);\n            return formatter.format(value);\n        });\n    }\n\n    private registerNow() {\n        const that = this;\n        Handlebars.registerHelper('now', function (options) {\n            return that.time.currentTime().valueOf();\n        })\n    }\n\n    private registerPreserveSpace() {\n        Handlebars.registerHelper(\"preserveSpace\", function (value, options) {\n            return value.replace(/ /g, '\\u00A0')\n        });\n    }\n}\n\nfunction sortOnKey(key){\n    return function(a,b){\n        if(typeof  a[key] == 'string' && typeof b[key] == 'string'){\n            if(a[key]b[key])\n                return 1\n            return 0;\n        }else if(typeof  a[key] == 'number' && typeof b[key] == 'number'){\n            return a[key]-b[key];\n        }\n        return 0;\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/I18n.html":{"url":"classes/I18n.html","title":"class - I18n","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  I18n\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/model/i18n.model.ts\n        \n\n\n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(key: string, parameters?: Map)\n                    \n                \n                        \n                            \n                                Defined in src/app/model/i18n.model.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        key\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        parameters\n                                                  \n                                                        \n                                                                        Map\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Map} from \"@ofModel/map\";\n\nexport class I18n {\n    /* istanbul ignore next */\n    constructor(\n        readonly key: string,\n        readonly parameters?: Map) {\n    }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/I18nService.html":{"url":"injectables/I18nService.html","title":"injectable - I18nService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  I18nService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/i18n.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _locale\n                            \n                            \n                                    Private\n                                _timeZone\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                changeLocale\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    locale\n                                \n                                \n                                    timeZone\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(translate: TranslateService, store: Store)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/i18n.service.ts:21\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        translate\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                        Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            changeLocale\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    changeLocale(locale: string, timeZone: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/i18n.service.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    locale\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    timeZone\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _locale\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/i18n.service.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _timeZone\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/i18n.service.ts:21\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        locale\n                    \n                \n\n                \n                    \n                        getlocale()\n                    \n                \n                            \n                                \n                                    Defined in src/app/services/i18n.service.ts:47\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        timeZone\n                    \n                \n\n                \n                    \n                        gettimeZone()\n                    \n                \n                            \n                                \n                                    Defined in src/app/services/i18n.service.ts:51\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import {Injectable} from '@angular/core';\nimport * as moment from 'moment-timezone';\nimport {TranslateService} from \"@ngx-translate/core\";\nimport {Store} from \"@ngrx/store\";\nimport {AppState} from \"@ofStore/index\";\nimport {buildSettingsOrConfigSelector} from \"@ofSelectors/settings.x.config.selectors\";\nimport {combineLatest} from \"rxjs\";\n\n@Injectable()\nexport class I18nService {\n\n    private _locale:string;\n    private _timeZone:string;\n\n    constructor(private translate: TranslateService,private store: Store) {\n        combineLatest(\n        this.store.select(buildSettingsOrConfigSelector('locale')),\n        this.store.select(buildSettingsOrConfigSelector('timeZone' )))\n\n            .subscribe(([locale,timeZone]) =>this.changeLocale(locale, timeZone));\n    }\n\n    public changeLocale(locale:string, timeZone: string){\n        if(locale) {\n            this._locale = locale;\n        }else{\n            this._locale = 'en';\n        }\n        moment.locale(this._locale);\n        this.translate.use(this._locale);\n        if(timeZone) {\n            this._timeZone = timeZone;\n        }else{\n            timeZone = Intl.DateTimeFormat().resolvedOptions().timeZone;\n        }\n        moment.tz.setDefault(timeZone);\n    }\n\n    public get locale(){\n        return this._locale;\n    }\n\n    public get timeZone(){\n        return this._timeZone;\n    }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/IconComponent.html":{"url":"components/IconComponent.html","title":"component - IconComponent","body":"\n                   \n\n\n\n\n\n  Components\n  IconComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/navbar/icon/icon.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                of-icon\n            \n\n            \n                styleUrls\n                icon.component.scss\n            \n\n\n\n            \n                templateUrl\n                icon.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                iconPath\n                            \n                            \n                                size\n                            \n                            \n                                sprites\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                    Private\n                                setSize\n                            \n                            \n                                    Private\n                                setSprites\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                bright\n                            \n                            \n                                icon\n                            \n                            \n                                sizeIcon\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(platformLocation: PlatformLocation)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/navbar/icon/icon.component.ts:25\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        platformLocation\n                                                  \n                                                        \n                                                                        PlatformLocation\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        bright\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/navbar/icon/icon.component.ts:21\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        icon\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/navbar/icon/icon.component.ts:19\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        sizeIcon\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/navbar/icon/icon.component.ts:20\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/navbar/icon/icon.component.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            setSize\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setSize()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/navbar/icon/icon.component.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            setSprites\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setSprites()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/navbar/icon/icon.component.ts:53\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            iconPath\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/navbar/icon/icon.component.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            size\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/navbar/icon/icon.component.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            sprites\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/navbar/icon/icon.component.ts:24\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import {Component, Input, OnInit} from '@angular/core';\nimport {PlatformLocation} from \"@angular/common\";\n\n@Component({\n  selector: 'of-icon',\n  templateUrl:'icon.component.html',\n  styleUrls: ['icon.component.scss']\n})\nexport class IconComponent implements OnInit {\n\n  @Input() icon:string;\n  @Input() sizeIcon:string;\n  @Input() bright:string;\n\n  size:string;\n  sprites:string;\n  iconPath:string;\n\n  constructor(platformLocation: PlatformLocation) {\n      let baseHref = platformLocation.getBaseHrefFromDOM();\n      this.iconPath = (baseHref?baseHref:'/')+'assets/images/icons/'\n  }\n\n  ngOnInit() {\n    this.setSize();\n    this.setSprites();\n  }\n\n  private setSize() {\n    switch (this.sizeIcon) {\n      case 'big':\n        this.size = '64px';\n        break;\n      case 'medium':\n        this.size = '32px';\n        break;\n      case 'small':\n        this.size = '16px';\n        break;\n      default:\n        this.size = '32px'  \n    }   \n  }\n\n  private setSprites() {\n    if (this.bright == 'dark' || this.bright == 'light') {\n      this.sprites='sprites-mono.svg'\n    } else {\n      this.bright = undefined; // wrong value set by the user\n      this.sprites='sprites.svg'\n    }\n  }\n  \n}\n\n    \n\n    \n        \n\n\n\n\n\n\n\n  \n  \n\n\n    \n\n    \n                \n                    icon.component.scss\n                \n                /* Copyright (c) 2020, RTE (http://www.rte-france.com)\n *\n * This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n */\n\n@import \"~assets/styles/_variables.scss\";\n\n.dark{\n  fill: $dark;\n}\n.light{\n  fill: $light;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    '\n    var COMPONENTS = [{'name': 'ActionComponent', 'selector': 'of-action'},{'name': 'AppComponent', 'selector': 'of-root'},{'name': 'ArchiveFiltersComponent', 'selector': 'of-archive-filters'},{'name': 'ArchiveListComponent', 'selector': 'of-archive-list'},{'name': 'ArchiveListPageComponent', 'selector': 'of-archive-list-page'},{'name': 'ArchivesComponent', 'selector': 'of-archives'},{'name': 'BaseSettingComponent', 'selector': 'of-base-setting'},{'name': 'CardComponent', 'selector': 'of-card'},{'name': 'CardDetailsComponent', 'selector': 'of-card-details'},{'name': 'CardListComponent', 'selector': 'of-card-list'},{'name': 'ConfirmModalComponent', 'selector': 'confirm-modal-component'},{'name': 'CustomLogoComponent', 'selector': 'of-custom-logo'},{'name': 'CustomTimelineChartComponent', 'selector': 'of-custom-timeline-chart'},{'name': 'DatetimeFilterComponent', 'selector': 'of-datetime-filter'},{'name': 'DetailComponent', 'selector': 'of-detail'},{'name': 'DetailsComponent', 'selector': 'of-details'},{'name': 'EmailSettingComponent', 'selector': 'of-email-setting'},{'name': 'FeedComponent', 'selector': 'of-cards'},{'name': 'FiltersComponent', 'selector': 'of-filters'},{'name': 'IconComponent', 'selector': 'of-icon'},{'name': 'IframeDisplayComponent', 'selector': 'of-iframedisplay'},{'name': 'InfoComponent', 'selector': 'of-info'},{'name': 'InitChartComponent', 'selector': 'of-init-chart'},{'name': 'ListSettingComponent', 'selector': 'of-list-setting'},{'name': 'LoginComponent', 'selector': 'of-login'},{'name': 'MenuLinkComponent', 'selector': 'of-menu-link'},{'name': 'MultiFilterComponent', 'selector': 'of-multi-filter'},{'name': 'MultiSettingsComponent', 'selector': 'of-multi-settings'},{'name': 'NavbarComponent', 'selector': 'of-navbar'},{'name': 'NoSelectionComponent', 'selector': 'of-no-selection'},{'name': 'ResizableComponent', 'selector': 'of-resizable'},{'name': 'SettingsComponent', 'selector': 'of-settings'},{'name': 'TagsFilterComponent', 'selector': 'of-tags-filter'},{'name': 'TextSettingComponent', 'selector': 'of-text-setting'},{'name': 'TimeFilterComponent', 'selector': 'of-time-filter'},{'name': 'TimeLineComponent', 'selector': 'of-time-line'},{'name': 'TypeAheadSettingsComponent', 'selector': 'of-type-ahead-settings'},{'name': 'TypeFilterComponent', 'selector': 'of-type-filter'}];\n    var DIRECTIVES = [{'name': 'CalcHeightDirective', 'selector': '[calcHeightDirective]'},{'name': 'DraggableDirective', 'selector': '[appDraggable]'},{'name': 'MouseWheelDirective', 'selector': '[appMouseWheel]'}];\n    var ACTUAL_COMPONENT = {'name': 'IconComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/IframeDisplayComponent.html":{"url":"components/IframeDisplayComponent.html","title":"component - IframeDisplayComponent","body":"\n                   \n\n\n\n\n\n  Components\n  IframeDisplayComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/thirdparty/iframedisplay.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                of-iframedisplay\n            \n\n            \n                styleUrls\n                ./iframedisplay.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./iframedisplay.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _selectedIframeURL\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    selectedIframeURL\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store, sanitizer: DomSanitizer)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/thirdparty/iframedisplay.component.ts:22\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                        Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        sanitizer\n                                                  \n                                                        \n                                                                        DomSanitizer\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/thirdparty/iframedisplay.component.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _selectedIframeURL\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         SafeUrl\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/thirdparty/iframedisplay.component.ts:22\n                            \n                        \n\n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        selectedIframeURL\n                    \n                \n\n                \n                    \n                        getselectedIframeURL()\n                    \n                \n                            \n                                \n                                    Defined in src/app/modules/thirdparty/iframedisplay.component.ts:36\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import {Component, OnInit} from '@angular/core';\nimport {selectMenuStateSelectedIframeURL,} from \"@ofSelectors/menu.selectors\";\nimport {Store} from \"@ngrx/store\";\nimport {AppState} from \"@ofStore/index\";\nimport {DomSanitizer, SafeUrl} from \"@angular/platform-browser\";\n\n@Component({\n  selector: 'of-iframedisplay',\n  templateUrl: './iframedisplay.component.html',\n  styleUrls: ['./iframedisplay.component.scss']\n})\nexport class IframeDisplayComponent implements OnInit {\n\n  private _selectedIframeURL: SafeUrl;\n\n  constructor(private store: Store,\n              private sanitizer: DomSanitizer\n  ) { }\n\n  ngOnInit() {\n\n    this.store.select(selectMenuStateSelectedIframeURL).subscribe( iframeURL => {\n      this._selectedIframeURL = this.sanitizer.bypassSecurityTrustResourceUrl(iframeURL);\n    })\n\n  }\n\n  get selectedIframeURL(): SafeUrl {\n    return this._selectedIframeURL;\n  }\n\n}\n\n    \n\n    \n        \n\n\n\n\n\n\n\n    \n    \n\n\n    \n\n    \n                \n                    ./iframedisplay.component.scss\n                \n                /* Copyright (c) 2020, RTE (http://www.rte-france.com)\n *\n * This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n */\n\n\n .fill-available {\n     height: 100%;\n     width: 100%;\n }\n .no-border {\n     border: none;\n }\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '        '\n    var COMPONENTS = [{'name': 'ActionComponent', 'selector': 'of-action'},{'name': 'AppComponent', 'selector': 'of-root'},{'name': 'ArchiveFiltersComponent', 'selector': 'of-archive-filters'},{'name': 'ArchiveListComponent', 'selector': 'of-archive-list'},{'name': 'ArchiveListPageComponent', 'selector': 'of-archive-list-page'},{'name': 'ArchivesComponent', 'selector': 'of-archives'},{'name': 'BaseSettingComponent', 'selector': 'of-base-setting'},{'name': 'CardComponent', 'selector': 'of-card'},{'name': 'CardDetailsComponent', 'selector': 'of-card-details'},{'name': 'CardListComponent', 'selector': 'of-card-list'},{'name': 'ConfirmModalComponent', 'selector': 'confirm-modal-component'},{'name': 'CustomLogoComponent', 'selector': 'of-custom-logo'},{'name': 'CustomTimelineChartComponent', 'selector': 'of-custom-timeline-chart'},{'name': 'DatetimeFilterComponent', 'selector': 'of-datetime-filter'},{'name': 'DetailComponent', 'selector': 'of-detail'},{'name': 'DetailsComponent', 'selector': 'of-details'},{'name': 'EmailSettingComponent', 'selector': 'of-email-setting'},{'name': 'FeedComponent', 'selector': 'of-cards'},{'name': 'FiltersComponent', 'selector': 'of-filters'},{'name': 'IconComponent', 'selector': 'of-icon'},{'name': 'IframeDisplayComponent', 'selector': 'of-iframedisplay'},{'name': 'InfoComponent', 'selector': 'of-info'},{'name': 'InitChartComponent', 'selector': 'of-init-chart'},{'name': 'ListSettingComponent', 'selector': 'of-list-setting'},{'name': 'LoginComponent', 'selector': 'of-login'},{'name': 'MenuLinkComponent', 'selector': 'of-menu-link'},{'name': 'MultiFilterComponent', 'selector': 'of-multi-filter'},{'name': 'MultiSettingsComponent', 'selector': 'of-multi-settings'},{'name': 'NavbarComponent', 'selector': 'of-navbar'},{'name': 'NoSelectionComponent', 'selector': 'of-no-selection'},{'name': 'ResizableComponent', 'selector': 'of-resizable'},{'name': 'SettingsComponent', 'selector': 'of-settings'},{'name': 'TagsFilterComponent', 'selector': 'of-tags-filter'},{'name': 'TextSettingComponent', 'selector': 'of-text-setting'},{'name': 'TimeFilterComponent', 'selector': 'of-time-filter'},{'name': 'TimeLineComponent', 'selector': 'of-time-line'},{'name': 'TypeAheadSettingsComponent', 'selector': 'of-type-ahead-settings'},{'name': 'TypeFilterComponent', 'selector': 'of-type-filter'}];\n    var DIRECTIVES = [{'name': 'CalcHeightDirective', 'selector': '[calcHeightDirective]'},{'name': 'DraggableDirective', 'selector': '[appDraggable]'},{'name': 'MouseWheelDirective', 'selector': '[appMouseWheel]'}];\n    var ACTUAL_COMPONENT = {'name': 'IframeDisplayComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ImplicitAuthenticationHandler.html":{"url":"classes/ImplicitAuthenticationHandler.html","title":"class - ImplicitAuthenticationHandler","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ImplicitAuthenticationHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/authentication/authentication.service.ts\n        \n\n            \n                Description\n            \n            \n                Implementation class of @Interface AuthenticationModeHandler\nuse the Oidc Connect library to manage OAuth 2.0 implicit authentication mode\n\n            \n\n\n            \n                Implements\n            \n            \n                            AuthenticationModeHandler\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                extractToken\n                            \n                            \n                                initializeAuthentication\n                            \n                            \n                                linkAuthenticationStatus\n                            \n                            \n                                move\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(authenticationService: AuthenticationService, store: Store, storage: Storage)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/authentication/authentication.service.ts:508\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authenticationService\n                                                  \n                                                        \n                                                                        AuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                        Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        storage\n                                                  \n                                                        \n                                                                    Storage\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            extractToken\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    extractToken()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/authentication/authentication.service.ts:524\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            initializeAuthentication\n                        \n                        \n                    \n                \n            \n            \n                \ninitializeAuthentication(currentLocationHref: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/authentication/authentication.service.ts:514\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    currentLocationHref\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            linkAuthenticationStatus\n                        \n                        \n                    \n                \n            \n            \n                \nlinkAuthenticationStatus(linker: (isAuthenticated: boolean) => void)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/authentication/authentication.service.ts:520\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    linker\n                                    \n                                                function\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            move\n                        \n                        \n                    \n                \n            \n            \n                \nmove()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/authentication/authentication.service.ts:528\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {Injectable} from '@angular/core';\nimport {HttpClient, HttpHeaders} from '@angular/common/http';\nimport {Observable, of, throwError} from 'rxjs';\nimport {catchError, filter, map, switchMap, tap} from 'rxjs/operators';\nimport {Guid} from 'guid-typescript';\nimport {\n    ImplicitlyAuthenticated,\n    InitAuthStatus,\n    PayloadForSuccessfulAuthentication,\n    UnAuthenticationFromImplicitFlow\n} from '@ofActions/authentication.actions';\nimport {environment} from '@env/environment';\nimport {GuidService} from '@ofServices/guid.service';\nimport {AppState} from '@ofStore/index';\nimport {select, Store} from '@ngrx/store';\nimport {buildConfigSelector} from '@ofSelectors/config.selectors';\nimport * as jwt_decode from 'jwt-decode';\nimport * as _ from 'lodash';\nimport {User} from '@ofModel/user.model';\nimport {EventType as OAuthType, JwksValidationHandler, OAuthEvent, OAuthService} from 'angular-oauth2-oidc';\nimport {implicitAuthenticationConfigFallback} from '@ofServices/authentication/auth-implicit-flow.config';\nimport {selectExpirationTime, selectIsImplicitlyAuthenticated} from '@ofSelectors/authentication.selectors';\n\nexport enum LocalStorageAuthContent {\n    token = 'token',\n    expirationDate = 'expirationDate',\n    identifier = 'identifier',\n    clientId = 'clientId'\n}\n\nexport const ONE_SECOND = 1000;\n\n@Injectable()\nexport class AuthenticationService {\n\n    /** url to check authentication token (jwt) */\n    private checkTokenUrl = `${environment.urls.auth}/check_token`;\n    /** url to ask for an authentication token (jwt) */\n    private askTokenUrl = `${environment.urls.auth}/token`;\n    private userDataUrl = `${environment.urls.users}/users`;\n    private clientId: string;\n    private clientSecret: string;\n    private loginClaim: string;\n    private expireClaim: string;\n    private delegateUrl: string;\n    private givenNameClaim: string;\n    private familyNameClaim: string;\n    private mode: string;\n    private authModeHandler: AuthenticationModeHandler;\n    private implicitConf = implicitAuthenticationConfigFallback;\n\n    /**\n     * @constructor\n     * @param httpClient - Angular build-in\n     * @param guidService - create and store the unique id for this application and user\n     * @param store - NGRX store\n     * @param oauthService - manage implicit flow for OAuth2\n     */\n    constructor(private httpClient: HttpClient\n        , private guidService: GuidService\n        , private store: Store\n        , private oauthService: OAuthService\n    ) {\n        store.select(buildConfigSelector('security'))\n            .subscribe(oauth2Conf => {\n                this.assignConfigurationProperties(oauth2Conf);\n                this.authModeHandler = this.instantiateAuthModeHandler(this.mode);\n            });\n    }\n\n    /**\n     * Choose to handle the OAuth 2.0 using implicit workflow\n     * if mode equals to 'implicit' other manage password grand\n     * or code flow.\n     * @param mode - extracted from config web-service settings\n     */\n    instantiateAuthModeHandler(mode: string): AuthenticationModeHandler {\n        if (mode.toLowerCase() === 'implicit') {\n            this.instantiateImplicitFlowConfiguration();\n            return new ImplicitAuthenticationHandler(this, this.store, sessionStorage);\n        }\n        return new PasswordOrCodeAuthenticationHandler(this, this.store);\n    }\n\n    /**\n     * extract Oauth 2.0 configuration from settings and store it in the service\n     * @param oauth2Conf - settings return by the back-end config service\n     */\n    assignConfigurationProperties(oauth2Conf) {\n        this.clientId = _.get(oauth2Conf, 'oauth2.client-id', null);\n        this.clientSecret = _.get(oauth2Conf, 'oauth2.client-secret', null);\n        this.delegateUrl = _.get(oauth2Conf, 'oauth2.flow.delagate-url', null);\n        this.loginClaim = _.get(oauth2Conf, 'jwt.login-claim', 'sub');\n        this.givenNameClaim = _.get(oauth2Conf, 'jwt.given-name-claim', 'given_name');\n        this.familyNameClaim = _.get(oauth2Conf, 'jwt.family-name-claim', 'family_name');\n        this.expireClaim = _.get(oauth2Conf, 'jwt.expire-claim', 'exp');\n        this.mode = _.get(oauth2Conf, 'oauth2.flow.mode', 'PASSWORD');\n    }\n\n    // TODO push this part into ImplicitAuthenticationHandler class\n    instantiateImplicitFlowConfiguration(): void {\n        this.implicitConf = {...this.implicitConf, issuer: this.delegateUrl, clientId: this.clientId};\n    }\n\n    /**\n     * Call the web service which checks the authentication token. A valid token gives back the authentication information\n     * and an invalid one an message.\n     *\n     * @param token - jwt token\n     * @return an {Observable} which contains the deserializable content of the token\n     * an message is thrown otherwise\n     */\n    checkAuthentication(token: string): Observable {\n        if (!!token) {\n            // const postData = new FormData();\n            const postData = new URLSearchParams();\n            postData.append('token', token);\n            const headers = new HttpHeaders({'Content-type': 'application/x-www-form-urlencoded; charset=utf-8'});\n            return this.httpClient.post(this.checkTokenUrl, postData.toString(), {headers: headers}).pipe(\n                map(check => check),\n                catchError(function (error: any) {\n                    console.error(error);\n                    return throwError(error);\n                })\n            );\n        }\n        return of(null);\n    }\n\n    /**\n     * Given a pair of connection, ask the web service generating jwt authentication token a token if the pair is\n     * a registered one.\n     * @param code OIDC code from code flow\n     */\n    askTokenFromCode(code: string):\n        Observable {\n        if (!this.clientId || !this.clientSecret || !this.loginClaim) {\n            return throwError('The authentication service is no correctly initialized');\n        }\n        const params = new URLSearchParams();\n        params.append('code', code);\n        params.append('grant_type', 'authorization_code');\n// beware clientId for token defines a type of authentication\n        params.append('clientId', this.clientId);\n        params.append('redirect_uri', this.computeRedirectUri());\n\n        const headers = new HttpHeaders({'Content-type': 'application/x-www-form-urlencoded; charset=utf-8'});\n        return this.handleNewToken(this.httpClient.post(this.askTokenUrl, params.toString(), {headers: headers}));\n    }\n\n    /**\n     * Given a pair of connection, ask the web service generating jwt authentication token a token if the pair is\n     * a registered one.\n     * @param login\n     * @param password\n     */\n    askTokenFromPassword(login: string, password: string): Observable {\n        if (!this.clientId || !this.clientSecret) {\n            return throwError('The authentication service is no correctly initialized');\n        }\n        const params = new URLSearchParams();\n        params.append('username', login);\n        params.append('password', password);\n        params.append('grant_type', 'password');\n// beware clientId for access_token is an oauth parameters\n        params.append('clientId', this.clientId);\n        params.append('client_secret', this.clientSecret);\n\n        const headers = new HttpHeaders({'Content-type': 'application/x-www-form-urlencoded; charset=utf-8'});\n        return this.handleNewToken(this.httpClient.post(this.askTokenUrl, params.toString(), {headers: headers}));\n    }\n\n    private handleNewToken(call: Observable): Observable {\n        return call.pipe(\n            map(data => {\n                return {...data, clientId: this.guidService.getCurrentGuid()};\n            }),\n            map((auth: AuthObject) => this.convert(auth)),\n            tap(this.saveAuthenticationInformation),\n            catchError(function (error: any) {\n                console.error(error);\n                return throwError(error);\n            }),\n            switchMap((auth) => this.loadUserData(auth))\n        );\n    }\n\n    public loadUserData(auth: PayloadForSuccessfulAuthentication): Observable {\n        return this.httpClient.get(`${this.userDataUrl}/${auth.identifier}`)\n            .pipe(\n                map(u => {\n                    auth.firstName = u.firstName;\n                    auth.lastName = u.lastName;\n                    return auth;\n                }),\n                catchError(() => of(auth))\n            );\n    }\n\n    /**\n     * extract the jwt authentication token from the localstorage\n     */\n    public extractToken(): string {\n        const currentAuthModeHandler = this.authModeHandler;\n        return currentAuthModeHandler.extractToken();\n    }\n\n    /**\n     * @return true if the expiration date stored in the `localestorage` is still running, false otherwise.\n     */\n    verifyExpirationDate(): boolean {\n        // + to convert the stored number as a string back to number\n        const expirationDate = +localStorage.getItem(LocalStorageAuthContent.expirationDate);\n        const isNotANumber = isNaN(expirationDate);\n        const stillValid = isInTheFuture(expirationDate);\n        return !isNotANumber && stillValid;\n    }\n\n    /**\n     * @return true if the expiration date stored in the `localstorage` is over, false otherwise\n     */\n    isExpirationDateOver(): boolean {\n        return !this.verifyExpirationDate();\n    }\n\n    /**\n     * clear the `localstorage` from all its content.\n     */\n    clearAuthenticationInformation(): void {\n        localStorage.clear();\n        sessionStorage.clear();\n        this.oauthService.logOut();\n    }\n\n    /**\n     * save the authentication informatios such as identifier, jwt token, expiration date and clientId in the\n     * `localstorage`.\n     * @param payload\n     */\n    saveAuthenticationInformation(payload: PayloadForSuccessfulAuthentication) {\n        localStorage.setItem(LocalStorageAuthContent.identifier, payload.identifier);\n        localStorage.setItem(LocalStorageAuthContent.token, payload.token);\n        localStorage.setItem(LocalStorageAuthContent.expirationDate, payload.expirationDate.getTime().toString());\n        localStorage.setItem(LocalStorageAuthContent.clientId, payload.clientId.toString());\n    }\n\n    /**\n     * extract from the `localstorage` the authentication relevant information such as dentifier, jwt token,\n     * expiration date and clientId\n     * @return {PayloadForSuccessfulAuthentication}\n     */\n    extractIdentificationInformation(): PayloadForSuccessfulAuthentication {\n        return new PayloadForSuccessfulAuthentication(\n            localStorage.getItem(LocalStorageAuthContent.identifier),\n            Guid.parse(localStorage.getItem(LocalStorageAuthContent.clientId)),\n            localStorage.getItem(LocalStorageAuthContent.token),\n            // as getItem return a string, `+` is used to convert the string into number\n            new Date(+localStorage.getItem(LocalStorageAuthContent.expirationDate)),\n        );\n    }\n\n\n    /**\n     * helper method to convert an {AuthObject} instance into a {PayloadForSuccessfulAuthentication} instance.\n     * @param payload\n     */\n    public convert(payload: AuthObject):\n        PayloadForSuccessfulAuthentication {\n\n        let expirationDate;\n        const jwt = this.decodeToken(payload.access_token);\n        if (!!payload.expires_in) {\n            expirationDate = Date.now() + ONE_SECOND * payload.expires_in;\n        } else if (!!this.expireClaim) {\n            expirationDate = jwt[this.expireClaim];\n        } else {\n            expirationDate = 0;\n        }\n        return new PayloadForSuccessfulAuthentication(jwt[this.loginClaim],\n            payload.clientId,\n            payload.access_token,\n            new Date(expirationDate),\n            jwt[this.givenNameClaim],\n            jwt[this.familyNameClaim]\n        );\n    }        // await this.oauthService.tryLogin();\n    /**\n     * helper method to put the jwt token into an appropriate string usable as an http header\n     */\n    public getSecurityHeader() {\n        return {'Authorization': `Bearer ${this.extractToken()}`};\n    }\n\n    public moveToCodeFlowLoginPage() {\n        if (!this.clientId || !this.clientSecret) {\n            return throwError('The authentication service is no correctly iniitialized');\n        }\n        if (!this.delegateUrl) {\n            window.location.href = `${environment.urls.auth}/code/redirect_uri=${this.computeRedirectUri()}`;\n        } else {\n            window.location.href = `${this.delegateUrl}&redirect_uri=${this.computeRedirectUri()}`;\n        }\n    }\n\n    public async moveToImplicitFlowLoginPage() {\n        this.oauthService.configure(this.implicitConf);\n        await this.oauthService.loadDiscoveryDocument();\n        sessionStorage.setItem('flow', 'implicit');\n        this.oauthService.initImplicitFlow();\n    }\n\n    public async initAndLoadAuth() {\n        this.oauthService.configure(this.implicitConf);\n        this.oauthService.setupAutomaticSilentRefresh();\n        this.oauthService.tokenValidationHandler = new JwksValidationHandler();\n        await this.oauthService.loadDiscoveryDocument()\n            .then(() => {\n                    this.oauthService.tryLogin();\n                }\n            ).then(() => {\n                if (this.oauthService.hasValidAccessToken()) {\n                    return Promise.resolve();\n                }\n            });\n\n        this.oauthService.events\n            .pipe(filter(e => e.type === 'session_terminated'))\n            .subscribe(() => {\n                console.log('Your session has been terminated!');\n            });\n        this.askForOauthAccessToken();\n        this.dispatchAuthActionFromOAuthEvents();\n    }\n\n    computeRedirectUri() {\n        const uriBase = location.origin;\n        const pathEnd = (location.pathname.length > 1) ? location.pathname : '';\n        return `${uriBase}${pathEnd}`;\n    }\n\n    decodeToken(token: string): any {\n        try {\n            return jwt_decode(token);\n        } catch (Error) {\n            return null;\n        }\n    }\n\n    public dispatchAuthActionFromOAuthEvents() {\n        this.oauthService.events.subscribe(e => {\n            this.dispatchAppStateActionFromOAuth2Events(e);\n        });\n    }\n\n    public askForOauthAccessToken() {\n        return this.oauthService.getAccessToken();\n\n    }\n\n    public providePayloadForSuccessfulAuthenticationFromImplicitFlow(): PayloadForSuccessfulAuthentication {\n        const identityClaims = this.oauthService.getIdentityClaims();\n        const identifier = identityClaims['sub'];\n        const clientId = this.guidService.getCurrentGuid();\n        const token = this.askForOauthAccessToken();\n        const expirationDate = new Date(this.oauthService.getAccessTokenExpiration());\n        return new PayloadForSuccessfulAuthentication(identifier, clientId, token, expirationDate);\n    }\n\n    dispatchAppStateActionFromOAuth2Events(event: OAuthEvent): void {\n        const eventType: OAuthType = event.type;\n        switch (eventType) {\n            case ('token_received'): {\n                this.store.dispatch(new ImplicitlyAuthenticated());\n                break;\n            }\n            case ('token_error'):\n            case('token_refresh_error'):\n            case('logout'): {\n                this.store.dispatch(new UnAuthenticationFromImplicitFlow());\n                break;\n            }\n            default: {\n                // console.log('no action to dispatch for:', eventType);\n            }\n        }\n    }\n\n    public getAuthenticationMode(): string {\n        return this.mode;\n    }\n\n    public initializeAuthentication(): void {\n        this.authModeHandler.initializeAuthentication(window.location.href);\n    }\n\n    public linkAuthenticationStatus(linker: (isAuthenticated: boolean) => void): void {\n        this.authModeHandler.linkAuthenticationStatus(linker);\n    }\n\n    public move(): void {\n        this.authModeHandler.move();\n    }\n\n    public isAuthModeCodeOrImplicitFlow(): boolean {\n        const mode = this.getAuthenticationMode();\n        return mode === 'CODE' || mode === 'IMPLICIT';\n    }\n}\n\n\n/**\n * class used to login using the authentication web service.\n */\nexport class AuthObject {\n\n    constructor(\n        public access_token: string,\n        public expires_in: number,    // token_received,\n        public clientId: Guid,\n        public identifier?: string\n    ) {\n    }\n\n}    // token_received,\n\n\n/**\n * class corresponding to the response of the web service checking jwt token when this token is a valid one.\n */\nexport class CheckTokenResponse {\n    constructor(\n        public sub?: string,\n        public exp?: number,\n        public clientId?: string,\n    ) {\n    }\n}\n\n/**\n * helper @method to confirm or not if the number corresponding to a given time is in the futur regarding the present\n * moment.\n * @param time - a number corresponding to an UTC time to test\n * @return  true if time is in the future regarding the present moment, false otherwise\n */\nexport function isInTheFuture(time: number): boolean {\n    return time > Date.now();\n}\n\n/**\n * interface to handle the mode of authentication\n */\nexport interface AuthenticationModeHandler {\n    initializeAuthentication(currentHrefLocation: string): void;\n\n    linkAuthenticationStatus(linker: (isAuthenticated: boolean) => void): void;\n\n    extractToken(): string;\n\n    move(): void;\n}\n\n/**\n * Implementation class of @Interface AuthenticationModeHandler\n * use the OperatorFabric legacy code to manage the authentication in\n * OAuth 2.0 password grant or code flow mode\n */\nexport class PasswordOrCodeAuthenticationHandler implements AuthenticationModeHandler {\n\n    constructor(private authenticationService: AuthenticationService,\n                private store: Store) {\n    }\n\n    initializeAuthentication(currentLocationHref: string) {\n        const searchCodeString = 'code=';\n        const foundIndex = currentLocationHref.indexOf(searchCodeString);\n        if (foundIndex !== -1) {\n            this.store.dispatch(\n                new InitAuthStatus({code: currentLocationHref.substring(foundIndex + searchCodeString.length)}));\n        }\n    }\n\n    linkAuthenticationStatus(linker: (isAuthenticated: boolean) => void): void {\n        this.store.pipe(select(selectExpirationTime), map(isInTheFuture))\n            .subscribe(linker);\n    }\n\n    public extractToken(): string {\n        return localStorage.getItem(LocalStorageAuthContent.token);\n    }\n\n    move(): void {\n        this.authenticationService.moveToCodeFlowLoginPage();\n    }\n}\n\n/**\n * Implementation class of @Interface AuthenticationModeHandler\n * use the Oidc Connect library to manage OAuth 2.0 implicit authentication mode\n */\nexport class ImplicitAuthenticationHandler implements AuthenticationModeHandler {\n    constructor(private authenticationService: AuthenticationService\n        , private store: Store\n        , private storage: Storage) {\n    }\n\n    initializeAuthentication(currentLocationHref: string) {\n        if (this.authenticationService.getAuthenticationMode().toLowerCase() === 'implicit') {\n            this.authenticationService.initAndLoadAuth();\n        }\n    }\n\n    linkAuthenticationStatus(linker: (isAuthenticated: boolean) => void): void {\n        this.store.pipe(select(selectIsImplicitlyAuthenticated)).subscribe(linker);\n    }\n\n    public extractToken(): string {\n        return this.storage.getItem('access_token');\n    }\n\n    move() {\n        this.authenticationService.moveToImplicitFlowLoginPage();\n    }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ImplicitlyAuthenticated.html":{"url":"classes/ImplicitlyAuthenticated.html","title":"class - ImplicitlyAuthenticated","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ImplicitlyAuthenticated\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/authentication.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : AuthenticationActionTypes.ImplicitallyAuthenticated\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/authentication.actions.ts:164\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Action} from '@ngrx/store';\nimport {Guid} from 'guid-typescript';\nimport {Message} from \"@ofModel/message.model\";\nimport {ExtractI18nBuilderOptions} from \"@angular-devkit/build-angular\";\n\nexport enum AuthenticationActionTypes {\n    InitAuthStatus = '[Authentication] Init Authentication Status',\n    CheckAuthenticationStatus = '[Authentication] Check Authentication Status',\n    AcceptLogIn = '[Authentication] Accept the user log in attempt',\n    RejectLogIn = '[Authentication] Reject the user log in attempt',\n    TryToLogIn = '[Authentication] Try to log the user in',\n    TryToLogOut = '[Authentication] Try to log the user out',\n    AcceptLogOut = '[Authentication] Accept the user log out attempt',\n    AcceptLogOutSuccess = '[Authentication] Success Accept the user log out attempt',\n    CheckImplicitFlowAuthenticationStatus = '[Authentication] Check Authentication Status specifically for the Implicit Flow',\n    UselessAuthAction = '[Authentication] test purpose action'\n    // TODO the following actions should be merge with password and code flow management of authentication\n    , ImplicitallyAuthenticated = '[Authentication] user is authentication using Implicit Flow' //\n    , UnAuthenticationFromImplicitFlow = '[Authentication[ user is log out by implicit Flow internal managment'\n}\n\n/**\n * Authentication success payload\n */\nexport class PayloadForSuccessfulAuthentication {\n    constructor(public identifier: string,\n                public clientId: Guid,\n                public token: string,\n                public expirationDate: Date,\n                public firstName?:string,\n                public lastName?:string) {\n    }\n}\n\n/**\n * It aims to validate the current authentication if exists.\n *\n */\nexport class InitAuthStatus implements Action {\n    readonly type = AuthenticationActionTypes.InitAuthStatus;\n    /* istanbul ignore next */\n    constructor(public payload:{code: string}){}\n}\n\n/**\n * It aims to validate the current authentication if exists.\n *\n */\nexport class CheckAuthenticationStatus implements Action {\n    /* istanbul ignore next */\n    readonly type = AuthenticationActionTypes.CheckAuthenticationStatus;\n}\n\n/**\n * Action used to update the state with the authentication information\n *\n * Emitted by {AuthenticationEffects} in the following {Observable} @members:\n *  * TryToLogIn\n *  * CheckAuthentication via handleLogInAttempt @method\n *\n * Used in the {function} reducer of the {authentication.reducer.ts} file to create a new state\n * containing the authentication information by filtering on the {AuthenticationActionTypes.AcceptLogIn} type.\n *\n */\nexport class AcceptLogIn implements Action {\n    readonly type = AuthenticationActionTypes.AcceptLogIn;\n\n    /* istanbul ignore next */\n    constructor(public payload: PayloadForSuccessfulAuthentication) {}\n}\n\n/**\n * Action used to push login/password pair to the authentication service\n *\n * Emitted by {LoginComponent} in the onSubmit @method which is called\n * when the user click on the `Login` button of the login page form.\n */\nexport class TryToLogIn implements Action {\n    readonly type= AuthenticationActionTypes.TryToLogIn;\n\n    /* istanbul ignore next */\n    constructor(public payload: {username: string, password: string}){}\n}\n\n/**\n * Action used when the user logout\n *\n * Emitted by {NavbarComponent} win the logOut @method which is called\n * when the user click on the `logOut` button of the `navbar`\n */\nexport class TryToLogOut implements Action {\n    /* istanbul ignore next */\n    readonly type = AuthenticationActionTypes.TryToLogOut;\n}\n\n/**\n * Action used to notify the store that the authentication is not possible.\n *\n * Emmited by {AuthenticationEffect} in the following {Observable} @members:\n *  * `TryToLogin`;\n *  *  `CheckAuthentication`\n *  and in the `handleRejectedLogin` @method called by the `ChecAuthentication` {Observable}\n *\n * Used in the {function} reducer of the {authentication.reducer.ts} file to create a new state\n * without any authentication information and containing a message about login rejection\n * by filtering on the {AuthenticationActionTypes.RejectLogIn} type.\n *\n */\nexport class RejectLogIn implements Action {\n    readonly type = AuthenticationActionTypes.RejectLogIn;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Message }) {}\n}\n\n/**\n * Action used to removes authentication information of the system and thus logOut the user.\n *\n * Emitted by {AuthenticationEffect} in the following {Observable} @members:\n *  * `TryToLogOut`\n *  * `RejectLogInAttempt`\n *\n *  Consume by {AuthenticationEffect} in the `AcceptLogOut` {Observable} @member\n *\n */\nexport class AcceptLogOut implements Action {\n    readonly type = AuthenticationActionTypes.AcceptLogOut;\n\n    /* istanbul ignore next */\n    constructor(){}\n}\n\n/**\n * Action used to notify the store to remove authentication information\n *\n * Emitted by {AuthenticationEffect} in `AcceptLogOut` {Observable} @member.\n *\n * Used in the {function} reducer of the {authentication.reducer.ts} file to create a new state\n * without any authentication information by filtering on the {AuthenticationActionTypes.AcceptLogOut} type.\n */\nexport class AcceptLogOutSuccess implements Action {\n    /* istanbul ignore next */\n    readonly type = AuthenticationActionTypes.AcceptLogOutSuccess;\n}\n\nexport class CheckImplicitFlowAuthenticationStatus implements Action {\n    readonly type = AuthenticationActionTypes.CheckImplicitFlowAuthenticationStatus;\n}\n\nexport class UselessAuthAction implements  Action{\n    readonly type = AuthenticationActionTypes.UselessAuthAction;\n\n}\n\nexport class ImplicitlyAuthenticated implements Action {\n    readonly type = AuthenticationActionTypes.ImplicitallyAuthenticated;\n}\n\nexport class UnAuthenticationFromImplicitFlow implements Action {\n    readonly type = AuthenticationActionTypes.UnAuthenticationFromImplicitFlow;\n}\nexport type AuthenticationActions =\n    InitAuthStatus\n    | AcceptLogIn\n    | RejectLogIn\n    | TryToLogIn\n    | TryToLogOut\n    | CheckAuthenticationStatus\n    | AcceptLogOut\n    | AcceptLogOutSuccess\n    | CheckImplicitFlowAuthenticationStatus\n    | UselessAuthAction\n    | ImplicitlyAuthenticated\n    |UnAuthenticationFromImplicitFlow;\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/InfoComponent.html":{"url":"components/InfoComponent.html","title":"component - InfoComponent","body":"\n                   \n\n\n\n\n\n  Components\n  InfoComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/navbar/info/info.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                of-info\n            \n\n            \n                styleUrls\n                ./info.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./info.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _description$\n                            \n                            \n                                    Private\n                                _time$\n                            \n                            \n                                    Private\n                                _userName$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    userName$\n                                \n                                \n                                    description$\n                                \n                                \n                                    time$\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store, timeService: TimeService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/navbar/info/info.component.ts:29\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                        Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        timeService\n                                                  \n                                                        \n                                                                        TimeService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/navbar/info/info.component.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _description$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/navbar/info/info.component.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _time$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/navbar/info/info.component.ts:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _userName$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/navbar/info/info.component.ts:27\n                            \n                        \n\n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        userName$\n                    \n                \n\n                \n                    \n                        getuserName$()\n                    \n                \n                            \n                                \n                                    Defined in src/app/components/navbar/info/info.component.ts:45\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        description$\n                    \n                \n\n                \n                    \n                        getdescription$()\n                    \n                \n                            \n                                \n                                    Defined in src/app/components/navbar/info/info.component.ts:49\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        time$\n                    \n                \n\n                \n                    \n                        gettime$()\n                    \n                \n                            \n                                \n                                    Defined in src/app/components/navbar/info/info.component.ts:53\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import {Component, OnInit} from '@angular/core';\nimport {AppState} from \"@ofStore/index\";\nimport {Store} from \"@ngrx/store\";\nimport {selectUserNameOrIdentifier} from \"@ofSelectors/authentication.selectors\";\nimport {combineLatest, Observable} from \"rxjs\";\nimport {buildSettingsSelector} from \"@ofSelectors/settings.selectors\";\nimport {TimeService} from \"@ofServices/time.service\";\nimport {map} from \"rxjs/operators\";\nimport * as moment from \"moment\";\nimport {buildSettingsOrConfigSelector} from \"@ofSelectors/settings.x.config.selectors\";\nimport {selectCurrentDate} from \"@ofSelectors/time.selectors\";\n\n@Component({\n    selector: 'of-info',\n    templateUrl: './info.component.html',\n    styleUrls: ['./info.component.scss']\n})\nexport class InfoComponent implements OnInit {\n    private _userName$: Observable;\n    private _description$: Observable;\n    private _time$: Observable\n\n    constructor(private store: Store, private timeService: TimeService) {\n    }\n\n    ngOnInit() {\n        this._userName$ = this.store.select(selectUserNameOrIdentifier);\n        this._description$ = this.store.select(buildSettingsSelector('description'));\n        this._time$ = combineLatest(\n        this.store.select(selectCurrentDate),\n            this.store.select(buildSettingsOrConfigSelector('locale')),\n            this.store.select(buildSettingsOrConfigSelector('timeZone'))\n        ).pipe(\n            map(values => this.timeService.formatTime(moment(values[0])))\n        );\n    }\n    get userName$() {\n        return this._userName$;\n    }\n\n    get description$() {\n        return this._description$;\n    }\n\n    get time$() {\n        return this._time$;\n    }\n}\n\n    \n\n    \n        \n\n\n\n\n\n\n\n    {{userName$|async}}\n    {{description$|async}}\n    {{time$|async}}\n\n\n    \n\n    \n                \n                    ./info.component.scss\n                \n                /* Copyright (c) 2020, RTE (http://www.rte-france.com)\n *\n * This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n */\n\n.navbar-info-block {\n  display: inline-block;\n  line-height: 90%;\n\n  > .time {\n    font-size: small;\n  }\n\n  > .user-description {\n    font-size: small;\n  }\n\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    {{userName$|async}}    {{description$|async}}    {{time$|async}}'\n    var COMPONENTS = [{'name': 'ActionComponent', 'selector': 'of-action'},{'name': 'AppComponent', 'selector': 'of-root'},{'name': 'ArchiveFiltersComponent', 'selector': 'of-archive-filters'},{'name': 'ArchiveListComponent', 'selector': 'of-archive-list'},{'name': 'ArchiveListPageComponent', 'selector': 'of-archive-list-page'},{'name': 'ArchivesComponent', 'selector': 'of-archives'},{'name': 'BaseSettingComponent', 'selector': 'of-base-setting'},{'name': 'CardComponent', 'selector': 'of-card'},{'name': 'CardDetailsComponent', 'selector': 'of-card-details'},{'name': 'CardListComponent', 'selector': 'of-card-list'},{'name': 'ConfirmModalComponent', 'selector': 'confirm-modal-component'},{'name': 'CustomLogoComponent', 'selector': 'of-custom-logo'},{'name': 'CustomTimelineChartComponent', 'selector': 'of-custom-timeline-chart'},{'name': 'DatetimeFilterComponent', 'selector': 'of-datetime-filter'},{'name': 'DetailComponent', 'selector': 'of-detail'},{'name': 'DetailsComponent', 'selector': 'of-details'},{'name': 'EmailSettingComponent', 'selector': 'of-email-setting'},{'name': 'FeedComponent', 'selector': 'of-cards'},{'name': 'FiltersComponent', 'selector': 'of-filters'},{'name': 'IconComponent', 'selector': 'of-icon'},{'name': 'IframeDisplayComponent', 'selector': 'of-iframedisplay'},{'name': 'InfoComponent', 'selector': 'of-info'},{'name': 'InitChartComponent', 'selector': 'of-init-chart'},{'name': 'ListSettingComponent', 'selector': 'of-list-setting'},{'name': 'LoginComponent', 'selector': 'of-login'},{'name': 'MenuLinkComponent', 'selector': 'of-menu-link'},{'name': 'MultiFilterComponent', 'selector': 'of-multi-filter'},{'name': 'MultiSettingsComponent', 'selector': 'of-multi-settings'},{'name': 'NavbarComponent', 'selector': 'of-navbar'},{'name': 'NoSelectionComponent', 'selector': 'of-no-selection'},{'name': 'ResizableComponent', 'selector': 'of-resizable'},{'name': 'SettingsComponent', 'selector': 'of-settings'},{'name': 'TagsFilterComponent', 'selector': 'of-tags-filter'},{'name': 'TextSettingComponent', 'selector': 'of-text-setting'},{'name': 'TimeFilterComponent', 'selector': 'of-time-filter'},{'name': 'TimeLineComponent', 'selector': 'of-time-line'},{'name': 'TypeAheadSettingsComponent', 'selector': 'of-type-ahead-settings'},{'name': 'TypeFilterComponent', 'selector': 'of-type-filter'}];\n    var DIRECTIVES = [{'name': 'CalcHeightDirective', 'selector': '[calcHeightDirective]'},{'name': 'DraggableDirective', 'selector': '[appDraggable]'},{'name': 'MouseWheelDirective', 'selector': '[appMouseWheel]'}];\n    var ACTUAL_COMPONENT = {'name': 'InfoComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/InitAuthStatus.html":{"url":"classes/InitAuthStatus.html","title":"class - InitAuthStatus","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  InitAuthStatus\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/authentication.actions.ts\n        \n\n            \n                Description\n            \n            \n                It aims to validate the current authentication if exists.\n\n            \n\n\n            \n                Implements\n            \n            \n                            Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/store/actions/authentication.actions.ts:48\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/authentication.actions.ts:50\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : AuthenticationActionTypes.InitAuthStatus\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/authentication.actions.ts:48\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Action} from '@ngrx/store';\nimport {Guid} from 'guid-typescript';\nimport {Message} from \"@ofModel/message.model\";\nimport {ExtractI18nBuilderOptions} from \"@angular-devkit/build-angular\";\n\nexport enum AuthenticationActionTypes {\n    InitAuthStatus = '[Authentication] Init Authentication Status',\n    CheckAuthenticationStatus = '[Authentication] Check Authentication Status',\n    AcceptLogIn = '[Authentication] Accept the user log in attempt',\n    RejectLogIn = '[Authentication] Reject the user log in attempt',\n    TryToLogIn = '[Authentication] Try to log the user in',\n    TryToLogOut = '[Authentication] Try to log the user out',\n    AcceptLogOut = '[Authentication] Accept the user log out attempt',\n    AcceptLogOutSuccess = '[Authentication] Success Accept the user log out attempt',\n    CheckImplicitFlowAuthenticationStatus = '[Authentication] Check Authentication Status specifically for the Implicit Flow',\n    UselessAuthAction = '[Authentication] test purpose action'\n    // TODO the following actions should be merge with password and code flow management of authentication\n    , ImplicitallyAuthenticated = '[Authentication] user is authentication using Implicit Flow' //\n    , UnAuthenticationFromImplicitFlow = '[Authentication[ user is log out by implicit Flow internal managment'\n}\n\n/**\n * Authentication success payload\n */\nexport class PayloadForSuccessfulAuthentication {\n    constructor(public identifier: string,\n                public clientId: Guid,\n                public token: string,\n                public expirationDate: Date,\n                public firstName?:string,\n                public lastName?:string) {\n    }\n}\n\n/**\n * It aims to validate the current authentication if exists.\n *\n */\nexport class InitAuthStatus implements Action {\n    readonly type = AuthenticationActionTypes.InitAuthStatus;\n    /* istanbul ignore next */\n    constructor(public payload:{code: string}){}\n}\n\n/**\n * It aims to validate the current authentication if exists.\n *\n */\nexport class CheckAuthenticationStatus implements Action {\n    /* istanbul ignore next */\n    readonly type = AuthenticationActionTypes.CheckAuthenticationStatus;\n}\n\n/**\n * Action used to update the state with the authentication information\n *\n * Emitted by {AuthenticationEffects} in the following {Observable} @members:\n *  * TryToLogIn\n *  * CheckAuthentication via handleLogInAttempt @method\n *\n * Used in the {function} reducer of the {authentication.reducer.ts} file to create a new state\n * containing the authentication information by filtering on the {AuthenticationActionTypes.AcceptLogIn} type.\n *\n */\nexport class AcceptLogIn implements Action {\n    readonly type = AuthenticationActionTypes.AcceptLogIn;\n\n    /* istanbul ignore next */\n    constructor(public payload: PayloadForSuccessfulAuthentication) {}\n}\n\n/**\n * Action used to push login/password pair to the authentication service\n *\n * Emitted by {LoginComponent} in the onSubmit @method which is called\n * when the user click on the `Login` button of the login page form.\n */\nexport class TryToLogIn implements Action {\n    readonly type= AuthenticationActionTypes.TryToLogIn;\n\n    /* istanbul ignore next */\n    constructor(public payload: {username: string, password: string}){}\n}\n\n/**\n * Action used when the user logout\n *\n * Emitted by {NavbarComponent} win the logOut @method which is called\n * when the user click on the `logOut` button of the `navbar`\n */\nexport class TryToLogOut implements Action {\n    /* istanbul ignore next */\n    readonly type = AuthenticationActionTypes.TryToLogOut;\n}\n\n/**\n * Action used to notify the store that the authentication is not possible.\n *\n * Emmited by {AuthenticationEffect} in the following {Observable} @members:\n *  * `TryToLogin`;\n *  *  `CheckAuthentication`\n *  and in the `handleRejectedLogin` @method called by the `ChecAuthentication` {Observable}\n *\n * Used in the {function} reducer of the {authentication.reducer.ts} file to create a new state\n * without any authentication information and containing a message about login rejection\n * by filtering on the {AuthenticationActionTypes.RejectLogIn} type.\n *\n */\nexport class RejectLogIn implements Action {\n    readonly type = AuthenticationActionTypes.RejectLogIn;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Message }) {}\n}\n\n/**\n * Action used to removes authentication information of the system and thus logOut the user.\n *\n * Emitted by {AuthenticationEffect} in the following {Observable} @members:\n *  * `TryToLogOut`\n *  * `RejectLogInAttempt`\n *\n *  Consume by {AuthenticationEffect} in the `AcceptLogOut` {Observable} @member\n *\n */\nexport class AcceptLogOut implements Action {\n    readonly type = AuthenticationActionTypes.AcceptLogOut;\n\n    /* istanbul ignore next */\n    constructor(){}\n}\n\n/**\n * Action used to notify the store to remove authentication information\n *\n * Emitted by {AuthenticationEffect} in `AcceptLogOut` {Observable} @member.\n *\n * Used in the {function} reducer of the {authentication.reducer.ts} file to create a new state\n * without any authentication information by filtering on the {AuthenticationActionTypes.AcceptLogOut} type.\n */\nexport class AcceptLogOutSuccess implements Action {\n    /* istanbul ignore next */\n    readonly type = AuthenticationActionTypes.AcceptLogOutSuccess;\n}\n\nexport class CheckImplicitFlowAuthenticationStatus implements Action {\n    readonly type = AuthenticationActionTypes.CheckImplicitFlowAuthenticationStatus;\n}\n\nexport class UselessAuthAction implements  Action{\n    readonly type = AuthenticationActionTypes.UselessAuthAction;\n\n}\n\nexport class ImplicitlyAuthenticated implements Action {\n    readonly type = AuthenticationActionTypes.ImplicitallyAuthenticated;\n}\n\nexport class UnAuthenticationFromImplicitFlow implements Action {\n    readonly type = AuthenticationActionTypes.UnAuthenticationFromImplicitFlow;\n}\nexport type AuthenticationActions =\n    InitAuthStatus\n    | AcceptLogIn\n    | RejectLogIn\n    | TryToLogIn\n    | TryToLogOut\n    | CheckAuthenticationStatus\n    | AcceptLogOut\n    | AcceptLogOutSuccess\n    | CheckImplicitFlowAuthenticationStatus\n    | UselessAuthAction\n    | ImplicitlyAuthenticated\n    |UnAuthenticationFromImplicitFlow;\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/InitFilters.html":{"url":"classes/InitFilters.html","title":"class - InitFilters","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  InitFilters\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/feed.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/store/actions/feed.actions.ts:25\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/feed.actions.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : FeedActionTypes.InitFilter\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/feed.actions.ts:25\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Action} from '@ngrx/store';\nimport {Filter} from \"@ofModel/feed-filter.model\";\nimport {FilterType} from \"@ofServices/filter.service\";\n\nexport enum FeedActionTypes {\n    ApplyFilter = '[Feed] Change filter Status',\n    InitFilter = '[Feed] Init filter',\n}\n\nexport class ApplyFilter implements Action {\n    readonly type = FeedActionTypes.ApplyFilter;\n    /* istanbul ignore next */\n    constructor(public payload:{name: FilterType, active: boolean, status: any}){}\n}\n\nexport class InitFilters implements Action {\n    readonly type = FeedActionTypes.InitFilter;\n\n    /* istanbul ignore next */\n    constructor(public payload:{filters: Map}){}\n}\n\nexport type FeedActions =\n    InitFilters\n    | ApplyFilter;\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/InitTimeline.html":{"url":"classes/InitTimeline.html","title":"class - InitTimeline","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  InitTimeline\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/timeline.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/store/actions/timeline.actions.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/timeline.actions.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : TimelineActionTypes.InitTimeline\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/timeline.actions.ts:17\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Action} from '@ngrx/store';\n\nexport enum TimelineActionTypes {\n    InitTimeline = '[timeline] Init timeline',\n    SetCardDataTimeline = '[timeline] Set Card Data'\n}\n\nexport class InitTimeline implements Action {\n    readonly type = TimelineActionTypes.InitTimeline\n    constructor(public payload:{data: any[]}){}\n}\n\nexport class SetCardDataTimeline implements Action {\n    readonly type = TimelineActionTypes.SetCardDataTimeline\n    constructor(public payload:{cardsTimeline: any}){}\n}\n\nexport type TimelineActions =\n    InitTimeline\n    | SetCardDataTimeline;\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Input.html":{"url":"classes/Input.html","title":"class - Input","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Input\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/model/thirds.model.ts\n        \n\n\n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(type: InputType, name: string, label: I18n, value: string, mandatory: boolean, maxLength: number, rows: number, values: ParameterListItem[], selectedValues: string[], unSelectedValues: string[])\n                    \n                \n                        \n                            \n                                Defined in src/app/model/thirds.model.ts:168\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        type\n                                                  \n                                                        \n                                                                        InputType\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        name\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        label\n                                                  \n                                                        \n                                                                        I18n\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        value\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        mandatory\n                                                  \n                                                        \n                                                                        boolean\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        maxLength\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        rows\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        values\n                                                  \n                                                        \n                                                                        ParameterListItem[]\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        selectedValues\n                                                  \n                                                        \n                                                                    string[]\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        unSelectedValues\n                                                  \n                                                        \n                                                                    string[]\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Card, Detail} from \"@ofModel/card.model\";\nimport {I18n} from \"@ofModel/i18n.model\";\nimport {Map as OfMap} from \"@ofModel/map\";\n\nexport class Third {\n    /* istanbul ignore next */\n    constructor(\n        readonly name: string,\n        readonly version: string,\n        readonly i18nLabelKey: string,\n        readonly templates?: string[],\n        readonly csses?: string[],\n        readonly locales?: string[],\n        readonly menuEntries?: ThirdMenuEntry[],\n        readonly processes?: OfMap\n    ) {\n    }\n\n    public extractState(card: Card): State {\n        if (card.process && this.processes[card.process]) {\n            const process = this.processes[card.process];\n            if (card.state && process.states[card.state]) {\n                return process.states[card.state];\n            }\n        }\n        return null;\n    }\n}\n\nexport class ThirdMenuEntry {\n    /* istanbul ignore next */\n    constructor(\n        readonly id: string,\n        readonly label: string,\n        readonly url: string\n    ) {\n    }\n}\n\nexport class ThirdMenu {\n    /* istanbul ignore next */\n    constructor(\n        readonly id: string,\n        readonly version: string,\n        readonly label: string,\n        readonly entries: ThirdMenuEntry[]) {\n    }\n}\n\nexport class Process {\n    /* istanbul ignore next */\n    constructor(\n        readonly states?: OfMap\n    ) {\n    }\n}\n\nexport class State {\n    /* istanbul ignore next */\n    constructor(\n        readonly details?: Detail[],\n        readonly actions?: OfMap\n    ) {\n    }\n}\n\nexport enum ActionType {\n    EXTERNAL = 'EXTERNAL',\n    JNLP = 'JNLP',\n    URL = 'URL'\n\n}\n\nexport class Action {\n    /* istanbul ignore next */\n    constructor(\n        readonly type: ActionType,\n        readonly label: I18n,\n        readonly hidden: boolean = false,\n        readonly buttonStyle: string = '',\n        readonly contentStyle: string = '',\n        readonly inputs: Input[] = [],\n        readonly lockAction: boolean = false,\n        readonly lockCard: boolean = false,\n        readonly updateState: boolean = false,\n        readonly updateStateBeforeAction: boolean = false,\n        readonly called: boolean = false,\n        readonly needsConfirm: boolean = false,\n        readonly key?: string\n    ) {\n    }\n\n}\n\nexport const emptyAction = new Action(null, null);\n\ntype Omit = Pick>;\n\nexport class ActionStatus {\n    constructor(\n        readonly label: I18n,\n        readonly hidden: boolean = false,\n        readonly buttonStyle: string = '',\n        readonly contentStyle: string = '',\n        readonly inputs: Input[] = [],\n        readonly lockCard: boolean = false,\n        readonly updateState: boolean = false,\n        readonly updateStateBeforeAction: boolean = false,\n        readonly needsConfirm: boolean = false,\n        readonly lockAction: boolean = false,\n    ) {\n    }\n}\n\nexport const emptyActionStatus = new ActionStatus(null);\n\n/*\nfor some reasons lodash equals take attribute order declaration in account to compute object equality\nneeded by LightCardEffects updateAThirdAction Effect and by checkIfReceivedStatusIsDifferentFromCurrentOne method of ThirdActionService .\n */\nexport function extractActionStatusFromPseudoActionStatus(tAction: object): ActionStatus {\n    let label = new I18n('');\n    const i18n = tAction['label'];\n    if (i18n) {\n        const params = i18n['parameters'];\n        if (params) {\n            Object.setPrototypeOf(params, OfMap.prototype);\n            label = new I18n(i18n['key'], params);\n        } else {\n            label = new I18n(i18n['key']);\n        }\n\n    }\n    const result = new ActionStatus(\n        label\n        , tAction['hidden']\n        , tAction['buttonStyle']\n        , tAction['contentStyle']\n        , tAction['inputs'] // TODO Need proper prototype handling\n        , tAction['lockCard']\n        , tAction['updateState']\n        , tAction['updateStateBeforeAction']\n        , tAction['needsConfirm']\n        , tAction['lockAction']\n    );\n    return result;\n}\n\n\nexport enum InputType {\n    TEXT,\n    LIST,\n    LIST_RADIO,\n    SWITCH_LIST,\n    LONGTEXT,\n    BOOLEAN,\n    STATIC\n}\n\nexport class Input {\n    /* istanbul ignore next */\n    constructor(\n        readonly type: InputType,\n        readonly name: string,\n        readonly label: I18n,\n        readonly value: string,\n        readonly mandatory: boolean,\n        readonly maxLength: number,\n        readonly rows: number,\n        readonly values: ParameterListItem[],\n        readonly selectedValues: string[],\n        readonly unSelectedValues: string[],\n    ) {\n    }\n}\n\nexport class ParameterListItem {\n    /* istanbul ignore next */\n    constructor(\n        readonly label: I18n,\n        readonly value: string,\n    ) {\n    }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LightCard.html":{"url":"classes/LightCard.html","title":"class - LightCard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LightCard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/model/light-card.model.ts\n        \n\n\n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(uid: string, id: string, publisher: string, publisherVersion: string, publishDate: number, startDate: number, endDate: number, severity: Severity, mainRecipient: string, processId?: string, lttd?: number, title?: I18n, summary?: I18n, tags?: string[], timeSpans?: TimeSpan[], process?: string, state?: string, actions?: Map)\n                    \n                \n                        \n                            \n                                Defined in src/app/model/light-card.model.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        uid\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        id\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        publisher\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        publisherVersion\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        publishDate\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        startDate\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        endDate\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        severity\n                                                  \n                                                        \n                                                                        Severity\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        mainRecipient\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        processId\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        lttd\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        title\n                                                  \n                                                        \n                                                                        I18n\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        summary\n                                                  \n                                                        \n                                                                        I18n\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        tags\n                                                  \n                                                        \n                                                                    string[]\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        timeSpans\n                                                  \n                                                        \n                                                                        TimeSpan[]\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        process\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        state\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        actions\n                                                  \n                                                        \n                                                                    Map\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {I18n} from \"@ofModel/i18n.model\";\nimport {Action} from \"@ofModel/thirds.model\";\n\nexport class LightCard {\n    /* istanbul ignore next */\n    constructor(\n        readonly uid: string,\n        readonly id: string,\n        readonly publisher: string,\n        readonly publisherVersion: string,\n        readonly publishDate: number,\n        readonly startDate: number,\n        readonly endDate: number,\n        readonly severity: Severity,\n        readonly mainRecipient: string,\n        readonly processId?: string,\n        readonly lttd?: number,\n        readonly title?: I18n,\n        readonly summary?: I18n,\n        readonly tags?: string[],\n        readonly timeSpans?: TimeSpan[],\n        readonly process?: string,\n        readonly state?: string,\n        readonly actions?:Map\n    ) {\n    }\n}\n\nexport enum Severity {\n    ALARM = \"ALARM\", ACTION = \"ACTION\", INFORMATION = \"INFORMATION\", COMPLIANT = \"COMPLIANT\"\n}\n\nexport function severityOrdinal(severity: Severity) {\n    let result;\n    switch (severity) {\n        case Severity.ALARM:\n            result = 0;\n            break;\n        case Severity.ACTION:\n            result = 1;\n            break;\n        case Severity.COMPLIANT:\n            result = 2;\n            break;\n        case Severity.INFORMATION:\n            result = 3;\n            break;\n    }\n    return result;\n}\n\nexport enum Sound {\n    INFORMATION, COMPLIANT\n}\n\nexport enum Display {\n    BUBBLE, LINE\n}\n\nexport class TimeSpan {\n    constructor(\n        readonly start: number,\n        readonly end?: number,\n        readonly display = Display.BUBBLE) {\n    }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LightCardAlreadyUpdated.html":{"url":"classes/LightCardAlreadyUpdated.html","title":"class - LightCardAlreadyUpdated","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LightCardAlreadyUpdated\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/light-card.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/store/actions/light-card.actions.ts:171\n                            \n                        \n\n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : LightCardActionTypes.LightCardAlreadyUpdated\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/light-card.actions.ts:171\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Action} from '@ngrx/store';\nimport {LightCard} from '@ofModel/light-card.model';\nimport {Action as ThirdAction, ActionStatus} from '@ofModel/thirds.model';\nimport {Update} from \"@ngrx/entity\";\n\nexport enum LightCardActionTypes {\n    LoadLightCards = '[LCard] Load',\n    EmptyLightCards = '[LCard] Empty',\n    LoadLightCardsSuccess = '[LCard] Load Success',\n    LoadLightCardsExtendedData = '[LCard] Load Extended Data',\n    LoadLightCardsFailure = '[LCard] Load Fail',\n    SelectLightCard = '[LCard] Select One',\n    ClearLightCardSelection = '[LCard] Clear Light Card Selection',\n    AddLightCardFailure = '[LCard] Add Light Card Fail',\n    UpdatedSubscription = '[LCard] UpdateSubscription',\n    HandleUnexpectedError = '[LCard] Handle unexpected error related to authentication issue',\n    RemoveLightCard = '[LCard] Remove a card',\n    AddThirdActions = '[LCard] Adds some Third Actions to existing card',\n    UpdateALightCard = '[LCard] Update a Light Card',\n    UpdateAnAction = '[LCard] Update one Action of a LightCard',\n    UpdateAnActionFailure = '[LCard] No actions where available to update for the current selected card in the state',\n    ThirdActionAlreadyLoaded = '[LCard] Light Card contains actions',\n    ThirdActionAlreadyUpdated = '[LCard] Third Action unchanged',\n    DelayedLightCardUpdate = '[LCard] update Light Card actions later',\n    LightCardAlreadyUpdated = '[LCard] Light Card already Updated'\n}\n\n// needed by NGRX entities\nexport class LoadLightCards implements Action {\n    /* istanbul ignore next */\n    readonly type = LightCardActionTypes.LoadLightCards;\n}\n\nexport class EmptyLightCards implements Action {\n    /* istanbul ignore next */\n    readonly type = LightCardActionTypes.EmptyLightCards;\n}\n\nexport class LoadLightCardsSuccess implements Action {\n    readonly type = LightCardActionTypes.LoadLightCardsSuccess;\n\n    /* istanbul ignore next */\n    constructor(public payload: { lightCards: LightCard[] }) {\n    }\n}\n\nexport class LoadLightCardsExtendedData implements Action {\n    readonly type = LightCardActionTypes.LoadLightCardsExtendedData;\n\n    /* istanbul ignore next */\n    constructor() {\n    }\n}\n\nexport class LoadLightCardsFailure implements Action {\n    readonly type = LightCardActionTypes.LoadLightCardsFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport class SelectLightCard implements Action {\n    /* istanbul ignore next */\n    readonly type = LightCardActionTypes.SelectLightCard;\n\n    /* istanbul ignore next */\n    constructor(public payload: { selectedCardId: string }) {\n    }\n\n}\n\nexport class ClearLightCardSelection implements Action {\n\n    readonly type = LightCardActionTypes.ClearLightCardSelection;\n\n    constructor() {\n    }\n}\n\nexport class AddLightCardFailure implements Action {\n    readonly type = LightCardActionTypes.AddLightCardFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport class UpdatedSubscription implements Action {\n    readonly type = LightCardActionTypes.UpdatedSubscription;\n\n    /* istanbul ignore next */\n    constructor() {\n    }\n}\n\nexport class HandleUnexpectedError implements Action {\n    /* istanbul ignore next */\n    readonly type = LightCardActionTypes.HandleUnexpectedError;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport class RemoveLightCard implements Action {\n    readonly type = LightCardActionTypes.RemoveLightCard;\n\n    constructor(public  payload: { cards: string[] }) {\n    }\n}\n\nexport class AddThirdActions implements Action {\n    readonly type = LightCardActionTypes.AddThirdActions;\n\n    constructor(public payload: { card: LightCard, actions: Map }) {\n    }\n}\n\nexport class UpdateALightCard implements Action {\n    readonly type = LightCardActionTypes.UpdateALightCard;\n\n    constructor(public payload: { card: LightCard }) {\n    }\n}\n\nexport class UpdateAnAction implements Action {\n    readonly type = LightCardActionTypes.UpdateAnAction;\n\n    constructor(public payload: { cardId: string, actionKey: string, status: ActionStatus }) {\n    }\n}\n\nexport class UpdateAnActionFailure implements Action {\n    readonly type = LightCardActionTypes.UpdateAnActionFailure;\n\n    constructor() {\n    }\n}\n\nexport class ThirdActionAlreadyLoaded implements Action {\n    readonly type = LightCardActionTypes.ThirdActionAlreadyLoaded;\n\n    constructor() {\n    }\n}\n\nexport class ThirdActionAlreadyUpdated implements Action {\n    readonly type = LightCardActionTypes.ThirdActionAlreadyUpdated;\n\n    constructor() {\n    }\n}\n\nexport class DelayedLightCardUpdate implements Action {\n    readonly type = LightCardActionTypes.DelayedLightCardUpdate;\n\n    constructor(public payload: { card: LightCard }) {\n    }\n}\n\nexport class LightCardAlreadyUpdated implements Action {\n    readonly type = LightCardActionTypes.LightCardAlreadyUpdated;\n\n    constructor() {\n    }\n}\n\nexport type LightCardActions =\n    LoadLightCards\n    | LoadLightCardsSuccess\n    | LoadLightCardsFailure\n    | SelectLightCard\n    | ClearLightCardSelection\n    | AddLightCardFailure\n    | UpdatedSubscription\n    | HandleUnexpectedError\n    | EmptyLightCards\n    | AddThirdActions\n    | UpdateALightCard\n    | UpdateAnAction\n    | UpdateAnActionFailure\n    | ThirdActionAlreadyLoaded\n    | ThirdActionAlreadyUpdated\n    | DelayedLightCardUpdate\n    | LightCardAlreadyUpdated\n    | RemoveLightCard;\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LightCardEffects.html":{"url":"injectables/LightCardEffects.html","title":"injectable - LightCardEffects","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  LightCardEffects\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/effects/light-card.effects.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                delayUpdateLightCard\n                            \n                            \n                                updateAThirdAction\n                            \n                            \n                                updateThirdActions\n                            \n                            \n                                uploadActions\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store, actions$: Actions, thirdService: ThirdsService)\n                    \n                \n                        \n                            \n                                Defined in src/app/store/effects/light-card.effects.ts:34\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                        Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        actions$\n                                                  \n                                                        \n                                                                        Actions\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        thirdService\n                                                  \n                                                        \n                                                                        ThirdsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            delayUpdateLightCard\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Observable\n\n                        \n                    \n                    \n                        \n                            Default value : this.actions$\n        .pipe(\n            ofType(LightCardActionTypes.DelayedLightCardUpdate),\n            switchMap((action: DelayedLightCardUpdate) => {\n                    const receivedCard = action.payload.card;\n                    return this.store.select(fetchLightCard(receivedCard.id)).pipe(\n                        map((storedCard: LightCard) => {\n                            if (receivedCard === storedCard) {\n                                return new LightCardAlreadyUpdated();\n                            }\n                            return new UpdateALightCard({card: action.payload.card})\n\n                        })\n                    );\n                }\n            ),\n            delay(500)\n        )\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Effect()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/effects/light-card.effects.ts:118\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updateAThirdAction\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Observable\n\n                        \n                    \n                    \n                        \n                            Default value : this.actions$\n        .pipe(\n            ofType(LightCardActionTypes.UpdateAnAction),\n            switchMap((action: UpdateAnAction) => {\n                const lightCardId = action.payload.cardId;\n                const thirdActionKey = action.payload.actionKey;\n                const thirdActionStatus = extractActionStatusFromPseudoActionStatus(action.payload.status);\n                return this.store.select(fetchLightCard(lightCardId)).pipe(\n                    map((card: LightCard) => {\n                        const thirdActions = card.actions;\n                        if (thirdActions) {\n                            const thirdActionToUpdate = thirdActions.get(thirdActionKey);\n                            const st = extractActionStatusFromPseudoActionStatus(thirdActionToUpdate as ActionStatus);\n                            if (_.isEqual(thirdActionStatus, st)) {\n                                return new ThirdActionAlreadyUpdated();\n                            } else {\n                                const actualizedAction = {...thirdActionToUpdate, ...thirdActionStatus};\n                                thirdActions.set(thirdActionKey, actualizedAction);\n                                const updateCard = {\n                                    ...card,\n                                    actions: thirdActions\n                                };\n                                return new UpdateALightCard({card: updateCard})\n                            }\n\n                        } else {\n                            console.log(`no actions for ${card.id}`, card);\n                            return new UpdateAnActionFailure();\n                        }\n                    })\n                );\n            })\n        )\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Effect()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/effects/light-card.effects.ts:57\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updateThirdActions\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Observable\n\n                        \n                    \n                    \n                        \n                            Default value : this.actions$\n        .pipe(\n            ofType(LightCardActionTypes.AddThirdActions),\n            map((action: AddThirdActions) => {\n                const updateCard = {\n                    ...(action.payload.card),\n                    actions: action.payload.actions\n                };\n                return new UpdateALightCard({card: updateCard});\n            })\n        )\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Effect()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/effects/light-card.effects.ts:44\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            uploadActions\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Observable\n\n                        \n                    \n                    \n                        \n                            Default value : this.actions$\n        .pipe(\n            ofType(CardActionTypes.LoadCard),\n            switchMap(action => {\n                const lightCardId = action.payload.id;\n                return this.store.select(fetchLightCard(lightCardId))\n            }),\n            switchMap((lightCard: LightCard) => {\n                if (lightCard.actions) {\n                    return of(new ThirdActionAlreadyLoaded());\n                }\n                return this.thirdService.fetchActionMapFromLightCard(lightCard)\n                    .pipe(map((actions: Map) => {\n                        return new AddThirdActions({card: lightCard, actions: actions}) as Action\n                    }));\n            })\n            , catchError((error, caught) => {\n                if (error.status && error.status == 404) {\n                    console.log(`no actions available`);\n                } else {\n                    console.log(error);\n                }\n                return caught;\n            })\n        )\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Effect()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/effects/light-card.effects.ts:92\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import {Injectable} from '@angular/core';\nimport {Actions, Effect, ofType} from '@ngrx/effects';\nimport {Action, Store} from '@ngrx/store';\nimport {Observable, of} from 'rxjs';\nimport {catchError, delay, map, switchMap} from 'rxjs/operators';\nimport {AppState} from \"@ofStore/index\";\nimport {\n    AddThirdActions,\n    DelayedLightCardUpdate,\n    LightCardActionTypes,\n    LightCardAlreadyUpdated,\n    ThirdActionAlreadyLoaded,\n    ThirdActionAlreadyUpdated,\n    UpdateALightCard,\n    UpdateAnAction,\n    UpdateAnActionFailure\n} from \"@ofActions/light-card.actions\";\nimport {ThirdsService} from \"@ofServices/thirds.service\";\nimport {LightCard} from \"@ofModel/light-card.model\";\nimport {fetchLightCard} from \"@ofSelectors/feed.selectors\";\nimport {CardActionTypes, LoadCard} from \"@ofActions/card.actions\";\nimport {Action as ThirdAction, ActionStatus, extractActionStatusFromPseudoActionStatus} from \"@ofModel/thirds.model\";\nimport * as _ from 'lodash';\n\n@Injectable()\nexport class LightCardEffects {\n\n    /* istanbul ignore next */\n    constructor(private store: Store,\n                private actions$: Actions,\n                private thirdService: ThirdsService\n    ) {\n    }\n\n    @Effect()\n    updateThirdActions: Observable = this.actions$\n        .pipe(\n            ofType(LightCardActionTypes.AddThirdActions),\n            map((action: AddThirdActions) => {\n                const updateCard = {\n                    ...(action.payload.card),\n                    actions: action.payload.actions\n                };\n                return new UpdateALightCard({card: updateCard});\n            })\n        );\n\n    @Effect()\n    updateAThirdAction: Observable = this.actions$\n        .pipe(\n            ofType(LightCardActionTypes.UpdateAnAction),\n            switchMap((action: UpdateAnAction) => {\n                const lightCardId = action.payload.cardId;\n                const thirdActionKey = action.payload.actionKey;\n                const thirdActionStatus = extractActionStatusFromPseudoActionStatus(action.payload.status);\n                return this.store.select(fetchLightCard(lightCardId)).pipe(\n                    map((card: LightCard) => {\n                        const thirdActions = card.actions;\n                        if (thirdActions) {\n                            const thirdActionToUpdate = thirdActions.get(thirdActionKey);\n                            const st = extractActionStatusFromPseudoActionStatus(thirdActionToUpdate as ActionStatus);\n                            if (_.isEqual(thirdActionStatus, st)) {\n                                return new ThirdActionAlreadyUpdated();\n                            } else {\n                                const actualizedAction = {...thirdActionToUpdate, ...thirdActionStatus};\n                                thirdActions.set(thirdActionKey, actualizedAction);\n                                const updateCard = {\n                                    ...card,\n                                    actions: thirdActions\n                                };\n                                return new UpdateALightCard({card: updateCard})\n                            }\n\n                        } else {\n                            console.log(`no actions for ${card.id}`, card);\n                            return new UpdateAnActionFailure();\n                        }\n                    })\n                );\n            })\n        );\n\n    @Effect()\n    uploadActions: Observable = this.actions$\n        .pipe(\n            ofType(CardActionTypes.LoadCard),\n            switchMap(action => {\n                const lightCardId = action.payload.id;\n                return this.store.select(fetchLightCard(lightCardId))\n            }),\n            switchMap((lightCard: LightCard) => {\n                if (lightCard.actions) {\n                    return of(new ThirdActionAlreadyLoaded());\n                }\n                return this.thirdService.fetchActionMapFromLightCard(lightCard)\n                    .pipe(map((actions: Map) => {\n                        return new AddThirdActions({card: lightCard, actions: actions}) as Action\n                    }));\n            })\n            , catchError((error, caught) => {\n                if (error.status && error.status == 404) {\n                    console.log(`no actions available`);\n                } else {\n                    console.log(error);\n                }\n                return caught;\n            })\n        );\n    @Effect()\n    delayUpdateLightCard: Observable = this.actions$\n        .pipe(\n            ofType(LightCardActionTypes.DelayedLightCardUpdate),\n            switchMap((action: DelayedLightCardUpdate) => {\n                    const receivedCard = action.payload.card;\n                    return this.store.select(fetchLightCard(receivedCard.id)).pipe(\n                        map((storedCard: LightCard) => {\n                            if (receivedCard === storedCard) {\n                                return new LightCardAlreadyUpdated();\n                            }\n                            return new UpdateALightCard({card: action.payload.card})\n\n                        })\n                    );\n                }\n            ),\n            delay(500)\n        );\n\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ListSettingComponent.html":{"url":"components/ListSettingComponent.html","title":"component - ListSettingComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ListSettingComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/settings/components/settings/list-setting/list-setting.component.ts\n\n\n\n    \n        Extends\n    \n    \n                BaseSettingComponent\n    \n\n    \n        Implements\n    \n    \n                    OnInit\n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                of-list-setting\n            \n\n\n\n\n            \n                templateUrl\n                ./list-setting.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                preparedList\n                            \n                            \n                                    Private\n                                baseSettings\n                            \n                            \n                                form\n                            \n                            \n                                    Private\n                                ngUnsubscribe$\n                            \n                            \n                                    Protected\n                                placeholder$\n                            \n                            \n                                    Protected\n                                setting$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                computeListValidators\n                            \n                            \n                                initFormGroup\n                            \n                            \n                                    Protected\n                                isEqual\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                updateValue\n                            \n                            \n                                    Private\n                                valueInListValidator\n                            \n                            \n                                    Protected\n                                convert\n                            \n                            \n                                    Private\n                                dispatch\n                            \n                            \n                                    Protected\n                                initFormGroup\n                            \n                            \n                                    Protected\n                                isEqual\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                    Protected\n                                submitValue\n                            \n                            \n                                    Protected\n                                updateValue\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                values\n                            \n                            \n                                messagePlaceholder\n                            \n                            \n                                requiredField\n                            \n                            \n                                settingPath\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store, translateService: TranslateService)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/settings/components/settings/list-setting/list-setting.component.ts:25\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                        Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        translateService\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        values\n                    \n                \n                \n                    \n                        Type :     (literal type | string)[]\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/settings/components/settings/list-setting/list-setting.component.ts:24\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        messagePlaceholder\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                            \n                                \n                                    Inherited from         BaseSettingComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseSettingComponent:28\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        requiredField\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                            \n                                \n                                    Inherited from         BaseSettingComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseSettingComponent:29\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        settingPath\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                            \n                                \n                                    Inherited from         BaseSettingComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseSettingComponent:27\n\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            computeListValidators\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    computeListValidators()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/settings/components/settings/list-setting/list-setting.component.ts:58\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     {}\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            initFormGroup\n                        \n                        \n                    \n                \n            \n            \n                \ninitFormGroup()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/settings/components/settings/list-setting/list-setting.component.ts:50\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            isEqual\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    isEqual(formA, formB)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/settings/components/settings/list-setting/list-setting.component.ts:69\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    formA\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    formB\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/settings/components/settings/list-setting/list-setting.component.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            updateValue\n                        \n                        \n                    \n                \n            \n            \n                \nupdateValue(value)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/settings/components/settings/list-setting/list-setting.component.ts:65\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            valueInListValidator\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    valueInListValidator()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/settings/components/settings/list-setting/list-setting.component.ts:74\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     (control: any) => { valueInList: { valid: boolean; }; }\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            convert\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    convert(value: any)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseSettingComponent\n\n                \n            \n            \n                \n                        Defined in         BaseSettingComponent:83\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            dispatch\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    dispatch(value: any)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseSettingComponent\n\n                \n            \n            \n                \n                        Defined in         BaseSettingComponent:88\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            initFormGroup\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    initFormGroup()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseSettingComponent\n\n                \n            \n            \n                \n                        Defined in         BaseSettingComponent:79\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         FormGroup\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            isEqual\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    isEqual(formA, formB)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseSettingComponent\n\n                \n            \n            \n                \n                        Defined in         BaseSettingComponent:94\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    formA\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    formB\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseSettingComponent\n\n                \n            \n            \n                \n                        Defined in         BaseSettingComponent:70\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseSettingComponent\n\n                \n            \n            \n                \n                        Defined in         BaseSettingComponent:40\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            submitValue\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    submitValue()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseSettingComponent\n\n                \n            \n            \n                \n                        Defined in         BaseSettingComponent:98\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            updateValue\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updateValue(value: any)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseSettingComponent\n\n                \n            \n            \n                \n                        Defined in         BaseSettingComponent:75\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            preparedList\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/settings/components/settings/list-setting/list-setting.component.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            baseSettings\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {}\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseSettingComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseSettingComponent:34\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            form\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormGroup\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseSettingComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseSettingComponent:33\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            ngUnsubscribe$\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Subject()\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseSettingComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseSettingComponent:30\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            placeholder$\n                            \n                        \n                    \n                \n                            \n                                \n                                    Inherited from         BaseSettingComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseSettingComponent:32\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            setting$\n                            \n                        \n                    \n                \n                            \n                                \n                                    Inherited from         BaseSettingComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseSettingComponent:31\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import {Component, Input, OnDestroy, OnInit} from '@angular/core';\nimport {BaseSettingComponent} from \"../base-setting/base-setting.component\";\nimport {AppState} from \"@ofStore/index\";\nimport {Store} from \"@ngrx/store\";\nimport {AbstractControl, FormControl, FormGroup, Validators} from \"@angular/forms\";\nimport {I18n} from \"@ofModel/i18n.model\";\nimport {TranslateService} from \"@ngx-translate/core\";\nimport {Observable, of} from \"rxjs\";\n\n@Component({\n    selector: 'of-list-setting',\n    templateUrl: './list-setting.component.html'\n})\nexport class ListSettingComponent extends BaseSettingComponent implements OnInit, OnDestroy {\n\n    @Input() values: ({ value: string, label: (I18n | string) } | string)[];\n    preparedList: { value: string, label: Observable }[];\n\n    constructor(protected store: Store, private translateService: TranslateService) {\n        super(store);\n    }\n\n    ngOnInit() {\n        this.preparedList = [];\n        if (this.values) {\n            for (let v of this.values) {\n                if (typeof v == 'string') {\n                    this.preparedList.push({value: v, label: of(v)});\n                } else if (typeof v.label == 'string') {\n                    this.preparedList.push({value: v.value, label: of(v.label)});\n                } else {\n                    this.preparedList.push({\n                        value: v.value,\n                        label: this.translateService.get(v.label.key, v.label.parameters)\n                    });\n                }\n            }\n        }\n        super.ngOnInit();\n    }\n\n    initFormGroup() {\n        let validators = this.computeListValidators();\n        validators.push(this.valueInListValidator());\n        return new FormGroup({\n            setting: new FormControl('', validators)\n        }, {updateOn: 'change'});\n    }\n\n    protected computeListValidators() {\n        let validators = [];\n        if (this.requiredField)\n            validators.push(Validators.required);\n        return validators;\n    }\n\n    updateValue(value) {\n        this.form.get('setting').setValue(value?value:'', {emitEvent: false});\n    }\n\n    protected isEqual(formA, formB): boolean {\n        console.log('ListSettingComponent.isEqual called')\n        return formA.setting === formB.setting;\n    }\n\n    private valueInListValidator(){\n        return (control: AbstractControl)=>{\n            if(!!control.value && this.preparedList.map(e=>e.value).indexOf(control.value)\n    \n\n    \n        \n\n\n\n\n\n\n\n  \n    settings.{{settingPath}}\n    \n      \n      {{v.label|async}}\n    \n    Incorrect submission\n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      settings.{{settingPath}}                {{v.label|async}}        Incorrect submission  '\n    var COMPONENTS = [{'name': 'ActionComponent', 'selector': 'of-action'},{'name': 'AppComponent', 'selector': 'of-root'},{'name': 'ArchiveFiltersComponent', 'selector': 'of-archive-filters'},{'name': 'ArchiveListComponent', 'selector': 'of-archive-list'},{'name': 'ArchiveListPageComponent', 'selector': 'of-archive-list-page'},{'name': 'ArchivesComponent', 'selector': 'of-archives'},{'name': 'BaseSettingComponent', 'selector': 'of-base-setting'},{'name': 'CardComponent', 'selector': 'of-card'},{'name': 'CardDetailsComponent', 'selector': 'of-card-details'},{'name': 'CardListComponent', 'selector': 'of-card-list'},{'name': 'ConfirmModalComponent', 'selector': 'confirm-modal-component'},{'name': 'CustomLogoComponent', 'selector': 'of-custom-logo'},{'name': 'CustomTimelineChartComponent', 'selector': 'of-custom-timeline-chart'},{'name': 'DatetimeFilterComponent', 'selector': 'of-datetime-filter'},{'name': 'DetailComponent', 'selector': 'of-detail'},{'name': 'DetailsComponent', 'selector': 'of-details'},{'name': 'EmailSettingComponent', 'selector': 'of-email-setting'},{'name': 'FeedComponent', 'selector': 'of-cards'},{'name': 'FiltersComponent', 'selector': 'of-filters'},{'name': 'IconComponent', 'selector': 'of-icon'},{'name': 'IframeDisplayComponent', 'selector': 'of-iframedisplay'},{'name': 'InfoComponent', 'selector': 'of-info'},{'name': 'InitChartComponent', 'selector': 'of-init-chart'},{'name': 'ListSettingComponent', 'selector': 'of-list-setting'},{'name': 'LoginComponent', 'selector': 'of-login'},{'name': 'MenuLinkComponent', 'selector': 'of-menu-link'},{'name': 'MultiFilterComponent', 'selector': 'of-multi-filter'},{'name': 'MultiSettingsComponent', 'selector': 'of-multi-settings'},{'name': 'NavbarComponent', 'selector': 'of-navbar'},{'name': 'NoSelectionComponent', 'selector': 'of-no-selection'},{'name': 'ResizableComponent', 'selector': 'of-resizable'},{'name': 'SettingsComponent', 'selector': 'of-settings'},{'name': 'TagsFilterComponent', 'selector': 'of-tags-filter'},{'name': 'TextSettingComponent', 'selector': 'of-text-setting'},{'name': 'TimeFilterComponent', 'selector': 'of-time-filter'},{'name': 'TimeLineComponent', 'selector': 'of-time-line'},{'name': 'TypeAheadSettingsComponent', 'selector': 'of-type-ahead-settings'},{'name': 'TypeFilterComponent', 'selector': 'of-type-filter'}];\n    var DIRECTIVES = [{'name': 'CalcHeightDirective', 'selector': '[calcHeightDirective]'},{'name': 'DraggableDirective', 'selector': '[appDraggable]'},{'name': 'MouseWheelDirective', 'selector': '[appMouseWheel]'}];\n    var ACTUAL_COMPONENT = {'name': 'ListSettingComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LoadArchivedCard.html":{"url":"classes/LoadArchivedCard.html","title":"class - LoadArchivedCard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LoadArchivedCard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/card.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/store/actions/card.actions.ts:48\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/card.actions.ts:51\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : CardActionTypes.LoadArchivedCard\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/card.actions.ts:48\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Action} from '@ngrx/store';\nimport {Card} from '@ofModel/card.model';\n\nexport enum CardActionTypes {\n    ClearCard = '[Card] Clear',\n    LoadCard = '[Card] Load Card',\n    LoadCardSuccess = '[Card] Load Card Success',\n    LoadCardFailure = '[Card] Load Card Fail',\n    LoadArchivedCard = '[Card] Load Archived Card',\n    LoadArchivedCardSuccess = '[Card] Load Archived Card Success',\n    LoadArchivedCardFailure = '[Card] Load Archived Card Fail',\n    HandleUnexpectedError = '[Card] Handle unexpected error related to card issue',\n    AddActionsAppear = '[Card] Add Actions Appear'\n}\n// needed by NGRX entities\nexport class ClearCard implements Action {\n    readonly type = CardActionTypes.ClearCard;\n}\nexport class LoadCard implements Action {\n    readonly type = CardActionTypes.LoadCard;\n\n    /* istanbul ignore next */\n    constructor(public payload: { id: string }) {}\n}\nexport class LoadCardFailure implements Action {\n    readonly type = CardActionTypes.LoadCardFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {}\n}\n\nexport class LoadCardSuccess implements Action {\n    readonly type = CardActionTypes.LoadCardSuccess;\n\n    /* istanbul ignore next */\n    constructor(public payload: { card: Card }) {}\n}\n\nexport class LoadArchivedCard implements Action {\n    readonly type = CardActionTypes.LoadArchivedCard;\n\n    /* istanbul ignore next */\n    constructor(public payload: { id: string }) {}\n}\nexport class LoadArchivedCardFailure implements Action {\n    readonly type = CardActionTypes.LoadArchivedCardFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {}\n}\n\nexport class LoadArchivedCardSuccess implements Action {\n    readonly type = CardActionTypes.LoadArchivedCardSuccess;\n\n    /* istanbul ignore next */\n    constructor(public payload: { card: Card }) {}\n}\n\nexport class HandleUnexpectedError implements Action {\n    /* istanbul ignore next */\n    readonly type = CardActionTypes.HandleUnexpectedError;\n\n    /* istanbul ignore next */\n    constructor(public payload: {error: Error}) {}\n}\n\nexport class AddActionsAppear implements Action {\n    readonly type = CardActionTypes.AddActionsAppear;\n    /* istanbul ignore next */\n    constructor(public payload: string) {}\n}\n\nexport type CardActions = ClearCard\n    | LoadCard\n    | LoadCardSuccess\n    | LoadCardFailure\n    | LoadArchivedCard\n    | LoadArchivedCardSuccess\n    | LoadArchivedCardFailure\n    | HandleUnexpectedError\n    | AddActionsAppear;\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LoadArchivedCardFailure.html":{"url":"classes/LoadArchivedCardFailure.html","title":"class - LoadArchivedCardFailure","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LoadArchivedCardFailure\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/card.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/store/actions/card.actions.ts:54\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/card.actions.ts:57\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : CardActionTypes.LoadArchivedCardFailure\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/card.actions.ts:54\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Action} from '@ngrx/store';\nimport {Card} from '@ofModel/card.model';\n\nexport enum CardActionTypes {\n    ClearCard = '[Card] Clear',\n    LoadCard = '[Card] Load Card',\n    LoadCardSuccess = '[Card] Load Card Success',\n    LoadCardFailure = '[Card] Load Card Fail',\n    LoadArchivedCard = '[Card] Load Archived Card',\n    LoadArchivedCardSuccess = '[Card] Load Archived Card Success',\n    LoadArchivedCardFailure = '[Card] Load Archived Card Fail',\n    HandleUnexpectedError = '[Card] Handle unexpected error related to card issue',\n    AddActionsAppear = '[Card] Add Actions Appear'\n}\n// needed by NGRX entities\nexport class ClearCard implements Action {\n    readonly type = CardActionTypes.ClearCard;\n}\nexport class LoadCard implements Action {\n    readonly type = CardActionTypes.LoadCard;\n\n    /* istanbul ignore next */\n    constructor(public payload: { id: string }) {}\n}\nexport class LoadCardFailure implements Action {\n    readonly type = CardActionTypes.LoadCardFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {}\n}\n\nexport class LoadCardSuccess implements Action {\n    readonly type = CardActionTypes.LoadCardSuccess;\n\n    /* istanbul ignore next */\n    constructor(public payload: { card: Card }) {}\n}\n\nexport class LoadArchivedCard implements Action {\n    readonly type = CardActionTypes.LoadArchivedCard;\n\n    /* istanbul ignore next */\n    constructor(public payload: { id: string }) {}\n}\nexport class LoadArchivedCardFailure implements Action {\n    readonly type = CardActionTypes.LoadArchivedCardFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {}\n}\n\nexport class LoadArchivedCardSuccess implements Action {\n    readonly type = CardActionTypes.LoadArchivedCardSuccess;\n\n    /* istanbul ignore next */\n    constructor(public payload: { card: Card }) {}\n}\n\nexport class HandleUnexpectedError implements Action {\n    /* istanbul ignore next */\n    readonly type = CardActionTypes.HandleUnexpectedError;\n\n    /* istanbul ignore next */\n    constructor(public payload: {error: Error}) {}\n}\n\nexport class AddActionsAppear implements Action {\n    readonly type = CardActionTypes.AddActionsAppear;\n    /* istanbul ignore next */\n    constructor(public payload: string) {}\n}\n\nexport type CardActions = ClearCard\n    | LoadCard\n    | LoadCardSuccess\n    | LoadCardFailure\n    | LoadArchivedCard\n    | LoadArchivedCardSuccess\n    | LoadArchivedCardFailure\n    | HandleUnexpectedError\n    | AddActionsAppear;\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LoadArchivedCardSuccess.html":{"url":"classes/LoadArchivedCardSuccess.html","title":"class - LoadArchivedCardSuccess","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LoadArchivedCardSuccess\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/card.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/store/actions/card.actions.ts:61\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/card.actions.ts:64\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : CardActionTypes.LoadArchivedCardSuccess\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/card.actions.ts:61\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Action} from '@ngrx/store';\nimport {Card} from '@ofModel/card.model';\n\nexport enum CardActionTypes {\n    ClearCard = '[Card] Clear',\n    LoadCard = '[Card] Load Card',\n    LoadCardSuccess = '[Card] Load Card Success',\n    LoadCardFailure = '[Card] Load Card Fail',\n    LoadArchivedCard = '[Card] Load Archived Card',\n    LoadArchivedCardSuccess = '[Card] Load Archived Card Success',\n    LoadArchivedCardFailure = '[Card] Load Archived Card Fail',\n    HandleUnexpectedError = '[Card] Handle unexpected error related to card issue',\n    AddActionsAppear = '[Card] Add Actions Appear'\n}\n// needed by NGRX entities\nexport class ClearCard implements Action {\n    readonly type = CardActionTypes.ClearCard;\n}\nexport class LoadCard implements Action {\n    readonly type = CardActionTypes.LoadCard;\n\n    /* istanbul ignore next */\n    constructor(public payload: { id: string }) {}\n}\nexport class LoadCardFailure implements Action {\n    readonly type = CardActionTypes.LoadCardFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {}\n}\n\nexport class LoadCardSuccess implements Action {\n    readonly type = CardActionTypes.LoadCardSuccess;\n\n    /* istanbul ignore next */\n    constructor(public payload: { card: Card }) {}\n}\n\nexport class LoadArchivedCard implements Action {\n    readonly type = CardActionTypes.LoadArchivedCard;\n\n    /* istanbul ignore next */\n    constructor(public payload: { id: string }) {}\n}\nexport class LoadArchivedCardFailure implements Action {\n    readonly type = CardActionTypes.LoadArchivedCardFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {}\n}\n\nexport class LoadArchivedCardSuccess implements Action {\n    readonly type = CardActionTypes.LoadArchivedCardSuccess;\n\n    /* istanbul ignore next */\n    constructor(public payload: { card: Card }) {}\n}\n\nexport class HandleUnexpectedError implements Action {\n    /* istanbul ignore next */\n    readonly type = CardActionTypes.HandleUnexpectedError;\n\n    /* istanbul ignore next */\n    constructor(public payload: {error: Error}) {}\n}\n\nexport class AddActionsAppear implements Action {\n    readonly type = CardActionTypes.AddActionsAppear;\n    /* istanbul ignore next */\n    constructor(public payload: string) {}\n}\n\nexport type CardActions = ClearCard\n    | LoadCard\n    | LoadCardSuccess\n    | LoadCardFailure\n    | LoadArchivedCard\n    | LoadArchivedCardSuccess\n    | LoadArchivedCardFailure\n    | HandleUnexpectedError\n    | AddActionsAppear;\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LoadCard.html":{"url":"classes/LoadCard.html","title":"class - LoadCard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LoadCard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/card.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/store/actions/card.actions.ts:28\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/card.actions.ts:31\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : CardActionTypes.LoadCard\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/card.actions.ts:28\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Action} from '@ngrx/store';\nimport {Card} from '@ofModel/card.model';\n\nexport enum CardActionTypes {\n    ClearCard = '[Card] Clear',\n    LoadCard = '[Card] Load Card',\n    LoadCardSuccess = '[Card] Load Card Success',\n    LoadCardFailure = '[Card] Load Card Fail',\n    LoadArchivedCard = '[Card] Load Archived Card',\n    LoadArchivedCardSuccess = '[Card] Load Archived Card Success',\n    LoadArchivedCardFailure = '[Card] Load Archived Card Fail',\n    HandleUnexpectedError = '[Card] Handle unexpected error related to card issue',\n    AddActionsAppear = '[Card] Add Actions Appear'\n}\n// needed by NGRX entities\nexport class ClearCard implements Action {\n    readonly type = CardActionTypes.ClearCard;\n}\nexport class LoadCard implements Action {\n    readonly type = CardActionTypes.LoadCard;\n\n    /* istanbul ignore next */\n    constructor(public payload: { id: string }) {}\n}\nexport class LoadCardFailure implements Action {\n    readonly type = CardActionTypes.LoadCardFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {}\n}\n\nexport class LoadCardSuccess implements Action {\n    readonly type = CardActionTypes.LoadCardSuccess;\n\n    /* istanbul ignore next */\n    constructor(public payload: { card: Card }) {}\n}\n\nexport class LoadArchivedCard implements Action {\n    readonly type = CardActionTypes.LoadArchivedCard;\n\n    /* istanbul ignore next */\n    constructor(public payload: { id: string }) {}\n}\nexport class LoadArchivedCardFailure implements Action {\n    readonly type = CardActionTypes.LoadArchivedCardFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {}\n}\n\nexport class LoadArchivedCardSuccess implements Action {\n    readonly type = CardActionTypes.LoadArchivedCardSuccess;\n\n    /* istanbul ignore next */\n    constructor(public payload: { card: Card }) {}\n}\n\nexport class HandleUnexpectedError implements Action {\n    /* istanbul ignore next */\n    readonly type = CardActionTypes.HandleUnexpectedError;\n\n    /* istanbul ignore next */\n    constructor(public payload: {error: Error}) {}\n}\n\nexport class AddActionsAppear implements Action {\n    readonly type = CardActionTypes.AddActionsAppear;\n    /* istanbul ignore next */\n    constructor(public payload: string) {}\n}\n\nexport type CardActions = ClearCard\n    | LoadCard\n    | LoadCardSuccess\n    | LoadCardFailure\n    | LoadArchivedCard\n    | LoadArchivedCardSuccess\n    | LoadArchivedCardFailure\n    | HandleUnexpectedError\n    | AddActionsAppear;\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LoadCardFailure.html":{"url":"classes/LoadCardFailure.html","title":"class - LoadCardFailure","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LoadCardFailure\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/card.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/store/actions/card.actions.ts:34\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/card.actions.ts:37\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : CardActionTypes.LoadCardFailure\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/card.actions.ts:34\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Action} from '@ngrx/store';\nimport {Card} from '@ofModel/card.model';\n\nexport enum CardActionTypes {\n    ClearCard = '[Card] Clear',\n    LoadCard = '[Card] Load Card',\n    LoadCardSuccess = '[Card] Load Card Success',\n    LoadCardFailure = '[Card] Load Card Fail',\n    LoadArchivedCard = '[Card] Load Archived Card',\n    LoadArchivedCardSuccess = '[Card] Load Archived Card Success',\n    LoadArchivedCardFailure = '[Card] Load Archived Card Fail',\n    HandleUnexpectedError = '[Card] Handle unexpected error related to card issue',\n    AddActionsAppear = '[Card] Add Actions Appear'\n}\n// needed by NGRX entities\nexport class ClearCard implements Action {\n    readonly type = CardActionTypes.ClearCard;\n}\nexport class LoadCard implements Action {\n    readonly type = CardActionTypes.LoadCard;\n\n    /* istanbul ignore next */\n    constructor(public payload: { id: string }) {}\n}\nexport class LoadCardFailure implements Action {\n    readonly type = CardActionTypes.LoadCardFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {}\n}\n\nexport class LoadCardSuccess implements Action {\n    readonly type = CardActionTypes.LoadCardSuccess;\n\n    /* istanbul ignore next */\n    constructor(public payload: { card: Card }) {}\n}\n\nexport class LoadArchivedCard implements Action {\n    readonly type = CardActionTypes.LoadArchivedCard;\n\n    /* istanbul ignore next */\n    constructor(public payload: { id: string }) {}\n}\nexport class LoadArchivedCardFailure implements Action {\n    readonly type = CardActionTypes.LoadArchivedCardFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {}\n}\n\nexport class LoadArchivedCardSuccess implements Action {\n    readonly type = CardActionTypes.LoadArchivedCardSuccess;\n\n    /* istanbul ignore next */\n    constructor(public payload: { card: Card }) {}\n}\n\nexport class HandleUnexpectedError implements Action {\n    /* istanbul ignore next */\n    readonly type = CardActionTypes.HandleUnexpectedError;\n\n    /* istanbul ignore next */\n    constructor(public payload: {error: Error}) {}\n}\n\nexport class AddActionsAppear implements Action {\n    readonly type = CardActionTypes.AddActionsAppear;\n    /* istanbul ignore next */\n    constructor(public payload: string) {}\n}\n\nexport type CardActions = ClearCard\n    | LoadCard\n    | LoadCardSuccess\n    | LoadCardFailure\n    | LoadArchivedCard\n    | LoadArchivedCardSuccess\n    | LoadArchivedCardFailure\n    | HandleUnexpectedError\n    | AddActionsAppear;\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LoadCardSuccess.html":{"url":"classes/LoadCardSuccess.html","title":"class - LoadCardSuccess","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LoadCardSuccess\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/card.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/store/actions/card.actions.ts:41\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/card.actions.ts:44\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : CardActionTypes.LoadCardSuccess\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/card.actions.ts:41\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Action} from '@ngrx/store';\nimport {Card} from '@ofModel/card.model';\n\nexport enum CardActionTypes {\n    ClearCard = '[Card] Clear',\n    LoadCard = '[Card] Load Card',\n    LoadCardSuccess = '[Card] Load Card Success',\n    LoadCardFailure = '[Card] Load Card Fail',\n    LoadArchivedCard = '[Card] Load Archived Card',\n    LoadArchivedCardSuccess = '[Card] Load Archived Card Success',\n    LoadArchivedCardFailure = '[Card] Load Archived Card Fail',\n    HandleUnexpectedError = '[Card] Handle unexpected error related to card issue',\n    AddActionsAppear = '[Card] Add Actions Appear'\n}\n// needed by NGRX entities\nexport class ClearCard implements Action {\n    readonly type = CardActionTypes.ClearCard;\n}\nexport class LoadCard implements Action {\n    readonly type = CardActionTypes.LoadCard;\n\n    /* istanbul ignore next */\n    constructor(public payload: { id: string }) {}\n}\nexport class LoadCardFailure implements Action {\n    readonly type = CardActionTypes.LoadCardFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {}\n}\n\nexport class LoadCardSuccess implements Action {\n    readonly type = CardActionTypes.LoadCardSuccess;\n\n    /* istanbul ignore next */\n    constructor(public payload: { card: Card }) {}\n}\n\nexport class LoadArchivedCard implements Action {\n    readonly type = CardActionTypes.LoadArchivedCard;\n\n    /* istanbul ignore next */\n    constructor(public payload: { id: string }) {}\n}\nexport class LoadArchivedCardFailure implements Action {\n    readonly type = CardActionTypes.LoadArchivedCardFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {}\n}\n\nexport class LoadArchivedCardSuccess implements Action {\n    readonly type = CardActionTypes.LoadArchivedCardSuccess;\n\n    /* istanbul ignore next */\n    constructor(public payload: { card: Card }) {}\n}\n\nexport class HandleUnexpectedError implements Action {\n    /* istanbul ignore next */\n    readonly type = CardActionTypes.HandleUnexpectedError;\n\n    /* istanbul ignore next */\n    constructor(public payload: {error: Error}) {}\n}\n\nexport class AddActionsAppear implements Action {\n    readonly type = CardActionTypes.AddActionsAppear;\n    /* istanbul ignore next */\n    constructor(public payload: string) {}\n}\n\nexport type CardActions = ClearCard\n    | LoadCard\n    | LoadCardSuccess\n    | LoadCardFailure\n    | LoadArchivedCard\n    | LoadArchivedCardSuccess\n    | LoadArchivedCardFailure\n    | HandleUnexpectedError\n    | AddActionsAppear;\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LoadConfig.html":{"url":"classes/LoadConfig.html","title":"class - LoadConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LoadConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/config.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : ConfigActionTypes.LoadConfig\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/config.actions.ts:19\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Action} from '@ngrx/store';\n\nexport enum ConfigActionTypes {\n    LoadConfig = '[Config] Load Config',\n    LoadConfigSuccess = '[Config] Load Config Success',\n    LoadConfigFailure = '[Config] Load Config Fail',\n    HandleUnexpectedError = '[Config] Handle unexpected error related to configuration issue'\n}\n// needed by NGRX entities\nexport class LoadConfig implements Action {\n    readonly type = ConfigActionTypes.LoadConfig;\n}\nexport class LoadConfigFailure implements Action {\n    readonly type = ConfigActionTypes.LoadConfigFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport class LoadConfigSuccess implements Action {\n    readonly type = ConfigActionTypes.LoadConfigSuccess;\n\n    /* istanbul ignore next */\n    constructor(public payload: { config: any }) {\n    }\n}\n\nexport class HandleUnexpectedError implements Action {\n    /* istanbul ignore next */\n    readonly type = ConfigActionTypes.HandleUnexpectedError;\n    /* istanbul ignore next */\n    constructor(public payload: {error: Error}) {\n\n    }\n}\n\nexport type ConfigActions =\n    LoadConfig\n    | LoadConfigSuccess\n    | LoadConfigFailure\n    | HandleUnexpectedError;\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LoadConfigFailure.html":{"url":"classes/LoadConfigFailure.html","title":"class - LoadConfigFailure","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LoadConfigFailure\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/config.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/store/actions/config.actions.ts:22\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/config.actions.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : ConfigActionTypes.LoadConfigFailure\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/config.actions.ts:22\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Action} from '@ngrx/store';\n\nexport enum ConfigActionTypes {\n    LoadConfig = '[Config] Load Config',\n    LoadConfigSuccess = '[Config] Load Config Success',\n    LoadConfigFailure = '[Config] Load Config Fail',\n    HandleUnexpectedError = '[Config] Handle unexpected error related to configuration issue'\n}\n// needed by NGRX entities\nexport class LoadConfig implements Action {\n    readonly type = ConfigActionTypes.LoadConfig;\n}\nexport class LoadConfigFailure implements Action {\n    readonly type = ConfigActionTypes.LoadConfigFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport class LoadConfigSuccess implements Action {\n    readonly type = ConfigActionTypes.LoadConfigSuccess;\n\n    /* istanbul ignore next */\n    constructor(public payload: { config: any }) {\n    }\n}\n\nexport class HandleUnexpectedError implements Action {\n    /* istanbul ignore next */\n    readonly type = ConfigActionTypes.HandleUnexpectedError;\n    /* istanbul ignore next */\n    constructor(public payload: {error: Error}) {\n\n    }\n}\n\nexport type ConfigActions =\n    LoadConfig\n    | LoadConfigSuccess\n    | LoadConfigFailure\n    | HandleUnexpectedError;\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LoadConfigSuccess.html":{"url":"classes/LoadConfigSuccess.html","title":"class - LoadConfigSuccess","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LoadConfigSuccess\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/config.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/store/actions/config.actions.ts:30\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/config.actions.ts:33\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : ConfigActionTypes.LoadConfigSuccess\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/config.actions.ts:30\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Action} from '@ngrx/store';\n\nexport enum ConfigActionTypes {\n    LoadConfig = '[Config] Load Config',\n    LoadConfigSuccess = '[Config] Load Config Success',\n    LoadConfigFailure = '[Config] Load Config Fail',\n    HandleUnexpectedError = '[Config] Handle unexpected error related to configuration issue'\n}\n// needed by NGRX entities\nexport class LoadConfig implements Action {\n    readonly type = ConfigActionTypes.LoadConfig;\n}\nexport class LoadConfigFailure implements Action {\n    readonly type = ConfigActionTypes.LoadConfigFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport class LoadConfigSuccess implements Action {\n    readonly type = ConfigActionTypes.LoadConfigSuccess;\n\n    /* istanbul ignore next */\n    constructor(public payload: { config: any }) {\n    }\n}\n\nexport class HandleUnexpectedError implements Action {\n    /* istanbul ignore next */\n    readonly type = ConfigActionTypes.HandleUnexpectedError;\n    /* istanbul ignore next */\n    constructor(public payload: {error: Error}) {\n\n    }\n}\n\nexport type ConfigActions =\n    LoadConfig\n    | LoadConfigSuccess\n    | LoadConfigFailure\n    | HandleUnexpectedError;\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LoadLightCards.html":{"url":"classes/LoadLightCards.html","title":"class - LoadLightCards","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LoadLightCards\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/light-card.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : LightCardActionTypes.LoadLightCards\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/light-card.actions.ts:39\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Action} from '@ngrx/store';\nimport {LightCard} from '@ofModel/light-card.model';\nimport {Action as ThirdAction, ActionStatus} from '@ofModel/thirds.model';\nimport {Update} from \"@ngrx/entity\";\n\nexport enum LightCardActionTypes {\n    LoadLightCards = '[LCard] Load',\n    EmptyLightCards = '[LCard] Empty',\n    LoadLightCardsSuccess = '[LCard] Load Success',\n    LoadLightCardsExtendedData = '[LCard] Load Extended Data',\n    LoadLightCardsFailure = '[LCard] Load Fail',\n    SelectLightCard = '[LCard] Select One',\n    ClearLightCardSelection = '[LCard] Clear Light Card Selection',\n    AddLightCardFailure = '[LCard] Add Light Card Fail',\n    UpdatedSubscription = '[LCard] UpdateSubscription',\n    HandleUnexpectedError = '[LCard] Handle unexpected error related to authentication issue',\n    RemoveLightCard = '[LCard] Remove a card',\n    AddThirdActions = '[LCard] Adds some Third Actions to existing card',\n    UpdateALightCard = '[LCard] Update a Light Card',\n    UpdateAnAction = '[LCard] Update one Action of a LightCard',\n    UpdateAnActionFailure = '[LCard] No actions where available to update for the current selected card in the state',\n    ThirdActionAlreadyLoaded = '[LCard] Light Card contains actions',\n    ThirdActionAlreadyUpdated = '[LCard] Third Action unchanged',\n    DelayedLightCardUpdate = '[LCard] update Light Card actions later',\n    LightCardAlreadyUpdated = '[LCard] Light Card already Updated'\n}\n\n// needed by NGRX entities\nexport class LoadLightCards implements Action {\n    /* istanbul ignore next */\n    readonly type = LightCardActionTypes.LoadLightCards;\n}\n\nexport class EmptyLightCards implements Action {\n    /* istanbul ignore next */\n    readonly type = LightCardActionTypes.EmptyLightCards;\n}\n\nexport class LoadLightCardsSuccess implements Action {\n    readonly type = LightCardActionTypes.LoadLightCardsSuccess;\n\n    /* istanbul ignore next */\n    constructor(public payload: { lightCards: LightCard[] }) {\n    }\n}\n\nexport class LoadLightCardsExtendedData implements Action {\n    readonly type = LightCardActionTypes.LoadLightCardsExtendedData;\n\n    /* istanbul ignore next */\n    constructor() {\n    }\n}\n\nexport class LoadLightCardsFailure implements Action {\n    readonly type = LightCardActionTypes.LoadLightCardsFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport class SelectLightCard implements Action {\n    /* istanbul ignore next */\n    readonly type = LightCardActionTypes.SelectLightCard;\n\n    /* istanbul ignore next */\n    constructor(public payload: { selectedCardId: string }) {\n    }\n\n}\n\nexport class ClearLightCardSelection implements Action {\n\n    readonly type = LightCardActionTypes.ClearLightCardSelection;\n\n    constructor() {\n    }\n}\n\nexport class AddLightCardFailure implements Action {\n    readonly type = LightCardActionTypes.AddLightCardFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport class UpdatedSubscription implements Action {\n    readonly type = LightCardActionTypes.UpdatedSubscription;\n\n    /* istanbul ignore next */\n    constructor() {\n    }\n}\n\nexport class HandleUnexpectedError implements Action {\n    /* istanbul ignore next */\n    readonly type = LightCardActionTypes.HandleUnexpectedError;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport class RemoveLightCard implements Action {\n    readonly type = LightCardActionTypes.RemoveLightCard;\n\n    constructor(public  payload: { cards: string[] }) {\n    }\n}\n\nexport class AddThirdActions implements Action {\n    readonly type = LightCardActionTypes.AddThirdActions;\n\n    constructor(public payload: { card: LightCard, actions: Map }) {\n    }\n}\n\nexport class UpdateALightCard implements Action {\n    readonly type = LightCardActionTypes.UpdateALightCard;\n\n    constructor(public payload: { card: LightCard }) {\n    }\n}\n\nexport class UpdateAnAction implements Action {\n    readonly type = LightCardActionTypes.UpdateAnAction;\n\n    constructor(public payload: { cardId: string, actionKey: string, status: ActionStatus }) {\n    }\n}\n\nexport class UpdateAnActionFailure implements Action {\n    readonly type = LightCardActionTypes.UpdateAnActionFailure;\n\n    constructor() {\n    }\n}\n\nexport class ThirdActionAlreadyLoaded implements Action {\n    readonly type = LightCardActionTypes.ThirdActionAlreadyLoaded;\n\n    constructor() {\n    }\n}\n\nexport class ThirdActionAlreadyUpdated implements Action {\n    readonly type = LightCardActionTypes.ThirdActionAlreadyUpdated;\n\n    constructor() {\n    }\n}\n\nexport class DelayedLightCardUpdate implements Action {\n    readonly type = LightCardActionTypes.DelayedLightCardUpdate;\n\n    constructor(public payload: { card: LightCard }) {\n    }\n}\n\nexport class LightCardAlreadyUpdated implements Action {\n    readonly type = LightCardActionTypes.LightCardAlreadyUpdated;\n\n    constructor() {\n    }\n}\n\nexport type LightCardActions =\n    LoadLightCards\n    | LoadLightCardsSuccess\n    | LoadLightCardsFailure\n    | SelectLightCard\n    | ClearLightCardSelection\n    | AddLightCardFailure\n    | UpdatedSubscription\n    | HandleUnexpectedError\n    | EmptyLightCards\n    | AddThirdActions\n    | UpdateALightCard\n    | UpdateAnAction\n    | UpdateAnActionFailure\n    | ThirdActionAlreadyLoaded\n    | ThirdActionAlreadyUpdated\n    | DelayedLightCardUpdate\n    | LightCardAlreadyUpdated\n    | RemoveLightCard;\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LoadLightCardsExtendedData.html":{"url":"classes/LoadLightCardsExtendedData.html","title":"class - LoadLightCardsExtendedData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LoadLightCardsExtendedData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/light-card.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/store/actions/light-card.actions.ts:56\n                            \n                        \n\n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : LightCardActionTypes.LoadLightCardsExtendedData\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/light-card.actions.ts:56\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Action} from '@ngrx/store';\nimport {LightCard} from '@ofModel/light-card.model';\nimport {Action as ThirdAction, ActionStatus} from '@ofModel/thirds.model';\nimport {Update} from \"@ngrx/entity\";\n\nexport enum LightCardActionTypes {\n    LoadLightCards = '[LCard] Load',\n    EmptyLightCards = '[LCard] Empty',\n    LoadLightCardsSuccess = '[LCard] Load Success',\n    LoadLightCardsExtendedData = '[LCard] Load Extended Data',\n    LoadLightCardsFailure = '[LCard] Load Fail',\n    SelectLightCard = '[LCard] Select One',\n    ClearLightCardSelection = '[LCard] Clear Light Card Selection',\n    AddLightCardFailure = '[LCard] Add Light Card Fail',\n    UpdatedSubscription = '[LCard] UpdateSubscription',\n    HandleUnexpectedError = '[LCard] Handle unexpected error related to authentication issue',\n    RemoveLightCard = '[LCard] Remove a card',\n    AddThirdActions = '[LCard] Adds some Third Actions to existing card',\n    UpdateALightCard = '[LCard] Update a Light Card',\n    UpdateAnAction = '[LCard] Update one Action of a LightCard',\n    UpdateAnActionFailure = '[LCard] No actions where available to update for the current selected card in the state',\n    ThirdActionAlreadyLoaded = '[LCard] Light Card contains actions',\n    ThirdActionAlreadyUpdated = '[LCard] Third Action unchanged',\n    DelayedLightCardUpdate = '[LCard] update Light Card actions later',\n    LightCardAlreadyUpdated = '[LCard] Light Card already Updated'\n}\n\n// needed by NGRX entities\nexport class LoadLightCards implements Action {\n    /* istanbul ignore next */\n    readonly type = LightCardActionTypes.LoadLightCards;\n}\n\nexport class EmptyLightCards implements Action {\n    /* istanbul ignore next */\n    readonly type = LightCardActionTypes.EmptyLightCards;\n}\n\nexport class LoadLightCardsSuccess implements Action {\n    readonly type = LightCardActionTypes.LoadLightCardsSuccess;\n\n    /* istanbul ignore next */\n    constructor(public payload: { lightCards: LightCard[] }) {\n    }\n}\n\nexport class LoadLightCardsExtendedData implements Action {\n    readonly type = LightCardActionTypes.LoadLightCardsExtendedData;\n\n    /* istanbul ignore next */\n    constructor() {\n    }\n}\n\nexport class LoadLightCardsFailure implements Action {\n    readonly type = LightCardActionTypes.LoadLightCardsFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport class SelectLightCard implements Action {\n    /* istanbul ignore next */\n    readonly type = LightCardActionTypes.SelectLightCard;\n\n    /* istanbul ignore next */\n    constructor(public payload: { selectedCardId: string }) {\n    }\n\n}\n\nexport class ClearLightCardSelection implements Action {\n\n    readonly type = LightCardActionTypes.ClearLightCardSelection;\n\n    constructor() {\n    }\n}\n\nexport class AddLightCardFailure implements Action {\n    readonly type = LightCardActionTypes.AddLightCardFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport class UpdatedSubscription implements Action {\n    readonly type = LightCardActionTypes.UpdatedSubscription;\n\n    /* istanbul ignore next */\n    constructor() {\n    }\n}\n\nexport class HandleUnexpectedError implements Action {\n    /* istanbul ignore next */\n    readonly type = LightCardActionTypes.HandleUnexpectedError;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport class RemoveLightCard implements Action {\n    readonly type = LightCardActionTypes.RemoveLightCard;\n\n    constructor(public  payload: { cards: string[] }) {\n    }\n}\n\nexport class AddThirdActions implements Action {\n    readonly type = LightCardActionTypes.AddThirdActions;\n\n    constructor(public payload: { card: LightCard, actions: Map }) {\n    }\n}\n\nexport class UpdateALightCard implements Action {\n    readonly type = LightCardActionTypes.UpdateALightCard;\n\n    constructor(public payload: { card: LightCard }) {\n    }\n}\n\nexport class UpdateAnAction implements Action {\n    readonly type = LightCardActionTypes.UpdateAnAction;\n\n    constructor(public payload: { cardId: string, actionKey: string, status: ActionStatus }) {\n    }\n}\n\nexport class UpdateAnActionFailure implements Action {\n    readonly type = LightCardActionTypes.UpdateAnActionFailure;\n\n    constructor() {\n    }\n}\n\nexport class ThirdActionAlreadyLoaded implements Action {\n    readonly type = LightCardActionTypes.ThirdActionAlreadyLoaded;\n\n    constructor() {\n    }\n}\n\nexport class ThirdActionAlreadyUpdated implements Action {\n    readonly type = LightCardActionTypes.ThirdActionAlreadyUpdated;\n\n    constructor() {\n    }\n}\n\nexport class DelayedLightCardUpdate implements Action {\n    readonly type = LightCardActionTypes.DelayedLightCardUpdate;\n\n    constructor(public payload: { card: LightCard }) {\n    }\n}\n\nexport class LightCardAlreadyUpdated implements Action {\n    readonly type = LightCardActionTypes.LightCardAlreadyUpdated;\n\n    constructor() {\n    }\n}\n\nexport type LightCardActions =\n    LoadLightCards\n    | LoadLightCardsSuccess\n    | LoadLightCardsFailure\n    | SelectLightCard\n    | ClearLightCardSelection\n    | AddLightCardFailure\n    | UpdatedSubscription\n    | HandleUnexpectedError\n    | EmptyLightCards\n    | AddThirdActions\n    | UpdateALightCard\n    | UpdateAnAction\n    | UpdateAnActionFailure\n    | ThirdActionAlreadyLoaded\n    | ThirdActionAlreadyUpdated\n    | DelayedLightCardUpdate\n    | LightCardAlreadyUpdated\n    | RemoveLightCard;\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LoadLightCardsFailure.html":{"url":"classes/LoadLightCardsFailure.html","title":"class - LoadLightCardsFailure","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LoadLightCardsFailure\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/light-card.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/store/actions/light-card.actions.ts:64\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/light-card.actions.ts:67\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : LightCardActionTypes.LoadLightCardsFailure\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/light-card.actions.ts:64\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Action} from '@ngrx/store';\nimport {LightCard} from '@ofModel/light-card.model';\nimport {Action as ThirdAction, ActionStatus} from '@ofModel/thirds.model';\nimport {Update} from \"@ngrx/entity\";\n\nexport enum LightCardActionTypes {\n    LoadLightCards = '[LCard] Load',\n    EmptyLightCards = '[LCard] Empty',\n    LoadLightCardsSuccess = '[LCard] Load Success',\n    LoadLightCardsExtendedData = '[LCard] Load Extended Data',\n    LoadLightCardsFailure = '[LCard] Load Fail',\n    SelectLightCard = '[LCard] Select One',\n    ClearLightCardSelection = '[LCard] Clear Light Card Selection',\n    AddLightCardFailure = '[LCard] Add Light Card Fail',\n    UpdatedSubscription = '[LCard] UpdateSubscription',\n    HandleUnexpectedError = '[LCard] Handle unexpected error related to authentication issue',\n    RemoveLightCard = '[LCard] Remove a card',\n    AddThirdActions = '[LCard] Adds some Third Actions to existing card',\n    UpdateALightCard = '[LCard] Update a Light Card',\n    UpdateAnAction = '[LCard] Update one Action of a LightCard',\n    UpdateAnActionFailure = '[LCard] No actions where available to update for the current selected card in the state',\n    ThirdActionAlreadyLoaded = '[LCard] Light Card contains actions',\n    ThirdActionAlreadyUpdated = '[LCard] Third Action unchanged',\n    DelayedLightCardUpdate = '[LCard] update Light Card actions later',\n    LightCardAlreadyUpdated = '[LCard] Light Card already Updated'\n}\n\n// needed by NGRX entities\nexport class LoadLightCards implements Action {\n    /* istanbul ignore next */\n    readonly type = LightCardActionTypes.LoadLightCards;\n}\n\nexport class EmptyLightCards implements Action {\n    /* istanbul ignore next */\n    readonly type = LightCardActionTypes.EmptyLightCards;\n}\n\nexport class LoadLightCardsSuccess implements Action {\n    readonly type = LightCardActionTypes.LoadLightCardsSuccess;\n\n    /* istanbul ignore next */\n    constructor(public payload: { lightCards: LightCard[] }) {\n    }\n}\n\nexport class LoadLightCardsExtendedData implements Action {\n    readonly type = LightCardActionTypes.LoadLightCardsExtendedData;\n\n    /* istanbul ignore next */\n    constructor() {\n    }\n}\n\nexport class LoadLightCardsFailure implements Action {\n    readonly type = LightCardActionTypes.LoadLightCardsFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport class SelectLightCard implements Action {\n    /* istanbul ignore next */\n    readonly type = LightCardActionTypes.SelectLightCard;\n\n    /* istanbul ignore next */\n    constructor(public payload: { selectedCardId: string }) {\n    }\n\n}\n\nexport class ClearLightCardSelection implements Action {\n\n    readonly type = LightCardActionTypes.ClearLightCardSelection;\n\n    constructor() {\n    }\n}\n\nexport class AddLightCardFailure implements Action {\n    readonly type = LightCardActionTypes.AddLightCardFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport class UpdatedSubscription implements Action {\n    readonly type = LightCardActionTypes.UpdatedSubscription;\n\n    /* istanbul ignore next */\n    constructor() {\n    }\n}\n\nexport class HandleUnexpectedError implements Action {\n    /* istanbul ignore next */\n    readonly type = LightCardActionTypes.HandleUnexpectedError;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport class RemoveLightCard implements Action {\n    readonly type = LightCardActionTypes.RemoveLightCard;\n\n    constructor(public  payload: { cards: string[] }) {\n    }\n}\n\nexport class AddThirdActions implements Action {\n    readonly type = LightCardActionTypes.AddThirdActions;\n\n    constructor(public payload: { card: LightCard, actions: Map }) {\n    }\n}\n\nexport class UpdateALightCard implements Action {\n    readonly type = LightCardActionTypes.UpdateALightCard;\n\n    constructor(public payload: { card: LightCard }) {\n    }\n}\n\nexport class UpdateAnAction implements Action {\n    readonly type = LightCardActionTypes.UpdateAnAction;\n\n    constructor(public payload: { cardId: string, actionKey: string, status: ActionStatus }) {\n    }\n}\n\nexport class UpdateAnActionFailure implements Action {\n    readonly type = LightCardActionTypes.UpdateAnActionFailure;\n\n    constructor() {\n    }\n}\n\nexport class ThirdActionAlreadyLoaded implements Action {\n    readonly type = LightCardActionTypes.ThirdActionAlreadyLoaded;\n\n    constructor() {\n    }\n}\n\nexport class ThirdActionAlreadyUpdated implements Action {\n    readonly type = LightCardActionTypes.ThirdActionAlreadyUpdated;\n\n    constructor() {\n    }\n}\n\nexport class DelayedLightCardUpdate implements Action {\n    readonly type = LightCardActionTypes.DelayedLightCardUpdate;\n\n    constructor(public payload: { card: LightCard }) {\n    }\n}\n\nexport class LightCardAlreadyUpdated implements Action {\n    readonly type = LightCardActionTypes.LightCardAlreadyUpdated;\n\n    constructor() {\n    }\n}\n\nexport type LightCardActions =\n    LoadLightCards\n    | LoadLightCardsSuccess\n    | LoadLightCardsFailure\n    | SelectLightCard\n    | ClearLightCardSelection\n    | AddLightCardFailure\n    | UpdatedSubscription\n    | HandleUnexpectedError\n    | EmptyLightCards\n    | AddThirdActions\n    | UpdateALightCard\n    | UpdateAnAction\n    | UpdateAnActionFailure\n    | ThirdActionAlreadyLoaded\n    | ThirdActionAlreadyUpdated\n    | DelayedLightCardUpdate\n    | LightCardAlreadyUpdated\n    | RemoveLightCard;\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LoadLightCardsSuccess.html":{"url":"classes/LoadLightCardsSuccess.html","title":"class - LoadLightCardsSuccess","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LoadLightCardsSuccess\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/light-card.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/store/actions/light-card.actions.ts:48\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/light-card.actions.ts:51\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : LightCardActionTypes.LoadLightCardsSuccess\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/light-card.actions.ts:48\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Action} from '@ngrx/store';\nimport {LightCard} from '@ofModel/light-card.model';\nimport {Action as ThirdAction, ActionStatus} from '@ofModel/thirds.model';\nimport {Update} from \"@ngrx/entity\";\n\nexport enum LightCardActionTypes {\n    LoadLightCards = '[LCard] Load',\n    EmptyLightCards = '[LCard] Empty',\n    LoadLightCardsSuccess = '[LCard] Load Success',\n    LoadLightCardsExtendedData = '[LCard] Load Extended Data',\n    LoadLightCardsFailure = '[LCard] Load Fail',\n    SelectLightCard = '[LCard] Select One',\n    ClearLightCardSelection = '[LCard] Clear Light Card Selection',\n    AddLightCardFailure = '[LCard] Add Light Card Fail',\n    UpdatedSubscription = '[LCard] UpdateSubscription',\n    HandleUnexpectedError = '[LCard] Handle unexpected error related to authentication issue',\n    RemoveLightCard = '[LCard] Remove a card',\n    AddThirdActions = '[LCard] Adds some Third Actions to existing card',\n    UpdateALightCard = '[LCard] Update a Light Card',\n    UpdateAnAction = '[LCard] Update one Action of a LightCard',\n    UpdateAnActionFailure = '[LCard] No actions where available to update for the current selected card in the state',\n    ThirdActionAlreadyLoaded = '[LCard] Light Card contains actions',\n    ThirdActionAlreadyUpdated = '[LCard] Third Action unchanged',\n    DelayedLightCardUpdate = '[LCard] update Light Card actions later',\n    LightCardAlreadyUpdated = '[LCard] Light Card already Updated'\n}\n\n// needed by NGRX entities\nexport class LoadLightCards implements Action {\n    /* istanbul ignore next */\n    readonly type = LightCardActionTypes.LoadLightCards;\n}\n\nexport class EmptyLightCards implements Action {\n    /* istanbul ignore next */\n    readonly type = LightCardActionTypes.EmptyLightCards;\n}\n\nexport class LoadLightCardsSuccess implements Action {\n    readonly type = LightCardActionTypes.LoadLightCardsSuccess;\n\n    /* istanbul ignore next */\n    constructor(public payload: { lightCards: LightCard[] }) {\n    }\n}\n\nexport class LoadLightCardsExtendedData implements Action {\n    readonly type = LightCardActionTypes.LoadLightCardsExtendedData;\n\n    /* istanbul ignore next */\n    constructor() {\n    }\n}\n\nexport class LoadLightCardsFailure implements Action {\n    readonly type = LightCardActionTypes.LoadLightCardsFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport class SelectLightCard implements Action {\n    /* istanbul ignore next */\n    readonly type = LightCardActionTypes.SelectLightCard;\n\n    /* istanbul ignore next */\n    constructor(public payload: { selectedCardId: string }) {\n    }\n\n}\n\nexport class ClearLightCardSelection implements Action {\n\n    readonly type = LightCardActionTypes.ClearLightCardSelection;\n\n    constructor() {\n    }\n}\n\nexport class AddLightCardFailure implements Action {\n    readonly type = LightCardActionTypes.AddLightCardFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport class UpdatedSubscription implements Action {\n    readonly type = LightCardActionTypes.UpdatedSubscription;\n\n    /* istanbul ignore next */\n    constructor() {\n    }\n}\n\nexport class HandleUnexpectedError implements Action {\n    /* istanbul ignore next */\n    readonly type = LightCardActionTypes.HandleUnexpectedError;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport class RemoveLightCard implements Action {\n    readonly type = LightCardActionTypes.RemoveLightCard;\n\n    constructor(public  payload: { cards: string[] }) {\n    }\n}\n\nexport class AddThirdActions implements Action {\n    readonly type = LightCardActionTypes.AddThirdActions;\n\n    constructor(public payload: { card: LightCard, actions: Map }) {\n    }\n}\n\nexport class UpdateALightCard implements Action {\n    readonly type = LightCardActionTypes.UpdateALightCard;\n\n    constructor(public payload: { card: LightCard }) {\n    }\n}\n\nexport class UpdateAnAction implements Action {\n    readonly type = LightCardActionTypes.UpdateAnAction;\n\n    constructor(public payload: { cardId: string, actionKey: string, status: ActionStatus }) {\n    }\n}\n\nexport class UpdateAnActionFailure implements Action {\n    readonly type = LightCardActionTypes.UpdateAnActionFailure;\n\n    constructor() {\n    }\n}\n\nexport class ThirdActionAlreadyLoaded implements Action {\n    readonly type = LightCardActionTypes.ThirdActionAlreadyLoaded;\n\n    constructor() {\n    }\n}\n\nexport class ThirdActionAlreadyUpdated implements Action {\n    readonly type = LightCardActionTypes.ThirdActionAlreadyUpdated;\n\n    constructor() {\n    }\n}\n\nexport class DelayedLightCardUpdate implements Action {\n    readonly type = LightCardActionTypes.DelayedLightCardUpdate;\n\n    constructor(public payload: { card: LightCard }) {\n    }\n}\n\nexport class LightCardAlreadyUpdated implements Action {\n    readonly type = LightCardActionTypes.LightCardAlreadyUpdated;\n\n    constructor() {\n    }\n}\n\nexport type LightCardActions =\n    LoadLightCards\n    | LoadLightCardsSuccess\n    | LoadLightCardsFailure\n    | SelectLightCard\n    | ClearLightCardSelection\n    | AddLightCardFailure\n    | UpdatedSubscription\n    | HandleUnexpectedError\n    | EmptyLightCards\n    | AddThirdActions\n    | UpdateALightCard\n    | UpdateAnAction\n    | UpdateAnActionFailure\n    | ThirdActionAlreadyLoaded\n    | ThirdActionAlreadyUpdated\n    | DelayedLightCardUpdate\n    | LightCardAlreadyUpdated\n    | RemoveLightCard;\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LoadMenu.html":{"url":"classes/LoadMenu.html","title":"class - LoadMenu","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LoadMenu\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/menu.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/store/actions/menu.actions.ts:23\n                            \n                        \n\n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : MenuActionTypes.LoadMenu\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/menu.actions.ts:23\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Action} from '@ngrx/store';\nimport {ThirdMenu} from \"@ofModel/thirds.model\";\n\nexport enum MenuActionTypes {\n    LoadMenu = '[Menu] Load Menu',\n    LoadMenuSuccess = '[Menu] Load Menu Success',\n    LoadMenuFailure = '[Menu] Load Menu Fail',\n    HandleUnexpectedError = '[Menu] Handle unexpected error',\n    SelectMenuLink = '[Menu] Select Menu Link',\n    SelectMenuLinkSuccess = '[Menu] Select Menu Link Success',\n    SelectMenuLinkFailure = '[Menu] Select Menu Link Failure',\n}\n// needed by NGRX entities\nexport class LoadMenu implements Action {\n    readonly type = MenuActionTypes.LoadMenu;\n\n    /* istanbul ignore next */\n    constructor() {\n    }\n}\nexport class LoadMenuFailure implements Action {\n    readonly type = MenuActionTypes.LoadMenuFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport class LoadMenuSuccess implements Action {\n    readonly type = MenuActionTypes.LoadMenuSuccess;\n\n    /* istanbul ignore next */\n    constructor(public payload: { menu: ThirdMenu[] }) {\n    }\n}\n\nexport class HandleUnexpectedError implements Action {\n    readonly type = MenuActionTypes.HandleUnexpectedError;\n\n    /* istanbul ignore next */\n    constructor(public payload: {error: Error}) {\n\n    }\n}\n\n/**\n * Action triggered by navigation to /thirparty/*** (for example by clicking on a third-party menu link)\n * Payload contains route parameters identifying the clicked menu entry (menu id, menu version and menu entry id)\n * Emitted by {CustomRouterEffects} in the following {Observable} @member: navigateToMenuURL\n */\nexport class SelectMenuLink implements Action {\n    readonly type = MenuActionTypes.SelectMenuLink;\n\n    /* istanbul ignore next */\n    constructor(public payload: {menu_id: string, menu_version: string, menu_entry_id: string}) {}\n}\n\n/**\n * Action triggered if menu link url was correctly computed from the given parameters (menu_id, menu_version and menu_entry_id)\n * Payload contains the computed url\n */\nexport class SelectMenuLinkSuccess implements Action {\n    readonly type = MenuActionTypes.SelectMenuLinkSuccess;\n\n    /* istanbul ignore next */\n    constructor(public payload: {iframe_url: string}) {}\n}\n\n/**\n * Action triggered if no menu entry was found for the given parameters (menu_id, menu_version and menu_entry_id)\n * Payload contains the error\n */\nexport class SelectMenuLinkFailure implements Action {\n    readonly type = MenuActionTypes.SelectMenuLinkFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport type MenuActions =\n    LoadMenu\n    | LoadMenuSuccess\n    | LoadMenuFailure\n    | HandleUnexpectedError\n    | SelectMenuLink\n    | SelectMenuLinkSuccess\n    | SelectMenuLinkFailure;\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LoadMenuFailure.html":{"url":"classes/LoadMenuFailure.html","title":"class - LoadMenuFailure","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LoadMenuFailure\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/menu.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/store/actions/menu.actions.ts:30\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/menu.actions.ts:33\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : MenuActionTypes.LoadMenuFailure\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/menu.actions.ts:30\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Action} from '@ngrx/store';\nimport {ThirdMenu} from \"@ofModel/thirds.model\";\n\nexport enum MenuActionTypes {\n    LoadMenu = '[Menu] Load Menu',\n    LoadMenuSuccess = '[Menu] Load Menu Success',\n    LoadMenuFailure = '[Menu] Load Menu Fail',\n    HandleUnexpectedError = '[Menu] Handle unexpected error',\n    SelectMenuLink = '[Menu] Select Menu Link',\n    SelectMenuLinkSuccess = '[Menu] Select Menu Link Success',\n    SelectMenuLinkFailure = '[Menu] Select Menu Link Failure',\n}\n// needed by NGRX entities\nexport class LoadMenu implements Action {\n    readonly type = MenuActionTypes.LoadMenu;\n\n    /* istanbul ignore next */\n    constructor() {\n    }\n}\nexport class LoadMenuFailure implements Action {\n    readonly type = MenuActionTypes.LoadMenuFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport class LoadMenuSuccess implements Action {\n    readonly type = MenuActionTypes.LoadMenuSuccess;\n\n    /* istanbul ignore next */\n    constructor(public payload: { menu: ThirdMenu[] }) {\n    }\n}\n\nexport class HandleUnexpectedError implements Action {\n    readonly type = MenuActionTypes.HandleUnexpectedError;\n\n    /* istanbul ignore next */\n    constructor(public payload: {error: Error}) {\n\n    }\n}\n\n/**\n * Action triggered by navigation to /thirparty/*** (for example by clicking on a third-party menu link)\n * Payload contains route parameters identifying the clicked menu entry (menu id, menu version and menu entry id)\n * Emitted by {CustomRouterEffects} in the following {Observable} @member: navigateToMenuURL\n */\nexport class SelectMenuLink implements Action {\n    readonly type = MenuActionTypes.SelectMenuLink;\n\n    /* istanbul ignore next */\n    constructor(public payload: {menu_id: string, menu_version: string, menu_entry_id: string}) {}\n}\n\n/**\n * Action triggered if menu link url was correctly computed from the given parameters (menu_id, menu_version and menu_entry_id)\n * Payload contains the computed url\n */\nexport class SelectMenuLinkSuccess implements Action {\n    readonly type = MenuActionTypes.SelectMenuLinkSuccess;\n\n    /* istanbul ignore next */\n    constructor(public payload: {iframe_url: string}) {}\n}\n\n/**\n * Action triggered if no menu entry was found for the given parameters (menu_id, menu_version and menu_entry_id)\n * Payload contains the error\n */\nexport class SelectMenuLinkFailure implements Action {\n    readonly type = MenuActionTypes.SelectMenuLinkFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport type MenuActions =\n    LoadMenu\n    | LoadMenuSuccess\n    | LoadMenuFailure\n    | HandleUnexpectedError\n    | SelectMenuLink\n    | SelectMenuLinkSuccess\n    | SelectMenuLinkFailure;\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LoadMenuSuccess.html":{"url":"classes/LoadMenuSuccess.html","title":"class - LoadMenuSuccess","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LoadMenuSuccess\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/menu.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/store/actions/menu.actions.ts:38\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/menu.actions.ts:41\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : MenuActionTypes.LoadMenuSuccess\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/menu.actions.ts:38\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Action} from '@ngrx/store';\nimport {ThirdMenu} from \"@ofModel/thirds.model\";\n\nexport enum MenuActionTypes {\n    LoadMenu = '[Menu] Load Menu',\n    LoadMenuSuccess = '[Menu] Load Menu Success',\n    LoadMenuFailure = '[Menu] Load Menu Fail',\n    HandleUnexpectedError = '[Menu] Handle unexpected error',\n    SelectMenuLink = '[Menu] Select Menu Link',\n    SelectMenuLinkSuccess = '[Menu] Select Menu Link Success',\n    SelectMenuLinkFailure = '[Menu] Select Menu Link Failure',\n}\n// needed by NGRX entities\nexport class LoadMenu implements Action {\n    readonly type = MenuActionTypes.LoadMenu;\n\n    /* istanbul ignore next */\n    constructor() {\n    }\n}\nexport class LoadMenuFailure implements Action {\n    readonly type = MenuActionTypes.LoadMenuFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport class LoadMenuSuccess implements Action {\n    readonly type = MenuActionTypes.LoadMenuSuccess;\n\n    /* istanbul ignore next */\n    constructor(public payload: { menu: ThirdMenu[] }) {\n    }\n}\n\nexport class HandleUnexpectedError implements Action {\n    readonly type = MenuActionTypes.HandleUnexpectedError;\n\n    /* istanbul ignore next */\n    constructor(public payload: {error: Error}) {\n\n    }\n}\n\n/**\n * Action triggered by navigation to /thirparty/*** (for example by clicking on a third-party menu link)\n * Payload contains route parameters identifying the clicked menu entry (menu id, menu version and menu entry id)\n * Emitted by {CustomRouterEffects} in the following {Observable} @member: navigateToMenuURL\n */\nexport class SelectMenuLink implements Action {\n    readonly type = MenuActionTypes.SelectMenuLink;\n\n    /* istanbul ignore next */\n    constructor(public payload: {menu_id: string, menu_version: string, menu_entry_id: string}) {}\n}\n\n/**\n * Action triggered if menu link url was correctly computed from the given parameters (menu_id, menu_version and menu_entry_id)\n * Payload contains the computed url\n */\nexport class SelectMenuLinkSuccess implements Action {\n    readonly type = MenuActionTypes.SelectMenuLinkSuccess;\n\n    /* istanbul ignore next */\n    constructor(public payload: {iframe_url: string}) {}\n}\n\n/**\n * Action triggered if no menu entry was found for the given parameters (menu_id, menu_version and menu_entry_id)\n * Payload contains the error\n */\nexport class SelectMenuLinkFailure implements Action {\n    readonly type = MenuActionTypes.SelectMenuLinkFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport type MenuActions =\n    LoadMenu\n    | LoadMenuSuccess\n    | LoadMenuFailure\n    | HandleUnexpectedError\n    | SelectMenuLink\n    | SelectMenuLinkSuccess\n    | SelectMenuLinkFailure;\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LoadSettings.html":{"url":"classes/LoadSettings.html","title":"class - LoadSettings","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LoadSettings\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/settings.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : SettingsActionTypes.LoadSettings\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/settings.actions.ts:25\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Action} from '@ngrx/store';\n\nexport enum SettingsActionTypes {\n    LoadSettings = '[Settings] Load Settings',\n    LoadSettingsSuccess = '[Settings] Load Settings Success',\n    LoadSettingsFailure = '[Settings] Load Settings Fail',\n\n    PatchSettings = '[Settings] Patch Settings',\n    PatchSettingsSuccess = '[Settings] Patch Settings Success',\n    PatchSettingsFailure = '[Settings] Patch Settings Fail',\n\n    HandleUnexpectedError = '[Settings] Handle unexpected error related to user settings issue'\n}\n// needed by NGRX entities\n\nexport class LoadSettings implements Action {\n    readonly type = SettingsActionTypes.LoadSettings;\n}\nexport class LoadSettingsFailure implements Action {\n    readonly type = SettingsActionTypes.LoadSettingsFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport class LoadSettingsSuccess implements Action {\n    readonly type = SettingsActionTypes.LoadSettingsSuccess;\n\n    /* istanbul ignore next */\n    constructor(public payload: { settings: any }) {\n    }\n}\n\nexport class PatchSettings implements Action {\n    readonly type = SettingsActionTypes.PatchSettings;\n    constructor(public payload: {settings:any}){}\n}\nexport class PatchSettingsFailure implements Action {\n    readonly type = SettingsActionTypes.PatchSettingsFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport class PatchSettingsSuccess implements Action {\n    readonly type = SettingsActionTypes.PatchSettingsSuccess;\n\n    /* istanbul ignore next */\n    constructor(public payload: { settings: any }) {\n    }\n}\n\nexport class HandleUnexpectedError implements Action {\n    /* istanbul ignore next */\n    readonly type = SettingsActionTypes.HandleUnexpectedError;\n    /* istanbul ignore next */\n    constructor(public payload: {error: Error}) {\n\n    }\n}\n\nexport type SettingsActions =\n    LoadSettings\n    | LoadSettingsSuccess\n    | LoadSettingsFailure\n    | PatchSettings\n    | PatchSettingsSuccess\n    | PatchSettingsFailure\n    | HandleUnexpectedError;\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LoadSettingsFailure.html":{"url":"classes/LoadSettingsFailure.html","title":"class - LoadSettingsFailure","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LoadSettingsFailure\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/settings.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/store/actions/settings.actions.ts:28\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/settings.actions.ts:31\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : SettingsActionTypes.LoadSettingsFailure\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/settings.actions.ts:28\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Action} from '@ngrx/store';\n\nexport enum SettingsActionTypes {\n    LoadSettings = '[Settings] Load Settings',\n    LoadSettingsSuccess = '[Settings] Load Settings Success',\n    LoadSettingsFailure = '[Settings] Load Settings Fail',\n\n    PatchSettings = '[Settings] Patch Settings',\n    PatchSettingsSuccess = '[Settings] Patch Settings Success',\n    PatchSettingsFailure = '[Settings] Patch Settings Fail',\n\n    HandleUnexpectedError = '[Settings] Handle unexpected error related to user settings issue'\n}\n// needed by NGRX entities\n\nexport class LoadSettings implements Action {\n    readonly type = SettingsActionTypes.LoadSettings;\n}\nexport class LoadSettingsFailure implements Action {\n    readonly type = SettingsActionTypes.LoadSettingsFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport class LoadSettingsSuccess implements Action {\n    readonly type = SettingsActionTypes.LoadSettingsSuccess;\n\n    /* istanbul ignore next */\n    constructor(public payload: { settings: any }) {\n    }\n}\n\nexport class PatchSettings implements Action {\n    readonly type = SettingsActionTypes.PatchSettings;\n    constructor(public payload: {settings:any}){}\n}\nexport class PatchSettingsFailure implements Action {\n    readonly type = SettingsActionTypes.PatchSettingsFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport class PatchSettingsSuccess implements Action {\n    readonly type = SettingsActionTypes.PatchSettingsSuccess;\n\n    /* istanbul ignore next */\n    constructor(public payload: { settings: any }) {\n    }\n}\n\nexport class HandleUnexpectedError implements Action {\n    /* istanbul ignore next */\n    readonly type = SettingsActionTypes.HandleUnexpectedError;\n    /* istanbul ignore next */\n    constructor(public payload: {error: Error}) {\n\n    }\n}\n\nexport type SettingsActions =\n    LoadSettings\n    | LoadSettingsSuccess\n    | LoadSettingsFailure\n    | PatchSettings\n    | PatchSettingsSuccess\n    | PatchSettingsFailure\n    | HandleUnexpectedError;\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LoadSettingsSuccess.html":{"url":"classes/LoadSettingsSuccess.html","title":"class - LoadSettingsSuccess","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LoadSettingsSuccess\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/settings.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/store/actions/settings.actions.ts:36\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/settings.actions.ts:39\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : SettingsActionTypes.LoadSettingsSuccess\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/settings.actions.ts:36\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Action} from '@ngrx/store';\n\nexport enum SettingsActionTypes {\n    LoadSettings = '[Settings] Load Settings',\n    LoadSettingsSuccess = '[Settings] Load Settings Success',\n    LoadSettingsFailure = '[Settings] Load Settings Fail',\n\n    PatchSettings = '[Settings] Patch Settings',\n    PatchSettingsSuccess = '[Settings] Patch Settings Success',\n    PatchSettingsFailure = '[Settings] Patch Settings Fail',\n\n    HandleUnexpectedError = '[Settings] Handle unexpected error related to user settings issue'\n}\n// needed by NGRX entities\n\nexport class LoadSettings implements Action {\n    readonly type = SettingsActionTypes.LoadSettings;\n}\nexport class LoadSettingsFailure implements Action {\n    readonly type = SettingsActionTypes.LoadSettingsFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport class LoadSettingsSuccess implements Action {\n    readonly type = SettingsActionTypes.LoadSettingsSuccess;\n\n    /* istanbul ignore next */\n    constructor(public payload: { settings: any }) {\n    }\n}\n\nexport class PatchSettings implements Action {\n    readonly type = SettingsActionTypes.PatchSettings;\n    constructor(public payload: {settings:any}){}\n}\nexport class PatchSettingsFailure implements Action {\n    readonly type = SettingsActionTypes.PatchSettingsFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport class PatchSettingsSuccess implements Action {\n    readonly type = SettingsActionTypes.PatchSettingsSuccess;\n\n    /* istanbul ignore next */\n    constructor(public payload: { settings: any }) {\n    }\n}\n\nexport class HandleUnexpectedError implements Action {\n    /* istanbul ignore next */\n    readonly type = SettingsActionTypes.HandleUnexpectedError;\n    /* istanbul ignore next */\n    constructor(public payload: {error: Error}) {\n\n    }\n}\n\nexport type SettingsActions =\n    LoadSettings\n    | LoadSettingsSuccess\n    | LoadSettingsFailure\n    | PatchSettings\n    | PatchSettingsSuccess\n    | PatchSettingsFailure\n    | HandleUnexpectedError;\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LoginComponent.html":{"url":"components/LoginComponent.html","title":"component - LoginComponent","body":"\n                   \n\n\n\n\n\n  Components\n  LoginComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/login/login.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                of-login\n            \n\n\n            \n                styles\n                .btn-primary {margin-right: 8px;}\n            \n\n\n            \n                templateUrl\n                ./login.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                codeProvider\n                            \n                            \n                                hide\n                            \n                            \n                                loginMessage\n                            \n                            \n                                useCodeOrImplicitFlow\n                            \n                            \n                                userForm\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                codeFlow\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onSubmit\n                            \n                            \n                                resetForm\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store, service: AuthenticationService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/login/login.component.ts:33\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                        Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        service\n                                                  \n                                                        \n                                                                        AuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            codeFlow\n                        \n                        \n                    \n                \n            \n            \n                \ncodeFlow()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/login/login.component.ts:65\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/login/login.component.ts:39\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onSubmit\n                        \n                        \n                    \n                \n            \n            \n                \nonSubmit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/login/login.component.ts:53\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            resetForm\n                        \n                        \n                    \n                \n            \n            \n                \nresetForm()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/login/login.component.ts:61\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            codeProvider\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/login/login.component.ts:33\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            hide\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/login/login.component.ts:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loginMessage\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Message\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/login/login.component.ts:32\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            useCodeOrImplicitFlow\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/login/login.component.ts:31\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            userForm\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormGroup\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/login/login.component.ts:30\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import {Component, OnInit} from '@angular/core';\nimport {FormControl, FormGroup} from '@angular/forms';\nimport {Store} from '@ngrx/store';\nimport {TryToLogIn} from '@ofActions/authentication.actions';\nimport {AppState} from '@ofStore/index';\nimport {buildConfigSelector} from \"@ofSelectors/config.selectors\";\nimport {filter, map} from \"rxjs/operators\";\nimport {Observable} from \"rxjs\";\nimport {AuthenticationService} from \"@ofServices/authentication/authentication.service\";\nimport {selectMessage} from \"@ofSelectors/authentication.selectors\";\nimport {Message, MessageLevel} from \"@ofModel/message.model\";\nimport {OAuthService} from \"angular-oauth2-oidc\";\n\n@Component({\n    selector: 'of-login',\n    templateUrl: './login.component.html',\n    styles: ['.btn-primary {margin-right: 8px;}']\n})\nexport class LoginComponent implements OnInit {\n\n    hide: boolean;\n    userForm: FormGroup;\n    useCodeOrImplicitFlow: boolean;\n    loginMessage: Message;\n    codeProvider: any;\n\n    /* istanbul ignore next */\n    constructor(private store: Store, private service: AuthenticationService) {\n    }\n\n    ngOnInit() {\n        this.useCodeOrImplicitFlow = this.service.isAuthModeCodeOrImplicitFlow();\n        this.store.select(selectMessage).pipe(filter(m => m != null && m.level === MessageLevel.ERROR))\n            .subscribe(m => this.loginMessage = m);\n        this.store.select(buildConfigSelector('security.oauth2.flow.provider'))\n            .subscribe(provider => this.codeProvider = {name: provider});\n        this.hide = true;\n        this.userForm = new FormGroup({\n                identifier: new FormControl(''),\n                password: new FormControl('')\n            }\n        );\n    }\n\n    onSubmit(): void {\n        if (this.userForm.valid) {\n            const username = this.userForm.get('identifier').value;\n            const password = this.userForm.get('password').value;\n            this.store.dispatch(new TryToLogIn({username: username, password: password}));\n        }\n    }\n\n    resetForm(): void {\n        this.userForm.reset();\n    }\n\n    codeFlow(): void {\n        this.service.move();\n    }\n\n}\n\n    \n\n    \n        \n\n\n\n\n\n\n\n    \n        \n            \n                \n                    login.login\n                    \n                    \n                        login.password\n                        \n                    \n                    \n                        login.submit.password\n                        login.reset\n                    \n                \n                \n                    \n                    login.submit.code\n                    \n                \n            \n            {{loginMessage.i18n.key|translate:loginMessage.i18n.parameters}}\n        \n    \n\n\n    \n\n    \n            .btn-primary {margin-right: 8px;}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                            login.login                                                                login.password                                                                                        login.submit.password                        login.reset                                                                                            login.submit.code                                                            {{loginMessage.i18n.key|translate:loginMessage.i18n.parameters}}            '\n    var COMPONENTS = [{'name': 'ActionComponent', 'selector': 'of-action'},{'name': 'AppComponent', 'selector': 'of-root'},{'name': 'ArchiveFiltersComponent', 'selector': 'of-archive-filters'},{'name': 'ArchiveListComponent', 'selector': 'of-archive-list'},{'name': 'ArchiveListPageComponent', 'selector': 'of-archive-list-page'},{'name': 'ArchivesComponent', 'selector': 'of-archives'},{'name': 'BaseSettingComponent', 'selector': 'of-base-setting'},{'name': 'CardComponent', 'selector': 'of-card'},{'name': 'CardDetailsComponent', 'selector': 'of-card-details'},{'name': 'CardListComponent', 'selector': 'of-card-list'},{'name': 'ConfirmModalComponent', 'selector': 'confirm-modal-component'},{'name': 'CustomLogoComponent', 'selector': 'of-custom-logo'},{'name': 'CustomTimelineChartComponent', 'selector': 'of-custom-timeline-chart'},{'name': 'DatetimeFilterComponent', 'selector': 'of-datetime-filter'},{'name': 'DetailComponent', 'selector': 'of-detail'},{'name': 'DetailsComponent', 'selector': 'of-details'},{'name': 'EmailSettingComponent', 'selector': 'of-email-setting'},{'name': 'FeedComponent', 'selector': 'of-cards'},{'name': 'FiltersComponent', 'selector': 'of-filters'},{'name': 'IconComponent', 'selector': 'of-icon'},{'name': 'IframeDisplayComponent', 'selector': 'of-iframedisplay'},{'name': 'InfoComponent', 'selector': 'of-info'},{'name': 'InitChartComponent', 'selector': 'of-init-chart'},{'name': 'ListSettingComponent', 'selector': 'of-list-setting'},{'name': 'LoginComponent', 'selector': 'of-login'},{'name': 'MenuLinkComponent', 'selector': 'of-menu-link'},{'name': 'MultiFilterComponent', 'selector': 'of-multi-filter'},{'name': 'MultiSettingsComponent', 'selector': 'of-multi-settings'},{'name': 'NavbarComponent', 'selector': 'of-navbar'},{'name': 'NoSelectionComponent', 'selector': 'of-no-selection'},{'name': 'ResizableComponent', 'selector': 'of-resizable'},{'name': 'SettingsComponent', 'selector': 'of-settings'},{'name': 'TagsFilterComponent', 'selector': 'of-tags-filter'},{'name': 'TextSettingComponent', 'selector': 'of-text-setting'},{'name': 'TimeFilterComponent', 'selector': 'of-time-filter'},{'name': 'TimeLineComponent', 'selector': 'of-time-line'},{'name': 'TypeAheadSettingsComponent', 'selector': 'of-type-ahead-settings'},{'name': 'TypeFilterComponent', 'selector': 'of-type-filter'}];\n    var DIRECTIVES = [{'name': 'CalcHeightDirective', 'selector': '[calcHeightDirective]'},{'name': 'DraggableDirective', 'selector': '[appDraggable]'},{'name': 'MouseWheelDirective', 'selector': '[appMouseWheel]'}];\n    var ACTUAL_COMPONENT = {'name': 'LoginComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Map.html":{"url":"classes/Map.html","title":"class - Map","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Map\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/model/map.ts\n        \n\n\n\n\n\n\n\n\n\n            \n    Indexable\n        \n            \n                \n                    \n                        [key: string]:    T\n\n                    \n                \n                        \n                            \n                                Defined in src/app/model/map.ts:9\n                            \n                        \n            \n        \n\n\n\n\n\n\n    \n\n\n    \n        export class Map {\n    [key: string]: T;\n}\n\n\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MenuEffects.html":{"url":"injectables/MenuEffects.html","title":"injectable - MenuEffects","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  MenuEffects\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/effects/menu.effects.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                load\n                            \n                            \n                                resolveThirdPartyLink\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store, actions$: Actions, service: ThirdsService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/store/effects/menu.effects.ts:28\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                        Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        actions$\n                                                  \n                                                        \n                                                                        Actions\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        service\n                                                  \n                                                        \n                                                                        ThirdsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            load\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Observable\n\n                        \n                    \n                    \n                        \n                            Default value : this.actions$\n        .pipe(\n            ofType(MenuActionTypes.LoadMenu),\n            switchMap(action =>  this.service.computeThirdsMenu()),\n            map(menu =>\n                new LoadMenuSuccess({menu: menu})\n            ),\n            catchError((err, caught) => {\n                console.error(err);\n                this.store.dispatch(new LoadMenuFailure(err));\n                return caught;\n            })\n        )\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Effect()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/effects/menu.effects.ts:39\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            resolveThirdPartyLink\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Observable\n\n                        \n                    \n                    \n                        \n                            Default value : this.actions$\n        .pipe(\n            ofType(MenuActionTypes.SelectMenuLink),\n            switchMap(action => this.service.queryMenuEntryURL(action.payload.menu_id, action.payload.menu_version, action.payload.menu_entry_id)),\n            map(url =>\n                new SelectMenuLinkSuccess({iframe_url: url})\n            ),\n            catchError(err => {\n                console.error(err);\n                this.router.navigate(['/']); //On error, redirect to index page\n                return of(new SelectMenuLinkFailure(err));\n            })\n        )\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Effect()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/effects/menu.effects.ts:62\n                            \n                        \n\n                \n                    \n                        This {Observable} listens for {MenuActionTypes.SelectMenuLink} type.\nIt then tries to get the corresponding menu link from the {ThirdsService}.\nIf successful, it fires a {SelectMenuLinkSuccess} action with the result as payload.\nIf not, it fires a {SelectMenuLinkFailure} action with the error as payload and navigates back to the index page\n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import {Injectable} from '@angular/core';\nimport {Actions, Effect, ofType} from '@ngrx/effects';\nimport {Action, Store} from '@ngrx/store';\nimport {Observable, of, zip} from 'rxjs';\nimport {catchError, map, switchMap} from 'rxjs/operators';\nimport {AppState} from \"@ofStore/index\";\nimport {ThirdsService} from \"@ofServices/thirds.service\";\nimport {\n    LoadMenu,\n    LoadMenuFailure,\n    LoadMenuSuccess,\n    MenuActionTypes,\n    SelectMenuLink,\n    SelectMenuLinkFailure,\n    SelectMenuLinkSuccess\n} from \"@ofActions/menu.actions\";\nimport {Router} from \"@angular/router\";\n\n@Injectable()\nexport class MenuEffects {\n\n    /* istanbul ignore next */\n    constructor(private store: Store,\n                private actions$: Actions,\n                private service: ThirdsService,\n                private router: Router\n    ) {\n    }\n\n    @Effect()\n    load: Observable = this.actions$\n        .pipe(\n            ofType(MenuActionTypes.LoadMenu),\n            switchMap(action =>  this.service.computeThirdsMenu()),\n            map(menu =>\n                new LoadMenuSuccess({menu: menu})\n            ),\n            catchError((err, caught) => {\n                console.error(err);\n                this.store.dispatch(new LoadMenuFailure(err));\n                return caught;\n            })\n        );\n\n    /**\n     * This {Observable} listens for {MenuActionTypes.SelectMenuLink} type.\n     * It then tries to get the corresponding menu link from the {ThirdsService}.\n     * If successful, it fires a {SelectMenuLinkSuccess} action with the result as payload.\n     * If not, it fires a {SelectMenuLinkFailure} action with the error as payload and navigates back to the index page\n     *\n     * @name resolveThirdPartyLink\n     */\n    @Effect()\n    resolveThirdPartyLink: Observable = this.actions$\n        .pipe(\n            ofType(MenuActionTypes.SelectMenuLink),\n            switchMap(action => this.service.queryMenuEntryURL(action.payload.menu_id, action.payload.menu_version, action.payload.menu_entry_id)),\n            map(url =>\n                new SelectMenuLinkSuccess({iframe_url: url})\n            ),\n            catchError(err => {\n                console.error(err);\n                this.router.navigate(['/']); //On error, redirect to index page\n                return of(new SelectMenuLinkFailure(err));\n            })\n        );\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MenuLinkComponent.html":{"url":"components/MenuLinkComponent.html","title":"component - MenuLinkComponent","body":"\n                   \n\n\n\n\n\n  Components\n  MenuLinkComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/navbar/menus/menu-link/menu-link.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                of-menu-link\n            \n\n            \n                styleUrls\n                ./menu-link.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./menu-link.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                menusOpenInBoth\n                            \n                            \n                                menusOpenInIframes\n                            \n                            \n                                menusOpenInTabs\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                menu\n                            \n                            \n                                menuEntry\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/navbar/menus/menu-link/menu-link.component.ts:25\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                        Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        menu\n                    \n                \n                \n                    \n                        Type :         ThirdMenu\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/navbar/menus/menu-link/menu-link.component.ts:21\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        menuEntry\n                    \n                \n                \n                    \n                        Type :         ThirdMenuEntry\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/navbar/menus/menu-link/menu-link.component.ts:22\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/navbar/menus/menu-link/menu-link.component.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            menusOpenInBoth\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/navbar/menus/menu-link/menu-link.component.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            menusOpenInIframes\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/navbar/menus/menu-link/menu-link.component.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            menusOpenInTabs\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/navbar/menus/menu-link/menu-link.component.ts:23\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import {Component, Input, OnInit} from '@angular/core';\nimport {ThirdMenu, ThirdMenuEntry} from \"@ofModel/thirds.model\";\nimport {buildConfigSelector} from \"@ofSelectors/config.selectors\";\nimport {Store} from \"@ngrx/store\";\nimport {AppState} from \"@ofStore/index\";\n\n@Component({\n  selector: 'of-menu-link',\n  templateUrl: './menu-link.component.html',\n  styleUrls: ['./menu-link.component.scss']\n})\nexport class MenuLinkComponent implements OnInit {\n\n  @Input() public menu: ThirdMenu;\n  @Input() public menuEntry: ThirdMenuEntry;\n  menusOpenInTabs: boolean;\n  menusOpenInIframes: boolean;\n  menusOpenInBoth: boolean;\n\n  constructor(private store: Store) {\n  }\n\n  ngOnInit() {\n    this.store.select(buildConfigSelector('navbar.thirdmenus.type', 'BOTH'))\n        .subscribe(v=> {\n          if(v == 'TAB') {\n            this.menusOpenInTabs = true;\n          } else if (v == 'IFRAME') {\n            this.menusOpenInIframes = true;\n          } else {\n            if (!(v == 'BOTH')) {\n              console.log(\"MenuLinkComponent - Property navbar.thirdmenus.type has an unexpected value: \"+v+\". Default (BOTH) will be applied.\")\n            }\n            this.menusOpenInBoth = true;\n          }\n        })\n  }\n}\n\n\n\n    \n\n    \n        \n\n\n\n\n\n\n  \n    {{menu.id}}.{{menu.version}}.{{menuEntry.label}}\n\n\n  \n    {{menu.id}}.{{menu.version}}.{{menuEntry.label}}\n\n\n  \n    {{menu.id}}.{{menu.version}}.{{menuEntry.label}}\n  \n    \n  \n\n    \n\n    \n                \n                    ./menu-link.component.scss\n                \n                /* Copyright (c) 2020, RTE (http://www.rte-france.com)\n *\n * This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n */\n\n\n.text-link {\n    color: inherit;\n    text-decoration: none;\n}\n\n.icon-link {\n    color: inherit;\n    text-decoration: none;\n    padding-left: 0.5rem;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      {{menu.id}}.{{menu.version}}.{{menuEntry.label}}      {{menu.id}}.{{menu.version}}.{{menuEntry.label}}      {{menu.id}}.{{menu.version}}.{{menuEntry.label}}        '\n    var COMPONENTS = [{'name': 'ActionComponent', 'selector': 'of-action'},{'name': 'AppComponent', 'selector': 'of-root'},{'name': 'ArchiveFiltersComponent', 'selector': 'of-archive-filters'},{'name': 'ArchiveListComponent', 'selector': 'of-archive-list'},{'name': 'ArchiveListPageComponent', 'selector': 'of-archive-list-page'},{'name': 'ArchivesComponent', 'selector': 'of-archives'},{'name': 'BaseSettingComponent', 'selector': 'of-base-setting'},{'name': 'CardComponent', 'selector': 'of-card'},{'name': 'CardDetailsComponent', 'selector': 'of-card-details'},{'name': 'CardListComponent', 'selector': 'of-card-list'},{'name': 'ConfirmModalComponent', 'selector': 'confirm-modal-component'},{'name': 'CustomLogoComponent', 'selector': 'of-custom-logo'},{'name': 'CustomTimelineChartComponent', 'selector': 'of-custom-timeline-chart'},{'name': 'DatetimeFilterComponent', 'selector': 'of-datetime-filter'},{'name': 'DetailComponent', 'selector': 'of-detail'},{'name': 'DetailsComponent', 'selector': 'of-details'},{'name': 'EmailSettingComponent', 'selector': 'of-email-setting'},{'name': 'FeedComponent', 'selector': 'of-cards'},{'name': 'FiltersComponent', 'selector': 'of-filters'},{'name': 'IconComponent', 'selector': 'of-icon'},{'name': 'IframeDisplayComponent', 'selector': 'of-iframedisplay'},{'name': 'InfoComponent', 'selector': 'of-info'},{'name': 'InitChartComponent', 'selector': 'of-init-chart'},{'name': 'ListSettingComponent', 'selector': 'of-list-setting'},{'name': 'LoginComponent', 'selector': 'of-login'},{'name': 'MenuLinkComponent', 'selector': 'of-menu-link'},{'name': 'MultiFilterComponent', 'selector': 'of-multi-filter'},{'name': 'MultiSettingsComponent', 'selector': 'of-multi-settings'},{'name': 'NavbarComponent', 'selector': 'of-navbar'},{'name': 'NoSelectionComponent', 'selector': 'of-no-selection'},{'name': 'ResizableComponent', 'selector': 'of-resizable'},{'name': 'SettingsComponent', 'selector': 'of-settings'},{'name': 'TagsFilterComponent', 'selector': 'of-tags-filter'},{'name': 'TextSettingComponent', 'selector': 'of-text-setting'},{'name': 'TimeFilterComponent', 'selector': 'of-time-filter'},{'name': 'TimeLineComponent', 'selector': 'of-time-line'},{'name': 'TypeAheadSettingsComponent', 'selector': 'of-type-ahead-settings'},{'name': 'TypeFilterComponent', 'selector': 'of-type-filter'}];\n    var DIRECTIVES = [{'name': 'CalcHeightDirective', 'selector': '[calcHeightDirective]'},{'name': 'DraggableDirective', 'selector': '[appDraggable]'},{'name': 'MouseWheelDirective', 'selector': '[appMouseWheel]'}];\n    var ACTUAL_COMPONENT = {'name': 'MenuLinkComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MenuState.html":{"url":"interfaces/MenuState.html","title":"interface - MenuState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  MenuState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/states/menu.state.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        error\n                                \n                                \n                                        loading\n                                \n                                \n                                        menu\n                                \n                                \n                                        selected_iframe_url\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        error\n                                    \n                                \n                                \n                                    \n                                        error:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        loading\n                                    \n                                \n                                \n                                    \n                                        loading:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        menu\n                                    \n                                \n                                \n                                    \n                                        menu:     ThirdMenu[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     ThirdMenu[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        selected_iframe_url\n                                    \n                                \n                                \n                                    \n                                        selected_iframe_url:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {ThirdMenu} from \"@ofModel/thirds.model\";\n\nexport interface MenuState{\n    menu: ThirdMenu[],\n    loading: boolean,\n    error:string,\n    selected_iframe_url: string\n}\n\nexport const menuInitialState: MenuState = {\n    menu:[],\n    loading: false,\n    error:null,\n    selected_iframe_url: null\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Message.html":{"url":"classes/Message.html","title":"class - Message","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Message\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/model/message.model.ts\n        \n\n\n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(message: string, level, i18n?: I18n)\n                    \n                \n                        \n                            \n                                Defined in src/app/model/message.model.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        message\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        level\n                                                  \n                                                        \n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        i18n\n                                                  \n                                                        \n                                                                        I18n\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {I18n} from \"@ofModel/i18n.model\";\n\nexport class Message {\n\n    /* istanbul ignore next */\n    constructor(\n        readonly message: string,\n        readonly level = MessageLevel.DEBUG,\n        readonly i18n?: I18n,\n    ){}\n}\n\nexport enum MessageLevel {\n    ERROR, INFO, DEBUG\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/MouseWheelDirective.html":{"url":"directives/MouseWheelDirective.html","title":"directive - MouseWheelDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  MouseWheelDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/modules/feed/components/time-line/directives/mouse-wheel.directive.ts\n        \n\n            \n                Description\n            \n            \n                Mousewheel directive\nhttps://github.com/SodhanaLibrary/angular2-examples/blob/master/app/mouseWheelDirective/mousewheel.directive.ts\n\n            \n\n\n            \n                Example\n            \n            \n            \n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        [appMouseWheel]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                mouseWheelFunc\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                mouseWheelDown\n                            \n                            \n                                mouseWheelUp\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        HostListeners\n                    \n                \n                \n                    \n                        \n                            \n                                DOMMouseScroll\n                            \n                            \n                                mousewheel\n                            \n                            \n                                onmousewheel\n                            \n                        \n                    \n                \n\n        \n    \n\n\n\n\n            \n    Outputs\n        \n            \n                \n                    \n                        \n                        mouseWheelDown\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/feed/components/time-line/directives/mouse-wheel.directive.ts:20\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        mouseWheelUp\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/feed/components/time-line/directives/mouse-wheel.directive.ts:18\n                            \n                        \n            \n        \n\n\n            \n    HostListeners    \n        \n            \n                \n                    \n                    \n                        \n                            DOMMouseScroll\n                        \n                        \n                    \n                \n            \n            \n                \n                    Arguments : '$event' \n                \n            \n            \n                \nDOMMouseScroll(event: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/feed/components/time-line/directives/mouse-wheel.directive.ts:28\n                \n            \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            mousewheel\n                        \n                        \n                    \n                \n            \n            \n                \n                    Arguments : '$event' \n                \n            \n            \n                \nmousewheel(event: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/feed/components/time-line/directives/mouse-wheel.directive.ts:23\n                \n            \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onmousewheel\n                        \n                        \n                    \n                \n            \n            \n                \n                    Arguments : '$event' \n                \n            \n            \n                \nonmousewheel(event: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/feed/components/time-line/directives/mouse-wheel.directive.ts:33\n                \n            \n\n\n        \n    \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            mouseWheelFunc\n                        \n                        \n                    \n                \n            \n            \n                \nmouseWheelFunc(event: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/feed/components/time-line/directives/mouse-wheel.directive.ts:41\n                \n            \n\n\n            \n                \n                    emit mouse wheel up or down event\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n    \n\n\n    \n        import {Directive, EventEmitter, HostListener, Output} from '@angular/core';\n\n/**\n * Mousewheel directive\n * https://github.com/SodhanaLibrary/angular2-examples/blob/master/app/mouseWheelDirective/mousewheel.directive.ts\n * @export\n */\n@Directive({ selector: '[appMouseWheel]' })\nexport class MouseWheelDirective {\n  @Output()\n  mouseWheelUp = new EventEmitter();\n  @Output()\n  mouseWheelDown = new EventEmitter();\n\n  @HostListener('mousewheel', ['$event'])\n  onMouseWheelChrome(event: any): void {\n    this.mouseWheelFunc(event);\n  }\n\n  @HostListener('DOMMouseScroll', ['$event'])\n  onMouseWheelFirefox(event: any): void {\n    this.mouseWheelFunc(event);\n  }\n\n  @HostListener('onmousewheel', ['$event'])\n  onMouseWheelIE(event: any): void {\n    this.mouseWheelFunc(event);\n  }\n\n  /**\n   * emit mouse wheel up or down event\n   * @param event\n   */\n  mouseWheelFunc(event: any): void {\n    if (window.event) {\n      event = window.event;\n    }\n\n    let delta = 0;\n    delta = Math.max(-1, Math.min(1, event.wheelDelta || -event.detail));\n    if (delta > 0) {\n      this.mouseWheelUp.emit(event);\n    } else if (delta \n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MultiFilterComponent.html":{"url":"components/MultiFilterComponent.html","title":"component - MultiFilterComponent","body":"\n                   \n\n\n\n\n\n  Components\n  MultiFilterComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/archives/components/archive-filters/multi-filter/multi-filter.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                of-multi-filter\n            \n\n            \n                styleUrls\n                ./multi-filter.component.css\n            \n\n\n\n            \n                templateUrl\n                ./multi-filter.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                preparedList\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                filterPath\n                            \n                            \n                                parentForm\n                            \n                            \n                                values\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(translateService: TranslateService)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/archives/components/archive-filters/multi-filter/multi-filter.component.ts:25\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        translateService\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        filterPath\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/archives/components/archive-filters/multi-filter/multi-filter.component.ts:25\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        parentForm\n                    \n                \n                \n                    \n                        Type :         FormGroup\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/archives/components/archive-filters/multi-filter/multi-filter.component.ts:23\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        values\n                    \n                \n                \n                    \n                        Type :     (literal type | string)[]\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/archives/components/archive-filters/multi-filter/multi-filter.component.ts:22\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/archives/components/archive-filters/multi-filter/multi-filter.component.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            preparedList\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/archives/components/archive-filters/multi-filter/multi-filter.component.ts:21\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, Input } from '@angular/core';\nimport { Observable, of } from 'rxjs';\nimport { I18n } from '@ofModel/i18n.model';\nimport { TranslateService } from '@ngx-translate/core';\nimport { FormGroup, FormControl } from '@angular/forms';\n\n@Component({\n  selector: 'of-multi-filter',\n  templateUrl: './multi-filter.component.html',\n  styleUrls: ['./multi-filter.component.css']\n})\nexport class MultiFilterComponent implements OnInit {\n\n  preparedList: { value: string, label: Observable }[];\n  @Input() values: ({ value: string, label: (I18n | string) } | string)[];\n  @Input() parentForm: FormGroup;\n\n  @Input() filterPath: string;\n  constructor(private translateService: TranslateService) {\n    this.parentForm = new   FormGroup({\n      [this.filterPath]: new FormControl()\n    });\n  }\n\n  ngOnInit() {\n    this.preparedList = [];\n    if (this.values) {\n      for (const v of this.values) {\n        if (typeof v === 'string') {\n          this.preparedList.push({value: v, label: of(v)});\n        } else if (typeof v.label === 'string') {\n          this.preparedList.push({value: v.value, label: of(v.label)});\n        } else {\n          this.preparedList.push({\n            value: v.value,\n            label: this.translateService.get(v.label.key, v.label.parameters)\n          });\n        }\n      }\n    }\n  }\n\n}\n\n    \n\n    \n        \n\n\n\n\n\n\n\n  archive.filters.{{filterPath}}\n  \n    {{v.label|async}}\n  \n\n\n    \n\n    \n                \n                    ./multi-filter.component.css\n                \n                /* Copyright (c) 2020, RTE (http://www.rte-france.com)\n *\n * This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n */\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  archive.filters.{{filterPath}}      {{v.label|async}}  '\n    var COMPONENTS = [{'name': 'ActionComponent', 'selector': 'of-action'},{'name': 'AppComponent', 'selector': 'of-root'},{'name': 'ArchiveFiltersComponent', 'selector': 'of-archive-filters'},{'name': 'ArchiveListComponent', 'selector': 'of-archive-list'},{'name': 'ArchiveListPageComponent', 'selector': 'of-archive-list-page'},{'name': 'ArchivesComponent', 'selector': 'of-archives'},{'name': 'BaseSettingComponent', 'selector': 'of-base-setting'},{'name': 'CardComponent', 'selector': 'of-card'},{'name': 'CardDetailsComponent', 'selector': 'of-card-details'},{'name': 'CardListComponent', 'selector': 'of-card-list'},{'name': 'ConfirmModalComponent', 'selector': 'confirm-modal-component'},{'name': 'CustomLogoComponent', 'selector': 'of-custom-logo'},{'name': 'CustomTimelineChartComponent', 'selector': 'of-custom-timeline-chart'},{'name': 'DatetimeFilterComponent', 'selector': 'of-datetime-filter'},{'name': 'DetailComponent', 'selector': 'of-detail'},{'name': 'DetailsComponent', 'selector': 'of-details'},{'name': 'EmailSettingComponent', 'selector': 'of-email-setting'},{'name': 'FeedComponent', 'selector': 'of-cards'},{'name': 'FiltersComponent', 'selector': 'of-filters'},{'name': 'IconComponent', 'selector': 'of-icon'},{'name': 'IframeDisplayComponent', 'selector': 'of-iframedisplay'},{'name': 'InfoComponent', 'selector': 'of-info'},{'name': 'InitChartComponent', 'selector': 'of-init-chart'},{'name': 'ListSettingComponent', 'selector': 'of-list-setting'},{'name': 'LoginComponent', 'selector': 'of-login'},{'name': 'MenuLinkComponent', 'selector': 'of-menu-link'},{'name': 'MultiFilterComponent', 'selector': 'of-multi-filter'},{'name': 'MultiSettingsComponent', 'selector': 'of-multi-settings'},{'name': 'NavbarComponent', 'selector': 'of-navbar'},{'name': 'NoSelectionComponent', 'selector': 'of-no-selection'},{'name': 'ResizableComponent', 'selector': 'of-resizable'},{'name': 'SettingsComponent', 'selector': 'of-settings'},{'name': 'TagsFilterComponent', 'selector': 'of-tags-filter'},{'name': 'TextSettingComponent', 'selector': 'of-text-setting'},{'name': 'TimeFilterComponent', 'selector': 'of-time-filter'},{'name': 'TimeLineComponent', 'selector': 'of-time-line'},{'name': 'TypeAheadSettingsComponent', 'selector': 'of-type-ahead-settings'},{'name': 'TypeFilterComponent', 'selector': 'of-type-filter'}];\n    var DIRECTIVES = [{'name': 'CalcHeightDirective', 'selector': '[calcHeightDirective]'},{'name': 'DraggableDirective', 'selector': '[appDraggable]'},{'name': 'MouseWheelDirective', 'selector': '[appMouseWheel]'}];\n    var ACTUAL_COMPONENT = {'name': 'MultiFilterComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MultiSettingsComponent.html":{"url":"components/MultiSettingsComponent.html","title":"component - MultiSettingsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  MultiSettingsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/settings/components/settings/multi-settings/multi-settings.component.ts\n\n\n\n    \n        Extends\n    \n    \n                BaseSettingComponent\n    \n\n    \n        Implements\n    \n    \n                    OnInit\n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                of-multi-settings\n            \n\n\n\n\n            \n                templateUrl\n                ./multi-settings.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                baseSettings\n                            \n                            \n                                form\n                            \n                            \n                                    Private\n                                ngUnsubscribe$\n                            \n                            \n                                    Protected\n                                placeholder$\n                            \n                            \n                                    Protected\n                                setting$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                computeMultiValidators\n                            \n                            \n                                initFormGroup\n                            \n                            \n                                updateValue\n                            \n                            \n                                    Protected\n                                convert\n                            \n                            \n                                    Private\n                                dispatch\n                            \n                            \n                                    Protected\n                                initFormGroup\n                            \n                            \n                                    Protected\n                                isEqual\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                    Protected\n                                submitValue\n                            \n                            \n                                    Protected\n                                updateValue\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                messagePlaceholder\n                            \n                            \n                                requiredField\n                            \n                            \n                                settingPath\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/settings/components/settings/multi-settings/multi-settings.component.ts:19\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                        Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        messagePlaceholder\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                            \n                                \n                                    Inherited from         BaseSettingComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseSettingComponent:28\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        requiredField\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                            \n                                \n                                    Inherited from         BaseSettingComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseSettingComponent:29\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        settingPath\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                            \n                                \n                                    Inherited from         BaseSettingComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseSettingComponent:27\n\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            computeMultiValidators\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    computeMultiValidators()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/settings/components/settings/multi-settings/multi-settings.component.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     {}\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            initFormGroup\n                        \n                        \n                    \n                \n            \n            \n                \ninitFormGroup()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/settings/components/settings/multi-settings/multi-settings.component.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            updateValue\n                        \n                        \n                    \n                \n            \n            \n                \nupdateValue(value)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/settings/components/settings/multi-settings/multi-settings.component.ts:39\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            convert\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    convert(value: any)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseSettingComponent\n\n                \n            \n            \n                \n                        Defined in         BaseSettingComponent:83\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            dispatch\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    dispatch(value: any)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseSettingComponent\n\n                \n            \n            \n                \n                        Defined in         BaseSettingComponent:88\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            initFormGroup\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    initFormGroup()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseSettingComponent\n\n                \n            \n            \n                \n                        Defined in         BaseSettingComponent:79\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         FormGroup\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            isEqual\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    isEqual(formA, formB)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseSettingComponent\n\n                \n            \n            \n                \n                        Defined in         BaseSettingComponent:94\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    formA\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    formB\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseSettingComponent\n\n                \n            \n            \n                \n                        Defined in         BaseSettingComponent:70\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseSettingComponent\n\n                \n            \n            \n                \n                        Defined in         BaseSettingComponent:40\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            submitValue\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    submitValue()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseSettingComponent\n\n                \n            \n            \n                \n                        Defined in         BaseSettingComponent:98\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            updateValue\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updateValue(value: any)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseSettingComponent\n\n                \n            \n            \n                \n                        Defined in         BaseSettingComponent:75\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            baseSettings\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {}\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseSettingComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseSettingComponent:34\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            form\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormGroup\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseSettingComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseSettingComponent:33\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            ngUnsubscribe$\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Subject()\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseSettingComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseSettingComponent:30\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            placeholder$\n                            \n                        \n                    \n                \n                            \n                                \n                                    Inherited from         BaseSettingComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseSettingComponent:32\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            setting$\n                            \n                        \n                    \n                \n                            \n                                \n                                    Inherited from         BaseSettingComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseSettingComponent:31\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import {Component, OnDestroy, OnInit} from '@angular/core';\nimport {BaseSettingComponent} from \"../base-setting/base-setting.component\";\nimport {Store} from \"@ngrx/store\";\nimport {AppState} from \"@ofStore/index\";\nimport {FormControl, FormGroup, Validators} from \"@angular/forms\";\n\n@Component({\n  selector: 'of-multi-settings',\n  templateUrl: './multi-settings.component.html'\n})\nexport class MultiSettingsComponent extends BaseSettingComponent implements OnInit, OnDestroy {\n\n    constructor(protected store: Store) {\n      super(store)\n    }\n\n    initFormGroup(){\n        let validators = this.computeMultiValidators();\n        return new FormGroup({\n            setting: new FormControl([],validators)\n        }, {updateOn: 'change'});\n    }\n\n    protected computeMultiValidators() {\n        let validators = [];\n        if (this.requiredField)\n            validators.push(Validators.required);\n        return validators;\n    }\n\n    updateValue(value){\n        this.form.get('setting').setValue(value,{emitEvent:false});\n    }\n\n}\n\n    \n\n    \n        \n\n\n\n\n\n\n\n  multi-settings works!\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  multi-settings works!'\n    var COMPONENTS = [{'name': 'ActionComponent', 'selector': 'of-action'},{'name': 'AppComponent', 'selector': 'of-root'},{'name': 'ArchiveFiltersComponent', 'selector': 'of-archive-filters'},{'name': 'ArchiveListComponent', 'selector': 'of-archive-list'},{'name': 'ArchiveListPageComponent', 'selector': 'of-archive-list-page'},{'name': 'ArchivesComponent', 'selector': 'of-archives'},{'name': 'BaseSettingComponent', 'selector': 'of-base-setting'},{'name': 'CardComponent', 'selector': 'of-card'},{'name': 'CardDetailsComponent', 'selector': 'of-card-details'},{'name': 'CardListComponent', 'selector': 'of-card-list'},{'name': 'ConfirmModalComponent', 'selector': 'confirm-modal-component'},{'name': 'CustomLogoComponent', 'selector': 'of-custom-logo'},{'name': 'CustomTimelineChartComponent', 'selector': 'of-custom-timeline-chart'},{'name': 'DatetimeFilterComponent', 'selector': 'of-datetime-filter'},{'name': 'DetailComponent', 'selector': 'of-detail'},{'name': 'DetailsComponent', 'selector': 'of-details'},{'name': 'EmailSettingComponent', 'selector': 'of-email-setting'},{'name': 'FeedComponent', 'selector': 'of-cards'},{'name': 'FiltersComponent', 'selector': 'of-filters'},{'name': 'IconComponent', 'selector': 'of-icon'},{'name': 'IframeDisplayComponent', 'selector': 'of-iframedisplay'},{'name': 'InfoComponent', 'selector': 'of-info'},{'name': 'InitChartComponent', 'selector': 'of-init-chart'},{'name': 'ListSettingComponent', 'selector': 'of-list-setting'},{'name': 'LoginComponent', 'selector': 'of-login'},{'name': 'MenuLinkComponent', 'selector': 'of-menu-link'},{'name': 'MultiFilterComponent', 'selector': 'of-multi-filter'},{'name': 'MultiSettingsComponent', 'selector': 'of-multi-settings'},{'name': 'NavbarComponent', 'selector': 'of-navbar'},{'name': 'NoSelectionComponent', 'selector': 'of-no-selection'},{'name': 'ResizableComponent', 'selector': 'of-resizable'},{'name': 'SettingsComponent', 'selector': 'of-settings'},{'name': 'TagsFilterComponent', 'selector': 'of-tags-filter'},{'name': 'TextSettingComponent', 'selector': 'of-text-setting'},{'name': 'TimeFilterComponent', 'selector': 'of-time-filter'},{'name': 'TimeLineComponent', 'selector': 'of-time-line'},{'name': 'TypeAheadSettingsComponent', 'selector': 'of-type-ahead-settings'},{'name': 'TypeFilterComponent', 'selector': 'of-type-filter'}];\n    var DIRECTIVES = [{'name': 'CalcHeightDirective', 'selector': '[calcHeightDirective]'},{'name': 'DraggableDirective', 'selector': '[appDraggable]'},{'name': 'MouseWheelDirective', 'selector': '[appMouseWheel]'}];\n    var ACTUAL_COMPONENT = {'name': 'MultiSettingsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/NavbarComponent.html":{"url":"components/NavbarComponent.html","title":"component - NavbarComponent","body":"\n                   \n\n\n\n\n\n  Components\n  NavbarComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/navbar/navbar.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                of-navbar\n            \n\n            \n                styleUrls\n                ./navbar.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./navbar.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _thirdMenus\n                            \n                            \n                                currentPath\n                            \n                            \n                                customLogo\n                            \n                            \n                                expandedMenu\n                            \n                            \n                                expandedUserMenu\n                            \n                            \n                                height\n                            \n                            \n                                limitSize\n                            \n                            \n                                navbarCollapsed\n                            \n                            \n                                navigationRoutes\n                            \n                            \n                                width\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                logOut\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                toggleMenu\n                            \n                            \n                                toggleUserMenu\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    thirdMenus\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/navbar/navbar.component.ts:40\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                        Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            logOut\n                        \n                        \n                    \n                \n            \n            \n                \nlogOut()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/navbar/navbar.component.ts:82\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/navbar/navbar.component.ts:45\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            toggleMenu\n                        \n                        \n                    \n                \n            \n            \n                \ntoggleMenu(index: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/navbar/navbar.component.ts:90\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    index\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            toggleUserMenu\n                        \n                        \n                    \n                \n            \n            \n                \ntoggleUserMenu()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/navbar/navbar.component.ts:96\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _thirdMenus\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/navbar/navbar.component.ts:33\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            currentPath\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/navbar/navbar.component.ts:32\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            customLogo\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/navbar/navbar.component.ts:37\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            expandedMenu\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     boolean[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/navbar/navbar.component.ts:34\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            expandedUserMenu\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/navbar/navbar.component.ts:35\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            height\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/navbar/navbar.component.ts:38\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            limitSize\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/navbar/navbar.component.ts:40\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            navbarCollapsed\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/navbar/navbar.component.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            navigationRoutes\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : navigationRoutes\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/navbar/navbar.component.ts:31\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            width\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/navbar/navbar.component.ts:39\n                            \n                        \n\n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        thirdMenus\n                    \n                \n\n                \n                    \n                        getthirdMenus()\n                    \n                \n                            \n                                \n                                    Defined in src/app/components/navbar/navbar.component.ts:86\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import {Component, OnInit} from '@angular/core';\nimport {navigationRoutes} from '../../app-routing.module';\nimport {Store} from '@ngrx/store';\nimport {TryToLogOut} from '@ofActions/authentication.actions';\nimport {AppState} from '@ofStore/index';\nimport {selectCurrentUrl} from '@ofSelectors/router.selectors';\nimport {LoadMenu} from \"@ofActions/menu.actions\";\nimport {selectMenuStateMenu} from \"@ofSelectors/menu.selectors\";\nimport {Observable} from \"rxjs\";\nimport {ThirdMenu} from \"@ofModel/thirds.model\";\nimport {tap} from \"rxjs/operators\";\nimport * as _ from 'lodash';\nimport { buildConfigSelector } from '@ofStore/selectors/config.selectors';\n\n@Component({\n  selector: 'of-navbar',\n  templateUrl: './navbar.component.html',\n  styleUrls: ['./navbar.component.scss']\n})\nexport class NavbarComponent implements OnInit {\n\n    navbarCollapsed = true;\n    navigationRoutes = navigationRoutes;\n    currentPath: string[];\n    private _thirdMenus: Observable;\n    expandedMenu:boolean[]=[];\n    expandedUserMenu=false;\n\n    customLogo: string;\n    height: Number;\n    width: Number;\n    limitSize: Boolean;\n\n    constructor(private store: Store) {\n    }\n\n    ngOnInit() {\n        this.store.select(selectCurrentUrl).subscribe(url=>{\n            if(url)\n                this.currentPath = url.split('/');\n        });\n        this._thirdMenus=this.store.select(selectMenuStateMenu)\n            .pipe(tap(menus=>{\n                this.expandedMenu=new Array(menus.length);\n                _.fill(this.expandedMenu,false);\n            }));\n        this.store.dispatch(new LoadMenu());\n\n        this.store.select(buildConfigSelector('logo.base64')).subscribe(\n            data => {\n              if (data) this.customLogo = `data:image/svg+xml;base64,${data}`\n            }\n        );\n\n        this.store.select(buildConfigSelector('logo.height')).subscribe(\n            height => {\n              if (height) this.height = height;\n            }\n        );\n\n        this.store.select(buildConfigSelector('logo.width')).subscribe(\n            width => {\n              if (width) this.width = width;\n            }\n        );\n        this.store.select(buildConfigSelector('logo.limitSize')).subscribe(\n            (limitSize:boolean) => {\n                // BE CAREFUL, as a boolean it has to be test with undefined value to know if it has been set.\n              if (limitSize!=undefined && typeof(limitSize) =='boolean') this.limitSize = limitSize;\n            }\n        );\n    }\n\n    logOut(){\n        this.store.dispatch(new TryToLogOut());\n    }\n\n    get thirdMenus(){\n        return this._thirdMenus;\n    }\n\n    toggleMenu(index:number){\n        this.expandedMenu[index]=!this.expandedMenu[index];\n        if(this.expandedMenu[index])\n            setTimeout(()=>this.expandedMenu[index]=false,5000);\n    }\n\n    toggleUserMenu(){\n        this.expandedUserMenu=!this.expandedUserMenu;\n        if(this.expandedUserMenu)\n            setTimeout(()=>this.expandedUserMenu=false,5000);\n    }\n}\n\n    \n\n    \n        \n\n\n\n\n\n\n\n  \n    \n       \n    \n    \n      \n        \n      \n    \n  \n  \n    \n  \n  \n    \n      \n      \n        {{'menu.'+link.path}}\n      \n      \n      1\" [class.thirds-dropdown]=\"tMenu.entries.length>1\">\n        \n        1\"\n                translate\n                href=\"javascript:void(0)\"\n        >{{tMenu.id}}.{{tMenu.version}}.{{tMenu.label}}\n        1\"\n             [ngbCollapse]=\"!expandedMenu[index]\">\n          \n            \n          \n        \n        \n        \n          \n        \n      \n    \n    \n      \n        \n        \n          \n            menu.settings\n          \n          \n            \n              \n                menu.logout&nbsp;\n            \n          \n        \n      \n    \n  \n\n\n    \n\n    \n                \n                    ./navbar.component.scss\n                \n                /* Copyright (c) 2020, RTE (http://www.rte-france.com)\n *\n * This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n */\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                                 {{\\'menu.\\'+link.path}}                  1\" [class.thirds-dropdown]=\"tMenu.entries.length>1\">                1\"                translate                href=\"javascript:void(0)\"        >{{tMenu.id}}.{{tMenu.version}}.{{tMenu.label}}        1\"             [ngbCollapse]=\"!expandedMenu[index]\">                                                                                                                                    menu.settings                                                              menu.logout                                           '\n    var COMPONENTS = [{'name': 'ActionComponent', 'selector': 'of-action'},{'name': 'AppComponent', 'selector': 'of-root'},{'name': 'ArchiveFiltersComponent', 'selector': 'of-archive-filters'},{'name': 'ArchiveListComponent', 'selector': 'of-archive-list'},{'name': 'ArchiveListPageComponent', 'selector': 'of-archive-list-page'},{'name': 'ArchivesComponent', 'selector': 'of-archives'},{'name': 'BaseSettingComponent', 'selector': 'of-base-setting'},{'name': 'CardComponent', 'selector': 'of-card'},{'name': 'CardDetailsComponent', 'selector': 'of-card-details'},{'name': 'CardListComponent', 'selector': 'of-card-list'},{'name': 'ConfirmModalComponent', 'selector': 'confirm-modal-component'},{'name': 'CustomLogoComponent', 'selector': 'of-custom-logo'},{'name': 'CustomTimelineChartComponent', 'selector': 'of-custom-timeline-chart'},{'name': 'DatetimeFilterComponent', 'selector': 'of-datetime-filter'},{'name': 'DetailComponent', 'selector': 'of-detail'},{'name': 'DetailsComponent', 'selector': 'of-details'},{'name': 'EmailSettingComponent', 'selector': 'of-email-setting'},{'name': 'FeedComponent', 'selector': 'of-cards'},{'name': 'FiltersComponent', 'selector': 'of-filters'},{'name': 'IconComponent', 'selector': 'of-icon'},{'name': 'IframeDisplayComponent', 'selector': 'of-iframedisplay'},{'name': 'InfoComponent', 'selector': 'of-info'},{'name': 'InitChartComponent', 'selector': 'of-init-chart'},{'name': 'ListSettingComponent', 'selector': 'of-list-setting'},{'name': 'LoginComponent', 'selector': 'of-login'},{'name': 'MenuLinkComponent', 'selector': 'of-menu-link'},{'name': 'MultiFilterComponent', 'selector': 'of-multi-filter'},{'name': 'MultiSettingsComponent', 'selector': 'of-multi-settings'},{'name': 'NavbarComponent', 'selector': 'of-navbar'},{'name': 'NoSelectionComponent', 'selector': 'of-no-selection'},{'name': 'ResizableComponent', 'selector': 'of-resizable'},{'name': 'SettingsComponent', 'selector': 'of-settings'},{'name': 'TagsFilterComponent', 'selector': 'of-tags-filter'},{'name': 'TextSettingComponent', 'selector': 'of-text-setting'},{'name': 'TimeFilterComponent', 'selector': 'of-time-filter'},{'name': 'TimeLineComponent', 'selector': 'of-time-line'},{'name': 'TypeAheadSettingsComponent', 'selector': 'of-type-ahead-settings'},{'name': 'TypeFilterComponent', 'selector': 'of-type-filter'}];\n    var DIRECTIVES = [{'name': 'CalcHeightDirective', 'selector': '[calcHeightDirective]'},{'name': 'DraggableDirective', 'selector': '[appDraggable]'},{'name': 'MouseWheelDirective', 'selector': '[appMouseWheel]'}];\n    var ACTUAL_COMPONENT = {'name': 'NavbarComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/NoSelectionComponent.html":{"url":"components/NoSelectionComponent.html","title":"component - NoSelectionComponent","body":"\n                   \n\n\n\n\n\n  Components\n  NoSelectionComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/feed/components/no-selection/no-selection.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                of-no-selection\n            \n\n\n\n\n            \n                templateUrl\n                ./no-selection.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/feed/components/no-selection/no-selection.component.ts:15\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/feed/components/no-selection/no-selection.component.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import {Component, OnInit} from '@angular/core';\n\n@Component({\n  selector: 'of-no-selection',\n  templateUrl: './no-selection.component.html',\n})\nexport class NoSelectionComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n\n    \n\n    \n        \n\n\n\n\n\n\n\n  no-selection works!\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  no-selection works!'\n    var COMPONENTS = [{'name': 'ActionComponent', 'selector': 'of-action'},{'name': 'AppComponent', 'selector': 'of-root'},{'name': 'ArchiveFiltersComponent', 'selector': 'of-archive-filters'},{'name': 'ArchiveListComponent', 'selector': 'of-archive-list'},{'name': 'ArchiveListPageComponent', 'selector': 'of-archive-list-page'},{'name': 'ArchivesComponent', 'selector': 'of-archives'},{'name': 'BaseSettingComponent', 'selector': 'of-base-setting'},{'name': 'CardComponent', 'selector': 'of-card'},{'name': 'CardDetailsComponent', 'selector': 'of-card-details'},{'name': 'CardListComponent', 'selector': 'of-card-list'},{'name': 'ConfirmModalComponent', 'selector': 'confirm-modal-component'},{'name': 'CustomLogoComponent', 'selector': 'of-custom-logo'},{'name': 'CustomTimelineChartComponent', 'selector': 'of-custom-timeline-chart'},{'name': 'DatetimeFilterComponent', 'selector': 'of-datetime-filter'},{'name': 'DetailComponent', 'selector': 'of-detail'},{'name': 'DetailsComponent', 'selector': 'of-details'},{'name': 'EmailSettingComponent', 'selector': 'of-email-setting'},{'name': 'FeedComponent', 'selector': 'of-cards'},{'name': 'FiltersComponent', 'selector': 'of-filters'},{'name': 'IconComponent', 'selector': 'of-icon'},{'name': 'IframeDisplayComponent', 'selector': 'of-iframedisplay'},{'name': 'InfoComponent', 'selector': 'of-info'},{'name': 'InitChartComponent', 'selector': 'of-init-chart'},{'name': 'ListSettingComponent', 'selector': 'of-list-setting'},{'name': 'LoginComponent', 'selector': 'of-login'},{'name': 'MenuLinkComponent', 'selector': 'of-menu-link'},{'name': 'MultiFilterComponent', 'selector': 'of-multi-filter'},{'name': 'MultiSettingsComponent', 'selector': 'of-multi-settings'},{'name': 'NavbarComponent', 'selector': 'of-navbar'},{'name': 'NoSelectionComponent', 'selector': 'of-no-selection'},{'name': 'ResizableComponent', 'selector': 'of-resizable'},{'name': 'SettingsComponent', 'selector': 'of-settings'},{'name': 'TagsFilterComponent', 'selector': 'of-tags-filter'},{'name': 'TextSettingComponent', 'selector': 'of-text-setting'},{'name': 'TimeFilterComponent', 'selector': 'of-time-filter'},{'name': 'TimeLineComponent', 'selector': 'of-time-line'},{'name': 'TypeAheadSettingsComponent', 'selector': 'of-type-ahead-settings'},{'name': 'TypeFilterComponent', 'selector': 'of-type-filter'}];\n    var DIRECTIVES = [{'name': 'CalcHeightDirective', 'selector': '[calcHeightDirective]'},{'name': 'DraggableDirective', 'selector': '[appDraggable]'},{'name': 'MouseWheelDirective', 'selector': '[appMouseWheel]'}];\n    var ACTUAL_COMPONENT = {'name': 'NoSelectionComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/NotifyService.html":{"url":"injectables/NotifyService.html","title":"injectable - NotifyService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  NotifyService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/notify.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                permission\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createNotification\n                            \n                            \n                                isSupported\n                            \n                            \n                                requestPermission\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/services/notify.service.ts:14\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            createNotification\n                        \n                        \n                    \n                \n            \n            \n                \ncreateNotification(title: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/notify.service.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    title\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isSupported\n                        \n                        \n                    \n                \n            \n            \n                \nisSupported(window)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/notify.service.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    window\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            requestPermission\n                        \n                        \n                    \n                \n            \n            \n                \nrequestPermission()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/notify.service.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            permission\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/notify.service.ts:14\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import {Injectable} from '@angular/core';\n\n@Injectable()\nexport class NotifyService {\n\n    permission: string;\n    constructor() {\n    }\n\n    isSupported(window): boolean {\n        return 'Notification' in window;\n    }\n    requestPermission(): void {\n        if (this.isSupported(window)) {\n            Notification.requestPermission(status => {\n                this.permission = status;\n            });\n        }\n    }\n\n    createNotification(title: string) {\n        if (this.isSupported(window) && this.permission === 'granted') {\n            return new Notification(title);\n        }\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Page.html":{"url":"classes/Page.html","title":"class - Page","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Page\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/model/page.model.ts\n        \n\n\n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(totalPages: number, totalElements: number, content: T[])\n                    \n                \n                        \n                            \n                                Defined in src/app/model/page.model.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        totalPages\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        totalElements\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        content\n                                                  \n                                                        \n                                                                    T[]\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Severity} from \"@ofModel/light-card.model\";\nimport {I18n} from \"@ofModel/i18n.model\";\n\nexport class Page {\n    /* istanbul ignore next */\n    constructor(\n        readonly totalPages: number,\n        readonly totalElements: number,\n        readonly content: T[]\n    ) {\n    }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ParameterListItem.html":{"url":"classes/ParameterListItem.html","title":"class - ParameterListItem","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ParameterListItem\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/model/thirds.model.ts\n        \n\n\n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(label: I18n, value: string)\n                    \n                \n                        \n                            \n                                Defined in src/app/model/thirds.model.ts:185\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        label\n                                                  \n                                                        \n                                                                        I18n\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        value\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Card, Detail} from \"@ofModel/card.model\";\nimport {I18n} from \"@ofModel/i18n.model\";\nimport {Map as OfMap} from \"@ofModel/map\";\n\nexport class Third {\n    /* istanbul ignore next */\n    constructor(\n        readonly name: string,\n        readonly version: string,\n        readonly i18nLabelKey: string,\n        readonly templates?: string[],\n        readonly csses?: string[],\n        readonly locales?: string[],\n        readonly menuEntries?: ThirdMenuEntry[],\n        readonly processes?: OfMap\n    ) {\n    }\n\n    public extractState(card: Card): State {\n        if (card.process && this.processes[card.process]) {\n            const process = this.processes[card.process];\n            if (card.state && process.states[card.state]) {\n                return process.states[card.state];\n            }\n        }\n        return null;\n    }\n}\n\nexport class ThirdMenuEntry {\n    /* istanbul ignore next */\n    constructor(\n        readonly id: string,\n        readonly label: string,\n        readonly url: string\n    ) {\n    }\n}\n\nexport class ThirdMenu {\n    /* istanbul ignore next */\n    constructor(\n        readonly id: string,\n        readonly version: string,\n        readonly label: string,\n        readonly entries: ThirdMenuEntry[]) {\n    }\n}\n\nexport class Process {\n    /* istanbul ignore next */\n    constructor(\n        readonly states?: OfMap\n    ) {\n    }\n}\n\nexport class State {\n    /* istanbul ignore next */\n    constructor(\n        readonly details?: Detail[],\n        readonly actions?: OfMap\n    ) {\n    }\n}\n\nexport enum ActionType {\n    EXTERNAL = 'EXTERNAL',\n    JNLP = 'JNLP',\n    URL = 'URL'\n\n}\n\nexport class Action {\n    /* istanbul ignore next */\n    constructor(\n        readonly type: ActionType,\n        readonly label: I18n,\n        readonly hidden: boolean = false,\n        readonly buttonStyle: string = '',\n        readonly contentStyle: string = '',\n        readonly inputs: Input[] = [],\n        readonly lockAction: boolean = false,\n        readonly lockCard: boolean = false,\n        readonly updateState: boolean = false,\n        readonly updateStateBeforeAction: boolean = false,\n        readonly called: boolean = false,\n        readonly needsConfirm: boolean = false,\n        readonly key?: string\n    ) {\n    }\n\n}\n\nexport const emptyAction = new Action(null, null);\n\ntype Omit = Pick>;\n\nexport class ActionStatus {\n    constructor(\n        readonly label: I18n,\n        readonly hidden: boolean = false,\n        readonly buttonStyle: string = '',\n        readonly contentStyle: string = '',\n        readonly inputs: Input[] = [],\n        readonly lockCard: boolean = false,\n        readonly updateState: boolean = false,\n        readonly updateStateBeforeAction: boolean = false,\n        readonly needsConfirm: boolean = false,\n        readonly lockAction: boolean = false,\n    ) {\n    }\n}\n\nexport const emptyActionStatus = new ActionStatus(null);\n\n/*\nfor some reasons lodash equals take attribute order declaration in account to compute object equality\nneeded by LightCardEffects updateAThirdAction Effect and by checkIfReceivedStatusIsDifferentFromCurrentOne method of ThirdActionService .\n */\nexport function extractActionStatusFromPseudoActionStatus(tAction: object): ActionStatus {\n    let label = new I18n('');\n    const i18n = tAction['label'];\n    if (i18n) {\n        const params = i18n['parameters'];\n        if (params) {\n            Object.setPrototypeOf(params, OfMap.prototype);\n            label = new I18n(i18n['key'], params);\n        } else {\n            label = new I18n(i18n['key']);\n        }\n\n    }\n    const result = new ActionStatus(\n        label\n        , tAction['hidden']\n        , tAction['buttonStyle']\n        , tAction['contentStyle']\n        , tAction['inputs'] // TODO Need proper prototype handling\n        , tAction['lockCard']\n        , tAction['updateState']\n        , tAction['updateStateBeforeAction']\n        , tAction['needsConfirm']\n        , tAction['lockAction']\n    );\n    return result;\n}\n\n\nexport enum InputType {\n    TEXT,\n    LIST,\n    LIST_RADIO,\n    SWITCH_LIST,\n    LONGTEXT,\n    BOOLEAN,\n    STATIC\n}\n\nexport class Input {\n    /* istanbul ignore next */\n    constructor(\n        readonly type: InputType,\n        readonly name: string,\n        readonly label: I18n,\n        readonly value: string,\n        readonly mandatory: boolean,\n        readonly maxLength: number,\n        readonly rows: number,\n        readonly values: ParameterListItem[],\n        readonly selectedValues: string[],\n        readonly unSelectedValues: string[],\n    ) {\n    }\n}\n\nexport class ParameterListItem {\n    /* istanbul ignore next */\n    constructor(\n        readonly label: I18n,\n        readonly value: string,\n    ) {\n    }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PasswordOrCodeAuthenticationHandler.html":{"url":"classes/PasswordOrCodeAuthenticationHandler.html","title":"class - PasswordOrCodeAuthenticationHandler","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PasswordOrCodeAuthenticationHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/authentication/authentication.service.ts\n        \n\n            \n                Description\n            \n            \n                Implementation class of @Interface AuthenticationModeHandler\nuse the OperatorFabric legacy code to manage the authentication in\nOAuth 2.0 password grant or code flow mode\n\n            \n\n\n            \n                Implements\n            \n            \n                            AuthenticationModeHandler\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                extractToken\n                            \n                            \n                                initializeAuthentication\n                            \n                            \n                                linkAuthenticationStatus\n                            \n                            \n                                move\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(authenticationService: AuthenticationService, store: Store)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/authentication/authentication.service.ts:475\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authenticationService\n                                                  \n                                                        \n                                                                        AuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                        Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            extractToken\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    extractToken()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/authentication/authentication.service.ts:495\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            initializeAuthentication\n                        \n                        \n                    \n                \n            \n            \n                \ninitializeAuthentication(currentLocationHref: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/authentication/authentication.service.ts:481\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    currentLocationHref\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            linkAuthenticationStatus\n                        \n                        \n                    \n                \n            \n            \n                \nlinkAuthenticationStatus(linker: (isAuthenticated: boolean) => void)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/authentication/authentication.service.ts:490\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    linker\n                                    \n                                                function\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            move\n                        \n                        \n                    \n                \n            \n            \n                \nmove()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/authentication/authentication.service.ts:499\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {Injectable} from '@angular/core';\nimport {HttpClient, HttpHeaders} from '@angular/common/http';\nimport {Observable, of, throwError} from 'rxjs';\nimport {catchError, filter, map, switchMap, tap} from 'rxjs/operators';\nimport {Guid} from 'guid-typescript';\nimport {\n    ImplicitlyAuthenticated,\n    InitAuthStatus,\n    PayloadForSuccessfulAuthentication,\n    UnAuthenticationFromImplicitFlow\n} from '@ofActions/authentication.actions';\nimport {environment} from '@env/environment';\nimport {GuidService} from '@ofServices/guid.service';\nimport {AppState} from '@ofStore/index';\nimport {select, Store} from '@ngrx/store';\nimport {buildConfigSelector} from '@ofSelectors/config.selectors';\nimport * as jwt_decode from 'jwt-decode';\nimport * as _ from 'lodash';\nimport {User} from '@ofModel/user.model';\nimport {EventType as OAuthType, JwksValidationHandler, OAuthEvent, OAuthService} from 'angular-oauth2-oidc';\nimport {implicitAuthenticationConfigFallback} from '@ofServices/authentication/auth-implicit-flow.config';\nimport {selectExpirationTime, selectIsImplicitlyAuthenticated} from '@ofSelectors/authentication.selectors';\n\nexport enum LocalStorageAuthContent {\n    token = 'token',\n    expirationDate = 'expirationDate',\n    identifier = 'identifier',\n    clientId = 'clientId'\n}\n\nexport const ONE_SECOND = 1000;\n\n@Injectable()\nexport class AuthenticationService {\n\n    /** url to check authentication token (jwt) */\n    private checkTokenUrl = `${environment.urls.auth}/check_token`;\n    /** url to ask for an authentication token (jwt) */\n    private askTokenUrl = `${environment.urls.auth}/token`;\n    private userDataUrl = `${environment.urls.users}/users`;\n    private clientId: string;\n    private clientSecret: string;\n    private loginClaim: string;\n    private expireClaim: string;\n    private delegateUrl: string;\n    private givenNameClaim: string;\n    private familyNameClaim: string;\n    private mode: string;\n    private authModeHandler: AuthenticationModeHandler;\n    private implicitConf = implicitAuthenticationConfigFallback;\n\n    /**\n     * @constructor\n     * @param httpClient - Angular build-in\n     * @param guidService - create and store the unique id for this application and user\n     * @param store - NGRX store\n     * @param oauthService - manage implicit flow for OAuth2\n     */\n    constructor(private httpClient: HttpClient\n        , private guidService: GuidService\n        , private store: Store\n        , private oauthService: OAuthService\n    ) {\n        store.select(buildConfigSelector('security'))\n            .subscribe(oauth2Conf => {\n                this.assignConfigurationProperties(oauth2Conf);\n                this.authModeHandler = this.instantiateAuthModeHandler(this.mode);\n            });\n    }\n\n    /**\n     * Choose to handle the OAuth 2.0 using implicit workflow\n     * if mode equals to 'implicit' other manage password grand\n     * or code flow.\n     * @param mode - extracted from config web-service settings\n     */\n    instantiateAuthModeHandler(mode: string): AuthenticationModeHandler {\n        if (mode.toLowerCase() === 'implicit') {\n            this.instantiateImplicitFlowConfiguration();\n            return new ImplicitAuthenticationHandler(this, this.store, sessionStorage);\n        }\n        return new PasswordOrCodeAuthenticationHandler(this, this.store);\n    }\n\n    /**\n     * extract Oauth 2.0 configuration from settings and store it in the service\n     * @param oauth2Conf - settings return by the back-end config service\n     */\n    assignConfigurationProperties(oauth2Conf) {\n        this.clientId = _.get(oauth2Conf, 'oauth2.client-id', null);\n        this.clientSecret = _.get(oauth2Conf, 'oauth2.client-secret', null);\n        this.delegateUrl = _.get(oauth2Conf, 'oauth2.flow.delagate-url', null);\n        this.loginClaim = _.get(oauth2Conf, 'jwt.login-claim', 'sub');\n        this.givenNameClaim = _.get(oauth2Conf, 'jwt.given-name-claim', 'given_name');\n        this.familyNameClaim = _.get(oauth2Conf, 'jwt.family-name-claim', 'family_name');\n        this.expireClaim = _.get(oauth2Conf, 'jwt.expire-claim', 'exp');\n        this.mode = _.get(oauth2Conf, 'oauth2.flow.mode', 'PASSWORD');\n    }\n\n    // TODO push this part into ImplicitAuthenticationHandler class\n    instantiateImplicitFlowConfiguration(): void {\n        this.implicitConf = {...this.implicitConf, issuer: this.delegateUrl, clientId: this.clientId};\n    }\n\n    /**\n     * Call the web service which checks the authentication token. A valid token gives back the authentication information\n     * and an invalid one an message.\n     *\n     * @param token - jwt token\n     * @return an {Observable} which contains the deserializable content of the token\n     * an message is thrown otherwise\n     */\n    checkAuthentication(token: string): Observable {\n        if (!!token) {\n            // const postData = new FormData();\n            const postData = new URLSearchParams();\n            postData.append('token', token);\n            const headers = new HttpHeaders({'Content-type': 'application/x-www-form-urlencoded; charset=utf-8'});\n            return this.httpClient.post(this.checkTokenUrl, postData.toString(), {headers: headers}).pipe(\n                map(check => check),\n                catchError(function (error: any) {\n                    console.error(error);\n                    return throwError(error);\n                })\n            );\n        }\n        return of(null);\n    }\n\n    /**\n     * Given a pair of connection, ask the web service generating jwt authentication token a token if the pair is\n     * a registered one.\n     * @param code OIDC code from code flow\n     */\n    askTokenFromCode(code: string):\n        Observable {\n        if (!this.clientId || !this.clientSecret || !this.loginClaim) {\n            return throwError('The authentication service is no correctly initialized');\n        }\n        const params = new URLSearchParams();\n        params.append('code', code);\n        params.append('grant_type', 'authorization_code');\n// beware clientId for token defines a type of authentication\n        params.append('clientId', this.clientId);\n        params.append('redirect_uri', this.computeRedirectUri());\n\n        const headers = new HttpHeaders({'Content-type': 'application/x-www-form-urlencoded; charset=utf-8'});\n        return this.handleNewToken(this.httpClient.post(this.askTokenUrl, params.toString(), {headers: headers}));\n    }\n\n    /**\n     * Given a pair of connection, ask the web service generating jwt authentication token a token if the pair is\n     * a registered one.\n     * @param login\n     * @param password\n     */\n    askTokenFromPassword(login: string, password: string): Observable {\n        if (!this.clientId || !this.clientSecret) {\n            return throwError('The authentication service is no correctly initialized');\n        }\n        const params = new URLSearchParams();\n        params.append('username', login);\n        params.append('password', password);\n        params.append('grant_type', 'password');\n// beware clientId for access_token is an oauth parameters\n        params.append('clientId', this.clientId);\n        params.append('client_secret', this.clientSecret);\n\n        const headers = new HttpHeaders({'Content-type': 'application/x-www-form-urlencoded; charset=utf-8'});\n        return this.handleNewToken(this.httpClient.post(this.askTokenUrl, params.toString(), {headers: headers}));\n    }\n\n    private handleNewToken(call: Observable): Observable {\n        return call.pipe(\n            map(data => {\n                return {...data, clientId: this.guidService.getCurrentGuid()};\n            }),\n            map((auth: AuthObject) => this.convert(auth)),\n            tap(this.saveAuthenticationInformation),\n            catchError(function (error: any) {\n                console.error(error);\n                return throwError(error);\n            }),\n            switchMap((auth) => this.loadUserData(auth))\n        );\n    }\n\n    public loadUserData(auth: PayloadForSuccessfulAuthentication): Observable {\n        return this.httpClient.get(`${this.userDataUrl}/${auth.identifier}`)\n            .pipe(\n                map(u => {\n                    auth.firstName = u.firstName;\n                    auth.lastName = u.lastName;\n                    return auth;\n                }),\n                catchError(() => of(auth))\n            );\n    }\n\n    /**\n     * extract the jwt authentication token from the localstorage\n     */\n    public extractToken(): string {\n        const currentAuthModeHandler = this.authModeHandler;\n        return currentAuthModeHandler.extractToken();\n    }\n\n    /**\n     * @return true if the expiration date stored in the `localestorage` is still running, false otherwise.\n     */\n    verifyExpirationDate(): boolean {\n        // + to convert the stored number as a string back to number\n        const expirationDate = +localStorage.getItem(LocalStorageAuthContent.expirationDate);\n        const isNotANumber = isNaN(expirationDate);\n        const stillValid = isInTheFuture(expirationDate);\n        return !isNotANumber && stillValid;\n    }\n\n    /**\n     * @return true if the expiration date stored in the `localstorage` is over, false otherwise\n     */\n    isExpirationDateOver(): boolean {\n        return !this.verifyExpirationDate();\n    }\n\n    /**\n     * clear the `localstorage` from all its content.\n     */\n    clearAuthenticationInformation(): void {\n        localStorage.clear();\n        sessionStorage.clear();\n        this.oauthService.logOut();\n    }\n\n    /**\n     * save the authentication informatios such as identifier, jwt token, expiration date and clientId in the\n     * `localstorage`.\n     * @param payload\n     */\n    saveAuthenticationInformation(payload: PayloadForSuccessfulAuthentication) {\n        localStorage.setItem(LocalStorageAuthContent.identifier, payload.identifier);\n        localStorage.setItem(LocalStorageAuthContent.token, payload.token);\n        localStorage.setItem(LocalStorageAuthContent.expirationDate, payload.expirationDate.getTime().toString());\n        localStorage.setItem(LocalStorageAuthContent.clientId, payload.clientId.toString());\n    }\n\n    /**\n     * extract from the `localstorage` the authentication relevant information such as dentifier, jwt token,\n     * expiration date and clientId\n     * @return {PayloadForSuccessfulAuthentication}\n     */\n    extractIdentificationInformation(): PayloadForSuccessfulAuthentication {\n        return new PayloadForSuccessfulAuthentication(\n            localStorage.getItem(LocalStorageAuthContent.identifier),\n            Guid.parse(localStorage.getItem(LocalStorageAuthContent.clientId)),\n            localStorage.getItem(LocalStorageAuthContent.token),\n            // as getItem return a string, `+` is used to convert the string into number\n            new Date(+localStorage.getItem(LocalStorageAuthContent.expirationDate)),\n        );\n    }\n\n\n    /**\n     * helper method to convert an {AuthObject} instance into a {PayloadForSuccessfulAuthentication} instance.\n     * @param payload\n     */\n    public convert(payload: AuthObject):\n        PayloadForSuccessfulAuthentication {\n\n        let expirationDate;\n        const jwt = this.decodeToken(payload.access_token);\n        if (!!payload.expires_in) {\n            expirationDate = Date.now() + ONE_SECOND * payload.expires_in;\n        } else if (!!this.expireClaim) {\n            expirationDate = jwt[this.expireClaim];\n        } else {\n            expirationDate = 0;\n        }\n        return new PayloadForSuccessfulAuthentication(jwt[this.loginClaim],\n            payload.clientId,\n            payload.access_token,\n            new Date(expirationDate),\n            jwt[this.givenNameClaim],\n            jwt[this.familyNameClaim]\n        );\n    }        // await this.oauthService.tryLogin();\n    /**\n     * helper method to put the jwt token into an appropriate string usable as an http header\n     */\n    public getSecurityHeader() {\n        return {'Authorization': `Bearer ${this.extractToken()}`};\n    }\n\n    public moveToCodeFlowLoginPage() {\n        if (!this.clientId || !this.clientSecret) {\n            return throwError('The authentication service is no correctly iniitialized');\n        }\n        if (!this.delegateUrl) {\n            window.location.href = `${environment.urls.auth}/code/redirect_uri=${this.computeRedirectUri()}`;\n        } else {\n            window.location.href = `${this.delegateUrl}&redirect_uri=${this.computeRedirectUri()}`;\n        }\n    }\n\n    public async moveToImplicitFlowLoginPage() {\n        this.oauthService.configure(this.implicitConf);\n        await this.oauthService.loadDiscoveryDocument();\n        sessionStorage.setItem('flow', 'implicit');\n        this.oauthService.initImplicitFlow();\n    }\n\n    public async initAndLoadAuth() {\n        this.oauthService.configure(this.implicitConf);\n        this.oauthService.setupAutomaticSilentRefresh();\n        this.oauthService.tokenValidationHandler = new JwksValidationHandler();\n        await this.oauthService.loadDiscoveryDocument()\n            .then(() => {\n                    this.oauthService.tryLogin();\n                }\n            ).then(() => {\n                if (this.oauthService.hasValidAccessToken()) {\n                    return Promise.resolve();\n                }\n            });\n\n        this.oauthService.events\n            .pipe(filter(e => e.type === 'session_terminated'))\n            .subscribe(() => {\n                console.log('Your session has been terminated!');\n            });\n        this.askForOauthAccessToken();\n        this.dispatchAuthActionFromOAuthEvents();\n    }\n\n    computeRedirectUri() {\n        const uriBase = location.origin;\n        const pathEnd = (location.pathname.length > 1) ? location.pathname : '';\n        return `${uriBase}${pathEnd}`;\n    }\n\n    decodeToken(token: string): any {\n        try {\n            return jwt_decode(token);\n        } catch (Error) {\n            return null;\n        }\n    }\n\n    public dispatchAuthActionFromOAuthEvents() {\n        this.oauthService.events.subscribe(e => {\n            this.dispatchAppStateActionFromOAuth2Events(e);\n        });\n    }\n\n    public askForOauthAccessToken() {\n        return this.oauthService.getAccessToken();\n\n    }\n\n    public providePayloadForSuccessfulAuthenticationFromImplicitFlow(): PayloadForSuccessfulAuthentication {\n        const identityClaims = this.oauthService.getIdentityClaims();\n        const identifier = identityClaims['sub'];\n        const clientId = this.guidService.getCurrentGuid();\n        const token = this.askForOauthAccessToken();\n        const expirationDate = new Date(this.oauthService.getAccessTokenExpiration());\n        return new PayloadForSuccessfulAuthentication(identifier, clientId, token, expirationDate);\n    }\n\n    dispatchAppStateActionFromOAuth2Events(event: OAuthEvent): void {\n        const eventType: OAuthType = event.type;\n        switch (eventType) {\n            case ('token_received'): {\n                this.store.dispatch(new ImplicitlyAuthenticated());\n                break;\n            }\n            case ('token_error'):\n            case('token_refresh_error'):\n            case('logout'): {\n                this.store.dispatch(new UnAuthenticationFromImplicitFlow());\n                break;\n            }\n            default: {\n                // console.log('no action to dispatch for:', eventType);\n            }\n        }\n    }\n\n    public getAuthenticationMode(): string {\n        return this.mode;\n    }\n\n    public initializeAuthentication(): void {\n        this.authModeHandler.initializeAuthentication(window.location.href);\n    }\n\n    public linkAuthenticationStatus(linker: (isAuthenticated: boolean) => void): void {\n        this.authModeHandler.linkAuthenticationStatus(linker);\n    }\n\n    public move(): void {\n        this.authModeHandler.move();\n    }\n\n    public isAuthModeCodeOrImplicitFlow(): boolean {\n        const mode = this.getAuthenticationMode();\n        return mode === 'CODE' || mode === 'IMPLICIT';\n    }\n}\n\n\n/**\n * class used to login using the authentication web service.\n */\nexport class AuthObject {\n\n    constructor(\n        public access_token: string,\n        public expires_in: number,    // token_received,\n        public clientId: Guid,\n        public identifier?: string\n    ) {\n    }\n\n}    // token_received,\n\n\n/**\n * class corresponding to the response of the web service checking jwt token when this token is a valid one.\n */\nexport class CheckTokenResponse {\n    constructor(\n        public sub?: string,\n        public exp?: number,\n        public clientId?: string,\n    ) {\n    }\n}\n\n/**\n * helper @method to confirm or not if the number corresponding to a given time is in the futur regarding the present\n * moment.\n * @param time - a number corresponding to an UTC time to test\n * @return  true if time is in the future regarding the present moment, false otherwise\n */\nexport function isInTheFuture(time: number): boolean {\n    return time > Date.now();\n}\n\n/**\n * interface to handle the mode of authentication\n */\nexport interface AuthenticationModeHandler {\n    initializeAuthentication(currentHrefLocation: string): void;\n\n    linkAuthenticationStatus(linker: (isAuthenticated: boolean) => void): void;\n\n    extractToken(): string;\n\n    move(): void;\n}\n\n/**\n * Implementation class of @Interface AuthenticationModeHandler\n * use the OperatorFabric legacy code to manage the authentication in\n * OAuth 2.0 password grant or code flow mode\n */\nexport class PasswordOrCodeAuthenticationHandler implements AuthenticationModeHandler {\n\n    constructor(private authenticationService: AuthenticationService,\n                private store: Store) {\n    }\n\n    initializeAuthentication(currentLocationHref: string) {\n        const searchCodeString = 'code=';\n        const foundIndex = currentLocationHref.indexOf(searchCodeString);\n        if (foundIndex !== -1) {\n            this.store.dispatch(\n                new InitAuthStatus({code: currentLocationHref.substring(foundIndex + searchCodeString.length)}));\n        }\n    }\n\n    linkAuthenticationStatus(linker: (isAuthenticated: boolean) => void): void {\n        this.store.pipe(select(selectExpirationTime), map(isInTheFuture))\n            .subscribe(linker);\n    }\n\n    public extractToken(): string {\n        return localStorage.getItem(LocalStorageAuthContent.token);\n    }\n\n    move(): void {\n        this.authenticationService.moveToCodeFlowLoginPage();\n    }\n}\n\n/**\n * Implementation class of @Interface AuthenticationModeHandler\n * use the Oidc Connect library to manage OAuth 2.0 implicit authentication mode\n */\nexport class ImplicitAuthenticationHandler implements AuthenticationModeHandler {\n    constructor(private authenticationService: AuthenticationService\n        , private store: Store\n        , private storage: Storage) {\n    }\n\n    initializeAuthentication(currentLocationHref: string) {\n        if (this.authenticationService.getAuthenticationMode().toLowerCase() === 'implicit') {\n            this.authenticationService.initAndLoadAuth();\n        }\n    }\n\n    linkAuthenticationStatus(linker: (isAuthenticated: boolean) => void): void {\n        this.store.pipe(select(selectIsImplicitlyAuthenticated)).subscribe(linker);\n    }\n\n    public extractToken(): string {\n        return this.storage.getItem('access_token');\n    }\n\n    move() {\n        this.authenticationService.moveToImplicitFlowLoginPage();\n    }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PatchSettings.html":{"url":"classes/PatchSettings.html","title":"class - PatchSettings","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PatchSettings\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/settings.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/store/actions/settings.actions.ts:44\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/settings.actions.ts:45\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : SettingsActionTypes.PatchSettings\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/settings.actions.ts:44\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Action} from '@ngrx/store';\n\nexport enum SettingsActionTypes {\n    LoadSettings = '[Settings] Load Settings',\n    LoadSettingsSuccess = '[Settings] Load Settings Success',\n    LoadSettingsFailure = '[Settings] Load Settings Fail',\n\n    PatchSettings = '[Settings] Patch Settings',\n    PatchSettingsSuccess = '[Settings] Patch Settings Success',\n    PatchSettingsFailure = '[Settings] Patch Settings Fail',\n\n    HandleUnexpectedError = '[Settings] Handle unexpected error related to user settings issue'\n}\n// needed by NGRX entities\n\nexport class LoadSettings implements Action {\n    readonly type = SettingsActionTypes.LoadSettings;\n}\nexport class LoadSettingsFailure implements Action {\n    readonly type = SettingsActionTypes.LoadSettingsFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport class LoadSettingsSuccess implements Action {\n    readonly type = SettingsActionTypes.LoadSettingsSuccess;\n\n    /* istanbul ignore next */\n    constructor(public payload: { settings: any }) {\n    }\n}\n\nexport class PatchSettings implements Action {\n    readonly type = SettingsActionTypes.PatchSettings;\n    constructor(public payload: {settings:any}){}\n}\nexport class PatchSettingsFailure implements Action {\n    readonly type = SettingsActionTypes.PatchSettingsFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport class PatchSettingsSuccess implements Action {\n    readonly type = SettingsActionTypes.PatchSettingsSuccess;\n\n    /* istanbul ignore next */\n    constructor(public payload: { settings: any }) {\n    }\n}\n\nexport class HandleUnexpectedError implements Action {\n    /* istanbul ignore next */\n    readonly type = SettingsActionTypes.HandleUnexpectedError;\n    /* istanbul ignore next */\n    constructor(public payload: {error: Error}) {\n\n    }\n}\n\nexport type SettingsActions =\n    LoadSettings\n    | LoadSettingsSuccess\n    | LoadSettingsFailure\n    | PatchSettings\n    | PatchSettingsSuccess\n    | PatchSettingsFailure\n    | HandleUnexpectedError;\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PatchSettingsFailure.html":{"url":"classes/PatchSettingsFailure.html","title":"class - PatchSettingsFailure","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PatchSettingsFailure\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/settings.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/store/actions/settings.actions.ts:48\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/settings.actions.ts:51\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : SettingsActionTypes.PatchSettingsFailure\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/settings.actions.ts:48\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Action} from '@ngrx/store';\n\nexport enum SettingsActionTypes {\n    LoadSettings = '[Settings] Load Settings',\n    LoadSettingsSuccess = '[Settings] Load Settings Success',\n    LoadSettingsFailure = '[Settings] Load Settings Fail',\n\n    PatchSettings = '[Settings] Patch Settings',\n    PatchSettingsSuccess = '[Settings] Patch Settings Success',\n    PatchSettingsFailure = '[Settings] Patch Settings Fail',\n\n    HandleUnexpectedError = '[Settings] Handle unexpected error related to user settings issue'\n}\n// needed by NGRX entities\n\nexport class LoadSettings implements Action {\n    readonly type = SettingsActionTypes.LoadSettings;\n}\nexport class LoadSettingsFailure implements Action {\n    readonly type = SettingsActionTypes.LoadSettingsFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport class LoadSettingsSuccess implements Action {\n    readonly type = SettingsActionTypes.LoadSettingsSuccess;\n\n    /* istanbul ignore next */\n    constructor(public payload: { settings: any }) {\n    }\n}\n\nexport class PatchSettings implements Action {\n    readonly type = SettingsActionTypes.PatchSettings;\n    constructor(public payload: {settings:any}){}\n}\nexport class PatchSettingsFailure implements Action {\n    readonly type = SettingsActionTypes.PatchSettingsFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport class PatchSettingsSuccess implements Action {\n    readonly type = SettingsActionTypes.PatchSettingsSuccess;\n\n    /* istanbul ignore next */\n    constructor(public payload: { settings: any }) {\n    }\n}\n\nexport class HandleUnexpectedError implements Action {\n    /* istanbul ignore next */\n    readonly type = SettingsActionTypes.HandleUnexpectedError;\n    /* istanbul ignore next */\n    constructor(public payload: {error: Error}) {\n\n    }\n}\n\nexport type SettingsActions =\n    LoadSettings\n    | LoadSettingsSuccess\n    | LoadSettingsFailure\n    | PatchSettings\n    | PatchSettingsSuccess\n    | PatchSettingsFailure\n    | HandleUnexpectedError;\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PatchSettingsSuccess.html":{"url":"classes/PatchSettingsSuccess.html","title":"class - PatchSettingsSuccess","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PatchSettingsSuccess\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/settings.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/store/actions/settings.actions.ts:56\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/settings.actions.ts:59\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : SettingsActionTypes.PatchSettingsSuccess\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/settings.actions.ts:56\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Action} from '@ngrx/store';\n\nexport enum SettingsActionTypes {\n    LoadSettings = '[Settings] Load Settings',\n    LoadSettingsSuccess = '[Settings] Load Settings Success',\n    LoadSettingsFailure = '[Settings] Load Settings Fail',\n\n    PatchSettings = '[Settings] Patch Settings',\n    PatchSettingsSuccess = '[Settings] Patch Settings Success',\n    PatchSettingsFailure = '[Settings] Patch Settings Fail',\n\n    HandleUnexpectedError = '[Settings] Handle unexpected error related to user settings issue'\n}\n// needed by NGRX entities\n\nexport class LoadSettings implements Action {\n    readonly type = SettingsActionTypes.LoadSettings;\n}\nexport class LoadSettingsFailure implements Action {\n    readonly type = SettingsActionTypes.LoadSettingsFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport class LoadSettingsSuccess implements Action {\n    readonly type = SettingsActionTypes.LoadSettingsSuccess;\n\n    /* istanbul ignore next */\n    constructor(public payload: { settings: any }) {\n    }\n}\n\nexport class PatchSettings implements Action {\n    readonly type = SettingsActionTypes.PatchSettings;\n    constructor(public payload: {settings:any}){}\n}\nexport class PatchSettingsFailure implements Action {\n    readonly type = SettingsActionTypes.PatchSettingsFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport class PatchSettingsSuccess implements Action {\n    readonly type = SettingsActionTypes.PatchSettingsSuccess;\n\n    /* istanbul ignore next */\n    constructor(public payload: { settings: any }) {\n    }\n}\n\nexport class HandleUnexpectedError implements Action {\n    /* istanbul ignore next */\n    readonly type = SettingsActionTypes.HandleUnexpectedError;\n    /* istanbul ignore next */\n    constructor(public payload: {error: Error}) {\n\n    }\n}\n\nexport type SettingsActions =\n    LoadSettings\n    | LoadSettingsSuccess\n    | LoadSettingsFailure\n    | PatchSettings\n    | PatchSettingsSuccess\n    | PatchSettingsFailure\n    | HandleUnexpectedError;\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PayloadForSuccessfulAuthentication.html":{"url":"classes/PayloadForSuccessfulAuthentication.html","title":"class - PayloadForSuccessfulAuthentication","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PayloadForSuccessfulAuthentication\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/authentication.actions.ts\n        \n\n            \n                Description\n            \n            \n                Authentication success payload\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                clientId\n                            \n                            \n                                    Public\n                                expirationDate\n                            \n                            \n                                    Public\n                                    Optional\n                                firstName\n                            \n                            \n                                    Public\n                                identifier\n                            \n                            \n                                    Public\n                                    Optional\n                                lastName\n                            \n                            \n                                    Public\n                                token\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(identifier: string, clientId: Guid, token: string, expirationDate: Date, firstName?: string, lastName?: string)\n                    \n                \n                        \n                            \n                                Defined in src/app/store/actions/authentication.actions.ts:33\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        identifier\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        clientId\n                                                  \n                                                        \n                                                                    Guid\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        token\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        expirationDate\n                                                  \n                                                        \n                                                                        Date\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        firstName\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        lastName\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            clientId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Guid\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/authentication.actions.ts:35\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            expirationDate\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/authentication.actions.ts:37\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            firstName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/authentication.actions.ts:38\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            identifier\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/authentication.actions.ts:34\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            lastName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/authentication.actions.ts:39\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            token\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/authentication.actions.ts:36\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Action} from '@ngrx/store';\nimport {Guid} from 'guid-typescript';\nimport {Message} from \"@ofModel/message.model\";\nimport {ExtractI18nBuilderOptions} from \"@angular-devkit/build-angular\";\n\nexport enum AuthenticationActionTypes {\n    InitAuthStatus = '[Authentication] Init Authentication Status',\n    CheckAuthenticationStatus = '[Authentication] Check Authentication Status',\n    AcceptLogIn = '[Authentication] Accept the user log in attempt',\n    RejectLogIn = '[Authentication] Reject the user log in attempt',\n    TryToLogIn = '[Authentication] Try to log the user in',\n    TryToLogOut = '[Authentication] Try to log the user out',\n    AcceptLogOut = '[Authentication] Accept the user log out attempt',\n    AcceptLogOutSuccess = '[Authentication] Success Accept the user log out attempt',\n    CheckImplicitFlowAuthenticationStatus = '[Authentication] Check Authentication Status specifically for the Implicit Flow',\n    UselessAuthAction = '[Authentication] test purpose action'\n    // TODO the following actions should be merge with password and code flow management of authentication\n    , ImplicitallyAuthenticated = '[Authentication] user is authentication using Implicit Flow' //\n    , UnAuthenticationFromImplicitFlow = '[Authentication[ user is log out by implicit Flow internal managment'\n}\n\n/**\n * Authentication success payload\n */\nexport class PayloadForSuccessfulAuthentication {\n    constructor(public identifier: string,\n                public clientId: Guid,\n                public token: string,\n                public expirationDate: Date,\n                public firstName?:string,\n                public lastName?:string) {\n    }\n}\n\n/**\n * It aims to validate the current authentication if exists.\n *\n */\nexport class InitAuthStatus implements Action {\n    readonly type = AuthenticationActionTypes.InitAuthStatus;\n    /* istanbul ignore next */\n    constructor(public payload:{code: string}){}\n}\n\n/**\n * It aims to validate the current authentication if exists.\n *\n */\nexport class CheckAuthenticationStatus implements Action {\n    /* istanbul ignore next */\n    readonly type = AuthenticationActionTypes.CheckAuthenticationStatus;\n}\n\n/**\n * Action used to update the state with the authentication information\n *\n * Emitted by {AuthenticationEffects} in the following {Observable} @members:\n *  * TryToLogIn\n *  * CheckAuthentication via handleLogInAttempt @method\n *\n * Used in the {function} reducer of the {authentication.reducer.ts} file to create a new state\n * containing the authentication information by filtering on the {AuthenticationActionTypes.AcceptLogIn} type.\n *\n */\nexport class AcceptLogIn implements Action {\n    readonly type = AuthenticationActionTypes.AcceptLogIn;\n\n    /* istanbul ignore next */\n    constructor(public payload: PayloadForSuccessfulAuthentication) {}\n}\n\n/**\n * Action used to push login/password pair to the authentication service\n *\n * Emitted by {LoginComponent} in the onSubmit @method which is called\n * when the user click on the `Login` button of the login page form.\n */\nexport class TryToLogIn implements Action {\n    readonly type= AuthenticationActionTypes.TryToLogIn;\n\n    /* istanbul ignore next */\n    constructor(public payload: {username: string, password: string}){}\n}\n\n/**\n * Action used when the user logout\n *\n * Emitted by {NavbarComponent} win the logOut @method which is called\n * when the user click on the `logOut` button of the `navbar`\n */\nexport class TryToLogOut implements Action {\n    /* istanbul ignore next */\n    readonly type = AuthenticationActionTypes.TryToLogOut;\n}\n\n/**\n * Action used to notify the store that the authentication is not possible.\n *\n * Emmited by {AuthenticationEffect} in the following {Observable} @members:\n *  * `TryToLogin`;\n *  *  `CheckAuthentication`\n *  and in the `handleRejectedLogin` @method called by the `ChecAuthentication` {Observable}\n *\n * Used in the {function} reducer of the {authentication.reducer.ts} file to create a new state\n * without any authentication information and containing a message about login rejection\n * by filtering on the {AuthenticationActionTypes.RejectLogIn} type.\n *\n */\nexport class RejectLogIn implements Action {\n    readonly type = AuthenticationActionTypes.RejectLogIn;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Message }) {}\n}\n\n/**\n * Action used to removes authentication information of the system and thus logOut the user.\n *\n * Emitted by {AuthenticationEffect} in the following {Observable} @members:\n *  * `TryToLogOut`\n *  * `RejectLogInAttempt`\n *\n *  Consume by {AuthenticationEffect} in the `AcceptLogOut` {Observable} @member\n *\n */\nexport class AcceptLogOut implements Action {\n    readonly type = AuthenticationActionTypes.AcceptLogOut;\n\n    /* istanbul ignore next */\n    constructor(){}\n}\n\n/**\n * Action used to notify the store to remove authentication information\n *\n * Emitted by {AuthenticationEffect} in `AcceptLogOut` {Observable} @member.\n *\n * Used in the {function} reducer of the {authentication.reducer.ts} file to create a new state\n * without any authentication information by filtering on the {AuthenticationActionTypes.AcceptLogOut} type.\n */\nexport class AcceptLogOutSuccess implements Action {\n    /* istanbul ignore next */\n    readonly type = AuthenticationActionTypes.AcceptLogOutSuccess;\n}\n\nexport class CheckImplicitFlowAuthenticationStatus implements Action {\n    readonly type = AuthenticationActionTypes.CheckImplicitFlowAuthenticationStatus;\n}\n\nexport class UselessAuthAction implements  Action{\n    readonly type = AuthenticationActionTypes.UselessAuthAction;\n\n}\n\nexport class ImplicitlyAuthenticated implements Action {\n    readonly type = AuthenticationActionTypes.ImplicitallyAuthenticated;\n}\n\nexport class UnAuthenticationFromImplicitFlow implements Action {\n    readonly type = AuthenticationActionTypes.UnAuthenticationFromImplicitFlow;\n}\nexport type AuthenticationActions =\n    InitAuthStatus\n    | AcceptLogIn\n    | RejectLogIn\n    | TryToLogIn\n    | TryToLogOut\n    | CheckAuthenticationStatus\n    | AcceptLogOut\n    | AcceptLogOutSuccess\n    | CheckImplicitFlowAuthenticationStatus\n    | UselessAuthAction\n    | ImplicitlyAuthenticated\n    |UnAuthenticationFromImplicitFlow;\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Process.html":{"url":"classes/Process.html","title":"class - Process","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Process\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/model/thirds.model.ts\n        \n\n\n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(states?: OfMap)\n                    \n                \n                        \n                            \n                                Defined in src/app/model/thirds.model.ts:58\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        states\n                                                  \n                                                        \n                                                                    OfMap\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Card, Detail} from \"@ofModel/card.model\";\nimport {I18n} from \"@ofModel/i18n.model\";\nimport {Map as OfMap} from \"@ofModel/map\";\n\nexport class Third {\n    /* istanbul ignore next */\n    constructor(\n        readonly name: string,\n        readonly version: string,\n        readonly i18nLabelKey: string,\n        readonly templates?: string[],\n        readonly csses?: string[],\n        readonly locales?: string[],\n        readonly menuEntries?: ThirdMenuEntry[],\n        readonly processes?: OfMap\n    ) {\n    }\n\n    public extractState(card: Card): State {\n        if (card.process && this.processes[card.process]) {\n            const process = this.processes[card.process];\n            if (card.state && process.states[card.state]) {\n                return process.states[card.state];\n            }\n        }\n        return null;\n    }\n}\n\nexport class ThirdMenuEntry {\n    /* istanbul ignore next */\n    constructor(\n        readonly id: string,\n        readonly label: string,\n        readonly url: string\n    ) {\n    }\n}\n\nexport class ThirdMenu {\n    /* istanbul ignore next */\n    constructor(\n        readonly id: string,\n        readonly version: string,\n        readonly label: string,\n        readonly entries: ThirdMenuEntry[]) {\n    }\n}\n\nexport class Process {\n    /* istanbul ignore next */\n    constructor(\n        readonly states?: OfMap\n    ) {\n    }\n}\n\nexport class State {\n    /* istanbul ignore next */\n    constructor(\n        readonly details?: Detail[],\n        readonly actions?: OfMap\n    ) {\n    }\n}\n\nexport enum ActionType {\n    EXTERNAL = 'EXTERNAL',\n    JNLP = 'JNLP',\n    URL = 'URL'\n\n}\n\nexport class Action {\n    /* istanbul ignore next */\n    constructor(\n        readonly type: ActionType,\n        readonly label: I18n,\n        readonly hidden: boolean = false,\n        readonly buttonStyle: string = '',\n        readonly contentStyle: string = '',\n        readonly inputs: Input[] = [],\n        readonly lockAction: boolean = false,\n        readonly lockCard: boolean = false,\n        readonly updateState: boolean = false,\n        readonly updateStateBeforeAction: boolean = false,\n        readonly called: boolean = false,\n        readonly needsConfirm: boolean = false,\n        readonly key?: string\n    ) {\n    }\n\n}\n\nexport const emptyAction = new Action(null, null);\n\ntype Omit = Pick>;\n\nexport class ActionStatus {\n    constructor(\n        readonly label: I18n,\n        readonly hidden: boolean = false,\n        readonly buttonStyle: string = '',\n        readonly contentStyle: string = '',\n        readonly inputs: Input[] = [],\n        readonly lockCard: boolean = false,\n        readonly updateState: boolean = false,\n        readonly updateStateBeforeAction: boolean = false,\n        readonly needsConfirm: boolean = false,\n        readonly lockAction: boolean = false,\n    ) {\n    }\n}\n\nexport const emptyActionStatus = new ActionStatus(null);\n\n/*\nfor some reasons lodash equals take attribute order declaration in account to compute object equality\nneeded by LightCardEffects updateAThirdAction Effect and by checkIfReceivedStatusIsDifferentFromCurrentOne method of ThirdActionService .\n */\nexport function extractActionStatusFromPseudoActionStatus(tAction: object): ActionStatus {\n    let label = new I18n('');\n    const i18n = tAction['label'];\n    if (i18n) {\n        const params = i18n['parameters'];\n        if (params) {\n            Object.setPrototypeOf(params, OfMap.prototype);\n            label = new I18n(i18n['key'], params);\n        } else {\n            label = new I18n(i18n['key']);\n        }\n\n    }\n    const result = new ActionStatus(\n        label\n        , tAction['hidden']\n        , tAction['buttonStyle']\n        , tAction['contentStyle']\n        , tAction['inputs'] // TODO Need proper prototype handling\n        , tAction['lockCard']\n        , tAction['updateState']\n        , tAction['updateStateBeforeAction']\n        , tAction['needsConfirm']\n        , tAction['lockAction']\n    );\n    return result;\n}\n\n\nexport enum InputType {\n    TEXT,\n    LIST,\n    LIST_RADIO,\n    SWITCH_LIST,\n    LONGTEXT,\n    BOOLEAN,\n    STATIC\n}\n\nexport class Input {\n    /* istanbul ignore next */\n    constructor(\n        readonly type: InputType,\n        readonly name: string,\n        readonly label: I18n,\n        readonly value: string,\n        readonly mandatory: boolean,\n        readonly maxLength: number,\n        readonly rows: number,\n        readonly values: ParameterListItem[],\n        readonly selectedValues: string[],\n        readonly unSelectedValues: string[],\n    ) {\n    }\n}\n\nexport class ParameterListItem {\n    /* istanbul ignore next */\n    constructor(\n        readonly label: I18n,\n        readonly value: string,\n    ) {\n    }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RefreshTranslation.html":{"url":"classes/RefreshTranslation.html","title":"class - RefreshTranslation","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RefreshTranslation\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/translate.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : TranslateActionsTypes.RefreshTranslation\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/translate.actions.ts:46\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Action} from \"@ngrx/store\";\nimport {Map} from \"@ofModel/map\";\n\nexport enum TranslateActionsTypes {\n    UpdateTranslation = '[i18n] Translation need an update',\n    UpdateTranslationSuccessful = '[i18n] Translation successfully updated',\n    UpdateTranslationFailed = '[i18n] Translation update failed',\n    TranslationUpToDate = '[i18n] all Translation materials are already loaded',\n    RefreshTranslation ='[i18n] translate handler has been refreshed'\n}\n\nexport class UpdateTranslation implements Action {\n    readonly type = TranslateActionsTypes.UpdateTranslation;\n\n    constructor(public payload: { versions: Map> }) {\n    }\n}\n\nexport class TranslationUpToDate implements Action {\n    readonly type = TranslateActionsTypes.TranslationUpToDate;\n}\n\nexport class UpdateTranslationSuccessful implements Action {\n    readonly type = TranslateActionsTypes.UpdateTranslationSuccessful;\n\n    constructor(public payload: { language: string }) {\n    }\n}\n\nexport class UpdateTranslationFailed implements Action {\n    readonly type = TranslateActionsTypes.UpdateTranslationFailed;\n\n    constructor(public payload: { error: Error }) {\n    }\n}\n\n\nexport class RefreshTranslation implements Action {\n    readonly type = TranslateActionsTypes.RefreshTranslation;\n}\nexport type TranslateActions = UpdateTranslation |\n    UpdateTranslationSuccessful | UpdateTranslationFailed | TranslationUpToDate | RefreshTranslation;\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RejectLogIn.html":{"url":"classes/RejectLogIn.html","title":"class - RejectLogIn","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RejectLogIn\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/authentication.actions.ts\n        \n\n            \n                Description\n            \n            \n                Action used to notify the store that the authentication is not possible.\nEmmited by {AuthenticationEffect} in the following {Observable} @members:\n\nTryToLogin;\nCheckAuthentication\nand in the handleRejectedLogin @method called by the ChecAuthentication {Observable}\n\nUsed in the {function} reducer of the {authentication.reducer.ts} file to create a new state\nwithout any authentication information and containing a message about login rejection\nby filtering on the {AuthenticationActionTypes.RejectLogIn} type.\n\n            \n\n\n            \n                Implements\n            \n            \n                            Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/store/actions/authentication.actions.ts:118\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/authentication.actions.ts:121\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : AuthenticationActionTypes.RejectLogIn\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/authentication.actions.ts:118\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Action} from '@ngrx/store';\nimport {Guid} from 'guid-typescript';\nimport {Message} from \"@ofModel/message.model\";\nimport {ExtractI18nBuilderOptions} from \"@angular-devkit/build-angular\";\n\nexport enum AuthenticationActionTypes {\n    InitAuthStatus = '[Authentication] Init Authentication Status',\n    CheckAuthenticationStatus = '[Authentication] Check Authentication Status',\n    AcceptLogIn = '[Authentication] Accept the user log in attempt',\n    RejectLogIn = '[Authentication] Reject the user log in attempt',\n    TryToLogIn = '[Authentication] Try to log the user in',\n    TryToLogOut = '[Authentication] Try to log the user out',\n    AcceptLogOut = '[Authentication] Accept the user log out attempt',\n    AcceptLogOutSuccess = '[Authentication] Success Accept the user log out attempt',\n    CheckImplicitFlowAuthenticationStatus = '[Authentication] Check Authentication Status specifically for the Implicit Flow',\n    UselessAuthAction = '[Authentication] test purpose action'\n    // TODO the following actions should be merge with password and code flow management of authentication\n    , ImplicitallyAuthenticated = '[Authentication] user is authentication using Implicit Flow' //\n    , UnAuthenticationFromImplicitFlow = '[Authentication[ user is log out by implicit Flow internal managment'\n}\n\n/**\n * Authentication success payload\n */\nexport class PayloadForSuccessfulAuthentication {\n    constructor(public identifier: string,\n                public clientId: Guid,\n                public token: string,\n                public expirationDate: Date,\n                public firstName?:string,\n                public lastName?:string) {\n    }\n}\n\n/**\n * It aims to validate the current authentication if exists.\n *\n */\nexport class InitAuthStatus implements Action {\n    readonly type = AuthenticationActionTypes.InitAuthStatus;\n    /* istanbul ignore next */\n    constructor(public payload:{code: string}){}\n}\n\n/**\n * It aims to validate the current authentication if exists.\n *\n */\nexport class CheckAuthenticationStatus implements Action {\n    /* istanbul ignore next */\n    readonly type = AuthenticationActionTypes.CheckAuthenticationStatus;\n}\n\n/**\n * Action used to update the state with the authentication information\n *\n * Emitted by {AuthenticationEffects} in the following {Observable} @members:\n *  * TryToLogIn\n *  * CheckAuthentication via handleLogInAttempt @method\n *\n * Used in the {function} reducer of the {authentication.reducer.ts} file to create a new state\n * containing the authentication information by filtering on the {AuthenticationActionTypes.AcceptLogIn} type.\n *\n */\nexport class AcceptLogIn implements Action {\n    readonly type = AuthenticationActionTypes.AcceptLogIn;\n\n    /* istanbul ignore next */\n    constructor(public payload: PayloadForSuccessfulAuthentication) {}\n}\n\n/**\n * Action used to push login/password pair to the authentication service\n *\n * Emitted by {LoginComponent} in the onSubmit @method which is called\n * when the user click on the `Login` button of the login page form.\n */\nexport class TryToLogIn implements Action {\n    readonly type= AuthenticationActionTypes.TryToLogIn;\n\n    /* istanbul ignore next */\n    constructor(public payload: {username: string, password: string}){}\n}\n\n/**\n * Action used when the user logout\n *\n * Emitted by {NavbarComponent} win the logOut @method which is called\n * when the user click on the `logOut` button of the `navbar`\n */\nexport class TryToLogOut implements Action {\n    /* istanbul ignore next */\n    readonly type = AuthenticationActionTypes.TryToLogOut;\n}\n\n/**\n * Action used to notify the store that the authentication is not possible.\n *\n * Emmited by {AuthenticationEffect} in the following {Observable} @members:\n *  * `TryToLogin`;\n *  *  `CheckAuthentication`\n *  and in the `handleRejectedLogin` @method called by the `ChecAuthentication` {Observable}\n *\n * Used in the {function} reducer of the {authentication.reducer.ts} file to create a new state\n * without any authentication information and containing a message about login rejection\n * by filtering on the {AuthenticationActionTypes.RejectLogIn} type.\n *\n */\nexport class RejectLogIn implements Action {\n    readonly type = AuthenticationActionTypes.RejectLogIn;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Message }) {}\n}\n\n/**\n * Action used to removes authentication information of the system and thus logOut the user.\n *\n * Emitted by {AuthenticationEffect} in the following {Observable} @members:\n *  * `TryToLogOut`\n *  * `RejectLogInAttempt`\n *\n *  Consume by {AuthenticationEffect} in the `AcceptLogOut` {Observable} @member\n *\n */\nexport class AcceptLogOut implements Action {\n    readonly type = AuthenticationActionTypes.AcceptLogOut;\n\n    /* istanbul ignore next */\n    constructor(){}\n}\n\n/**\n * Action used to notify the store to remove authentication information\n *\n * Emitted by {AuthenticationEffect} in `AcceptLogOut` {Observable} @member.\n *\n * Used in the {function} reducer of the {authentication.reducer.ts} file to create a new state\n * without any authentication information by filtering on the {AuthenticationActionTypes.AcceptLogOut} type.\n */\nexport class AcceptLogOutSuccess implements Action {\n    /* istanbul ignore next */\n    readonly type = AuthenticationActionTypes.AcceptLogOutSuccess;\n}\n\nexport class CheckImplicitFlowAuthenticationStatus implements Action {\n    readonly type = AuthenticationActionTypes.CheckImplicitFlowAuthenticationStatus;\n}\n\nexport class UselessAuthAction implements  Action{\n    readonly type = AuthenticationActionTypes.UselessAuthAction;\n\n}\n\nexport class ImplicitlyAuthenticated implements Action {\n    readonly type = AuthenticationActionTypes.ImplicitallyAuthenticated;\n}\n\nexport class UnAuthenticationFromImplicitFlow implements Action {\n    readonly type = AuthenticationActionTypes.UnAuthenticationFromImplicitFlow;\n}\nexport type AuthenticationActions =\n    InitAuthStatus\n    | AcceptLogIn\n    | RejectLogIn\n    | TryToLogIn\n    | TryToLogOut\n    | CheckAuthenticationStatus\n    | AcceptLogOut\n    | AcceptLogOutSuccess\n    | CheckImplicitFlowAuthenticationStatus\n    | UselessAuthAction\n    | ImplicitlyAuthenticated\n    |UnAuthenticationFromImplicitFlow;\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RemoveLightCard.html":{"url":"classes/RemoveLightCard.html","title":"class - RemoveLightCard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RemoveLightCard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/light-card.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/store/actions/light-card.actions.ts:115\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/light-card.actions.ts:117\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : LightCardActionTypes.RemoveLightCard\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/light-card.actions.ts:115\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Action} from '@ngrx/store';\nimport {LightCard} from '@ofModel/light-card.model';\nimport {Action as ThirdAction, ActionStatus} from '@ofModel/thirds.model';\nimport {Update} from \"@ngrx/entity\";\n\nexport enum LightCardActionTypes {\n    LoadLightCards = '[LCard] Load',\n    EmptyLightCards = '[LCard] Empty',\n    LoadLightCardsSuccess = '[LCard] Load Success',\n    LoadLightCardsExtendedData = '[LCard] Load Extended Data',\n    LoadLightCardsFailure = '[LCard] Load Fail',\n    SelectLightCard = '[LCard] Select One',\n    ClearLightCardSelection = '[LCard] Clear Light Card Selection',\n    AddLightCardFailure = '[LCard] Add Light Card Fail',\n    UpdatedSubscription = '[LCard] UpdateSubscription',\n    HandleUnexpectedError = '[LCard] Handle unexpected error related to authentication issue',\n    RemoveLightCard = '[LCard] Remove a card',\n    AddThirdActions = '[LCard] Adds some Third Actions to existing card',\n    UpdateALightCard = '[LCard] Update a Light Card',\n    UpdateAnAction = '[LCard] Update one Action of a LightCard',\n    UpdateAnActionFailure = '[LCard] No actions where available to update for the current selected card in the state',\n    ThirdActionAlreadyLoaded = '[LCard] Light Card contains actions',\n    ThirdActionAlreadyUpdated = '[LCard] Third Action unchanged',\n    DelayedLightCardUpdate = '[LCard] update Light Card actions later',\n    LightCardAlreadyUpdated = '[LCard] Light Card already Updated'\n}\n\n// needed by NGRX entities\nexport class LoadLightCards implements Action {\n    /* istanbul ignore next */\n    readonly type = LightCardActionTypes.LoadLightCards;\n}\n\nexport class EmptyLightCards implements Action {\n    /* istanbul ignore next */\n    readonly type = LightCardActionTypes.EmptyLightCards;\n}\n\nexport class LoadLightCardsSuccess implements Action {\n    readonly type = LightCardActionTypes.LoadLightCardsSuccess;\n\n    /* istanbul ignore next */\n    constructor(public payload: { lightCards: LightCard[] }) {\n    }\n}\n\nexport class LoadLightCardsExtendedData implements Action {\n    readonly type = LightCardActionTypes.LoadLightCardsExtendedData;\n\n    /* istanbul ignore next */\n    constructor() {\n    }\n}\n\nexport class LoadLightCardsFailure implements Action {\n    readonly type = LightCardActionTypes.LoadLightCardsFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport class SelectLightCard implements Action {\n    /* istanbul ignore next */\n    readonly type = LightCardActionTypes.SelectLightCard;\n\n    /* istanbul ignore next */\n    constructor(public payload: { selectedCardId: string }) {\n    }\n\n}\n\nexport class ClearLightCardSelection implements Action {\n\n    readonly type = LightCardActionTypes.ClearLightCardSelection;\n\n    constructor() {\n    }\n}\n\nexport class AddLightCardFailure implements Action {\n    readonly type = LightCardActionTypes.AddLightCardFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport class UpdatedSubscription implements Action {\n    readonly type = LightCardActionTypes.UpdatedSubscription;\n\n    /* istanbul ignore next */\n    constructor() {\n    }\n}\n\nexport class HandleUnexpectedError implements Action {\n    /* istanbul ignore next */\n    readonly type = LightCardActionTypes.HandleUnexpectedError;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport class RemoveLightCard implements Action {\n    readonly type = LightCardActionTypes.RemoveLightCard;\n\n    constructor(public  payload: { cards: string[] }) {\n    }\n}\n\nexport class AddThirdActions implements Action {\n    readonly type = LightCardActionTypes.AddThirdActions;\n\n    constructor(public payload: { card: LightCard, actions: Map }) {\n    }\n}\n\nexport class UpdateALightCard implements Action {\n    readonly type = LightCardActionTypes.UpdateALightCard;\n\n    constructor(public payload: { card: LightCard }) {\n    }\n}\n\nexport class UpdateAnAction implements Action {\n    readonly type = LightCardActionTypes.UpdateAnAction;\n\n    constructor(public payload: { cardId: string, actionKey: string, status: ActionStatus }) {\n    }\n}\n\nexport class UpdateAnActionFailure implements Action {\n    readonly type = LightCardActionTypes.UpdateAnActionFailure;\n\n    constructor() {\n    }\n}\n\nexport class ThirdActionAlreadyLoaded implements Action {\n    readonly type = LightCardActionTypes.ThirdActionAlreadyLoaded;\n\n    constructor() {\n    }\n}\n\nexport class ThirdActionAlreadyUpdated implements Action {\n    readonly type = LightCardActionTypes.ThirdActionAlreadyUpdated;\n\n    constructor() {\n    }\n}\n\nexport class DelayedLightCardUpdate implements Action {\n    readonly type = LightCardActionTypes.DelayedLightCardUpdate;\n\n    constructor(public payload: { card: LightCard }) {\n    }\n}\n\nexport class LightCardAlreadyUpdated implements Action {\n    readonly type = LightCardActionTypes.LightCardAlreadyUpdated;\n\n    constructor() {\n    }\n}\n\nexport type LightCardActions =\n    LoadLightCards\n    | LoadLightCardsSuccess\n    | LoadLightCardsFailure\n    | SelectLightCard\n    | ClearLightCardSelection\n    | AddLightCardFailure\n    | UpdatedSubscription\n    | HandleUnexpectedError\n    | EmptyLightCards\n    | AddThirdActions\n    | UpdateALightCard\n    | UpdateAnAction\n    | UpdateAnActionFailure\n    | ThirdActionAlreadyLoaded\n    | ThirdActionAlreadyUpdated\n    | DelayedLightCardUpdate\n    | LightCardAlreadyUpdated\n    | RemoveLightCard;\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ResizableComponent.html":{"url":"components/ResizableComponent.html","title":"component - ResizableComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ResizableComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/utilities/components/resizable/resizable.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    AfterViewInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                of-resizable\n            \n\n            \n                styleUrls\n                ./resizable.component.css\n            \n\n\n\n            \n                templateUrl\n                ./resizable.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                resized\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngAfterViewInit\n                            \n                        \n                    \n                \n\n\n\n\n                \n                    \n                        HostListeners\n                    \n                \n                \n                    \n                        \n                            \n                                window:resize\n                            \n                        \n                    \n                \n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/utilities/components/resizable/resizable.component.ts:17\n                            \n                        \n\n            \n        \n\n\n\n\n\n    \n    HostListeners    \n        \n            \n                \n                    \n                    \n                        \n                            window:resize\n                        \n                        \n                    \n                \n            \n            \n                \nwindow:resize()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/utilities/components/resizable/resizable.component.ts:34\n                \n            \n\n\n        \n    \n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngAfterViewInit\n                        \n                        \n                    \n                \n            \n            \n                \nngAfterViewInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/utilities/components/resizable/resizable.component.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            resized\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/utilities/components/resizable/resizable.component.ts:17\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, AfterViewInit, HostListener } from '@angular/core';\n\n@Component({\n  selector: 'of-resizable',\n  templateUrl: './resizable.component.html',\n  styleUrls: ['./resizable.component.css']\n})\nexport class ResizableComponent implements AfterViewInit {\n\n  resized: boolean;\n  constructor() { }\n  ngAfterViewInit() {\n    // Trigger resize event to make sure that height is calculated once parent height is available (see OC-362)\n    if (typeof(Event) === 'function') {\n      // modern browsers\n      window.dispatchEvent(new Event('resize'));\n    } else {\n      // for IE and other old browsers\n      // causes deprecation warning on modern browsers\n      const evt = window.document.createEvent('UIEvents');\n      evt.initUIEvent('resize', true, false, window, 0);\n      window.dispatchEvent(evt);\n    }\n  }\n\n  @HostListener('window:resize')\n  onResize() {\n    this.resized = true;\n  }\n\n}\n\n\n\n    \n\n    \n        \n\n\n\n\n\n\n  resizable works!\n\n\n    \n\n    \n                \n                    ./resizable.component.css\n                \n                /* Copyright (c) 2020, RTE (http://www.rte-france.com)\n *\n * This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n */\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  resizable works!'\n    var COMPONENTS = [{'name': 'ActionComponent', 'selector': 'of-action'},{'name': 'AppComponent', 'selector': 'of-root'},{'name': 'ArchiveFiltersComponent', 'selector': 'of-archive-filters'},{'name': 'ArchiveListComponent', 'selector': 'of-archive-list'},{'name': 'ArchiveListPageComponent', 'selector': 'of-archive-list-page'},{'name': 'ArchivesComponent', 'selector': 'of-archives'},{'name': 'BaseSettingComponent', 'selector': 'of-base-setting'},{'name': 'CardComponent', 'selector': 'of-card'},{'name': 'CardDetailsComponent', 'selector': 'of-card-details'},{'name': 'CardListComponent', 'selector': 'of-card-list'},{'name': 'ConfirmModalComponent', 'selector': 'confirm-modal-component'},{'name': 'CustomLogoComponent', 'selector': 'of-custom-logo'},{'name': 'CustomTimelineChartComponent', 'selector': 'of-custom-timeline-chart'},{'name': 'DatetimeFilterComponent', 'selector': 'of-datetime-filter'},{'name': 'DetailComponent', 'selector': 'of-detail'},{'name': 'DetailsComponent', 'selector': 'of-details'},{'name': 'EmailSettingComponent', 'selector': 'of-email-setting'},{'name': 'FeedComponent', 'selector': 'of-cards'},{'name': 'FiltersComponent', 'selector': 'of-filters'},{'name': 'IconComponent', 'selector': 'of-icon'},{'name': 'IframeDisplayComponent', 'selector': 'of-iframedisplay'},{'name': 'InfoComponent', 'selector': 'of-info'},{'name': 'InitChartComponent', 'selector': 'of-init-chart'},{'name': 'ListSettingComponent', 'selector': 'of-list-setting'},{'name': 'LoginComponent', 'selector': 'of-login'},{'name': 'MenuLinkComponent', 'selector': 'of-menu-link'},{'name': 'MultiFilterComponent', 'selector': 'of-multi-filter'},{'name': 'MultiSettingsComponent', 'selector': 'of-multi-settings'},{'name': 'NavbarComponent', 'selector': 'of-navbar'},{'name': 'NoSelectionComponent', 'selector': 'of-no-selection'},{'name': 'ResizableComponent', 'selector': 'of-resizable'},{'name': 'SettingsComponent', 'selector': 'of-settings'},{'name': 'TagsFilterComponent', 'selector': 'of-tags-filter'},{'name': 'TextSettingComponent', 'selector': 'of-text-setting'},{'name': 'TimeFilterComponent', 'selector': 'of-time-filter'},{'name': 'TimeLineComponent', 'selector': 'of-time-line'},{'name': 'TypeAheadSettingsComponent', 'selector': 'of-type-ahead-settings'},{'name': 'TypeFilterComponent', 'selector': 'of-type-filter'}];\n    var DIRECTIVES = [{'name': 'CalcHeightDirective', 'selector': '[calcHeightDirective]'},{'name': 'DraggableDirective', 'selector': '[appDraggable]'},{'name': 'MouseWheelDirective', 'selector': '[appMouseWheel]'}];\n    var ACTUAL_COMPONENT = {'name': 'ResizableComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RouterStateUrl.html":{"url":"classes/RouterStateUrl.html","title":"class - RouterStateUrl","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RouterStateUrl\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/states/router.state.ts\n        \n\n            \n                Description\n            \n            \n                The RouterStateSerializer takes the current RouterStateSnapshot\nand returns any pertinent information needed. The snapshot contains\nall information about the state of the router at the given point in time.\nThe entire snapshot is complex and not always needed. In this case, you only\nneed the URL and query parameters from the snapshot in the store. Other items could be\nreturned such as route parameters and static route data.\nsource: https://github.com/briebug/ngrx-complex-forms\n\n            \n\n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(url: string, params: Params, queryParams: Params)\n                    \n                \n                        \n                            \n                                Defined in src/app/store/states/router.state.ts:38\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        url\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        params\n                                                  \n                                                        \n                                                                        Params\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        queryParams\n                                                  \n                                                        \n                                                                        Params\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {RouterStateSerializer} from \"@ngrx/router-store\";\nimport {ActivatedRouteSnapshot, Params, RouterStateSnapshot} from \"@angular/router\";\n\nexport const initialState = {\n    state: {\n        url: window.location.pathname,\n        params: {},\n        queryParams: {}\n    },\n    navigationId: 0\n}\n\n/**\n * The RouterStateSerializer takes the current RouterStateSnapshot\n * and returns any pertinent information needed. The snapshot contains\n * all information about the state of the router at the given point in time.\n * The entire snapshot is complex and not always needed. In this case, you only\n * need the URL and query parameters from the snapshot in the store. Other items could be\n * returned such as route parameters and static route data.\n *\n * source: https://github.com/briebug/ngrx-complex-forms\n *\n */\n\nexport class RouterStateUrl {\n    /* istanbul ignore next */\n    constructor(\n        readonly url: string,\n        readonly params: Params,\n        readonly queryParams: Params) {\n    }\n}\n\nexport class CustomRouterStateSerializer\n    implements RouterStateSerializer {\n    serialize(routerState: RouterStateSnapshot): RouterStateUrl {\n        const {url} = routerState;\n        const params = this.extractParams(routerState.root);\n        const queryParams = routerState.root.queryParams;\n        return new RouterStateUrl(url, params, queryParams);\n    }\n\n    private extractParams(state: ActivatedRouteSnapshot): Params {\n        let params: Params = {...state.params};\n        for (let child of state.children) {\n            params = {...params, ...this.extractParams(child)}\n        }\n        return params;\n    }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SelectArchivedLightCard.html":{"url":"classes/SelectArchivedLightCard.html","title":"class - SelectArchivedLightCard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SelectArchivedLightCard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/archive.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/store/actions/archive.actions.ts:56\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/archive.actions.ts:58\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : ArchiveActionTypes.SelectArchivedLightCard\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/archive.actions.ts:56\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Action} from '@ngrx/store';\nimport {LightCard} from '@ofModel/light-card.model';\nimport {Page} from '@ofModel/page.model';\n\nexport enum ArchiveActionTypes {\n    UpdateArchiveFilter = '[Archive] Update Filter',\n    SendArchiveQuery = '[Archive] Send Query',\n    ArchiveQuerySuccess = '[Archive] Query was successful',\n    UpdateArchivePage = '[Archive] Update query result page',\n    HandleUnexpectedError = '[Archive] Handle unexpected error related to archived card issue',\n    SelectArchivedLightCard = '[Archive] Select one archived light card'\n\n}\n\nexport class UpdateArchiveFilter implements Action {\n    readonly type = ArchiveActionTypes.UpdateArchiveFilter;\n    /* istanbul ignore next */\n    constructor(public payload: {filters: Map}) {}\n}\n\nexport class SendArchiveQuery implements Action {\n    readonly type = ArchiveActionTypes.SendArchiveQuery;\n    constructor(public payload: {params: Map}) {}\n}\n\nexport class HandleUnexpectedError implements Action {\n    /* istanbul ignore next */\n    readonly type = ArchiveActionTypes.HandleUnexpectedError;\n\n    /* istanbul ignore next */\n    constructor(public payload: {error: Error}) {}\n}\n\nexport class ArchiveQuerySuccess implements Action {\n    readonly type = ArchiveActionTypes.ArchiveQuerySuccess;\n    /* istanbul ignore next */\n    constructor(public payload: {resultPage: Page}) {}\n\n}\n\nexport class UpdateArchivePage implements Action {\n    readonly type = ArchiveActionTypes.UpdateArchivePage;\n    /* istanbul ignore next */\n    constructor(public payload: {page: number}) {}\n}\nexport class SelectArchivedLightCard implements Action {\n    /* istanbul ignore next */\n    readonly type = ArchiveActionTypes.SelectArchivedLightCard;\n    /* istanbul ignore next */\n    constructor(public payload: {selectedCardId: string}) {}\n}\n\nexport type ArchiveActions = UpdateArchiveFilter\n    | SendArchiveQuery\n    | HandleUnexpectedError\n    | ArchiveQuerySuccess\n    | UpdateArchivePage\n    | SelectArchivedLightCard;\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SelectLightCard.html":{"url":"classes/SelectLightCard.html","title":"class - SelectLightCard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SelectLightCard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/light-card.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/store/actions/light-card.actions.ts:73\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/light-card.actions.ts:76\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : LightCardActionTypes.SelectLightCard\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/light-card.actions.ts:73\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Action} from '@ngrx/store';\nimport {LightCard} from '@ofModel/light-card.model';\nimport {Action as ThirdAction, ActionStatus} from '@ofModel/thirds.model';\nimport {Update} from \"@ngrx/entity\";\n\nexport enum LightCardActionTypes {\n    LoadLightCards = '[LCard] Load',\n    EmptyLightCards = '[LCard] Empty',\n    LoadLightCardsSuccess = '[LCard] Load Success',\n    LoadLightCardsExtendedData = '[LCard] Load Extended Data',\n    LoadLightCardsFailure = '[LCard] Load Fail',\n    SelectLightCard = '[LCard] Select One',\n    ClearLightCardSelection = '[LCard] Clear Light Card Selection',\n    AddLightCardFailure = '[LCard] Add Light Card Fail',\n    UpdatedSubscription = '[LCard] UpdateSubscription',\n    HandleUnexpectedError = '[LCard] Handle unexpected error related to authentication issue',\n    RemoveLightCard = '[LCard] Remove a card',\n    AddThirdActions = '[LCard] Adds some Third Actions to existing card',\n    UpdateALightCard = '[LCard] Update a Light Card',\n    UpdateAnAction = '[LCard] Update one Action of a LightCard',\n    UpdateAnActionFailure = '[LCard] No actions where available to update for the current selected card in the state',\n    ThirdActionAlreadyLoaded = '[LCard] Light Card contains actions',\n    ThirdActionAlreadyUpdated = '[LCard] Third Action unchanged',\n    DelayedLightCardUpdate = '[LCard] update Light Card actions later',\n    LightCardAlreadyUpdated = '[LCard] Light Card already Updated'\n}\n\n// needed by NGRX entities\nexport class LoadLightCards implements Action {\n    /* istanbul ignore next */\n    readonly type = LightCardActionTypes.LoadLightCards;\n}\n\nexport class EmptyLightCards implements Action {\n    /* istanbul ignore next */\n    readonly type = LightCardActionTypes.EmptyLightCards;\n}\n\nexport class LoadLightCardsSuccess implements Action {\n    readonly type = LightCardActionTypes.LoadLightCardsSuccess;\n\n    /* istanbul ignore next */\n    constructor(public payload: { lightCards: LightCard[] }) {\n    }\n}\n\nexport class LoadLightCardsExtendedData implements Action {\n    readonly type = LightCardActionTypes.LoadLightCardsExtendedData;\n\n    /* istanbul ignore next */\n    constructor() {\n    }\n}\n\nexport class LoadLightCardsFailure implements Action {\n    readonly type = LightCardActionTypes.LoadLightCardsFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport class SelectLightCard implements Action {\n    /* istanbul ignore next */\n    readonly type = LightCardActionTypes.SelectLightCard;\n\n    /* istanbul ignore next */\n    constructor(public payload: { selectedCardId: string }) {\n    }\n\n}\n\nexport class ClearLightCardSelection implements Action {\n\n    readonly type = LightCardActionTypes.ClearLightCardSelection;\n\n    constructor() {\n    }\n}\n\nexport class AddLightCardFailure implements Action {\n    readonly type = LightCardActionTypes.AddLightCardFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport class UpdatedSubscription implements Action {\n    readonly type = LightCardActionTypes.UpdatedSubscription;\n\n    /* istanbul ignore next */\n    constructor() {\n    }\n}\n\nexport class HandleUnexpectedError implements Action {\n    /* istanbul ignore next */\n    readonly type = LightCardActionTypes.HandleUnexpectedError;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport class RemoveLightCard implements Action {\n    readonly type = LightCardActionTypes.RemoveLightCard;\n\n    constructor(public  payload: { cards: string[] }) {\n    }\n}\n\nexport class AddThirdActions implements Action {\n    readonly type = LightCardActionTypes.AddThirdActions;\n\n    constructor(public payload: { card: LightCard, actions: Map }) {\n    }\n}\n\nexport class UpdateALightCard implements Action {\n    readonly type = LightCardActionTypes.UpdateALightCard;\n\n    constructor(public payload: { card: LightCard }) {\n    }\n}\n\nexport class UpdateAnAction implements Action {\n    readonly type = LightCardActionTypes.UpdateAnAction;\n\n    constructor(public payload: { cardId: string, actionKey: string, status: ActionStatus }) {\n    }\n}\n\nexport class UpdateAnActionFailure implements Action {\n    readonly type = LightCardActionTypes.UpdateAnActionFailure;\n\n    constructor() {\n    }\n}\n\nexport class ThirdActionAlreadyLoaded implements Action {\n    readonly type = LightCardActionTypes.ThirdActionAlreadyLoaded;\n\n    constructor() {\n    }\n}\n\nexport class ThirdActionAlreadyUpdated implements Action {\n    readonly type = LightCardActionTypes.ThirdActionAlreadyUpdated;\n\n    constructor() {\n    }\n}\n\nexport class DelayedLightCardUpdate implements Action {\n    readonly type = LightCardActionTypes.DelayedLightCardUpdate;\n\n    constructor(public payload: { card: LightCard }) {\n    }\n}\n\nexport class LightCardAlreadyUpdated implements Action {\n    readonly type = LightCardActionTypes.LightCardAlreadyUpdated;\n\n    constructor() {\n    }\n}\n\nexport type LightCardActions =\n    LoadLightCards\n    | LoadLightCardsSuccess\n    | LoadLightCardsFailure\n    | SelectLightCard\n    | ClearLightCardSelection\n    | AddLightCardFailure\n    | UpdatedSubscription\n    | HandleUnexpectedError\n    | EmptyLightCards\n    | AddThirdActions\n    | UpdateALightCard\n    | UpdateAnAction\n    | UpdateAnActionFailure\n    | ThirdActionAlreadyLoaded\n    | ThirdActionAlreadyUpdated\n    | DelayedLightCardUpdate\n    | LightCardAlreadyUpdated\n    | RemoveLightCard;\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SelectMenuLink.html":{"url":"classes/SelectMenuLink.html","title":"class - SelectMenuLink","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SelectMenuLink\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/menu.actions.ts\n        \n\n            \n                Description\n            \n            \n                Action triggered by navigation to /thirparty/*** (for example by clicking on a third-party menu link)\nPayload contains route parameters identifying the clicked menu entry (menu id, menu version and menu entry id)\nEmitted by {CustomRouterEffects} in the following {Observable} @member: navigateToMenuURL\n\n            \n\n\n            \n                Implements\n            \n            \n                            Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/store/actions/menu.actions.ts:60\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/menu.actions.ts:63\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : MenuActionTypes.SelectMenuLink\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/menu.actions.ts:60\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Action} from '@ngrx/store';\nimport {ThirdMenu} from \"@ofModel/thirds.model\";\n\nexport enum MenuActionTypes {\n    LoadMenu = '[Menu] Load Menu',\n    LoadMenuSuccess = '[Menu] Load Menu Success',\n    LoadMenuFailure = '[Menu] Load Menu Fail',\n    HandleUnexpectedError = '[Menu] Handle unexpected error',\n    SelectMenuLink = '[Menu] Select Menu Link',\n    SelectMenuLinkSuccess = '[Menu] Select Menu Link Success',\n    SelectMenuLinkFailure = '[Menu] Select Menu Link Failure',\n}\n// needed by NGRX entities\nexport class LoadMenu implements Action {\n    readonly type = MenuActionTypes.LoadMenu;\n\n    /* istanbul ignore next */\n    constructor() {\n    }\n}\nexport class LoadMenuFailure implements Action {\n    readonly type = MenuActionTypes.LoadMenuFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport class LoadMenuSuccess implements Action {\n    readonly type = MenuActionTypes.LoadMenuSuccess;\n\n    /* istanbul ignore next */\n    constructor(public payload: { menu: ThirdMenu[] }) {\n    }\n}\n\nexport class HandleUnexpectedError implements Action {\n    readonly type = MenuActionTypes.HandleUnexpectedError;\n\n    /* istanbul ignore next */\n    constructor(public payload: {error: Error}) {\n\n    }\n}\n\n/**\n * Action triggered by navigation to /thirparty/*** (for example by clicking on a third-party menu link)\n * Payload contains route parameters identifying the clicked menu entry (menu id, menu version and menu entry id)\n * Emitted by {CustomRouterEffects} in the following {Observable} @member: navigateToMenuURL\n */\nexport class SelectMenuLink implements Action {\n    readonly type = MenuActionTypes.SelectMenuLink;\n\n    /* istanbul ignore next */\n    constructor(public payload: {menu_id: string, menu_version: string, menu_entry_id: string}) {}\n}\n\n/**\n * Action triggered if menu link url was correctly computed from the given parameters (menu_id, menu_version and menu_entry_id)\n * Payload contains the computed url\n */\nexport class SelectMenuLinkSuccess implements Action {\n    readonly type = MenuActionTypes.SelectMenuLinkSuccess;\n\n    /* istanbul ignore next */\n    constructor(public payload: {iframe_url: string}) {}\n}\n\n/**\n * Action triggered if no menu entry was found for the given parameters (menu_id, menu_version and menu_entry_id)\n * Payload contains the error\n */\nexport class SelectMenuLinkFailure implements Action {\n    readonly type = MenuActionTypes.SelectMenuLinkFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport type MenuActions =\n    LoadMenu\n    | LoadMenuSuccess\n    | LoadMenuFailure\n    | HandleUnexpectedError\n    | SelectMenuLink\n    | SelectMenuLinkSuccess\n    | SelectMenuLinkFailure;\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SelectMenuLinkFailure.html":{"url":"classes/SelectMenuLinkFailure.html","title":"class - SelectMenuLinkFailure","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SelectMenuLinkFailure\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/menu.actions.ts\n        \n\n            \n                Description\n            \n            \n                Action triggered if no menu entry was found for the given parameters (menu_id, menu_version and menu_entry_id)\nPayload contains the error\n\n            \n\n\n            \n                Implements\n            \n            \n                            Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/store/actions/menu.actions.ts:82\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/menu.actions.ts:85\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : MenuActionTypes.SelectMenuLinkFailure\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/menu.actions.ts:82\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Action} from '@ngrx/store';\nimport {ThirdMenu} from \"@ofModel/thirds.model\";\n\nexport enum MenuActionTypes {\n    LoadMenu = '[Menu] Load Menu',\n    LoadMenuSuccess = '[Menu] Load Menu Success',\n    LoadMenuFailure = '[Menu] Load Menu Fail',\n    HandleUnexpectedError = '[Menu] Handle unexpected error',\n    SelectMenuLink = '[Menu] Select Menu Link',\n    SelectMenuLinkSuccess = '[Menu] Select Menu Link Success',\n    SelectMenuLinkFailure = '[Menu] Select Menu Link Failure',\n}\n// needed by NGRX entities\nexport class LoadMenu implements Action {\n    readonly type = MenuActionTypes.LoadMenu;\n\n    /* istanbul ignore next */\n    constructor() {\n    }\n}\nexport class LoadMenuFailure implements Action {\n    readonly type = MenuActionTypes.LoadMenuFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport class LoadMenuSuccess implements Action {\n    readonly type = MenuActionTypes.LoadMenuSuccess;\n\n    /* istanbul ignore next */\n    constructor(public payload: { menu: ThirdMenu[] }) {\n    }\n}\n\nexport class HandleUnexpectedError implements Action {\n    readonly type = MenuActionTypes.HandleUnexpectedError;\n\n    /* istanbul ignore next */\n    constructor(public payload: {error: Error}) {\n\n    }\n}\n\n/**\n * Action triggered by navigation to /thirparty/*** (for example by clicking on a third-party menu link)\n * Payload contains route parameters identifying the clicked menu entry (menu id, menu version and menu entry id)\n * Emitted by {CustomRouterEffects} in the following {Observable} @member: navigateToMenuURL\n */\nexport class SelectMenuLink implements Action {\n    readonly type = MenuActionTypes.SelectMenuLink;\n\n    /* istanbul ignore next */\n    constructor(public payload: {menu_id: string, menu_version: string, menu_entry_id: string}) {}\n}\n\n/**\n * Action triggered if menu link url was correctly computed from the given parameters (menu_id, menu_version and menu_entry_id)\n * Payload contains the computed url\n */\nexport class SelectMenuLinkSuccess implements Action {\n    readonly type = MenuActionTypes.SelectMenuLinkSuccess;\n\n    /* istanbul ignore next */\n    constructor(public payload: {iframe_url: string}) {}\n}\n\n/**\n * Action triggered if no menu entry was found for the given parameters (menu_id, menu_version and menu_entry_id)\n * Payload contains the error\n */\nexport class SelectMenuLinkFailure implements Action {\n    readonly type = MenuActionTypes.SelectMenuLinkFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport type MenuActions =\n    LoadMenu\n    | LoadMenuSuccess\n    | LoadMenuFailure\n    | HandleUnexpectedError\n    | SelectMenuLink\n    | SelectMenuLinkSuccess\n    | SelectMenuLinkFailure;\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SelectMenuLinkSuccess.html":{"url":"classes/SelectMenuLinkSuccess.html","title":"class - SelectMenuLinkSuccess","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SelectMenuLinkSuccess\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/menu.actions.ts\n        \n\n            \n                Description\n            \n            \n                Action triggered if menu link url was correctly computed from the given parameters (menu_id, menu_version and menu_entry_id)\nPayload contains the computed url\n\n            \n\n\n            \n                Implements\n            \n            \n                            Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/store/actions/menu.actions.ts:71\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/menu.actions.ts:74\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : MenuActionTypes.SelectMenuLinkSuccess\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/menu.actions.ts:71\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Action} from '@ngrx/store';\nimport {ThirdMenu} from \"@ofModel/thirds.model\";\n\nexport enum MenuActionTypes {\n    LoadMenu = '[Menu] Load Menu',\n    LoadMenuSuccess = '[Menu] Load Menu Success',\n    LoadMenuFailure = '[Menu] Load Menu Fail',\n    HandleUnexpectedError = '[Menu] Handle unexpected error',\n    SelectMenuLink = '[Menu] Select Menu Link',\n    SelectMenuLinkSuccess = '[Menu] Select Menu Link Success',\n    SelectMenuLinkFailure = '[Menu] Select Menu Link Failure',\n}\n// needed by NGRX entities\nexport class LoadMenu implements Action {\n    readonly type = MenuActionTypes.LoadMenu;\n\n    /* istanbul ignore next */\n    constructor() {\n    }\n}\nexport class LoadMenuFailure implements Action {\n    readonly type = MenuActionTypes.LoadMenuFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport class LoadMenuSuccess implements Action {\n    readonly type = MenuActionTypes.LoadMenuSuccess;\n\n    /* istanbul ignore next */\n    constructor(public payload: { menu: ThirdMenu[] }) {\n    }\n}\n\nexport class HandleUnexpectedError implements Action {\n    readonly type = MenuActionTypes.HandleUnexpectedError;\n\n    /* istanbul ignore next */\n    constructor(public payload: {error: Error}) {\n\n    }\n}\n\n/**\n * Action triggered by navigation to /thirparty/*** (for example by clicking on a third-party menu link)\n * Payload contains route parameters identifying the clicked menu entry (menu id, menu version and menu entry id)\n * Emitted by {CustomRouterEffects} in the following {Observable} @member: navigateToMenuURL\n */\nexport class SelectMenuLink implements Action {\n    readonly type = MenuActionTypes.SelectMenuLink;\n\n    /* istanbul ignore next */\n    constructor(public payload: {menu_id: string, menu_version: string, menu_entry_id: string}) {}\n}\n\n/**\n * Action triggered if menu link url was correctly computed from the given parameters (menu_id, menu_version and menu_entry_id)\n * Payload contains the computed url\n */\nexport class SelectMenuLinkSuccess implements Action {\n    readonly type = MenuActionTypes.SelectMenuLinkSuccess;\n\n    /* istanbul ignore next */\n    constructor(public payload: {iframe_url: string}) {}\n}\n\n/**\n * Action triggered if no menu entry was found for the given parameters (menu_id, menu_version and menu_entry_id)\n * Payload contains the error\n */\nexport class SelectMenuLinkFailure implements Action {\n    readonly type = MenuActionTypes.SelectMenuLinkFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport type MenuActions =\n    LoadMenu\n    | LoadMenuSuccess\n    | LoadMenuFailure\n    | HandleUnexpectedError\n    | SelectMenuLink\n    | SelectMenuLinkSuccess\n    | SelectMenuLinkFailure;\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SendArchiveQuery.html":{"url":"classes/SendArchiveQuery.html","title":"class - SendArchiveQuery","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SendArchiveQuery\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/archive.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/store/actions/archive.actions.ts:30\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/archive.actions.ts:31\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : ArchiveActionTypes.SendArchiveQuery\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/archive.actions.ts:30\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Action} from '@ngrx/store';\nimport {LightCard} from '@ofModel/light-card.model';\nimport {Page} from '@ofModel/page.model';\n\nexport enum ArchiveActionTypes {\n    UpdateArchiveFilter = '[Archive] Update Filter',\n    SendArchiveQuery = '[Archive] Send Query',\n    ArchiveQuerySuccess = '[Archive] Query was successful',\n    UpdateArchivePage = '[Archive] Update query result page',\n    HandleUnexpectedError = '[Archive] Handle unexpected error related to archived card issue',\n    SelectArchivedLightCard = '[Archive] Select one archived light card'\n\n}\n\nexport class UpdateArchiveFilter implements Action {\n    readonly type = ArchiveActionTypes.UpdateArchiveFilter;\n    /* istanbul ignore next */\n    constructor(public payload: {filters: Map}) {}\n}\n\nexport class SendArchiveQuery implements Action {\n    readonly type = ArchiveActionTypes.SendArchiveQuery;\n    constructor(public payload: {params: Map}) {}\n}\n\nexport class HandleUnexpectedError implements Action {\n    /* istanbul ignore next */\n    readonly type = ArchiveActionTypes.HandleUnexpectedError;\n\n    /* istanbul ignore next */\n    constructor(public payload: {error: Error}) {}\n}\n\nexport class ArchiveQuerySuccess implements Action {\n    readonly type = ArchiveActionTypes.ArchiveQuerySuccess;\n    /* istanbul ignore next */\n    constructor(public payload: {resultPage: Page}) {}\n\n}\n\nexport class UpdateArchivePage implements Action {\n    readonly type = ArchiveActionTypes.UpdateArchivePage;\n    /* istanbul ignore next */\n    constructor(public payload: {page: number}) {}\n}\nexport class SelectArchivedLightCard implements Action {\n    /* istanbul ignore next */\n    readonly type = ArchiveActionTypes.SelectArchivedLightCard;\n    /* istanbul ignore next */\n    constructor(public payload: {selectedCardId: string}) {}\n}\n\nexport type ArchiveActions = UpdateArchiveFilter\n    | SendArchiveQuery\n    | HandleUnexpectedError\n    | ArchiveQuerySuccess\n    | UpdateArchivePage\n    | SelectArchivedLightCard;\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ServicesModule.html":{"url":"modules/ServicesModule.html","title":"module - ServicesModule","body":"\n                   \n\n\n\n\n    Modules\n    ServicesModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ServicesModule\n\n\n\ncluster_ServicesModule_providers\n\n\n\n\nAuthenticationService\n\nAuthenticationService\n\n\n\nServicesModule\n\nServicesModule\n\nServicesModule -->\n\nAuthenticationService->ServicesModule\n\n\n\n\n\nCardService\n\nCardService\n\nServicesModule -->\n\nCardService->ServicesModule\n\n\n\n\n\nConfigService\n\nConfigService\n\nServicesModule -->\n\nConfigService->ServicesModule\n\n\n\n\n\nFilterService\n\nFilterService\n\nServicesModule -->\n\nFilterService->ServicesModule\n\n\n\n\n\nI18nService\n\nI18nService\n\nServicesModule -->\n\nI18nService->ServicesModule\n\n\n\n\n\nNotifyService\n\nNotifyService\n\nServicesModule -->\n\nNotifyService->ServicesModule\n\n\n\n\n\nSettingsService\n\nSettingsService\n\nServicesModule -->\n\nSettingsService->ServicesModule\n\n\n\n\n\nThirdActionService\n\nThirdActionService\n\nServicesModule -->\n\nThirdActionService->ServicesModule\n\n\n\n\n\nThirdsService\n\nThirdsService\n\nServicesModule -->\n\nThirdsService->ServicesModule\n\n\n\n\n\nTimeService\n\nTimeService\n\nServicesModule -->\n\nTimeService->ServicesModule\n\n\n\n\n\nTokenInjector\n\nTokenInjector\n\nServicesModule -->\n\nTokenInjector->ServicesModule\n\n\n\n\n\nUserService\n\nUserService\n\nServicesModule -->\n\nUserService->ServicesModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/services/services.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AuthenticationService\n                        \n                        \n                            CardService\n                        \n                        \n                            ConfigService\n                        \n                        \n                            FilterService\n                        \n                        \n                            I18nService\n                        \n                        \n                            NotifyService\n                        \n                        \n                            SettingsService\n                        \n                        \n                            ThirdActionService\n                        \n                        \n                            ThirdsService\n                        \n                        \n                            TimeService\n                        \n                        \n                            TokenInjector\n                        \n                        \n                            UserService\n                        \n                    \n                \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            forRoot\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    forRoot()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/services.module.ts:51\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         ModuleWithProviders\n\n                    \n                \n            \n        \n    \n\n    \n\n\n    \n        /* Copyright (c) 2020, RTE (http://www.rte-france.com)\n *\n * This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n */\n\n\nimport {ModuleWithProviders, NgModule, Optional, SkipSelf} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {HTTP_INTERCEPTORS} from '@angular/common/http';\nimport {AuthenticationService} from './authentication/authentication.service';\nimport {TokenInjector} from './interceptors.service';\nimport {CardService} from './card.service';\nimport {GuidService} from '@ofServices/guid.service';\nimport {TimeService} from '@ofServices/time.service';\nimport {ThirdsService} from '@ofServices/thirds.service';\nimport {FilterService} from '@ofServices/filter.service';\nimport {ConfigService} from '@ofServices/config.service';\nimport {I18nService} from '@ofServices/i18n.service';\nimport {SettingsService} from '@ofServices/settings.service';\nimport { UserService } from './user.service';\nimport {ThirdActionService} from '@ofServices/third-action.service';\nimport { NotifyService } from '@ofServices/notify.service';\n\n@NgModule({\n    imports: [\n        CommonModule\n    ],\n    providers: [\n        ConfigService,\n        SettingsService,\n        CardService,\n        AuthenticationService,\n        TimeService,\n        ThirdsService,\n        {\n            provide: HTTP_INTERCEPTORS,\n            useClass: TokenInjector,\n            multi: true\n        }   ,\n        GuidService,\n        FilterService,\n        I18nService,\n        UserService,\n        ThirdActionService,\n        NotifyService\n    ]\n})\nexport class ServicesModule {\n    static forRoot(): ModuleWithProviders {\n        return {\n            ngModule: ServicesModule\n        };\n    }\n\n    constructor(\n        @Optional()\n        @SkipSelf()\n            parentModule: ServicesModule\n    ) {\n        if (parentModule) {\n            throw new Error(\n                'ServicesModule is already loaded. Import it in the AppModule only'\n            );\n        }\n    }\n}\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SetCardDataTimeline.html":{"url":"classes/SetCardDataTimeline.html","title":"class - SetCardDataTimeline","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SetCardDataTimeline\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/timeline.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/store/actions/timeline.actions.ts:22\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/timeline.actions.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : TimelineActionTypes.SetCardDataTimeline\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/timeline.actions.ts:22\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Action} from '@ngrx/store';\n\nexport enum TimelineActionTypes {\n    InitTimeline = '[timeline] Init timeline',\n    SetCardDataTimeline = '[timeline] Set Card Data'\n}\n\nexport class InitTimeline implements Action {\n    readonly type = TimelineActionTypes.InitTimeline\n    constructor(public payload:{data: any[]}){}\n}\n\nexport class SetCardDataTimeline implements Action {\n    readonly type = TimelineActionTypes.SetCardDataTimeline\n    constructor(public payload:{cardsTimeline: any}){}\n}\n\nexport type TimelineActions =\n    InitTimeline\n    | SetCardDataTimeline;\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SettingsComponent.html":{"url":"components/SettingsComponent.html","title":"component - SettingsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  SettingsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/settings/components/settings/settings.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                of-settings\n            \n\n\n\n\n            \n                templateUrl\n                ./settings.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                disableInfos$\n                            \n                            \n                                dispalyInfos\n                            \n                            \n                                hideTags$\n                            \n                            \n                                locales$\n                            \n                            \n                                timeZones$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/settings/components/settings/settings.component.ts:24\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                        Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/settings/components/settings/settings.component.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            disableInfos$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/settings/components/settings/settings.component.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            dispalyInfos\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         SettingsInputs\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/settings/components/settings/settings.component.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            hideTags$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/settings/components/settings/settings.component.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            locales$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/settings/components/settings/settings.component.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            timeZones$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/settings/components/settings/settings.component.ts:21\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import {Component, OnInit} from '@angular/core';\nimport {Observable} from 'rxjs';\nimport {Store} from '@ngrx/store';\nimport {AppState} from '@ofStore/index';\nimport {buildConfigSelector} from '@ofSelectors/config.selectors';\n\n@Component({\n  selector: 'of-settings',\n  templateUrl: './settings.component.html'\n})\nexport class SettingsComponent implements OnInit {\n  locales$: Observable;\n  timeZones$: Observable;\n  hideTags$: Observable;\n  disableInfos$: Observable;\n  dispalyInfos: SettingsInputs;\n\n  constructor(private store: Store) { }\n\n  ngOnInit() {\n    this.locales$ = this.store.select(buildConfigSelector('i18n.supported.locales'));\n    this.timeZones$ = this.store.select(buildConfigSelector('i10n.supported.time-zones'));\n    this.hideTags$ = this.store.select(buildConfigSelector('settings.tags.hide'));\n    this.disableInfos$ = this.store.select(buildConfigSelector('settings.infos.disable'));\n    this.store.select(buildConfigSelector('settings.infos')).subscribe((d: SettingsInputs) => {\n      this.dispalyInfos = d\n    });\n  }\n\n}\n\ninterface SettingsInputs {\n  email: boolean;\n  description: boolean;\n  language: boolean;\n  timezone: boolean;\n  timeformat: boolean;\n  dateformat: boolean;\n  datetimeformat: boolean;\n  tags: boolean;\n}\n\n    \n\n    \n        \n\n\n\n\n\n\n\n  \n    \n      \n    \n    \n      \n    \n    \n      \n    \n    \n      \n    \n    \n      \n    \n    \n      \n    \n    \n      \n    \n    \n      \n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                                                                    '\n    var COMPONENTS = [{'name': 'ActionComponent', 'selector': 'of-action'},{'name': 'AppComponent', 'selector': 'of-root'},{'name': 'ArchiveFiltersComponent', 'selector': 'of-archive-filters'},{'name': 'ArchiveListComponent', 'selector': 'of-archive-list'},{'name': 'ArchiveListPageComponent', 'selector': 'of-archive-list-page'},{'name': 'ArchivesComponent', 'selector': 'of-archives'},{'name': 'BaseSettingComponent', 'selector': 'of-base-setting'},{'name': 'CardComponent', 'selector': 'of-card'},{'name': 'CardDetailsComponent', 'selector': 'of-card-details'},{'name': 'CardListComponent', 'selector': 'of-card-list'},{'name': 'ConfirmModalComponent', 'selector': 'confirm-modal-component'},{'name': 'CustomLogoComponent', 'selector': 'of-custom-logo'},{'name': 'CustomTimelineChartComponent', 'selector': 'of-custom-timeline-chart'},{'name': 'DatetimeFilterComponent', 'selector': 'of-datetime-filter'},{'name': 'DetailComponent', 'selector': 'of-detail'},{'name': 'DetailsComponent', 'selector': 'of-details'},{'name': 'EmailSettingComponent', 'selector': 'of-email-setting'},{'name': 'FeedComponent', 'selector': 'of-cards'},{'name': 'FiltersComponent', 'selector': 'of-filters'},{'name': 'IconComponent', 'selector': 'of-icon'},{'name': 'IframeDisplayComponent', 'selector': 'of-iframedisplay'},{'name': 'InfoComponent', 'selector': 'of-info'},{'name': 'InitChartComponent', 'selector': 'of-init-chart'},{'name': 'ListSettingComponent', 'selector': 'of-list-setting'},{'name': 'LoginComponent', 'selector': 'of-login'},{'name': 'MenuLinkComponent', 'selector': 'of-menu-link'},{'name': 'MultiFilterComponent', 'selector': 'of-multi-filter'},{'name': 'MultiSettingsComponent', 'selector': 'of-multi-settings'},{'name': 'NavbarComponent', 'selector': 'of-navbar'},{'name': 'NoSelectionComponent', 'selector': 'of-no-selection'},{'name': 'ResizableComponent', 'selector': 'of-resizable'},{'name': 'SettingsComponent', 'selector': 'of-settings'},{'name': 'TagsFilterComponent', 'selector': 'of-tags-filter'},{'name': 'TextSettingComponent', 'selector': 'of-text-setting'},{'name': 'TimeFilterComponent', 'selector': 'of-time-filter'},{'name': 'TimeLineComponent', 'selector': 'of-time-line'},{'name': 'TypeAheadSettingsComponent', 'selector': 'of-type-ahead-settings'},{'name': 'TypeFilterComponent', 'selector': 'of-type-filter'}];\n    var DIRECTIVES = [{'name': 'CalcHeightDirective', 'selector': '[calcHeightDirective]'},{'name': 'DraggableDirective', 'selector': '[appDraggable]'},{'name': 'MouseWheelDirective', 'selector': '[appMouseWheel]'}];\n    var ACTUAL_COMPONENT = {'name': 'SettingsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SettingsEffects.html":{"url":"injectables/SettingsEffects.html","title":"injectable - SettingsEffects","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  SettingsEffects\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/effects/settings.effects.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                loadSettings\n                            \n                            \n                                loadSettingsOnLogin\n                            \n                            \n                                patchSettings\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store, actions$: Actions, service: SettingsService)\n                    \n                \n                        \n                            \n                                Defined in src/app/store/effects/settings.effects.ts:30\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                        Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        actions$\n                                                  \n                                                        \n                                                                        Actions\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        service\n                                                  \n                                                        \n                                                                        SettingsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loadSettings\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Observable\n\n                        \n                    \n                    \n                        \n                            Default value : this.actions$\n        .pipe(\n            ofType(SettingsActionTypes.LoadSettings),\n            switchMap(action => this.service.fetchUserSettings()),\n            map((settings: any) => {\n                return new LoadSettingsSuccess({settings: settings});\n            }),\n            catchError((err, caught) => of(new LoadSettingsFailure(err)))\n        )\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Effect()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/effects/settings.effects.ts:43\n                            \n                        \n\n                \n                    \n                        Manages settings load -> service request -> success/message\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loadSettingsOnLogin\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Observable\n\n                        \n                    \n                    \n                        \n                            Default value : this.actions$.pipe(\n      ofType(UserActionsTypes.UserApplicationRegistered),\n      map(a=>new LoadSettings())\n    )\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Effect()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/effects/settings.effects.ts:55\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            patchSettings\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Observable\n\n                        \n                    \n                    \n                        \n                            Default value : this.actions$.pipe(\n        ofType(SettingsActionTypes.PatchSettings),\n        switchMap((action:PatchSettings)=>this.service.patchUserSettings(action.payload.settings)),\n        map(settings => new PatchSettingsSuccess({settings:settings})),\n        catchError((err, caught) => of(new PatchSettingsFailure(err)))\n    )\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Effect()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/effects/settings.effects.ts:61\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import {Injectable} from '@angular/core';\nimport {Actions, Effect, ofType} from '@ngrx/effects';\nimport {Action, Store} from '@ngrx/store';\nimport {Observable, of} from 'rxjs';\nimport {catchError, map, switchMap} from 'rxjs/operators';\nimport {AppState} from \"@ofStore/index\";\nimport {\n    LoadSettings,\n    LoadSettingsFailure,\n    LoadSettingsSuccess,\n    PatchSettings,\n    PatchSettingsFailure,\n    PatchSettingsSuccess,\n    SettingsActionTypes\n} from \"@ofActions/settings.actions\";\nimport {SettingsService} from \"@ofServices/settings.service\";\nimport { UserActionsTypes } from '@ofStore/actions/user.actions';\nimport { AcceptLogIn } from '@ofStore/actions/authentication.actions';\n\n// those effects are unused for the moment\n@Injectable()\nexport class SettingsEffects {\n\n    /* istanbul ignore next */\n    constructor(private store: Store,\n                private actions$: Actions,\n                private service: SettingsService\n    ) {}\n\n\n    /**\n     * Manages settings load -> service request -> success/message\n     */\n    @Effect()\n    loadSettings: Observable = this.actions$\n        .pipe(\n            ofType(SettingsActionTypes.LoadSettings),\n            switchMap(action => this.service.fetchUserSettings()),\n            map((settings: any) => {\n                return new LoadSettingsSuccess({settings: settings});\n            }),\n            catchError((err, caught) => of(new LoadSettingsFailure(err)))\n        );\n\n\n    @Effect()\n    loadSettingsOnLogin: Observable = this.actions$.pipe(\n      ofType(UserActionsTypes.UserApplicationRegistered),\n      map(a=>new LoadSettings())\n    );\n\n    @Effect()\n    patchSettings: Observable = this.actions$.pipe(\n        ofType(SettingsActionTypes.PatchSettings),\n        switchMap((action:PatchSettings)=>this.service.patchUserSettings(action.payload.settings)),\n        map(settings => new PatchSettingsSuccess({settings:settings})),\n        catchError((err, caught) => of(new PatchSettingsFailure(err)))\n    );\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SettingsInputs.html":{"url":"interfaces/SettingsInputs.html","title":"interface - SettingsInputs","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  SettingsInputs\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/modules/settings/components/settings/settings.component.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        dateformat\n                                \n                                \n                                        datetimeformat\n                                \n                                \n                                        description\n                                \n                                \n                                        email\n                                \n                                \n                                        language\n                                \n                                \n                                        tags\n                                \n                                \n                                        timeformat\n                                \n                                \n                                        timezone\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        dateformat\n                                    \n                                \n                                \n                                    \n                                        dateformat:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        datetimeformat\n                                    \n                                \n                                \n                                    \n                                        datetimeformat:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                    \n                                \n                                \n                                    \n                                        description:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                    \n                                \n                                \n                                    \n                                        email:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        language\n                                    \n                                \n                                \n                                    \n                                        language:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        tags\n                                    \n                                \n                                \n                                    \n                                        tags:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        timeformat\n                                    \n                                \n                                \n                                    \n                                        timeformat:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        timezone\n                                    \n                                \n                                \n                                    \n                                        timezone:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {Component, OnInit} from '@angular/core';\nimport {Observable} from 'rxjs';\nimport {Store} from '@ngrx/store';\nimport {AppState} from '@ofStore/index';\nimport {buildConfigSelector} from '@ofSelectors/config.selectors';\n\n@Component({\n  selector: 'of-settings',\n  templateUrl: './settings.component.html'\n})\nexport class SettingsComponent implements OnInit {\n  locales$: Observable;\n  timeZones$: Observable;\n  hideTags$: Observable;\n  disableInfos$: Observable;\n  dispalyInfos: SettingsInputs;\n\n  constructor(private store: Store) { }\n\n  ngOnInit() {\n    this.locales$ = this.store.select(buildConfigSelector('i18n.supported.locales'));\n    this.timeZones$ = this.store.select(buildConfigSelector('i10n.supported.time-zones'));\n    this.hideTags$ = this.store.select(buildConfigSelector('settings.tags.hide'));\n    this.disableInfos$ = this.store.select(buildConfigSelector('settings.infos.disable'));\n    this.store.select(buildConfigSelector('settings.infos')).subscribe((d: SettingsInputs) => {\n      this.dispalyInfos = d\n    });\n  }\n\n}\n\ninterface SettingsInputs {\n  email: boolean;\n  description: boolean;\n  language: boolean;\n  timezone: boolean;\n  timeformat: boolean;\n  dateformat: boolean;\n  datetimeformat: boolean;\n  tags: boolean;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SettingsModule.html":{"url":"modules/SettingsModule.html","title":"module - SettingsModule","body":"\n                   \n\n\n\n\n    Modules\n    SettingsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_SettingsModule\n\n\n\ncluster_SettingsModule_declarations\n\n\n\ncluster_SettingsModule_imports\n\n\n\n\nBaseSettingComponent\n\nBaseSettingComponent\n\n\n\nSettingsModule\n\nSettingsModule\n\nSettingsModule -->\n\nBaseSettingComponent->SettingsModule\n\n\n\n\n\nEmailSettingComponent\n\nEmailSettingComponent\n\nSettingsModule -->\n\nEmailSettingComponent->SettingsModule\n\n\n\n\n\nListSettingComponent\n\nListSettingComponent\n\nSettingsModule -->\n\nListSettingComponent->SettingsModule\n\n\n\n\n\nMultiSettingsComponent\n\nMultiSettingsComponent\n\nSettingsModule -->\n\nMultiSettingsComponent->SettingsModule\n\n\n\n\n\nSettingsComponent\n\nSettingsComponent\n\nSettingsModule -->\n\nSettingsComponent->SettingsModule\n\n\n\n\n\nTextSettingComponent\n\nTextSettingComponent\n\nSettingsModule -->\n\nTextSettingComponent->SettingsModule\n\n\n\n\n\nTypeAheadSettingsComponent\n\nTypeAheadSettingsComponent\n\nSettingsModule -->\n\nTypeAheadSettingsComponent->SettingsModule\n\n\n\n\n\nSettingsRoutingModule\n\nSettingsRoutingModule\n\nSettingsModule -->\n\nSettingsRoutingModule->SettingsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/modules/settings/settings.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            BaseSettingComponent\n                        \n                        \n                            EmailSettingComponent\n                        \n                        \n                            ListSettingComponent\n                        \n                        \n                            MultiSettingsComponent\n                        \n                        \n                            SettingsComponent\n                        \n                        \n                            TextSettingComponent\n                        \n                        \n                            TypeAheadSettingsComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            SettingsRoutingModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        /* Copyright (c) 2020, RTE (http://www.rte-france.com)\n *\n * This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n */\n\n\nimport {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {SettingsRoutingModule} from \"./settings-routing.module\";\nimport {SettingsComponent} from './components/settings/settings.component';\nimport {BaseSettingComponent} from './components/settings/base-setting/base-setting.component';\nimport {TextSettingComponent} from './components/settings/text-setting/text-setting.component';\nimport {FormsModule, ReactiveFormsModule} from \"@angular/forms\";\nimport {TranslateModule} from \"@ngx-translate/core\";\nimport {EmailSettingComponent} from './components/settings/email-setting/email-setting.component';\nimport {ListSettingComponent} from \"./components/settings/list-setting/list-setting.component\";\nimport {MultiSettingsComponent} from './components/settings/multi-settings/multi-settings.component';\nimport {TypeAheadSettingsComponent} from './components/settings/type-ahead-settings/type-ahead-settings.component';\nimport {TypeaheadModule} from \"ngx-type-ahead\";\n\n@NgModule({\n    declarations: [SettingsComponent, BaseSettingComponent, TextSettingComponent, EmailSettingComponent, ListSettingComponent, MultiSettingsComponent, TypeAheadSettingsComponent],\n    imports: [\n        CommonModule,\n        FormsModule,\n        ReactiveFormsModule,\n        TypeaheadModule,\n        SettingsRoutingModule,\n        TranslateModule,\n    ]\n})\nexport class SettingsModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SettingsRoutingModule.html":{"url":"modules/SettingsRoutingModule.html","title":"module - SettingsRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    SettingsRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/modules/settings/settings-routing.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        /* Copyright (c) 2020, RTE (http://www.rte-france.com)\n *\n * This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n */\n\n\nimport {NgModule} from '@angular/core';\nimport {RouterModule, Routes} from \"@angular/router\";\nimport {SettingsComponent} from \"./components/settings/settings.component\";\n\nconst routes: Routes = [\n    {\n        path: '',\n        component: SettingsComponent,\n        // canActivate: [AuthenticationGuard],\n    },\n]\n\n@NgModule({\n    imports: [RouterModule.forChild(routes)],\n    exports: [RouterModule]\n})\nexport class SettingsRoutingModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SettingsService.html":{"url":"injectables/SettingsService.html","title":"injectable - SettingsService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  SettingsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/settings.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                userId\n                            \n                            \n                                    Private\n                                usersUrl\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                fetchUserSettings\n                            \n                            \n                                patchUserSettings\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(httpClient: HttpClient, store: Store)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/settings.service.ts:20\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        httpClient\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                        Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            fetchUserSettings\n                        \n                        \n                    \n                \n            \n            \n                \nfetchUserSettings()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/settings.service.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            patchUserSettings\n                        \n                        \n                    \n                \n            \n            \n                \npatchUserSettings(settings: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/settings.service.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    settings\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            userId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/settings.service.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            usersUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/settings.service.ts:19\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import {Injectable} from '@angular/core';\nimport {Observable} from \"rxjs\";\nimport {HttpClient} from \"@angular/common/http\";\nimport {Store} from \"@ngrx/store\";\nimport {AppState} from \"@ofStore/index\";\nimport {environment} from \"@env/environment\";\nimport {selectIdentifier} from \"@ofSelectors/authentication.selectors\";\n\n@Injectable()\nexport class SettingsService {\n    private usersUrl: string;\n    private userId: string;\n\n    constructor(private httpClient: HttpClient,\n                private store: Store) {\n        this.usersUrl = `${environment.urls.users}`;\n        this.store.select(selectIdentifier).subscribe(id=>this.userId=id);\n    }\n\n    fetchUserSettings(): Observable {\n        return this.httpClient.get(`${this.usersUrl}/users/${this.userId}/settings`);\n    }\n\n    patchUserSettings(settings:any): Observable {\n        return this.httpClient.patch(`${this.usersUrl}/users/${this.userId}/settings`, settings);\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SettingsState.html":{"url":"interfaces/SettingsState.html","title":"interface - SettingsState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  SettingsState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/states/settings.state.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        error\n                                \n                                \n                                        loaded\n                                \n                                \n                                        loading\n                                \n                                \n                                        settings\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        error\n                                    \n                                \n                                \n                                    \n                                        error:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        loaded\n                                    \n                                \n                                \n                                    \n                                        loaded:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        loading\n                                    \n                                \n                                \n                                    \n                                        loading:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        settings\n                                    \n                                \n                                \n                                    \n                                        settings:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface SettingsState{\n    settings:any,\n    loading: boolean,\n    loaded: boolean,\n    error: string\n}\n\nexport const settingsInitialState: SettingsState = {\n    settings:{},\n    loading: false,\n    loaded: false,\n    error: null\n}\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/State.html":{"url":"classes/State.html","title":"class - State","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  State\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/model/thirds.model.ts\n        \n\n\n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(details?: Detail[], actions?: OfMap)\n                    \n                \n                        \n                            \n                                Defined in src/app/model/thirds.model.ts:66\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        details\n                                                  \n                                                        \n                                                                        Detail[]\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        actions\n                                                  \n                                                        \n                                                                    OfMap\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Card, Detail} from \"@ofModel/card.model\";\nimport {I18n} from \"@ofModel/i18n.model\";\nimport {Map as OfMap} from \"@ofModel/map\";\n\nexport class Third {\n    /* istanbul ignore next */\n    constructor(\n        readonly name: string,\n        readonly version: string,\n        readonly i18nLabelKey: string,\n        readonly templates?: string[],\n        readonly csses?: string[],\n        readonly locales?: string[],\n        readonly menuEntries?: ThirdMenuEntry[],\n        readonly processes?: OfMap\n    ) {\n    }\n\n    public extractState(card: Card): State {\n        if (card.process && this.processes[card.process]) {\n            const process = this.processes[card.process];\n            if (card.state && process.states[card.state]) {\n                return process.states[card.state];\n            }\n        }\n        return null;\n    }\n}\n\nexport class ThirdMenuEntry {\n    /* istanbul ignore next */\n    constructor(\n        readonly id: string,\n        readonly label: string,\n        readonly url: string\n    ) {\n    }\n}\n\nexport class ThirdMenu {\n    /* istanbul ignore next */\n    constructor(\n        readonly id: string,\n        readonly version: string,\n        readonly label: string,\n        readonly entries: ThirdMenuEntry[]) {\n    }\n}\n\nexport class Process {\n    /* istanbul ignore next */\n    constructor(\n        readonly states?: OfMap\n    ) {\n    }\n}\n\nexport class State {\n    /* istanbul ignore next */\n    constructor(\n        readonly details?: Detail[],\n        readonly actions?: OfMap\n    ) {\n    }\n}\n\nexport enum ActionType {\n    EXTERNAL = 'EXTERNAL',\n    JNLP = 'JNLP',\n    URL = 'URL'\n\n}\n\nexport class Action {\n    /* istanbul ignore next */\n    constructor(\n        readonly type: ActionType,\n        readonly label: I18n,\n        readonly hidden: boolean = false,\n        readonly buttonStyle: string = '',\n        readonly contentStyle: string = '',\n        readonly inputs: Input[] = [],\n        readonly lockAction: boolean = false,\n        readonly lockCard: boolean = false,\n        readonly updateState: boolean = false,\n        readonly updateStateBeforeAction: boolean = false,\n        readonly called: boolean = false,\n        readonly needsConfirm: boolean = false,\n        readonly key?: string\n    ) {\n    }\n\n}\n\nexport const emptyAction = new Action(null, null);\n\ntype Omit = Pick>;\n\nexport class ActionStatus {\n    constructor(\n        readonly label: I18n,\n        readonly hidden: boolean = false,\n        readonly buttonStyle: string = '',\n        readonly contentStyle: string = '',\n        readonly inputs: Input[] = [],\n        readonly lockCard: boolean = false,\n        readonly updateState: boolean = false,\n        readonly updateStateBeforeAction: boolean = false,\n        readonly needsConfirm: boolean = false,\n        readonly lockAction: boolean = false,\n    ) {\n    }\n}\n\nexport const emptyActionStatus = new ActionStatus(null);\n\n/*\nfor some reasons lodash equals take attribute order declaration in account to compute object equality\nneeded by LightCardEffects updateAThirdAction Effect and by checkIfReceivedStatusIsDifferentFromCurrentOne method of ThirdActionService .\n */\nexport function extractActionStatusFromPseudoActionStatus(tAction: object): ActionStatus {\n    let label = new I18n('');\n    const i18n = tAction['label'];\n    if (i18n) {\n        const params = i18n['parameters'];\n        if (params) {\n            Object.setPrototypeOf(params, OfMap.prototype);\n            label = new I18n(i18n['key'], params);\n        } else {\n            label = new I18n(i18n['key']);\n        }\n\n    }\n    const result = new ActionStatus(\n        label\n        , tAction['hidden']\n        , tAction['buttonStyle']\n        , tAction['contentStyle']\n        , tAction['inputs'] // TODO Need proper prototype handling\n        , tAction['lockCard']\n        , tAction['updateState']\n        , tAction['updateStateBeforeAction']\n        , tAction['needsConfirm']\n        , tAction['lockAction']\n    );\n    return result;\n}\n\n\nexport enum InputType {\n    TEXT,\n    LIST,\n    LIST_RADIO,\n    SWITCH_LIST,\n    LONGTEXT,\n    BOOLEAN,\n    STATIC\n}\n\nexport class Input {\n    /* istanbul ignore next */\n    constructor(\n        readonly type: InputType,\n        readonly name: string,\n        readonly label: I18n,\n        readonly value: string,\n        readonly mandatory: boolean,\n        readonly maxLength: number,\n        readonly rows: number,\n        readonly values: ParameterListItem[],\n        readonly selectedValues: string[],\n        readonly unSelectedValues: string[],\n    ) {\n    }\n}\n\nexport class ParameterListItem {\n    /* istanbul ignore next */\n    constructor(\n        readonly label: I18n,\n        readonly value: string,\n    ) {\n    }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/StateModule.html":{"url":"modules/StateModule.html","title":"module - StateModule","body":"\n                   \n\n\n\n\n    Modules\n    StateModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_StateModule\n\n\n\ncluster_StateModule_imports\n\n\n\n\n!environment\n\n!environment\n\n\n\nStateModule\n\nStateModule\n\nStateModule -->\n\n!environment->StateModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/store/state.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Imports\n                    \n                        \n                            !environment\n                        \n                    \n                \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            forRoot\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    forRoot()\n                \n            \n\n\n            \n                \n                    Defined in src/app/store/state.module.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         ModuleWithProviders\n\n                    \n                \n            \n        \n    \n\n    \n\n\n    \n        /* Copyright (c) 2020, RTE (http://www.rte-france.com)\n *\n * This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n */\n\n\nimport {ModuleWithProviders, NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {StoreModule} from '@ngrx/store';\nimport {EffectsModule} from '@ngrx/effects';\nimport {appEffects, appReducer, storeConfig} from './index';\nimport {environment} from '@env/environment';\nimport {StoreDevtoolsModule} from '@ngrx/store-devtools';\nimport {NavigationActionTiming, RouterStateSerializer, StoreRouterConnectingModule} from '@ngrx/router-store';\nimport {CustomRouterStateSerializer} from '@ofStore/states/router.state';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    StoreModule.forRoot(appReducer, storeConfig),\n    StoreRouterConnectingModule.forRoot({\n        navigationActionTiming: NavigationActionTiming.PostActivation,\n        serializer: CustomRouterStateSerializer\n    }),\n    EffectsModule.forRoot(appEffects),\n    !environment.production ? StoreDevtoolsModule.instrument() : [],\n  ],\n  declarations: [],\n    providers:[{provide:'configRetryDelay',useValue:5000}]\n})\nexport class StateModule {\n  static forRoot(): ModuleWithProviders {\n    return {\n      ngModule: StateModule\n      ,\n      providers: [\n        /**\n         * The `RouterStateSnapshot` provided by the `Router` is a large complex structure.\n         * A custom RouterStateSerializer is used to parse the `RouterStateSnapshot` provided\n         * by `@ngrx/router-store` to include only the desired pieces of the snapshot.\n         */\n        {provide: RouterStateSerializer, useClass: CustomRouterStateSerializer}\n      ]\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TagsFilterComponent.html":{"url":"components/TagsFilterComponent.html","title":"component - TagsFilterComponent","body":"\n                   \n\n\n\n\n\n  Components\n  TagsFilterComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/feed/components/card-list/filters/tags-filter/tags-filter.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                of-tags-filter\n            \n\n            \n                styleUrls\n                ./tags-filter.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./tags-filter.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _filter$\n                            \n                            \n                                    Private\n                                ngUnsubscribe$\n                            \n                            \n                                tagFilterForm\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                createFormGroup\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(formBuilder: FormBuilder, store: Store)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/feed/components/card-list/filters/tags-filter/tags-filter.component.ts:30\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        formBuilder\n                                                  \n                                                        \n                                                                        FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                        Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            createFormGroup\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createFormGroup()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/feed/components/card-list/filters/tags-filter/tags-filter.component.ts:69\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/feed/components/card-list/filters/tags-filter/tags-filter.component.ts:64\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/feed/components/card-list/filters/tags-filter/tags-filter.component.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _filter$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/feed/components/card-list/filters/tags-filter/tags-filter.component.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            ngUnsubscribe$\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Subject()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/feed/components/card-list/filters/tags-filter/tags-filter.component.ts:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            tagFilterForm\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormGroup\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/feed/components/card-list/filters/tags-filter/tags-filter.component.ts:28\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import {Component, OnDestroy, OnInit} from '@angular/core';\nimport {FormBuilder, FormGroup} from \"@angular/forms\";\nimport {Store} from \"@ngrx/store\";\nimport {AppState} from \"@ofStore/index\";\nimport {Observable, Subject, timer} from \"rxjs\";\nimport {buildFilterSelector} from \"@ofSelectors/feed.selectors\";\nimport {FilterType} from \"@ofServices/filter.service\";\nimport {debounce, distinctUntilChanged, first, takeUntil} from \"rxjs/operators\";\nimport {Filter} from \"@ofModel/feed-filter.model\";\nimport * as _ from \"lodash\";\nimport {ApplyFilter} from \"@ofActions/feed.actions\";\n\n@Component({\n    selector: 'of-tags-filter',\n    templateUrl: './tags-filter.component.html',\n    styleUrls: ['./tags-filter.component.scss']\n})\nexport class TagsFilterComponent implements OnInit, OnDestroy {\n\n    tagFilterForm: FormGroup;\n    private ngUnsubscribe$ = new Subject();\n    private _filter$: Observable;\n\n    constructor(private formBuilder: FormBuilder,private store: Store) {\n        this.tagFilterForm = this.createFormGroup()\n    }\n\n    ngOnInit() {\n        this._filter$ = this.store.select(buildFilterSelector(FilterType.TAG_FILTER));\n        this._filter$.pipe(takeUntil(this.ngUnsubscribe$)).subscribe((next: Filter) => {\n            if (next) {\n                this.tagFilterForm.get('tags').setValue(next.active?next.status.tags:[], {emitEvent: false});\n            } else {\n                this.tagFilterForm.get('tags').setValue([], {emitEvent: false});\n            }\n        });\n        this._filter$.pipe(first(),takeUntil(this.ngUnsubscribe$)).subscribe(()=>{\n            this.tagFilterForm\n                .valueChanges\n                .pipe(\n                    takeUntil(this.ngUnsubscribe$),\n                    distinctUntilChanged((formA, formB)=>{\n                        return _.difference(formA.tags,formB.tags).length===0 && _.difference(formB.tags,formA.tags).length===0;\n                    }),\n                    debounce(() => timer(500)))\n                .subscribe(form => this.store.dispatch(\n                    new ApplyFilter({\n                        name: FilterType.TAG_FILTER,\n                        active: form.tags.length>0,\n                        status: form\n                    }))\n                );\n        });\n    }\n\n    ngOnDestroy() {\n        this.ngUnsubscribe$.next();\n        this.ngUnsubscribe$.complete();\n    }\n\n    private createFormGroup() {\n        return this.formBuilder.group({\n                tags: []\n            }\n        );\n    }\n}\n\n    \n\n    \n        \n\n\n\n\n\n\n\n  \n\n    \n\n    \n                \n                    ./tags-filter.component.scss\n                \n                /* Copyright (c) 2020, RTE (http://www.rte-france.com)\n *\n * This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n */\n\n.tags-field {\n  /deep/ .dropdown-toggle {\n    display: none;\n  }\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  '\n    var COMPONENTS = [{'name': 'ActionComponent', 'selector': 'of-action'},{'name': 'AppComponent', 'selector': 'of-root'},{'name': 'ArchiveFiltersComponent', 'selector': 'of-archive-filters'},{'name': 'ArchiveListComponent', 'selector': 'of-archive-list'},{'name': 'ArchiveListPageComponent', 'selector': 'of-archive-list-page'},{'name': 'ArchivesComponent', 'selector': 'of-archives'},{'name': 'BaseSettingComponent', 'selector': 'of-base-setting'},{'name': 'CardComponent', 'selector': 'of-card'},{'name': 'CardDetailsComponent', 'selector': 'of-card-details'},{'name': 'CardListComponent', 'selector': 'of-card-list'},{'name': 'ConfirmModalComponent', 'selector': 'confirm-modal-component'},{'name': 'CustomLogoComponent', 'selector': 'of-custom-logo'},{'name': 'CustomTimelineChartComponent', 'selector': 'of-custom-timeline-chart'},{'name': 'DatetimeFilterComponent', 'selector': 'of-datetime-filter'},{'name': 'DetailComponent', 'selector': 'of-detail'},{'name': 'DetailsComponent', 'selector': 'of-details'},{'name': 'EmailSettingComponent', 'selector': 'of-email-setting'},{'name': 'FeedComponent', 'selector': 'of-cards'},{'name': 'FiltersComponent', 'selector': 'of-filters'},{'name': 'IconComponent', 'selector': 'of-icon'},{'name': 'IframeDisplayComponent', 'selector': 'of-iframedisplay'},{'name': 'InfoComponent', 'selector': 'of-info'},{'name': 'InitChartComponent', 'selector': 'of-init-chart'},{'name': 'ListSettingComponent', 'selector': 'of-list-setting'},{'name': 'LoginComponent', 'selector': 'of-login'},{'name': 'MenuLinkComponent', 'selector': 'of-menu-link'},{'name': 'MultiFilterComponent', 'selector': 'of-multi-filter'},{'name': 'MultiSettingsComponent', 'selector': 'of-multi-settings'},{'name': 'NavbarComponent', 'selector': 'of-navbar'},{'name': 'NoSelectionComponent', 'selector': 'of-no-selection'},{'name': 'ResizableComponent', 'selector': 'of-resizable'},{'name': 'SettingsComponent', 'selector': 'of-settings'},{'name': 'TagsFilterComponent', 'selector': 'of-tags-filter'},{'name': 'TextSettingComponent', 'selector': 'of-text-setting'},{'name': 'TimeFilterComponent', 'selector': 'of-time-filter'},{'name': 'TimeLineComponent', 'selector': 'of-time-line'},{'name': 'TypeAheadSettingsComponent', 'selector': 'of-type-ahead-settings'},{'name': 'TypeFilterComponent', 'selector': 'of-type-filter'}];\n    var DIRECTIVES = [{'name': 'CalcHeightDirective', 'selector': '[calcHeightDirective]'},{'name': 'DraggableDirective', 'selector': '[appDraggable]'},{'name': 'MouseWheelDirective', 'selector': '[appMouseWheel]'}];\n    var ACTUAL_COMPONENT = {'name': 'TagsFilterComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TextSettingComponent.html":{"url":"components/TextSettingComponent.html","title":"component - TextSettingComponent","body":"\n                   \n\n\n\n\n\n  Components\n  TextSettingComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/settings/components/settings/text-setting/text-setting.component.ts\n\n\n\n    \n        Extends\n    \n    \n                BaseSettingComponent\n    \n\n    \n        Implements\n    \n    \n                    OnInit\n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                of-text-setting\n            \n\n\n\n\n            \n                templateUrl\n                ./text-setting.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                baseSettings\n                            \n                            \n                                form\n                            \n                            \n                                    Private\n                                ngUnsubscribe$\n                            \n                            \n                                    Protected\n                                placeholder$\n                            \n                            \n                                    Protected\n                                setting$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                computeTextValidators\n                            \n                            \n                                initFormGroup\n                            \n                            \n                                    Protected\n                                isEqual\n                            \n                            \n                                updateValue\n                            \n                            \n                                    Protected\n                                convert\n                            \n                            \n                                    Private\n                                dispatch\n                            \n                            \n                                    Protected\n                                initFormGroup\n                            \n                            \n                                    Protected\n                                isEqual\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                    Protected\n                                submitValue\n                            \n                            \n                                    Protected\n                                updateValue\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                disabled\n                            \n                            \n                                pattern\n                            \n                            \n                                messagePlaceholder\n                            \n                            \n                                requiredField\n                            \n                            \n                                settingPath\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/settings/components/settings/text-setting/text-setting.component.ts:23\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                        Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        disabled\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/settings/components/settings/text-setting/text-setting.component.ts:23\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        pattern\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/settings/components/settings/text-setting/text-setting.component.ts:22\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        messagePlaceholder\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                            \n                                \n                                    Inherited from         BaseSettingComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseSettingComponent:28\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        requiredField\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                            \n                                \n                                    Inherited from         BaseSettingComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseSettingComponent:29\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        settingPath\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                            \n                                \n                                    Inherited from         BaseSettingComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseSettingComponent:27\n\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            computeTextValidators\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    computeTextValidators()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/settings/components/settings/text-setting/text-setting.component.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     {}\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            initFormGroup\n                        \n                        \n                    \n                \n            \n            \n                \ninitFormGroup()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/settings/components/settings/text-setting/text-setting.component.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            isEqual\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    isEqual(formA, formB)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/settings/components/settings/text-setting/text-setting.component.ts:51\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    formA\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    formB\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            updateValue\n                        \n                        \n                    \n                \n            \n            \n                \nupdateValue(value)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/settings/components/settings/text-setting/text-setting.component.ts:47\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            convert\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    convert(value: any)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseSettingComponent\n\n                \n            \n            \n                \n                        Defined in         BaseSettingComponent:83\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            dispatch\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    dispatch(value: any)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseSettingComponent\n\n                \n            \n            \n                \n                        Defined in         BaseSettingComponent:88\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            initFormGroup\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    initFormGroup()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseSettingComponent\n\n                \n            \n            \n                \n                        Defined in         BaseSettingComponent:79\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         FormGroup\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            isEqual\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    isEqual(formA, formB)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseSettingComponent\n\n                \n            \n            \n                \n                        Defined in         BaseSettingComponent:94\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    formA\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    formB\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseSettingComponent\n\n                \n            \n            \n                \n                        Defined in         BaseSettingComponent:70\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseSettingComponent\n\n                \n            \n            \n                \n                        Defined in         BaseSettingComponent:40\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            submitValue\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    submitValue()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseSettingComponent\n\n                \n            \n            \n                \n                        Defined in         BaseSettingComponent:98\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            updateValue\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updateValue(value: any)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseSettingComponent\n\n                \n            \n            \n                \n                        Defined in         BaseSettingComponent:75\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            baseSettings\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {}\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseSettingComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseSettingComponent:34\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            form\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormGroup\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseSettingComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseSettingComponent:33\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            ngUnsubscribe$\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Subject()\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseSettingComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseSettingComponent:30\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            placeholder$\n                            \n                        \n                    \n                \n                            \n                                \n                                    Inherited from         BaseSettingComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseSettingComponent:32\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            setting$\n                            \n                        \n                    \n                \n                            \n                                \n                                    Inherited from         BaseSettingComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseSettingComponent:31\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import {Component, Input, OnDestroy, OnInit} from '@angular/core';\nimport {BaseSettingComponent} from '../base-setting/base-setting.component';\nimport {AppState} from '@ofStore/index';\nimport {Store} from '@ngrx/store';\nimport {FormControl, FormGroup, Validators} from '@angular/forms';\n\n\n@Component({\n    selector: 'of-text-setting',\n    templateUrl: './text-setting.component.html'\n})\nexport class TextSettingComponent extends BaseSettingComponent implements OnInit, OnDestroy {\n\n    @Input() pattern: string;\n    @Input() disabled: boolean;\n\n    constructor(protected store: Store) {\n        super(store);\n    }\n\n    initFormGroup() {\n        const validators = this.computeTextValidators();\n        return new FormGroup({\n            setting: new FormControl(null, validators)\n        }, {updateOn: 'submit'});\n    }\n\n    protected computeTextValidators() {\n        const validators = [];\n        if (this.requiredField) {\n            validators.push(Validators.required);\n        }\n        if (this.pattern) {\n            validators.push(Validators.pattern(this.pattern));\n        }\n        return validators;\n    }\n\n    updateValue(value) {\n        this.form.get('setting').setValue(value, {emitEvent: false});\n    }\n\n    protected isEqual(formA, formB): boolean {\n        console.log('TextSettingComponent.isEqual called');\n        return formA.setting === formB.setting;\n    }\n\n}\n\n    \n\n    \n        \n\n\n\n\n\n\n\n  \n    settings.{{settingPath}}\n    \n\n    \n\n    Incorrect submission\n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      settings.{{settingPath}}            Incorrect submission  '\n    var COMPONENTS = [{'name': 'ActionComponent', 'selector': 'of-action'},{'name': 'AppComponent', 'selector': 'of-root'},{'name': 'ArchiveFiltersComponent', 'selector': 'of-archive-filters'},{'name': 'ArchiveListComponent', 'selector': 'of-archive-list'},{'name': 'ArchiveListPageComponent', 'selector': 'of-archive-list-page'},{'name': 'ArchivesComponent', 'selector': 'of-archives'},{'name': 'BaseSettingComponent', 'selector': 'of-base-setting'},{'name': 'CardComponent', 'selector': 'of-card'},{'name': 'CardDetailsComponent', 'selector': 'of-card-details'},{'name': 'CardListComponent', 'selector': 'of-card-list'},{'name': 'ConfirmModalComponent', 'selector': 'confirm-modal-component'},{'name': 'CustomLogoComponent', 'selector': 'of-custom-logo'},{'name': 'CustomTimelineChartComponent', 'selector': 'of-custom-timeline-chart'},{'name': 'DatetimeFilterComponent', 'selector': 'of-datetime-filter'},{'name': 'DetailComponent', 'selector': 'of-detail'},{'name': 'DetailsComponent', 'selector': 'of-details'},{'name': 'EmailSettingComponent', 'selector': 'of-email-setting'},{'name': 'FeedComponent', 'selector': 'of-cards'},{'name': 'FiltersComponent', 'selector': 'of-filters'},{'name': 'IconComponent', 'selector': 'of-icon'},{'name': 'IframeDisplayComponent', 'selector': 'of-iframedisplay'},{'name': 'InfoComponent', 'selector': 'of-info'},{'name': 'InitChartComponent', 'selector': 'of-init-chart'},{'name': 'ListSettingComponent', 'selector': 'of-list-setting'},{'name': 'LoginComponent', 'selector': 'of-login'},{'name': 'MenuLinkComponent', 'selector': 'of-menu-link'},{'name': 'MultiFilterComponent', 'selector': 'of-multi-filter'},{'name': 'MultiSettingsComponent', 'selector': 'of-multi-settings'},{'name': 'NavbarComponent', 'selector': 'of-navbar'},{'name': 'NoSelectionComponent', 'selector': 'of-no-selection'},{'name': 'ResizableComponent', 'selector': 'of-resizable'},{'name': 'SettingsComponent', 'selector': 'of-settings'},{'name': 'TagsFilterComponent', 'selector': 'of-tags-filter'},{'name': 'TextSettingComponent', 'selector': 'of-text-setting'},{'name': 'TimeFilterComponent', 'selector': 'of-time-filter'},{'name': 'TimeLineComponent', 'selector': 'of-time-line'},{'name': 'TypeAheadSettingsComponent', 'selector': 'of-type-ahead-settings'},{'name': 'TypeFilterComponent', 'selector': 'of-type-filter'}];\n    var DIRECTIVES = [{'name': 'CalcHeightDirective', 'selector': '[calcHeightDirective]'},{'name': 'DraggableDirective', 'selector': '[appDraggable]'},{'name': 'MouseWheelDirective', 'selector': '[appMouseWheel]'}];\n    var ACTUAL_COMPONENT = {'name': 'TextSettingComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Third.html":{"url":"classes/Third.html","title":"class - Third","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Third\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/model/thirds.model.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                extractState\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(name: string, version: string, i18nLabelKey: string, templates?: string[], csses?: string[], locales?: string[], menuEntries?: ThirdMenuEntry[], processes?: OfMap)\n                    \n                \n                        \n                            \n                                Defined in src/app/model/thirds.model.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        name\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        version\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        i18nLabelKey\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        templates\n                                                  \n                                                        \n                                                                    string[]\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        csses\n                                                  \n                                                        \n                                                                    string[]\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        locales\n                                                  \n                                                        \n                                                                    string[]\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        menuEntries\n                                                  \n                                                        \n                                                                    ThirdMenuEntry[]\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        processes\n                                                  \n                                                        \n                                                                    OfMap\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            extractState\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    extractState(card: Card)\n                \n            \n\n\n            \n                \n                    Defined in src/app/model/thirds.model.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    card\n                                    \n                                                Card\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         State\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {Card, Detail} from \"@ofModel/card.model\";\nimport {I18n} from \"@ofModel/i18n.model\";\nimport {Map as OfMap} from \"@ofModel/map\";\n\nexport class Third {\n    /* istanbul ignore next */\n    constructor(\n        readonly name: string,\n        readonly version: string,\n        readonly i18nLabelKey: string,\n        readonly templates?: string[],\n        readonly csses?: string[],\n        readonly locales?: string[],\n        readonly menuEntries?: ThirdMenuEntry[],\n        readonly processes?: OfMap\n    ) {\n    }\n\n    public extractState(card: Card): State {\n        if (card.process && this.processes[card.process]) {\n            const process = this.processes[card.process];\n            if (card.state && process.states[card.state]) {\n                return process.states[card.state];\n            }\n        }\n        return null;\n    }\n}\n\nexport class ThirdMenuEntry {\n    /* istanbul ignore next */\n    constructor(\n        readonly id: string,\n        readonly label: string,\n        readonly url: string\n    ) {\n    }\n}\n\nexport class ThirdMenu {\n    /* istanbul ignore next */\n    constructor(\n        readonly id: string,\n        readonly version: string,\n        readonly label: string,\n        readonly entries: ThirdMenuEntry[]) {\n    }\n}\n\nexport class Process {\n    /* istanbul ignore next */\n    constructor(\n        readonly states?: OfMap\n    ) {\n    }\n}\n\nexport class State {\n    /* istanbul ignore next */\n    constructor(\n        readonly details?: Detail[],\n        readonly actions?: OfMap\n    ) {\n    }\n}\n\nexport enum ActionType {\n    EXTERNAL = 'EXTERNAL',\n    JNLP = 'JNLP',\n    URL = 'URL'\n\n}\n\nexport class Action {\n    /* istanbul ignore next */\n    constructor(\n        readonly type: ActionType,\n        readonly label: I18n,\n        readonly hidden: boolean = false,\n        readonly buttonStyle: string = '',\n        readonly contentStyle: string = '',\n        readonly inputs: Input[] = [],\n        readonly lockAction: boolean = false,\n        readonly lockCard: boolean = false,\n        readonly updateState: boolean = false,\n        readonly updateStateBeforeAction: boolean = false,\n        readonly called: boolean = false,\n        readonly needsConfirm: boolean = false,\n        readonly key?: string\n    ) {\n    }\n\n}\n\nexport const emptyAction = new Action(null, null);\n\ntype Omit = Pick>;\n\nexport class ActionStatus {\n    constructor(\n        readonly label: I18n,\n        readonly hidden: boolean = false,\n        readonly buttonStyle: string = '',\n        readonly contentStyle: string = '',\n        readonly inputs: Input[] = [],\n        readonly lockCard: boolean = false,\n        readonly updateState: boolean = false,\n        readonly updateStateBeforeAction: boolean = false,\n        readonly needsConfirm: boolean = false,\n        readonly lockAction: boolean = false,\n    ) {\n    }\n}\n\nexport const emptyActionStatus = new ActionStatus(null);\n\n/*\nfor some reasons lodash equals take attribute order declaration in account to compute object equality\nneeded by LightCardEffects updateAThirdAction Effect and by checkIfReceivedStatusIsDifferentFromCurrentOne method of ThirdActionService .\n */\nexport function extractActionStatusFromPseudoActionStatus(tAction: object): ActionStatus {\n    let label = new I18n('');\n    const i18n = tAction['label'];\n    if (i18n) {\n        const params = i18n['parameters'];\n        if (params) {\n            Object.setPrototypeOf(params, OfMap.prototype);\n            label = new I18n(i18n['key'], params);\n        } else {\n            label = new I18n(i18n['key']);\n        }\n\n    }\n    const result = new ActionStatus(\n        label\n        , tAction['hidden']\n        , tAction['buttonStyle']\n        , tAction['contentStyle']\n        , tAction['inputs'] // TODO Need proper prototype handling\n        , tAction['lockCard']\n        , tAction['updateState']\n        , tAction['updateStateBeforeAction']\n        , tAction['needsConfirm']\n        , tAction['lockAction']\n    );\n    return result;\n}\n\n\nexport enum InputType {\n    TEXT,\n    LIST,\n    LIST_RADIO,\n    SWITCH_LIST,\n    LONGTEXT,\n    BOOLEAN,\n    STATIC\n}\n\nexport class Input {\n    /* istanbul ignore next */\n    constructor(\n        readonly type: InputType,\n        readonly name: string,\n        readonly label: I18n,\n        readonly value: string,\n        readonly mandatory: boolean,\n        readonly maxLength: number,\n        readonly rows: number,\n        readonly values: ParameterListItem[],\n        readonly selectedValues: string[],\n        readonly unSelectedValues: string[],\n    ) {\n    }\n}\n\nexport class ParameterListItem {\n    /* istanbul ignore next */\n    constructor(\n        readonly label: I18n,\n        readonly value: string,\n    ) {\n    }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ThirdActionAlreadyLoaded.html":{"url":"classes/ThirdActionAlreadyLoaded.html","title":"class - ThirdActionAlreadyLoaded","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ThirdActionAlreadyLoaded\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/light-card.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/store/actions/light-card.actions.ts:150\n                            \n                        \n\n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : LightCardActionTypes.ThirdActionAlreadyLoaded\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/light-card.actions.ts:150\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Action} from '@ngrx/store';\nimport {LightCard} from '@ofModel/light-card.model';\nimport {Action as ThirdAction, ActionStatus} from '@ofModel/thirds.model';\nimport {Update} from \"@ngrx/entity\";\n\nexport enum LightCardActionTypes {\n    LoadLightCards = '[LCard] Load',\n    EmptyLightCards = '[LCard] Empty',\n    LoadLightCardsSuccess = '[LCard] Load Success',\n    LoadLightCardsExtendedData = '[LCard] Load Extended Data',\n    LoadLightCardsFailure = '[LCard] Load Fail',\n    SelectLightCard = '[LCard] Select One',\n    ClearLightCardSelection = '[LCard] Clear Light Card Selection',\n    AddLightCardFailure = '[LCard] Add Light Card Fail',\n    UpdatedSubscription = '[LCard] UpdateSubscription',\n    HandleUnexpectedError = '[LCard] Handle unexpected error related to authentication issue',\n    RemoveLightCard = '[LCard] Remove a card',\n    AddThirdActions = '[LCard] Adds some Third Actions to existing card',\n    UpdateALightCard = '[LCard] Update a Light Card',\n    UpdateAnAction = '[LCard] Update one Action of a LightCard',\n    UpdateAnActionFailure = '[LCard] No actions where available to update for the current selected card in the state',\n    ThirdActionAlreadyLoaded = '[LCard] Light Card contains actions',\n    ThirdActionAlreadyUpdated = '[LCard] Third Action unchanged',\n    DelayedLightCardUpdate = '[LCard] update Light Card actions later',\n    LightCardAlreadyUpdated = '[LCard] Light Card already Updated'\n}\n\n// needed by NGRX entities\nexport class LoadLightCards implements Action {\n    /* istanbul ignore next */\n    readonly type = LightCardActionTypes.LoadLightCards;\n}\n\nexport class EmptyLightCards implements Action {\n    /* istanbul ignore next */\n    readonly type = LightCardActionTypes.EmptyLightCards;\n}\n\nexport class LoadLightCardsSuccess implements Action {\n    readonly type = LightCardActionTypes.LoadLightCardsSuccess;\n\n    /* istanbul ignore next */\n    constructor(public payload: { lightCards: LightCard[] }) {\n    }\n}\n\nexport class LoadLightCardsExtendedData implements Action {\n    readonly type = LightCardActionTypes.LoadLightCardsExtendedData;\n\n    /* istanbul ignore next */\n    constructor() {\n    }\n}\n\nexport class LoadLightCardsFailure implements Action {\n    readonly type = LightCardActionTypes.LoadLightCardsFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport class SelectLightCard implements Action {\n    /* istanbul ignore next */\n    readonly type = LightCardActionTypes.SelectLightCard;\n\n    /* istanbul ignore next */\n    constructor(public payload: { selectedCardId: string }) {\n    }\n\n}\n\nexport class ClearLightCardSelection implements Action {\n\n    readonly type = LightCardActionTypes.ClearLightCardSelection;\n\n    constructor() {\n    }\n}\n\nexport class AddLightCardFailure implements Action {\n    readonly type = LightCardActionTypes.AddLightCardFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport class UpdatedSubscription implements Action {\n    readonly type = LightCardActionTypes.UpdatedSubscription;\n\n    /* istanbul ignore next */\n    constructor() {\n    }\n}\n\nexport class HandleUnexpectedError implements Action {\n    /* istanbul ignore next */\n    readonly type = LightCardActionTypes.HandleUnexpectedError;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport class RemoveLightCard implements Action {\n    readonly type = LightCardActionTypes.RemoveLightCard;\n\n    constructor(public  payload: { cards: string[] }) {\n    }\n}\n\nexport class AddThirdActions implements Action {\n    readonly type = LightCardActionTypes.AddThirdActions;\n\n    constructor(public payload: { card: LightCard, actions: Map }) {\n    }\n}\n\nexport class UpdateALightCard implements Action {\n    readonly type = LightCardActionTypes.UpdateALightCard;\n\n    constructor(public payload: { card: LightCard }) {\n    }\n}\n\nexport class UpdateAnAction implements Action {\n    readonly type = LightCardActionTypes.UpdateAnAction;\n\n    constructor(public payload: { cardId: string, actionKey: string, status: ActionStatus }) {\n    }\n}\n\nexport class UpdateAnActionFailure implements Action {\n    readonly type = LightCardActionTypes.UpdateAnActionFailure;\n\n    constructor() {\n    }\n}\n\nexport class ThirdActionAlreadyLoaded implements Action {\n    readonly type = LightCardActionTypes.ThirdActionAlreadyLoaded;\n\n    constructor() {\n    }\n}\n\nexport class ThirdActionAlreadyUpdated implements Action {\n    readonly type = LightCardActionTypes.ThirdActionAlreadyUpdated;\n\n    constructor() {\n    }\n}\n\nexport class DelayedLightCardUpdate implements Action {\n    readonly type = LightCardActionTypes.DelayedLightCardUpdate;\n\n    constructor(public payload: { card: LightCard }) {\n    }\n}\n\nexport class LightCardAlreadyUpdated implements Action {\n    readonly type = LightCardActionTypes.LightCardAlreadyUpdated;\n\n    constructor() {\n    }\n}\n\nexport type LightCardActions =\n    LoadLightCards\n    | LoadLightCardsSuccess\n    | LoadLightCardsFailure\n    | SelectLightCard\n    | ClearLightCardSelection\n    | AddLightCardFailure\n    | UpdatedSubscription\n    | HandleUnexpectedError\n    | EmptyLightCards\n    | AddThirdActions\n    | UpdateALightCard\n    | UpdateAnAction\n    | UpdateAnActionFailure\n    | ThirdActionAlreadyLoaded\n    | ThirdActionAlreadyUpdated\n    | DelayedLightCardUpdate\n    | LightCardAlreadyUpdated\n    | RemoveLightCard;\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ThirdActionAlreadyUpdated.html":{"url":"classes/ThirdActionAlreadyUpdated.html","title":"class - ThirdActionAlreadyUpdated","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ThirdActionAlreadyUpdated\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/light-card.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/store/actions/light-card.actions.ts:157\n                            \n                        \n\n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : LightCardActionTypes.ThirdActionAlreadyUpdated\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/light-card.actions.ts:157\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Action} from '@ngrx/store';\nimport {LightCard} from '@ofModel/light-card.model';\nimport {Action as ThirdAction, ActionStatus} from '@ofModel/thirds.model';\nimport {Update} from \"@ngrx/entity\";\n\nexport enum LightCardActionTypes {\n    LoadLightCards = '[LCard] Load',\n    EmptyLightCards = '[LCard] Empty',\n    LoadLightCardsSuccess = '[LCard] Load Success',\n    LoadLightCardsExtendedData = '[LCard] Load Extended Data',\n    LoadLightCardsFailure = '[LCard] Load Fail',\n    SelectLightCard = '[LCard] Select One',\n    ClearLightCardSelection = '[LCard] Clear Light Card Selection',\n    AddLightCardFailure = '[LCard] Add Light Card Fail',\n    UpdatedSubscription = '[LCard] UpdateSubscription',\n    HandleUnexpectedError = '[LCard] Handle unexpected error related to authentication issue',\n    RemoveLightCard = '[LCard] Remove a card',\n    AddThirdActions = '[LCard] Adds some Third Actions to existing card',\n    UpdateALightCard = '[LCard] Update a Light Card',\n    UpdateAnAction = '[LCard] Update one Action of a LightCard',\n    UpdateAnActionFailure = '[LCard] No actions where available to update for the current selected card in the state',\n    ThirdActionAlreadyLoaded = '[LCard] Light Card contains actions',\n    ThirdActionAlreadyUpdated = '[LCard] Third Action unchanged',\n    DelayedLightCardUpdate = '[LCard] update Light Card actions later',\n    LightCardAlreadyUpdated = '[LCard] Light Card already Updated'\n}\n\n// needed by NGRX entities\nexport class LoadLightCards implements Action {\n    /* istanbul ignore next */\n    readonly type = LightCardActionTypes.LoadLightCards;\n}\n\nexport class EmptyLightCards implements Action {\n    /* istanbul ignore next */\n    readonly type = LightCardActionTypes.EmptyLightCards;\n}\n\nexport class LoadLightCardsSuccess implements Action {\n    readonly type = LightCardActionTypes.LoadLightCardsSuccess;\n\n    /* istanbul ignore next */\n    constructor(public payload: { lightCards: LightCard[] }) {\n    }\n}\n\nexport class LoadLightCardsExtendedData implements Action {\n    readonly type = LightCardActionTypes.LoadLightCardsExtendedData;\n\n    /* istanbul ignore next */\n    constructor() {\n    }\n}\n\nexport class LoadLightCardsFailure implements Action {\n    readonly type = LightCardActionTypes.LoadLightCardsFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport class SelectLightCard implements Action {\n    /* istanbul ignore next */\n    readonly type = LightCardActionTypes.SelectLightCard;\n\n    /* istanbul ignore next */\n    constructor(public payload: { selectedCardId: string }) {\n    }\n\n}\n\nexport class ClearLightCardSelection implements Action {\n\n    readonly type = LightCardActionTypes.ClearLightCardSelection;\n\n    constructor() {\n    }\n}\n\nexport class AddLightCardFailure implements Action {\n    readonly type = LightCardActionTypes.AddLightCardFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport class UpdatedSubscription implements Action {\n    readonly type = LightCardActionTypes.UpdatedSubscription;\n\n    /* istanbul ignore next */\n    constructor() {\n    }\n}\n\nexport class HandleUnexpectedError implements Action {\n    /* istanbul ignore next */\n    readonly type = LightCardActionTypes.HandleUnexpectedError;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport class RemoveLightCard implements Action {\n    readonly type = LightCardActionTypes.RemoveLightCard;\n\n    constructor(public  payload: { cards: string[] }) {\n    }\n}\n\nexport class AddThirdActions implements Action {\n    readonly type = LightCardActionTypes.AddThirdActions;\n\n    constructor(public payload: { card: LightCard, actions: Map }) {\n    }\n}\n\nexport class UpdateALightCard implements Action {\n    readonly type = LightCardActionTypes.UpdateALightCard;\n\n    constructor(public payload: { card: LightCard }) {\n    }\n}\n\nexport class UpdateAnAction implements Action {\n    readonly type = LightCardActionTypes.UpdateAnAction;\n\n    constructor(public payload: { cardId: string, actionKey: string, status: ActionStatus }) {\n    }\n}\n\nexport class UpdateAnActionFailure implements Action {\n    readonly type = LightCardActionTypes.UpdateAnActionFailure;\n\n    constructor() {\n    }\n}\n\nexport class ThirdActionAlreadyLoaded implements Action {\n    readonly type = LightCardActionTypes.ThirdActionAlreadyLoaded;\n\n    constructor() {\n    }\n}\n\nexport class ThirdActionAlreadyUpdated implements Action {\n    readonly type = LightCardActionTypes.ThirdActionAlreadyUpdated;\n\n    constructor() {\n    }\n}\n\nexport class DelayedLightCardUpdate implements Action {\n    readonly type = LightCardActionTypes.DelayedLightCardUpdate;\n\n    constructor(public payload: { card: LightCard }) {\n    }\n}\n\nexport class LightCardAlreadyUpdated implements Action {\n    readonly type = LightCardActionTypes.LightCardAlreadyUpdated;\n\n    constructor() {\n    }\n}\n\nexport type LightCardActions =\n    LoadLightCards\n    | LoadLightCardsSuccess\n    | LoadLightCardsFailure\n    | SelectLightCard\n    | ClearLightCardSelection\n    | AddLightCardFailure\n    | UpdatedSubscription\n    | HandleUnexpectedError\n    | EmptyLightCards\n    | AddThirdActions\n    | UpdateALightCard\n    | UpdateAnAction\n    | UpdateAnActionFailure\n    | ThirdActionAlreadyLoaded\n    | ThirdActionAlreadyUpdated\n    | DelayedLightCardUpdate\n    | LightCardAlreadyUpdated\n    | RemoveLightCard;\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ThirdActionService.html":{"url":"injectables/ThirdActionService.html","title":"injectable - ThirdActionService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ThirdActionService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/third-action.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                actionUrl\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                callModalAndHandleResponse\n                            \n                            \n                                callModalIfNecessary\n                            \n                            \n                                checkIfReceivedStatusIsDifferentFromCurrentOne\n                            \n                            \n                                dispatchUpdateThirdAction\n                            \n                            \n                                postActionAndUpdateIfNecessary\n                            \n                            \n                                submit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(httpClient: HttpClient, store: Store)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/third-action.service.ts:33\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        httpClient\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                        Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            callModalAndHandleResponse\n                        \n                        \n                    \n                \n            \n            \n                \ncallModalAndHandleResponse(modalService: NgbModal, postAction$: Observable, updateThirdAction: UpdateAnAction)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/third-action.service.ts:80\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    modalService\n                                    \n                                            NgbModal\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    postAction$\n                                    \n                                            Observable\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateThirdAction\n                                    \n                                                UpdateAnAction\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            callModalIfNecessary\n                        \n                        \n                    \n                \n            \n            \n                \ncallModalIfNecessary(lightCardId: string, actionKey: string, modalService: NgbModal, postAction$: Observable)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/third-action.service.ts:65\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    lightCardId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    actionKey\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    modalService\n                                    \n                                            NgbModal\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    postAction$\n                                    \n                                            Observable\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            checkIfReceivedStatusIsDifferentFromCurrentOne\n                        \n                        \n                    \n                \n            \n            \n                \ncheckIfReceivedStatusIsDifferentFromCurrentOne(formerStatus: ActionStatus)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/third-action.service.ts:40\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    formerStatus\n                                    \n                                                ActionStatus\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            dispatchUpdateThirdAction\n                        \n                        \n                    \n                \n            \n            \n                \ndispatchUpdateThirdAction(updateThirdAction: UpdateAnAction)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/third-action.service.ts:122\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    updateThirdAction\n                                    \n                                                UpdateAnAction\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            postActionAndUpdateIfNecessary\n                        \n                        \n                    \n                \n            \n            \n                \npostActionAndUpdateIfNecessary(lightCardId: string, currentActionPath: string, action: Action)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/third-action.service.ts:49\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    lightCardId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    currentActionPath\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    action\n                                    \n                                                Action\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            submit\n                        \n                        \n                    \n                \n            \n            \n                \nsubmit(lightCardId: string, currentActionPath: string, action: Action, modalService: NgbModal)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/third-action.service.ts:104\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    lightCardId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    currentActionPath\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    action\n                                    \n                                                Action\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    modalService\n                                    \n                                            NgbModal\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            actionUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/third-action.service.ts:33\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import {Injectable} from \"@angular/core\";\nimport {HttpClient} from \"@angular/common/http\";\nimport {environment} from \"@env/environment\";\nimport {Action, ActionStatus, extractActionStatusFromPseudoActionStatus} from \"@ofModel/thirds.model\";\nimport {map} from \"rxjs/operators\";\nimport * as _ from \"lodash\";\nimport {\n    ConfirmModalComponent,\n    ThirdActionComporentModalReturn\n} from \"../modules/cards/components/action/confirm-modal/confirm-modal.component\";\nimport {NgbModal} from \"@ng-bootstrap/ng-bootstrap\";\nimport {AppState} from \"@ofStore/index\";\nimport {Store} from \"@ngrx/store\";\nimport {UpdateAnAction} from \"@ofActions/light-card.actions\";\nimport {Observable} from \"rxjs\";\n\n@Injectable()\nexport class ThirdActionService {\n    readonly actionUrl: string;\n\n    constructor(private httpClient: HttpClient\n        , private store: Store) {\n        this.actionUrl = `${environment.urls.actions}`;\n    }\n\n    checkIfReceivedStatusIsDifferentFromCurrentOne(formerStatus: ActionStatus) {\n        const status = extractActionStatusFromPseudoActionStatus(formerStatus);\n        return map(currentStatus => {\n            const normalizedCurrentStatus = extractActionStatusFromPseudoActionStatus(currentStatus);\n            const hasChanged = !_.isEqual(status, normalizedCurrentStatus);\n            return [hasChanged, currentStatus];\n        });\n    }\n\n    postActionAndUpdateIfNecessary(lightCardId: string, currentActionPath: string, action: Action) {\n        return this.httpClient.post(`${this.actionUrl}${currentActionPath}`, action).pipe(\n            this.checkIfReceivedStatusIsDifferentFromCurrentOne(action),\n            map(([hasChanged, currentStatus]: [boolean, ActionStatus]) => {\n                if (hasChanged) {\n                    const updateThirdActionAction = new UpdateAnAction({\n                        cardId: lightCardId,\n                        actionKey: action.key\n                        , status: currentStatus\n                    });\n                    this.dispatchUpdateThirdAction(updateThirdActionAction);\n                }\n            })\n        );\n    }\n\n    callModalIfNecessary(lightCardId: string, actionKey: string, modalService: NgbModal, postAction$: Observable) {\n        return map(([hasChanged, currentStatus]: [boolean, ActionStatus]) => {\n            if (hasChanged) {\n                const updateThirdAction = new UpdateAnAction({\n                    cardId: lightCardId\n                    , actionKey: actionKey\n                    , status: currentStatus\n                });\n                this.callModalAndHandleResponse(modalService, postAction$, updateThirdAction);\n            } else {\n                postAction$.subscribe();\n            }\n        });\n    }\n\n    callModalAndHandleResponse(modalService: NgbModal, postAction$: Observable, updateThirdAction: UpdateAnAction) {\n        modalService\n            .open(ConfirmModalComponent)\n            .result\n            .then(performPost => {\n                if (performPost) postAction$.subscribe()\n            })\n            .catch(error => {\n                switch (error) {\n                    case ThirdActionComporentModalReturn.CANCEL: {\n                        // save new status of action and do nothing\n                        this.dispatchUpdateThirdAction(updateThirdAction);\n                        break;\n                    }\n                    case ThirdActionComporentModalReturn.DISMISS: {\n                        // do nothing leaves the former action status untouched\n                        break;\n                    }\n                    default:\n                        console.log('unknown error from update action status modal', error);\n                }\n            });\n    }\n\n    submit(lightCardId: string\n        , currentActionPath: string\n        , action: Action\n        , modalService: NgbModal) {\n\n        const postAction$ = this.postActionAndUpdateIfNecessary(lightCardId, currentActionPath, action);\n\n        if (action.updateStateBeforeAction) {\n            this.httpClient.get(`${this.actionUrl}${currentActionPath}`).pipe(\n                this.checkIfReceivedStatusIsDifferentFromCurrentOne(action as ActionStatus),\n                this.callModalIfNecessary(lightCardId, action.key, modalService, postAction$)\n            ).subscribe();\n        } else {\n            postAction$.subscribe();\n        }\n    }\n\n    /* istanbul ignore next */\n    dispatchUpdateThirdAction(updateThirdAction: UpdateAnAction) {\n        this.store.dispatch(updateThirdAction);\n    }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ThirdMenu.html":{"url":"classes/ThirdMenu.html","title":"class - ThirdMenu","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ThirdMenu\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/model/thirds.model.ts\n        \n\n\n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(id: string, version: string, label: string, entries: ThirdMenuEntry[])\n                    \n                \n                        \n                            \n                                Defined in src/app/model/thirds.model.ts:48\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        id\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        version\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        label\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        entries\n                                                  \n                                                        \n                                                                    ThirdMenuEntry[]\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Card, Detail} from \"@ofModel/card.model\";\nimport {I18n} from \"@ofModel/i18n.model\";\nimport {Map as OfMap} from \"@ofModel/map\";\n\nexport class Third {\n    /* istanbul ignore next */\n    constructor(\n        readonly name: string,\n        readonly version: string,\n        readonly i18nLabelKey: string,\n        readonly templates?: string[],\n        readonly csses?: string[],\n        readonly locales?: string[],\n        readonly menuEntries?: ThirdMenuEntry[],\n        readonly processes?: OfMap\n    ) {\n    }\n\n    public extractState(card: Card): State {\n        if (card.process && this.processes[card.process]) {\n            const process = this.processes[card.process];\n            if (card.state && process.states[card.state]) {\n                return process.states[card.state];\n            }\n        }\n        return null;\n    }\n}\n\nexport class ThirdMenuEntry {\n    /* istanbul ignore next */\n    constructor(\n        readonly id: string,\n        readonly label: string,\n        readonly url: string\n    ) {\n    }\n}\n\nexport class ThirdMenu {\n    /* istanbul ignore next */\n    constructor(\n        readonly id: string,\n        readonly version: string,\n        readonly label: string,\n        readonly entries: ThirdMenuEntry[]) {\n    }\n}\n\nexport class Process {\n    /* istanbul ignore next */\n    constructor(\n        readonly states?: OfMap\n    ) {\n    }\n}\n\nexport class State {\n    /* istanbul ignore next */\n    constructor(\n        readonly details?: Detail[],\n        readonly actions?: OfMap\n    ) {\n    }\n}\n\nexport enum ActionType {\n    EXTERNAL = 'EXTERNAL',\n    JNLP = 'JNLP',\n    URL = 'URL'\n\n}\n\nexport class Action {\n    /* istanbul ignore next */\n    constructor(\n        readonly type: ActionType,\n        readonly label: I18n,\n        readonly hidden: boolean = false,\n        readonly buttonStyle: string = '',\n        readonly contentStyle: string = '',\n        readonly inputs: Input[] = [],\n        readonly lockAction: boolean = false,\n        readonly lockCard: boolean = false,\n        readonly updateState: boolean = false,\n        readonly updateStateBeforeAction: boolean = false,\n        readonly called: boolean = false,\n        readonly needsConfirm: boolean = false,\n        readonly key?: string\n    ) {\n    }\n\n}\n\nexport const emptyAction = new Action(null, null);\n\ntype Omit = Pick>;\n\nexport class ActionStatus {\n    constructor(\n        readonly label: I18n,\n        readonly hidden: boolean = false,\n        readonly buttonStyle: string = '',\n        readonly contentStyle: string = '',\n        readonly inputs: Input[] = [],\n        readonly lockCard: boolean = false,\n        readonly updateState: boolean = false,\n        readonly updateStateBeforeAction: boolean = false,\n        readonly needsConfirm: boolean = false,\n        readonly lockAction: boolean = false,\n    ) {\n    }\n}\n\nexport const emptyActionStatus = new ActionStatus(null);\n\n/*\nfor some reasons lodash equals take attribute order declaration in account to compute object equality\nneeded by LightCardEffects updateAThirdAction Effect and by checkIfReceivedStatusIsDifferentFromCurrentOne method of ThirdActionService .\n */\nexport function extractActionStatusFromPseudoActionStatus(tAction: object): ActionStatus {\n    let label = new I18n('');\n    const i18n = tAction['label'];\n    if (i18n) {\n        const params = i18n['parameters'];\n        if (params) {\n            Object.setPrototypeOf(params, OfMap.prototype);\n            label = new I18n(i18n['key'], params);\n        } else {\n            label = new I18n(i18n['key']);\n        }\n\n    }\n    const result = new ActionStatus(\n        label\n        , tAction['hidden']\n        , tAction['buttonStyle']\n        , tAction['contentStyle']\n        , tAction['inputs'] // TODO Need proper prototype handling\n        , tAction['lockCard']\n        , tAction['updateState']\n        , tAction['updateStateBeforeAction']\n        , tAction['needsConfirm']\n        , tAction['lockAction']\n    );\n    return result;\n}\n\n\nexport enum InputType {\n    TEXT,\n    LIST,\n    LIST_RADIO,\n    SWITCH_LIST,\n    LONGTEXT,\n    BOOLEAN,\n    STATIC\n}\n\nexport class Input {\n    /* istanbul ignore next */\n    constructor(\n        readonly type: InputType,\n        readonly name: string,\n        readonly label: I18n,\n        readonly value: string,\n        readonly mandatory: boolean,\n        readonly maxLength: number,\n        readonly rows: number,\n        readonly values: ParameterListItem[],\n        readonly selectedValues: string[],\n        readonly unSelectedValues: string[],\n    ) {\n    }\n}\n\nexport class ParameterListItem {\n    /* istanbul ignore next */\n    constructor(\n        readonly label: I18n,\n        readonly value: string,\n    ) {\n    }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ThirdMenuEntry.html":{"url":"classes/ThirdMenuEntry.html","title":"class - ThirdMenuEntry","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ThirdMenuEntry\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/model/thirds.model.ts\n        \n\n\n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(id: string, label: string, url: string)\n                    \n                \n                        \n                            \n                                Defined in src/app/model/thirds.model.ts:38\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        id\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        label\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        url\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Card, Detail} from \"@ofModel/card.model\";\nimport {I18n} from \"@ofModel/i18n.model\";\nimport {Map as OfMap} from \"@ofModel/map\";\n\nexport class Third {\n    /* istanbul ignore next */\n    constructor(\n        readonly name: string,\n        readonly version: string,\n        readonly i18nLabelKey: string,\n        readonly templates?: string[],\n        readonly csses?: string[],\n        readonly locales?: string[],\n        readonly menuEntries?: ThirdMenuEntry[],\n        readonly processes?: OfMap\n    ) {\n    }\n\n    public extractState(card: Card): State {\n        if (card.process && this.processes[card.process]) {\n            const process = this.processes[card.process];\n            if (card.state && process.states[card.state]) {\n                return process.states[card.state];\n            }\n        }\n        return null;\n    }\n}\n\nexport class ThirdMenuEntry {\n    /* istanbul ignore next */\n    constructor(\n        readonly id: string,\n        readonly label: string,\n        readonly url: string\n    ) {\n    }\n}\n\nexport class ThirdMenu {\n    /* istanbul ignore next */\n    constructor(\n        readonly id: string,\n        readonly version: string,\n        readonly label: string,\n        readonly entries: ThirdMenuEntry[]) {\n    }\n}\n\nexport class Process {\n    /* istanbul ignore next */\n    constructor(\n        readonly states?: OfMap\n    ) {\n    }\n}\n\nexport class State {\n    /* istanbul ignore next */\n    constructor(\n        readonly details?: Detail[],\n        readonly actions?: OfMap\n    ) {\n    }\n}\n\nexport enum ActionType {\n    EXTERNAL = 'EXTERNAL',\n    JNLP = 'JNLP',\n    URL = 'URL'\n\n}\n\nexport class Action {\n    /* istanbul ignore next */\n    constructor(\n        readonly type: ActionType,\n        readonly label: I18n,\n        readonly hidden: boolean = false,\n        readonly buttonStyle: string = '',\n        readonly contentStyle: string = '',\n        readonly inputs: Input[] = [],\n        readonly lockAction: boolean = false,\n        readonly lockCard: boolean = false,\n        readonly updateState: boolean = false,\n        readonly updateStateBeforeAction: boolean = false,\n        readonly called: boolean = false,\n        readonly needsConfirm: boolean = false,\n        readonly key?: string\n    ) {\n    }\n\n}\n\nexport const emptyAction = new Action(null, null);\n\ntype Omit = Pick>;\n\nexport class ActionStatus {\n    constructor(\n        readonly label: I18n,\n        readonly hidden: boolean = false,\n        readonly buttonStyle: string = '',\n        readonly contentStyle: string = '',\n        readonly inputs: Input[] = [],\n        readonly lockCard: boolean = false,\n        readonly updateState: boolean = false,\n        readonly updateStateBeforeAction: boolean = false,\n        readonly needsConfirm: boolean = false,\n        readonly lockAction: boolean = false,\n    ) {\n    }\n}\n\nexport const emptyActionStatus = new ActionStatus(null);\n\n/*\nfor some reasons lodash equals take attribute order declaration in account to compute object equality\nneeded by LightCardEffects updateAThirdAction Effect and by checkIfReceivedStatusIsDifferentFromCurrentOne method of ThirdActionService .\n */\nexport function extractActionStatusFromPseudoActionStatus(tAction: object): ActionStatus {\n    let label = new I18n('');\n    const i18n = tAction['label'];\n    if (i18n) {\n        const params = i18n['parameters'];\n        if (params) {\n            Object.setPrototypeOf(params, OfMap.prototype);\n            label = new I18n(i18n['key'], params);\n        } else {\n            label = new I18n(i18n['key']);\n        }\n\n    }\n    const result = new ActionStatus(\n        label\n        , tAction['hidden']\n        , tAction['buttonStyle']\n        , tAction['contentStyle']\n        , tAction['inputs'] // TODO Need proper prototype handling\n        , tAction['lockCard']\n        , tAction['updateState']\n        , tAction['updateStateBeforeAction']\n        , tAction['needsConfirm']\n        , tAction['lockAction']\n    );\n    return result;\n}\n\n\nexport enum InputType {\n    TEXT,\n    LIST,\n    LIST_RADIO,\n    SWITCH_LIST,\n    LONGTEXT,\n    BOOLEAN,\n    STATIC\n}\n\nexport class Input {\n    /* istanbul ignore next */\n    constructor(\n        readonly type: InputType,\n        readonly name: string,\n        readonly label: I18n,\n        readonly value: string,\n        readonly mandatory: boolean,\n        readonly maxLength: number,\n        readonly rows: number,\n        readonly values: ParameterListItem[],\n        readonly selectedValues: string[],\n        readonly unSelectedValues: string[],\n    ) {\n    }\n}\n\nexport class ParameterListItem {\n    /* istanbul ignore next */\n    constructor(\n        readonly label: I18n,\n        readonly value: string,\n    ) {\n    }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ThirdpartyModule.html":{"url":"modules/ThirdpartyModule.html","title":"module - ThirdpartyModule","body":"\n                   \n\n\n\n\n    Modules\n    ThirdpartyModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ThirdpartyModule\n\n\n\ncluster_ThirdpartyModule_declarations\n\n\n\ncluster_ThirdpartyModule_imports\n\n\n\n\nIframeDisplayComponent\n\nIframeDisplayComponent\n\n\n\nThirdpartyModule\n\nThirdpartyModule\n\nThirdpartyModule -->\n\nIframeDisplayComponent->ThirdpartyModule\n\n\n\n\n\nThirdpartyRoutingModule\n\nThirdpartyRoutingModule\n\nThirdpartyModule -->\n\nThirdpartyRoutingModule->ThirdpartyModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/modules/thirdparty/thirdparty.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            IframeDisplayComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            ThirdpartyRoutingModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        /* Copyright (c) 2020, RTE (http://www.rte-france.com)\n *\n * This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n */\n\n\nimport {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {IframeDisplayComponent} from './iframedisplay.component';\nimport {ThirdpartyRoutingModule} from \"./thirdparty-routing.module\";\n\n@NgModule({\n  declarations: [IframeDisplayComponent],\n  imports: [\n    CommonModule,\n    ThirdpartyRoutingModule\n  ]\n})\nexport class ThirdpartyModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ThirdpartyRoutingModule.html":{"url":"modules/ThirdpartyRoutingModule.html","title":"module - ThirdpartyRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    ThirdpartyRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/modules/thirdparty/thirdparty-routing.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        /* Copyright (c) 2020, RTE (http://www.rte-france.com)\n *\n * This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n */\n\n\nimport {NgModule} from '@angular/core';\nimport {RouterModule, Routes} from '@angular/router';\nimport {IframeDisplayComponent} from \"./iframedisplay.component\";\n\nconst routes: Routes = [\n    {\n        path: ':menu_id/:menu_version/:menu_entry_id',\n        component: IframeDisplayComponent\n    }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class ThirdpartyRoutingModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ThirdsI18nLoader.html":{"url":"classes/ThirdsI18nLoader.html","title":"class - ThirdsI18nLoader","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ThirdsI18nLoader\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/thirds.service.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        TranslateLoader\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getTranslation\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(thirdsService: ThirdsService)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/thirds.service.ts:156\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        thirdsService\n                                                  \n                                                        \n                                                                        ThirdsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getTranslation\n                        \n                        \n                    \n                \n            \n            \n                \ngetTranslation(lang: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/thirds.service.ts:161\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    lang\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {Injectable} from '@angular/core';\nimport {HttpClient, HttpParams, HttpUrlEncodingCodec} from \"@angular/common/http\";\nimport {environment} from \"@env/environment\";\nimport {from, Observable, of, throwError} from \"rxjs\";\nimport {TranslateLoader} from \"@ngx-translate/core\";\nimport {catchError, filter, map, reduce, switchMap, tap} from \"rxjs/operators\";\nimport {LightCard} from \"@ofModel/light-card.model\";\nimport {Action, Third, ThirdMenu} from \"@ofModel/thirds.model\";\nimport {Card} from \"@ofModel/card.model\";\n\n@Injectable()\nexport class ThirdsService {\n    readonly thirdsUrl: string;\n    private urlCleaner: HttpUrlEncodingCodec;\n    private thirdCache = new Map();\n\n    constructor(private httpClient: HttpClient,\n    ) {\n        this.urlCleaner = new HttpUrlEncodingCodec();\n        this.thirdsUrl = `${environment.urls.thirds}`;\n    }\n\n    queryThirdFromCard(card: Card): Observable {\n        return this.queryThird(card.publisher, card.publisherVersion);\n    }\n\n    queryThird(thirdName: string, version: string): Observable {\n        const key = `${thirdName}.${version}`;\n        let third = this.thirdCache.get(key);\n        if (third) {\n            return of(third);\n        }\n        return this.fetchThird(thirdName, version)\n            .pipe(\n                tap(t => {\n                    if (t) Object.setPrototypeOf(t, Third.prototype)\n                }),\n                tap(t => {\n                    if (t) this.thirdCache.set(key, t)\n                })\n            );\n    }\n\n    private fetchThird(publisher: string, version: string): Observable {\n        const params = new HttpParams()\n            .set(\"version\", version);\n        return this.httpClient.get(`${this.thirdsUrl}/${publisher}/`, {\n            params\n        });\n    }\n\n    queryMenuEntryURL(thirdMenuId: string, thirdMenuVersion: string, thirdMenuEntryId: string): Observable {\n        return this.queryThird(thirdMenuId, thirdMenuVersion).pipe(\n            switchMap(third => {\n                const entry = third.menuEntries.filter(entry => entry.id === thirdMenuEntryId)\n                if (entry.length == 1) {\n                    return entry;\n                } else {\n                    throwError(new Error('No such menu entry.'))\n                }\n            }),\n            catchError((err, caught) => {\n                console.log(err)\n                return throwError(err);\n            }),\n            map(menuEntry => menuEntry.url)\n        )\n    }\n\n    fetchHbsTemplate(publisher: string, version: string, name: string, locale: string): Observable {\n        const params = new HttpParams()\n            .set(\"locale\", locale)\n            .set(\"version\", version);\n        return this.httpClient.get(`${this.thirdsUrl}/${publisher}/templates/${name}`, {\n            params,\n            responseType: 'text'\n        });\n    }\n\n    computeThirdCssUrl(publisher: string, styleName: string, version: string) {\n        //manage url character encoding\n        const resourceUrl = this.urlCleaner.encodeValue(`${this.thirdsUrl}/${publisher}/css/${styleName}`);\n        const versionParam = new HttpParams().set('version', version);\n        return `${resourceUrl}?${versionParam.toString()}`;\n    }\n\n    private convertJsonToI18NObject(locale, publisher: string, version: string) {\n        return r => {\n            const object = {};\n            object[publisher] = {};\n            object[publisher][version] = r;\n            return object;\n        };\n    }\n\n    askForI18nJson(publisher: string, locale: string, version?: string): Observable {\n        let params = new HttpParams().set('locale', locale);\n        if (version) {\n            /*\n            `params` override needed otherwise only locale is use in the request.\n            It's so because HttpParams.set(...) return a new HttpParams,\n            and basically that's why HttpParams can be set with fluent API...\n             */\n            params = params.set('version', version);\n        }\n        return this.httpClient.get(`${this.thirdsUrl}/${publisher}/i18n`, {params})\n            .pipe(\n                map(this.convertJsonToI18NObject(locale, publisher, version))\n                , catchError(error=>{\n                    console.error(`error trying fetch i18n of '${publisher}' version:'${version}' for locale: '${locale}'`);\n                    return error;\n                })\n            );\n    }\n\n    computeThirdsMenu(): Observable {\n        return this.httpClient.get(`${this.thirdsUrl}/`).pipe(\n            switchMap(ts => from(ts)),\n            filter((t: Third) => !(!t.menuEntries)),\n            map(t =>\n                new ThirdMenu(t.name, t.version, t.i18nLabelKey, t.menuEntries)\n            ),\n            reduce((menus: ThirdMenu[], menu: ThirdMenu) => {\n                menus.push(menu);\n                return menus;\n            }, [])\n        );\n    }\n\n\n    fetchActionMapFromLightCard(card: LightCard) {\n        return this.fetchActionMap(card.publisher, card.process, card.state, card.publisherVersion);\n    }\n\n    fetchActionMap(publisher: string, process: string, state: string, apiVersion?: string) {\n        let params: HttpParams;\n        if (apiVersion) params = new HttpParams().set(\"apiVersion\", apiVersion);\n        return this.httpClient.get(`${this.thirdsUrl}/${publisher}/${process}/${state}/actions`, {\n            params,\n            responseType: 'text'\n        }).pipe(map((json: string) => {\n            const obj = JSON.parse(json);\n            return new Map(Object.entries(obj));\n        }));\n    }\n}\n\nexport class ThirdsI18nLoader implements TranslateLoader {\n\n    constructor(thirdsService: ThirdsService) {\n    }\n\n    getTranslation(lang: string): Observable {\n        return of({});\n    }\n\n}\n\nexport function ThirdsI18nLoaderFactory(thirdsService: ThirdsService): TranslateLoader {\n    return new ThirdsI18nLoader(thirdsService);\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ThirdsService.html":{"url":"injectables/ThirdsService.html","title":"injectable - ThirdsService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ThirdsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/thirds.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                thirdCache\n                            \n                            \n                                    Readonly\n                                thirdsUrl\n                            \n                            \n                                    Private\n                                urlCleaner\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                askForI18nJson\n                            \n                            \n                                computeThirdCssUrl\n                            \n                            \n                                computeThirdsMenu\n                            \n                            \n                                    Private\n                                convertJsonToI18NObject\n                            \n                            \n                                fetchActionMap\n                            \n                            \n                                fetchActionMapFromLightCard\n                            \n                            \n                                fetchHbsTemplate\n                            \n                            \n                                    Private\n                                fetchThird\n                            \n                            \n                                queryMenuEntryURL\n                            \n                            \n                                queryThird\n                            \n                            \n                                queryThirdFromCard\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(httpClient: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/thirds.service.ts:23\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        httpClient\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            askForI18nJson\n                        \n                        \n                    \n                \n            \n            \n                \naskForI18nJson(publisher: string, locale: string, version?: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/thirds.service.ts:104\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    publisher\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    locale\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    version\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            computeThirdCssUrl\n                        \n                        \n                    \n                \n            \n            \n                \ncomputeThirdCssUrl(publisher: string, styleName: string, version: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/thirds.service.ts:88\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    publisher\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    styleName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    version\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            computeThirdsMenu\n                        \n                        \n                    \n                \n            \n            \n                \ncomputeThirdsMenu()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/thirds.service.ts:124\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            convertJsonToI18NObject\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    convertJsonToI18NObject(locale, publisher: string, version: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/thirds.service.ts:95\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    locale\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    publisher\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    version\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     (r: any) => {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            fetchActionMap\n                        \n                        \n                    \n                \n            \n            \n                \nfetchActionMap(publisher: string, process: string, state: string, apiVersion?: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/thirds.service.ts:143\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    publisher\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    process\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    state\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    apiVersion\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            fetchActionMapFromLightCard\n                        \n                        \n                    \n                \n            \n            \n                \nfetchActionMapFromLightCard(card: LightCard)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/thirds.service.ts:139\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    card\n                                    \n                                                LightCard\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            fetchHbsTemplate\n                        \n                        \n                    \n                \n            \n            \n                \nfetchHbsTemplate(publisher: string, version: string, name: string, locale: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/thirds.service.ts:78\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    publisher\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    version\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    locale\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            fetchThird\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    fetchThird(publisher: string, version: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/thirds.service.ts:52\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    publisher\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    version\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            queryMenuEntryURL\n                        \n                        \n                    \n                \n            \n            \n                \nqueryMenuEntryURL(thirdMenuId: string, thirdMenuVersion: string, thirdMenuEntryId: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/thirds.service.ts:60\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    thirdMenuId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    thirdMenuVersion\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    thirdMenuEntryId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            queryThird\n                        \n                        \n                    \n                \n            \n            \n                \nqueryThird(thirdName: string, version: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/thirds.service.ts:35\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    thirdName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    version\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            queryThirdFromCard\n                        \n                        \n                    \n                \n            \n            \n                \nqueryThirdFromCard(card: Card)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/thirds.service.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    card\n                                    \n                                                Card\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            thirdCache\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Map()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/thirds.service.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            thirdsUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/thirds.service.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            urlCleaner\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         HttpUrlEncodingCodec\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/thirds.service.ts:22\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import {Injectable} from '@angular/core';\nimport {HttpClient, HttpParams, HttpUrlEncodingCodec} from \"@angular/common/http\";\nimport {environment} from \"@env/environment\";\nimport {from, Observable, of, throwError} from \"rxjs\";\nimport {TranslateLoader} from \"@ngx-translate/core\";\nimport {catchError, filter, map, reduce, switchMap, tap} from \"rxjs/operators\";\nimport {LightCard} from \"@ofModel/light-card.model\";\nimport {Action, Third, ThirdMenu} from \"@ofModel/thirds.model\";\nimport {Card} from \"@ofModel/card.model\";\n\n@Injectable()\nexport class ThirdsService {\n    readonly thirdsUrl: string;\n    private urlCleaner: HttpUrlEncodingCodec;\n    private thirdCache = new Map();\n\n    constructor(private httpClient: HttpClient,\n    ) {\n        this.urlCleaner = new HttpUrlEncodingCodec();\n        this.thirdsUrl = `${environment.urls.thirds}`;\n    }\n\n    queryThirdFromCard(card: Card): Observable {\n        return this.queryThird(card.publisher, card.publisherVersion);\n    }\n\n    queryThird(thirdName: string, version: string): Observable {\n        const key = `${thirdName}.${version}`;\n        let third = this.thirdCache.get(key);\n        if (third) {\n            return of(third);\n        }\n        return this.fetchThird(thirdName, version)\n            .pipe(\n                tap(t => {\n                    if (t) Object.setPrototypeOf(t, Third.prototype)\n                }),\n                tap(t => {\n                    if (t) this.thirdCache.set(key, t)\n                })\n            );\n    }\n\n    private fetchThird(publisher: string, version: string): Observable {\n        const params = new HttpParams()\n            .set(\"version\", version);\n        return this.httpClient.get(`${this.thirdsUrl}/${publisher}/`, {\n            params\n        });\n    }\n\n    queryMenuEntryURL(thirdMenuId: string, thirdMenuVersion: string, thirdMenuEntryId: string): Observable {\n        return this.queryThird(thirdMenuId, thirdMenuVersion).pipe(\n            switchMap(third => {\n                const entry = third.menuEntries.filter(entry => entry.id === thirdMenuEntryId)\n                if (entry.length == 1) {\n                    return entry;\n                } else {\n                    throwError(new Error('No such menu entry.'))\n                }\n            }),\n            catchError((err, caught) => {\n                console.log(err)\n                return throwError(err);\n            }),\n            map(menuEntry => menuEntry.url)\n        )\n    }\n\n    fetchHbsTemplate(publisher: string, version: string, name: string, locale: string): Observable {\n        const params = new HttpParams()\n            .set(\"locale\", locale)\n            .set(\"version\", version);\n        return this.httpClient.get(`${this.thirdsUrl}/${publisher}/templates/${name}`, {\n            params,\n            responseType: 'text'\n        });\n    }\n\n    computeThirdCssUrl(publisher: string, styleName: string, version: string) {\n        //manage url character encoding\n        const resourceUrl = this.urlCleaner.encodeValue(`${this.thirdsUrl}/${publisher}/css/${styleName}`);\n        const versionParam = new HttpParams().set('version', version);\n        return `${resourceUrl}?${versionParam.toString()}`;\n    }\n\n    private convertJsonToI18NObject(locale, publisher: string, version: string) {\n        return r => {\n            const object = {};\n            object[publisher] = {};\n            object[publisher][version] = r;\n            return object;\n        };\n    }\n\n    askForI18nJson(publisher: string, locale: string, version?: string): Observable {\n        let params = new HttpParams().set('locale', locale);\n        if (version) {\n            /*\n            `params` override needed otherwise only locale is use in the request.\n            It's so because HttpParams.set(...) return a new HttpParams,\n            and basically that's why HttpParams can be set with fluent API...\n             */\n            params = params.set('version', version);\n        }\n        return this.httpClient.get(`${this.thirdsUrl}/${publisher}/i18n`, {params})\n            .pipe(\n                map(this.convertJsonToI18NObject(locale, publisher, version))\n                , catchError(error=>{\n                    console.error(`error trying fetch i18n of '${publisher}' version:'${version}' for locale: '${locale}'`);\n                    return error;\n                })\n            );\n    }\n\n    computeThirdsMenu(): Observable {\n        return this.httpClient.get(`${this.thirdsUrl}/`).pipe(\n            switchMap(ts => from(ts)),\n            filter((t: Third) => !(!t.menuEntries)),\n            map(t =>\n                new ThirdMenu(t.name, t.version, t.i18nLabelKey, t.menuEntries)\n            ),\n            reduce((menus: ThirdMenu[], menu: ThirdMenu) => {\n                menus.push(menu);\n                return menus;\n            }, [])\n        );\n    }\n\n\n    fetchActionMapFromLightCard(card: LightCard) {\n        return this.fetchActionMap(card.publisher, card.process, card.state, card.publisherVersion);\n    }\n\n    fetchActionMap(publisher: string, process: string, state: string, apiVersion?: string) {\n        let params: HttpParams;\n        if (apiVersion) params = new HttpParams().set(\"apiVersion\", apiVersion);\n        return this.httpClient.get(`${this.thirdsUrl}/${publisher}/${process}/${state}/actions`, {\n            params,\n            responseType: 'text'\n        }).pipe(map((json: string) => {\n            const obj = JSON.parse(json);\n            return new Map(Object.entries(obj));\n        }));\n    }\n}\n\nexport class ThirdsI18nLoader implements TranslateLoader {\n\n    constructor(thirdsService: ThirdsService) {\n    }\n\n    getTranslation(lang: string): Observable {\n        return of({});\n    }\n\n}\n\nexport function ThirdsI18nLoaderFactory(thirdsService: ThirdsService): TranslateLoader {\n    return new ThirdsI18nLoader(thirdsService);\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ThirdsServiceMock.html":{"url":"classes/ThirdsServiceMock.html","title":"class - ThirdsServiceMock","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ThirdsServiceMock\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/tests/mocks/thirds.service.mock.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                computeThirdsMenu\n                            \n                            \n                                loadI18nForMenuEntries\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            computeThirdsMenu\n                        \n                        \n                    \n                \n            \n            \n                \ncomputeThirdsMenu()\n                \n            \n\n\n            \n                \n                    Defined in src/tests/mocks/thirds.service.mock.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            loadI18nForMenuEntries\n                        \n                        \n                    \n                \n            \n            \n                \nloadI18nForMenuEntries()\n                \n            \n\n\n            \n                \n                    Defined in src/tests/mocks/thirds.service.mock.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {Observable, of} from \"rxjs\";\nimport {ThirdMenu, ThirdMenuEntry} from \"@ofModel/thirds.model\";\n\nexport class ThirdsServiceMock {\n    computeThirdsMenu(): Observable{\n        return of([new ThirdMenu('t1', '1', 'tLabel1', [\n            new ThirdMenuEntry('id1', 'label1', 'link1'),\n            new ThirdMenuEntry('id2', 'label2', 'link2'),\n        ]),\n            new ThirdMenu('t2', '1', 'tLabel2', [\n                new ThirdMenuEntry('id3', 'label3', 'link3'),\n            ])])\n    }\n    loadI18nForMenuEntries(){return of(true)}\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Tick.html":{"url":"classes/Tick.html","title":"class - Tick","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Tick\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/time.actions.ts\n        \n\n            \n                Description\n            \n            \n                Heart beat of the application change current date\nContains the elapsed virtual time since the previous heart beat so any components following the clock\ncan shift their timespan accordingly\n\n            \n\n\n            \n                Implements\n            \n            \n                            Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: TickPayload)\n                    \n                \n                        \n                            \n                                Defined in src/app/store/actions/time.actions.ts:25\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                        TickPayload\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         TickPayload\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/time.actions.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : TimeActionTypes.Tick\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/time.actions.ts:25\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Action} from \"@ngrx/store\";\nimport {TimeReference} from \"@ofModel/time.model\";\nimport {Message} from \"@ofModel/message.model\";\nimport * as moment from \"moment-timezone\";\n\nexport enum TimeActionTypes{\n    Tick='[Time] tick',\n    UpdateTimeReference='[Time] try to update the time reference',\n    FailToUpdateTimeReference='[Time] fail to update the time reference'\n}\n\n/**\n * Heart beat of the application change current date\n * Contains the elapsed virtual time since the previous heart beat so any components following the clock\n * can shift their timespan accordingly\n */\nexport class Tick implements  Action{\n    readonly type=TimeActionTypes.Tick;\n    constructor(public payload:TickPayload){}\n}\n\n/**\n * Clock tick (heart beat) payload\n */\nexport class TickPayload {\n    constructor(public currentTime: moment.Moment,\n                public elapsedSinceLast: number) {\n    }\n}\n\n/**\n * Action dispatch to update the current virtual time of the application\n */\n\nexport class UpdateTimeReference implements Action{\n    readonly type=TimeActionTypes.UpdateTimeReference;\n    constructor(public payload:{timeReference:TimeReference}){};\n}\n\n\n/**\n * Notify that something went wrong while changing the virtual time.\n * Nothing has been done and an error is reported\n */\nexport class FailToUpdateTimeReference implements Action{\n    readonly type = TimeActionTypes.FailToUpdateTimeReference;\n    constructor(public payload:{ error: Message;}){}\n}\n\n\nexport type TimeActions =\n      Tick\n    | UpdateTimeReference\n    | FailToUpdateTimeReference;\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TickPayload.html":{"url":"classes/TickPayload.html","title":"class - TickPayload","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TickPayload\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/time.actions.ts\n        \n\n            \n                Description\n            \n            \n                Clock tick (heart beat) payload\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                currentTime\n                            \n                            \n                                    Public\n                                elapsedSinceLast\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(currentTime: moment.Moment, elapsedSinceLast: number)\n                    \n                \n                        \n                            \n                                Defined in src/app/store/actions/time.actions.ts:32\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        currentTime\n                                                  \n                                                        \n                                                                    moment.Moment\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        elapsedSinceLast\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            currentTime\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     moment.Moment\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/time.actions.ts:33\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            elapsedSinceLast\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/time.actions.ts:34\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Action} from \"@ngrx/store\";\nimport {TimeReference} from \"@ofModel/time.model\";\nimport {Message} from \"@ofModel/message.model\";\nimport * as moment from \"moment-timezone\";\n\nexport enum TimeActionTypes{\n    Tick='[Time] tick',\n    UpdateTimeReference='[Time] try to update the time reference',\n    FailToUpdateTimeReference='[Time] fail to update the time reference'\n}\n\n/**\n * Heart beat of the application change current date\n * Contains the elapsed virtual time since the previous heart beat so any components following the clock\n * can shift their timespan accordingly\n */\nexport class Tick implements  Action{\n    readonly type=TimeActionTypes.Tick;\n    constructor(public payload:TickPayload){}\n}\n\n/**\n * Clock tick (heart beat) payload\n */\nexport class TickPayload {\n    constructor(public currentTime: moment.Moment,\n                public elapsedSinceLast: number) {\n    }\n}\n\n/**\n * Action dispatch to update the current virtual time of the application\n */\n\nexport class UpdateTimeReference implements Action{\n    readonly type=TimeActionTypes.UpdateTimeReference;\n    constructor(public payload:{timeReference:TimeReference}){};\n}\n\n\n/**\n * Notify that something went wrong while changing the virtual time.\n * Nothing has been done and an error is reported\n */\nexport class FailToUpdateTimeReference implements Action{\n    readonly type = TimeActionTypes.FailToUpdateTimeReference;\n    constructor(public payload:{ error: Message;}){}\n}\n\n\nexport type TimeActions =\n      Tick\n    | UpdateTimeReference\n    | FailToUpdateTimeReference;\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TimeEffects.html":{"url":"injectables/TimeEffects.html","title":"injectable - TimeEffects","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  TimeEffects\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/effects/time.effects.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                currentTimeReference\n                            \n                            \n                                heartBeat\n                            \n                            \n                                stickToVirtualTime\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store, actions$: Actions, service: TimeService)\n                    \n                \n                        \n                            \n                                Defined in src/app/store/effects/time.effects.ts:26\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                        Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        actions$\n                                                  \n                                                        \n                                                                        Actions\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        service\n                                                  \n                                                        \n                                                                        TimeService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            currentTimeReference\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         TimeReference\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/effects/time.effects.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            heartBeat\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Observable\n\n                        \n                    \n                    \n                        \n                            Default value : this.actions$\n        .pipe(\n            ofType(UserActionsTypes.UserApplicationRegistered),\n            switchMap(() => this.service.pulsate()\n                .pipe(map(pulse => {\n                        return new Tick(pulse);\n                    })\n                ))\n        )\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Effect()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/effects/time.effects.ts:42\n                            \n                        \n\n                \n                    \n                        This Observable send a tick corresponding to the heart beat of the application.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            stickToVirtualTime\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Observable\n\n                        \n                    \n                    \n                        \n                            Default value : this.actions$\n        .pipe(\n            ofType(UserActionsTypes.UserApplicationRegistered),\n            switchMap(\n                () => this.service.fetchTimeReferences().pipe(\n                    map(timeRef => new UpdateTimeReference({timeReference: timeRef})),\n                    catchError(error => {\n                                console.error(error);\n                                const i18nParameters = new Map();\n                                i18nParameters['message'] = error;\n\n                                return of(new FailToUpdateTimeReference(\n                                    {\n                                        error: new Message(\n                                            'something went wrong during Time Reference update from Time service',\n                                            MessageLevel.ERROR,\n                                            new I18n('time.error', i18nParameters))\n                                    }))\n                        }\n                    )\n                )\n            )\n        )\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Effect()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/effects/time.effects.ts:56\n                            \n                        \n\n                \n                    \n                        This Observable update the way time is managed in the application.\n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import {Injectable} from \"@angular/core\";\nimport {AppState} from \"@ofStore/index\";\nimport {Action, Store} from \"@ngrx/store\";\nimport {Actions, Effect, ofType} from \"@ngrx/effects\";\nimport {Observable, of} from \"rxjs\";\nimport {TimeService} from \"@ofServices/time.service\";\nimport {catchError, map, switchMap} from \"rxjs/operators\";\nimport {TimeReference} from \"@ofModel/time.model\";\nimport {FailToUpdateTimeReference, Tick, UpdateTimeReference} from \"@ofActions/time.actions\";\nimport {selectTimeReference} from \"@ofSelectors/time.selectors\";\nimport {Message, MessageLevel} from \"@ofModel/message.model\";\nimport {I18n} from \"@ofModel/i18n.model\";\nimport {Map} from \"@ofModel/map\";\nimport {UserActionsTypes} from '@ofStore/actions/user.actions';\n\n@Injectable()\nexport class TimeEffects {\n\n    private currentTimeReference: TimeReference;\n\n    constructor(private store: Store,\n                private actions$: Actions,\n                private service: TimeService\n    ) {\n        this.store.select(selectTimeReference).subscribe(\n            timeRef => this.currentTimeReference = timeRef\n        );\n    }\n\n    /**\n     *This Observable send a tick corresponding to the heart beat of the application.\n     *\n     */\n    @Effect()\n    heartBeat: Observable = this.actions$\n        .pipe(\n            ofType(UserActionsTypes.UserApplicationRegistered),\n            switchMap(() => this.service.pulsate()\n                .pipe(map(pulse => {\n                        return new Tick(pulse);\n                    })\n                ))\n        );\n    /**\n     *This Observable update the way time is managed in the application.\n     *\n     */\n    @Effect()\n    stickToVirtualTime: Observable = this.actions$\n        .pipe(\n            ofType(UserActionsTypes.UserApplicationRegistered),\n            switchMap(\n                () => this.service.fetchTimeReferences().pipe(\n                    map(timeRef => new UpdateTimeReference({timeReference: timeRef})),\n                    catchError(error => {\n                                console.error(error);\n                                const i18nParameters = new Map();\n                                i18nParameters['message'] = error;\n\n                                return of(new FailToUpdateTimeReference(\n                                    {\n                                        error: new Message(\n                                            'something went wrong during Time Reference update from Time service',\n                                            MessageLevel.ERROR,\n                                            new I18n('time.error', i18nParameters))\n                                    }))\n                        }\n                    )\n                )\n            )\n        );\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TimeFilterComponent.html":{"url":"components/TimeFilterComponent.html","title":"component - TimeFilterComponent","body":"\n                   \n\n\n\n\n\n  Components\n  TimeFilterComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/feed/components/card-list/filters/time-filter/time-filter.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                of-time-filter\n            \n\n\n\n\n            \n                templateUrl\n                ./time-filter.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _filter$\n                            \n                            \n                                    Private\n                                ngUnsubscribe$\n                            \n                            \n                                timeFilterForm\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                createFormGroup\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    filter$\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store, timeService: TimeService)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/feed/components/card-list/filters/time-filter/time-filter.component.ts:35\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                        Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        timeService\n                                                  \n                                                        \n                                                                        TimeService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            createFormGroup\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createFormGroup()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/feed/components/card-list/filters/time-filter/time-filter.component.ts:97\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/feed/components/card-list/filters/time-filter/time-filter.component.ts:42\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/feed/components/card-list/filters/time-filter/time-filter.component.ts:47\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _filter$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/feed/components/card-list/filters/time-filter/time-filter.component.ts:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            ngUnsubscribe$\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Subject()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/feed/components/card-list/filters/time-filter/time-filter.component.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            timeFilterForm\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormGroup\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/feed/components/card-list/filters/time-filter/time-filter.component.ts:35\n                            \n                        \n\n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        filter$\n                    \n                \n\n                \n                    \n                        getfilter$()\n                    \n                \n                            \n                                \n                                    Defined in src/app/modules/feed/components/card-list/filters/time-filter/time-filter.component.ts:31\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import {Component, OnDestroy, OnInit} from '@angular/core';\nimport {FormControl, FormGroup} from \"@angular/forms\";\nimport {buildFilterSelector} from \"@ofSelectors/feed.selectors\";\nimport {FilterType} from \"@ofServices/filter.service\";\nimport {Filter} from \"@ofModel/feed-filter.model\";\nimport {Store} from \"@ngrx/store\";\nimport {AppState} from \"@ofStore/index\";\nimport {Observable, Subject, timer} from \"rxjs\";\nimport {debounce, distinctUntilChanged, first, takeUntil} from \"rxjs/operators\";\nimport * as _ from \"lodash\";\nimport {ApplyFilter} from \"@ofActions/feed.actions\";\nimport {TimeService} from \"@ofServices/time.service\";\nimport * as moment from \"moment\";\n\n@Component({\n    selector: 'of-time-filter',\n    templateUrl: './time-filter.component.html'\n})\nexport class TimeFilterComponent implements OnInit, OnDestroy {\n    private ngUnsubscribe$ = new Subject();\n    private _filter$: Observable;\n\n    get filter$(): Observable {\n        return this._filter$;\n    }\n\n    timeFilterForm: FormGroup;\n\n    constructor(private store: Store,\n                private timeService: TimeService) {\n        this.timeFilterForm = this.createFormGroup();\n    }\n\n    ngOnDestroy() {\n        this.ngUnsubscribe$.next();\n        this.ngUnsubscribe$.complete();\n    }\n\n    ngOnInit() {\n        this._filter$ = this.store.select(buildFilterSelector(FilterType.TIME_FILTER));\n\n        //Update the values of the filter form if the state of the filter has been changed by other means (timeline, followClockTick, etc.)\n        //With {emitEvent:false}, this update won't trigger a valueChanges, so no ApplyFilter action will be dispatched\n        this._filter$.pipe(takeUntil(this.ngUnsubscribe$)).subscribe((next: Filter) => {\n            if (next) {\n                if (this.timeService.parseString(this.timeFilterForm.get('start').value).valueOf() != next.status.start) {\n                    if(!!next.status.start)\n                        this.timeFilterForm.get('start').setValue(this.timeService.asInputString(next.status.start), {emitEvent:false});\n                    else\n                        this.timeFilterForm.get('start').setValue(null, {emitEvent: false});\n                }\n                if (this.timeService.parseString(this.timeFilterForm.get('end').value).valueOf() != next.status.end) {\n                    if(!!next.status.end) {\n                        this.timeFilterForm.get('end').setValue(this.timeService.asInputString(next.status.end), {emitEvent: false});\n                    }\n                    else\n                        this.timeFilterForm.get('end').setValue(null, {emitEvent: false});\n                }\n            } else {\n                if (!!this.timeFilterForm.get('start').value)\n                    this.timeFilterForm.get('start').setValue(null, {emitEvent: false});\n                if (!!this.timeFilterForm.get('end').value)\n                    this.timeFilterForm.get('end').setValue(null, {emitEvent: false});\n            }\n        });\n\n        this._filter$.pipe(first(), takeUntil(this.ngUnsubscribe$)).subscribe(() => {\n            this.timeFilterForm\n                .valueChanges\n                .pipe(\n                    takeUntil(this.ngUnsubscribe$),\n                    distinctUntilChanged((formA, formB) => {\n                        return _.isEqual(formA, formB);\n                    }),\n                    debounce(() => timer(500)))\n                .subscribe(form => this.store.dispatch(\n                    new ApplyFilter({\n                        name: FilterType.TIME_FILTER,\n                        active: !!form.start || !!form.end,\n                        status: {\n                            start: form.start ? this.timeService.parseString(form.start).valueOf() : null,\n                            end: form.end ? this.timeService.parseString(form.end).valueOf() : null\n                        }\n                    }))\n                );\n        });\n    }\n\n    private createFormGroup() {\n        return new FormGroup({\n            start: new FormControl(),\n            end: new FormControl()\n        }, {updateOn: 'change'});\n    }\n\n}\n\n    \n\n    \n        \n\n\n\n\n\n\n  \n    \n      \n        feed.filters.time.start.label\n        \n      \n      \n        feed.filters.time.end.label\n        \n      \n    \n  \n  feed.filters.time.title\n  \n    \n  \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                    feed.filters.time.start.label                            feed.filters.time.end.label                      feed.filters.time.title        '\n    var COMPONENTS = [{'name': 'ActionComponent', 'selector': 'of-action'},{'name': 'AppComponent', 'selector': 'of-root'},{'name': 'ArchiveFiltersComponent', 'selector': 'of-archive-filters'},{'name': 'ArchiveListComponent', 'selector': 'of-archive-list'},{'name': 'ArchiveListPageComponent', 'selector': 'of-archive-list-page'},{'name': 'ArchivesComponent', 'selector': 'of-archives'},{'name': 'BaseSettingComponent', 'selector': 'of-base-setting'},{'name': 'CardComponent', 'selector': 'of-card'},{'name': 'CardDetailsComponent', 'selector': 'of-card-details'},{'name': 'CardListComponent', 'selector': 'of-card-list'},{'name': 'ConfirmModalComponent', 'selector': 'confirm-modal-component'},{'name': 'CustomLogoComponent', 'selector': 'of-custom-logo'},{'name': 'CustomTimelineChartComponent', 'selector': 'of-custom-timeline-chart'},{'name': 'DatetimeFilterComponent', 'selector': 'of-datetime-filter'},{'name': 'DetailComponent', 'selector': 'of-detail'},{'name': 'DetailsComponent', 'selector': 'of-details'},{'name': 'EmailSettingComponent', 'selector': 'of-email-setting'},{'name': 'FeedComponent', 'selector': 'of-cards'},{'name': 'FiltersComponent', 'selector': 'of-filters'},{'name': 'IconComponent', 'selector': 'of-icon'},{'name': 'IframeDisplayComponent', 'selector': 'of-iframedisplay'},{'name': 'InfoComponent', 'selector': 'of-info'},{'name': 'InitChartComponent', 'selector': 'of-init-chart'},{'name': 'ListSettingComponent', 'selector': 'of-list-setting'},{'name': 'LoginComponent', 'selector': 'of-login'},{'name': 'MenuLinkComponent', 'selector': 'of-menu-link'},{'name': 'MultiFilterComponent', 'selector': 'of-multi-filter'},{'name': 'MultiSettingsComponent', 'selector': 'of-multi-settings'},{'name': 'NavbarComponent', 'selector': 'of-navbar'},{'name': 'NoSelectionComponent', 'selector': 'of-no-selection'},{'name': 'ResizableComponent', 'selector': 'of-resizable'},{'name': 'SettingsComponent', 'selector': 'of-settings'},{'name': 'TagsFilterComponent', 'selector': 'of-tags-filter'},{'name': 'TextSettingComponent', 'selector': 'of-text-setting'},{'name': 'TimeFilterComponent', 'selector': 'of-time-filter'},{'name': 'TimeLineComponent', 'selector': 'of-time-line'},{'name': 'TypeAheadSettingsComponent', 'selector': 'of-type-ahead-settings'},{'name': 'TypeFilterComponent', 'selector': 'of-type-filter'}];\n    var DIRECTIVES = [{'name': 'CalcHeightDirective', 'selector': '[calcHeightDirective]'},{'name': 'DraggableDirective', 'selector': '[appDraggable]'},{'name': 'MouseWheelDirective', 'selector': '[appMouseWheel]'}];\n    var ACTUAL_COMPONENT = {'name': 'TimeFilterComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TimeLineComponent.html":{"url":"components/TimeLineComponent.html","title":"component - TimeLineComponent","body":"\n                   \n\n\n\n\n\n  Components\n  TimeLineComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/feed/components/time-line/time-line.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                of-time-line\n            \n\n\n\n\n            \n                templateUrl\n                ./time-line.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                conf\n                            \n                            \n                                    Public\n                                confZoom\n                            \n                            \n                                    Public\n                                domains\n                            \n                            \n                                lightCards$\n                            \n                            \n                                subscription\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                constructMomentObj\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                periodStartToEnd\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/feed/components/time-line/time-line.component.ts:31\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                        Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            constructMomentObj\n                        \n                        \n                    \n                \n            \n            \n                \nconstructMomentObj(mommentOjb: Array, startOf?: Array, date?: Array)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/feed/components/time-line/time-line.component.ts:227\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    mommentOjb\n                                    \n                                            Array\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    startOf\n                                    \n                                            Array\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                                \n                                    date\n                                    \n                                            Array\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/feed/components/time-line/time-line.component.ts:273\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/feed/components/time-line/time-line.component.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            periodStartToEnd\n                        \n                        \n                    \n                \n            \n            \n                \nperiodStartToEnd(conf, future: boolean)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/feed/components/time-line/time-line.component.ts:252\n                \n            \n\n\n            \n                \n                    return a moment\nadd time to moment depending of configue object when future is true. compute a domain end\nsubtract time when future is false\nuse startOf function on each time's unit pass in list\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    conf\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    future\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     moment.Moment\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            conf\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/feed/components/time-line/time-line.component.ts:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            confZoom\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/feed/components/time-line/time-line.component.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            domains\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/feed/components/time-line/time-line.component.ts:31\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            lightCards$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/feed/components/time-line/time-line.component.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            subscription\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subscription\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/feed/components/time-line/time-line.component.ts:27\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, OnDestroy } from '@angular/core';\nimport {Observable, of, Subscription} from 'rxjs';\nimport { LightCard } from '@ofModel/light-card.model';\nimport { select, Store } from '@ngrx/store';\nimport {catchError, debounceTime, distinctUntilChanged} from 'rxjs/operators';\nimport { AppState } from '@ofStore/index';\nimport {InitTimeline, SetCardDataTimeline} from '@ofActions/timeline.actions';\nimport * as _ from 'lodash';\nimport * as moment from 'moment';\nimport * as feedSelectors from '@ofSelectors/feed.selectors';\nimport { buildConfigSelector } from '@ofStore/selectors/config.selectors';\n\n@Component({\n  selector: 'of-time-line',\n  templateUrl: './time-line.component.html',\n})\nexport class TimeLineComponent implements OnInit, OnDestroy {\n    lightCards$: Observable;\n    subscription: Subscription;\n\n    public conf: any;\n    public confZoom = [];\n    public domains: any;\n\n    constructor(private store: Store) {}\n    ngOnInit() {\n        // DOMAIN CONF from moment() to our conf\n        const domain7DayConf = this.constructMomentObj([0, 0, 0, 8, 0, 0, 0], ['day'], null);\n        const domainWeekConf = this.constructMomentObj([0, 0, 1, 0, 0, 0, 0], ['week'], null);\n\n        const domainMonthConf = this.constructMomentObj([0, 1, 0, 0, 0, 0, 0], ['month'], null);\n        const domainYearConf = this.constructMomentObj([1, 0, 0, 0, 0, 0, 0], ['year'], null);\n        const currentMoment = moment();\n\n        const startDomain7Day = moment(currentMoment);\n        startDomain7Day.minutes(0).second(0).millisecond(0);\n        const endDomain7Day = this.periodStartToEnd(domain7DayConf, true);\n\n        const startDomainWeek = moment(currentMoment.startOf('week'));\n        startDomainWeek.minutes(0).second(0).millisecond(0);\n        const endDomainWeek = this.periodStartToEnd(domainWeekConf, true);\n\n        const startDomainMonth = moment(currentMoment.startOf('month'));\n        startDomainMonth.minutes(0).second(0).millisecond(0);\n        const endDomainMonth = this.periodStartToEnd(domainMonthConf, true);\n\n        const startDomainYear = moment(currentMoment.startOf('year'));\n        startDomainYear.hour(0).minutes(0).second(0).millisecond(0);\n        const endDomainYear = this.periodStartToEnd(domainYearConf, true);\n\n        // Adding two domains required by SEA Team\n        const startDomainTR = moment().minutes(0).second(0).millisecond(0).subtract(2, 'hours');\n        const endDomainTR = moment().minutes(0).second(0).millisecond(0).add(10, 'hours');\n\n        const startDomainJ = moment().hours(0).minutes(0).second(0).millisecond(0);\n        const endDomainJ = moment().hours(0).minutes(0).second(0).millisecond(0).add(1, 'days');\n        // FORWARD CONF (movement on domain)\n        const forwardYearConf = {\n            start: this.constructMomentObj([1, 0, 0, 0, 0, 0, 0]),\n            end: this.constructMomentObj([1, 0, 0, 0, 0, 0, 0]),\n        };\n        const forwardMonthConf = {\n            start: this.constructMomentObj([0, 1, 0, 0, 0, 0, 0]),\n            end: this.constructMomentObj([0, 1, 0, 0, 0, 0, 0])\n        };\n        const forwardWeekConf = {\n            start: this.constructMomentObj([0, 0, 1, 0, 0, 0, 0]),\n            end: this.constructMomentObj([0, 0, 1, 0, 0, 0, 0]),\n        };\n        const forwardDayConf = {\n            start: this.constructMomentObj([0, 0, 0, 1, 0, 0, 0]),\n            end: this.constructMomentObj([0, 0, 0, 1, 0, 0, 0]),\n        };\n        const forwardTRConf = {\n            start: this.constructMomentObj([0, 0, 0, 0, 2, 0, 0]),\n            end: this.constructMomentObj([0, 0, 0, 0, 2, 0, 0]),\n        };\n\n        const ticks4HoursConf = this.constructMomentObj([0, 0, 0, 0, 4, 0, 0]);\n\n        const ticksDayConf = this.constructMomentObj([0, 0, 0, 1, 0, 0, 0]);\n        const ticksHalfMonthConf = this.constructMomentObj([0, 0, 0, 0, 0, 0, 0], null, [1, 16]);\n\n        const ticks15minConf = this.constructMomentObj([0, 0, 0, 0, 0, 15, 0]);\n        const ticks30minConf = this.constructMomentObj([0, 0, 0, 0, 0, 30, 0]);\n\n        this.conf = {\n            enableDrag: false,\n            enableZoom: true,\n            zoomOnButton: true,\n            autoScale: false,\n            showGridLines: true,\n            realTimeBar: true,\n        };\n\n        this.domains = {\n            J: {\n                startDomain: startDomainJ.valueOf(),\n                endDomain: endDomainJ.valueOf(),\n                centeredOnTicks: true,\n                clusterTicksToTicks: true,\n                buttonTitle: 'J',\n                forwardConf: forwardDayConf,\n                backwardConf: forwardDayConf,\n                ticksConf: ticks30minConf,\n                formatTicks: 'HH[h]mm'\n            }, TR: {\n                startDomain: startDomainTR.valueOf(),\n                endDomain: endDomainTR.valueOf(),\n                centeredOnTicks: true,\n                clusterTicksToTicks: true,\n                buttonTitle: 'TR',\n                forwardConf: forwardTRConf,\n                backwardConf: forwardTRConf,\n                ticksConf: ticks15minConf\n            }, '7D': {\n                startDomain: startDomain7Day.valueOf(),\n                endDomain: endDomain7Day.valueOf(),\n                centeredOnTicks: true,\n                clusterTicksToTicks: true,\n                buttonTitle: '7D',\n                forwardConf: forwardDayConf,\n                ticksConf: ticks4HoursConf,\n                followClockTick: true,\n                firstMoveStartOfUnit: true,\n                homeDomainExtraTicks: true\n            }, 'W': {\n                startDomain: startDomainWeek.valueOf(),\n                endDomain: endDomainWeek.valueOf(),\n                centeredOnTicks: true,\n                clusterTicksToTicks: true,\n                buttonTitle: 'W',\n                forwardConf: forwardWeekConf,\n                backwardConf: forwardWeekConf,\n                ticksConf: ticks4HoursConf,\n                followClockTick: false,\n                firstMoveStartOfUnit: false,\n                homeDomainExtraTicks: false\n            }, M: {\n                startDomain: startDomainMonth.valueOf(),\n                endDomain: endDomainMonth.valueOf(),\n                centeredOnTicks: true,\n                clusterTicksToTicks: true,\n                buttonTitle: 'M',\n                forwardConf: forwardMonthConf,\n                ticksConf: ticksDayConf,\n                // formatTicks: 'DD',\n                // formatTooltipsDate: 'DD/MM',\n                followClockTick: false,\n                firstMoveStartOfUnit: false,\n                homeDomainExtraTicks: false\n            }, Y: {\n                startDomain: startDomainYear.valueOf(),\n                endDomain: endDomainYear.valueOf(),\n                centeredOnTicks: true,\n                clusterTicksToTicks: true,\n                buttonTitle: 'Y',\n                forwardConf: forwardYearConf,\n                ticksConf: ticksHalfMonthConf,\n                followClockTick: false,\n                firstMoveStartOfUnit: false,\n                homeDomainExtraTicks: false\n            }\n        };\n        this.store.pipe(select(buildConfigSelector('feed.timeline.domains')), catchError(() => of([]))).subscribe(d => {\n            if (d) {\n                d.map(domain => {\n                    if (Object.keys(this.domains).includes(domain)) {\n                        this.confZoom.push(this.domains[domain]);\n                    }\n                });\n            }\n        });\n        // timeline state is same than feed state (not filtered Feed)\n        // select all the feed\n        this.lightCards$ = this.store.pipe(select(feedSelectors.selectFeed),\n            catchError(err => of([]))\n        );\n\n        // init timeline state\n        this.store.dispatch(new InitTimeline({\n            data: [],\n        }));\n\n        // add a card data to the timeline state for each new card received\n        this.subscription = this.lightCards$.pipe(debounceTime(300), distinctUntilChanged()).subscribe(value => {\n            const tmp = _.cloneDeep(value);\n            this.store.dispatch(new InitTimeline({data: []}));\n            const myCardsTimeline = [];\n            for (const val of tmp) {\n                if (val.timeSpans && val.timeSpans.length > 0) {\n                    val.timeSpans.forEach(d => {\n                        const myCardTimelineTimespans = {\n                            displayDate: d.start, publishDate: d.start, // useless\n                            startDate: d.start, // useless\n                            endDate: d.end, // useless\n                            severity: val.severity, publisher: val.publisher,\n                            publisherVersion: val.publisherVersion, summary: val.title\n                        };\n                        myCardsTimeline.push(myCardTimelineTimespans);\n                    });\n                } else {\n                    // val.endDate val.startDate val.severity\n                    const myCardTimeline = {\n                        displayDate: val.startDate,\n                        publishDate: val.publishDate, // useless\n                        startDate: val.startDate, // useless\n                        endDate: val.endDate, // useless\n                        severity: val.severity, publisher: val.publisher,\n                        publisherVersion: val.publisherVersion, summary: val.title\n                    };\n                    myCardsTimeline.push(myCardTimeline);\n                }\n            }\n            this.store.dispatch(new SetCardDataTimeline({cardsTimeline: myCardsTimeline}));\n        });\n    }\n\n    constructMomentObj(mommentOjb: Array, startOf?: Array, date?: Array) {\n        const obj: any = {};\n        obj.year = mommentOjb[0];\n        obj.month = mommentOjb[1];\n        obj.week = mommentOjb[2];\n        obj.day = mommentOjb[3];\n        obj.hour = mommentOjb[4];\n        obj.minute = mommentOjb[5];\n        obj.second = mommentOjb[6];\n        if (startOf) {\n            obj.startOf = startOf;\n        }\n        if (date) {\n            obj.date = date;\n        }\n        return obj;\n    }\n    /**\n     * return a moment\n     * add time to moment depending of configue object when future is true. compute a domain end\n     * subtract time when future is false\n     * use startOf function on each time's unit pass in list\n     * @param conf\n     * @param future\n     */\n    periodStartToEnd(conf, future: boolean): moment.Moment {\n        const tmpMoment = moment();\n        // Test bug\n        // tmpMoment.date(2);\n        const newDate = _.cloneDeep(tmpMoment);\n        Object.keys(conf).forEach(key => {\n            if (key === 'startOf') {\n                conf[key].forEach(value => {\n                    newDate.startOf(value);\n                });\n            } else if (conf[key] > 0) {\n                if (future) {\n                    newDate.add(conf[key], key);\n                } else {\n                    newDate.subtract(conf[key], key);\n                }\n            }\n        });\n        return newDate;\n    }\n\n    ngOnDestroy() {\n        if (this.subscription) {\n            this.subscription.unsubscribe();\n        }\n    }\n}\n\n    \n\n    \n        \n\n\n\n\n\n\n\n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  '\n    var COMPONENTS = [{'name': 'ActionComponent', 'selector': 'of-action'},{'name': 'AppComponent', 'selector': 'of-root'},{'name': 'ArchiveFiltersComponent', 'selector': 'of-archive-filters'},{'name': 'ArchiveListComponent', 'selector': 'of-archive-list'},{'name': 'ArchiveListPageComponent', 'selector': 'of-archive-list-page'},{'name': 'ArchivesComponent', 'selector': 'of-archives'},{'name': 'BaseSettingComponent', 'selector': 'of-base-setting'},{'name': 'CardComponent', 'selector': 'of-card'},{'name': 'CardDetailsComponent', 'selector': 'of-card-details'},{'name': 'CardListComponent', 'selector': 'of-card-list'},{'name': 'ConfirmModalComponent', 'selector': 'confirm-modal-component'},{'name': 'CustomLogoComponent', 'selector': 'of-custom-logo'},{'name': 'CustomTimelineChartComponent', 'selector': 'of-custom-timeline-chart'},{'name': 'DatetimeFilterComponent', 'selector': 'of-datetime-filter'},{'name': 'DetailComponent', 'selector': 'of-detail'},{'name': 'DetailsComponent', 'selector': 'of-details'},{'name': 'EmailSettingComponent', 'selector': 'of-email-setting'},{'name': 'FeedComponent', 'selector': 'of-cards'},{'name': 'FiltersComponent', 'selector': 'of-filters'},{'name': 'IconComponent', 'selector': 'of-icon'},{'name': 'IframeDisplayComponent', 'selector': 'of-iframedisplay'},{'name': 'InfoComponent', 'selector': 'of-info'},{'name': 'InitChartComponent', 'selector': 'of-init-chart'},{'name': 'ListSettingComponent', 'selector': 'of-list-setting'},{'name': 'LoginComponent', 'selector': 'of-login'},{'name': 'MenuLinkComponent', 'selector': 'of-menu-link'},{'name': 'MultiFilterComponent', 'selector': 'of-multi-filter'},{'name': 'MultiSettingsComponent', 'selector': 'of-multi-settings'},{'name': 'NavbarComponent', 'selector': 'of-navbar'},{'name': 'NoSelectionComponent', 'selector': 'of-no-selection'},{'name': 'ResizableComponent', 'selector': 'of-resizable'},{'name': 'SettingsComponent', 'selector': 'of-settings'},{'name': 'TagsFilterComponent', 'selector': 'of-tags-filter'},{'name': 'TextSettingComponent', 'selector': 'of-text-setting'},{'name': 'TimeFilterComponent', 'selector': 'of-time-filter'},{'name': 'TimeLineComponent', 'selector': 'of-time-line'},{'name': 'TypeAheadSettingsComponent', 'selector': 'of-type-ahead-settings'},{'name': 'TypeFilterComponent', 'selector': 'of-type-filter'}];\n    var DIRECTIVES = [{'name': 'CalcHeightDirective', 'selector': '[calcHeightDirective]'},{'name': 'DraggableDirective', 'selector': '[appDraggable]'},{'name': 'MouseWheelDirective', 'selector': '[appMouseWheel]'}];\n    var ACTUAL_COMPONENT = {'name': 'TimeLineComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TimeReference.html":{"url":"classes/TimeReference.html","title":"class - TimeReference","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TimeReference\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/model/time.model.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                computeNow\n                            \n                            \n                                computeNow\n                            \n                            \n                                computeNow\n                            \n                            \n                                    Private\n                                computeNowMoment\n                            \n                            \n                                    Static\n                                convertSpeedIntoEnum\n                            \n                            \n                                    Private\n                                isVirtualTimeUndefine\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(referenceTime: number, virtualTime: number, computedNow: number, speed: TimeSpeed)\n                    \n                \n                        \n                            \n                                Defined in src/app/model/time.model.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        referenceTime\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        virtualTime\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        computedNow\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        speed\n                                                  \n                                                        \n                                                                        TimeSpeed\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            computeNow\n                        \n                        \n                    \n                \n            \n            \n                \ncomputeNow(timeStampNow: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/model/time.model.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    timeStampNow\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     moment.Moment\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            computeNow\n                        \n                        \n                    \n                \n            \n            \n                \ncomputeNow(momentNow: moment.Moment)\n                \n            \n\n\n            \n                \n                    Defined in src/app/model/time.model.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    momentNow\n                                    \n                                            moment.Moment\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     moment.Moment\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            computeNow\n                        \n                        \n                    \n                \n            \n            \n                \ncomputeNow(realNow: number | moment.Moment)\n                \n            \n\n\n            \n                \n                    Defined in src/app/model/time.model.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    realNow\n                                    \n                                            number | moment.Moment\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     moment.Moment\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            computeNowMoment\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    computeNowMoment(realNowMoment: moment.Moment)\n                \n            \n\n\n            \n                \n                    Defined in src/app/model/time.model.ts:40\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    realNowMoment\n                                    \n                                            moment.Moment\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            convertSpeedIntoEnum\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    convertSpeedIntoEnum(key: string, value: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/model/time.model.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    value\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            isVirtualTimeUndefine\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    isVirtualTimeUndefine()\n                \n            \n\n\n            \n                \n                    Defined in src/app/model/time.model.ts:63\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import * as moment from 'moment-timezone';\nimport {isMoment} from \"moment\";\n\nexport class TimeReference {\n    constructor(readonly referenceTime: number,\n                readonly  virtualTime: number,\n                readonly  computedNow: number,\n                readonly speed: TimeSpeed) {\n    }\n\n    static convertSpeedIntoEnum(key: string, value: string) {\n        if (key === 'speed') {\n            return TimeSpeed[value]\n        }\n        return value;\n    }\n\n\n    computeNow(timeStampNow:number):moment.Moment;\n    computeNow(momentNow:moment.Moment):moment.Moment;\n    computeNow(realNow:number|moment.Moment):moment.Moment{\n\n        let realNowMoment = null;\n        if(isMoment(realNow)){\n            realNowMoment=realNow\n        }else{\n            realNowMoment=moment(realNow);\n        }\n        return this.computeNowMoment(realNowMoment);\n\n    }\n\n    private computeNowMoment(realNowMoment: moment.Moment) {\n        /**\n         *   no computation for real time at normal speed with no virtualTime\n         *   or if the referenceTime doesn't exist\n         */\n\n        if (typeof this.referenceTime === 'undefined' || this.referenceTime == null) {\n                return realNowMoment;\n        }else if(this.speed === TimeSpeed.X1 && this.isVirtualTimeUndefine()){\n            return realNowMoment;\n        }\n        const ref = moment(this.referenceTime);\n        const duration = moment.duration(realNowMoment.diff(ref));\n        const computedOffsetInMilliseconds = duration.asMilliseconds() * this.speed;\n        const computedOffsetDuration = moment.duration(computedOffsetInMilliseconds)\n        let baseMoment=moment(this.virtualTime);\n        if(this.isVirtualTimeUndefine()) {\n            baseMoment=ref;\n        }\n        const result = baseMoment.add(computedOffsetDuration);\n        return result;\n    }\n\n    private isVirtualTimeUndefine(){\n        return typeof this.virtualTime === 'undefined' || this.virtualTime == null;\n    }\n}\n\n\nexport enum TimeSpeed {\n    X1 = 1,\n    X2 = 2,\n    X10 = 10,\n    X60 = 60,\n    X3600 = 3600,\n    HALF = 0.5\n}\n\nexport const neutralTimeReference:TimeReference=new TimeReference(null,null,null,TimeSpeed.X1);\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TimeSpan.html":{"url":"classes/TimeSpan.html","title":"class - TimeSpan","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TimeSpan\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/model/light-card.model.ts\n        \n\n\n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(start: number, end?: number, display)\n                    \n                \n                        \n                            \n                                Defined in src/app/model/light-card.model.ts:68\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        start\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        end\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        display\n                                                  \n                                                        \n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {I18n} from \"@ofModel/i18n.model\";\nimport {Action} from \"@ofModel/thirds.model\";\n\nexport class LightCard {\n    /* istanbul ignore next */\n    constructor(\n        readonly uid: string,\n        readonly id: string,\n        readonly publisher: string,\n        readonly publisherVersion: string,\n        readonly publishDate: number,\n        readonly startDate: number,\n        readonly endDate: number,\n        readonly severity: Severity,\n        readonly mainRecipient: string,\n        readonly processId?: string,\n        readonly lttd?: number,\n        readonly title?: I18n,\n        readonly summary?: I18n,\n        readonly tags?: string[],\n        readonly timeSpans?: TimeSpan[],\n        readonly process?: string,\n        readonly state?: string,\n        readonly actions?:Map\n    ) {\n    }\n}\n\nexport enum Severity {\n    ALARM = \"ALARM\", ACTION = \"ACTION\", INFORMATION = \"INFORMATION\", COMPLIANT = \"COMPLIANT\"\n}\n\nexport function severityOrdinal(severity: Severity) {\n    let result;\n    switch (severity) {\n        case Severity.ALARM:\n            result = 0;\n            break;\n        case Severity.ACTION:\n            result = 1;\n            break;\n        case Severity.COMPLIANT:\n            result = 2;\n            break;\n        case Severity.INFORMATION:\n            result = 3;\n            break;\n    }\n    return result;\n}\n\nexport enum Sound {\n    INFORMATION, COMPLIANT\n}\n\nexport enum Display {\n    BUBBLE, LINE\n}\n\nexport class TimeSpan {\n    constructor(\n        readonly start: number,\n        readonly end?: number,\n        readonly display = Display.BUBBLE) {\n    }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TimeState.html":{"url":"interfaces/TimeState.html","title":"interface - TimeState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  TimeState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/states/time.state.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        currentDate\n                                \n                                \n                                        error\n                                \n                                \n                                        timeReference\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        currentDate\n                                    \n                                \n                                \n                                    \n                                        currentDate:     moment.Moment\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     moment.Moment\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        error\n                                    \n                                \n                                \n                                    \n                                        error:         Message\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Message\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        timeReference\n                                    \n                                \n                                \n                                    \n                                        timeReference:         TimeReference\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         TimeReference\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import * as moment from 'moment-timezone'\nimport {neutralTimeReference, TimeReference} from \"@ofModel/time.model\";\nimport {Message} from \"@ofModel/message.model\";\n\nexport interface TimeState {\n\n    timeReference: TimeReference;\n    currentDate: moment.Moment;\n    error: Message;\n}\n\nexport const timeInitialState: TimeState = {\n    timeReference:neutralTimeReference,\n    currentDate: moment(),\n    error: null\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TimelineState.html":{"url":"interfaces/TimelineState.html","title":"interface - TimelineState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  TimelineState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/states/timeline.state.ts\n        \n\n            \n                Description\n            \n            \n                The Timeline State consist of:\n\nEntityState of LightCard\nselectedCardId: the currently selected card id\nlastCards the last cards added / updated to the feed\nloading: weather there is an ongoing state modification\nerror: last message during state processing before error\ndata: an array of data Card (less information than lightCard)\nwhich are use for display on the chart the number of card on timescale\n\n\n            \n\n            \n                Extends\n            \n            \n                        EntityState\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        data\n                                \n                                \n                                        error\n                                \n                                \n                                        lastCards\n                                \n                                \n                                        loading\n                                \n                                \n                                        selectedCardId\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        data\n                                    \n                                \n                                \n                                    \n                                        data:     any[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     any[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        error\n                                    \n                                \n                                \n                                    \n                                        error:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        lastCards\n                                    \n                                \n                                \n                                    \n                                        lastCards:     LightCard[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     LightCard[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        loading\n                                    \n                                \n                                \n                                    \n                                        loading:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        selectedCardId\n                                    \n                                \n                                \n                                    \n                                        selectedCardId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {EntityState} from '@ngrx/entity';\nimport {LightCard} from '@ofModel/light-card.model';\nimport {LightCardAdapter} from \"@ofStates/feed.state\";\n\n\n/**\n * The Timeline State consist of:\n *  * EntityState of LightCard\n *  * selectedCardId: the currently selected card id\n *  * lastCards the last cards added / updated to the feed\n *  * loading: weather there is an ongoing state modification\n *  * error: last message during state processing before error\n *  * data: an array of data Card (less information than lightCard)\n *   which are use for display on the chart the number of card on timescale\n */\nexport interface TimelineState extends EntityState {\n    selectedCardId: string;\n    lastCards: LightCard[];\n    loading: boolean;\n    error: string;\n    data: any[];\n}\n\nexport const timelineInitialState: TimelineState = LightCardAdapter.getInitialState(\n    {\n        selectedCardId: null,\n        lastCards: [],\n        loading: false,\n        error: '',\n        data: []\n    });\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interceptors/TokenInjector.html":{"url":"interceptors/TokenInjector.html","title":"interceptor - TokenInjector","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Interceptors\n  TokenInjector\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/interceptors.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addAuthHeadersIfNecessary\n                            \n                            \n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthenticationService)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/interceptors.service.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            addAuthHeadersIfNecessary\n                        \n                        \n                    \n                \n            \n            \n                \naddAuthHeadersIfNecessary(request: HttpRequest)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/interceptors.service.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    request\n                                    \n                                            HttpRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     HttpRequest\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            intercept\n                        \n                        \n                    \n                \n            \n            \n                \nintercept(request: HttpRequest, next: HttpHandler)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/interceptors.service.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    request\n                                    \n                                            HttpRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    next\n                                    \n                                                HttpHandler\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {Injectable} from '@angular/core';\nimport {HttpEvent, HttpHandler, HttpInterceptor, HttpRequest} from '@angular/common/http';\nimport {Observable} from 'rxjs';\nimport {AuthenticationService} from './authentication/authentication.service';\n\n@Injectable()\nexport class TokenInjector implements HttpInterceptor {\n    constructor(private authService: AuthenticationService) {\n    }\n\n    /* istanbul ignore next */\n    intercept(request: HttpRequest, next: HttpHandler): Observable> {\n        return next.handle(this.addAuthHeadersIfNecessary(request));\n    }\n\n\n    addAuthHeadersIfNecessary(request: HttpRequest): HttpRequest {\n        const url = request.url;\n\n        const notCheckTokenRequest = !(url.endsWith('/auth/check_token') || url.endsWith('/auth/token') || url.endsWith('/auth/code'));\n        if (notCheckTokenRequest) {\n            const securityHeader = this.authService.getSecurityHeader();\n            const update = {setHeaders: securityHeader};\n            request = request.clone(update);\n        }\n        return request;\n    }\n}\n\n    \n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TransitionalThirdWithItSVersion.html":{"url":"classes/TransitionalThirdWithItSVersion.html","title":"class - TransitionalThirdWithItSVersion","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TransitionalThirdWithItSVersion\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/effects/translate.effects.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                third\n                            \n                            \n                                    Public\n                                version\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(third: string, version: string)\n                    \n                \n                        \n                            \n                                Defined in src/app/store/effects/translate.effects.ts:211\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        third\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        version\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            third\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/effects/translate.effects.ts:212\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            version\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/effects/translate.effects.ts:212\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Injectable} from \"@angular/core\";\nimport {Store} from \"@ngrx/store\";\nimport {AppState} from \"@ofStore/index\";\nimport {Actions, Effect, ofType} from \"@ngrx/effects\";\nimport {TranslateService} from \"@ngx-translate/core\";\nimport {forkJoin, Observable, of} from \"rxjs\";\nimport {LightCardActionTypes, LoadLightCardsSuccess} from \"@ofActions/light-card.actions\";\nimport {catchError, concatAll, map, mergeMap, switchMap} from \"rxjs/operators\";\nimport {\n    RefreshTranslation,\n    TranslateActions,\n    TranslateActionsTypes,\n    TranslationUpToDate,\n    UpdateTranslation,\n    UpdateTranslationFailed,\n    UpdateTranslationSuccessful\n} from \"@ofActions/translate.actions\";\nimport {LightCard} from \"@ofModel/light-card.model\";\nimport {Map} from \"@ofModel/map\";\nimport * as _ from 'lodash';\nimport {selectI18nUpLoaded} from \"@ofSelectors/translation.selectors\";\nimport {ThirdsService} from \"@ofServices/thirds.service\";\nimport {ThirdMenu} from \"@ofModel/thirds.model\";\nimport {LoadMenuSuccess, MenuActionTypes} from \"@ofActions/menu.actions\";\n\n@Injectable()\nexport class TranslateEffects {\n\n    constructor(private store: Store\n        , private actions$: Actions\n        , private translate: TranslateService\n        , private thirdService: ThirdsService\n    ) {\n    }\n\n\n    @Effect()\n    updateTranslateService: Observable = this.actions$\n        .pipe(\n            ofType(TranslateActionsTypes.UpdateTranslation)\n            ,\n            mergeMap((action: UpdateTranslation) => {\n                const thirdsWithTheirVersions = action.payload.versions;\n                return forkJoin(this.mapLanguages(thirdsWithTheirVersions)).pipe(\n                    concatAll(),\n                    catchError((error, caught) => {\n                        console.error('error while trying to update translation', error);\n                        return caught;\n                    }));\n            })\n            ,\n            map(elem => new UpdateTranslationSuccessful({language: this.translate.currentLang}))\n            ,\n            catchError(error => {\n                return of(new UpdateTranslationFailed({error: error}))\n            })\n        );\n\n// iterate over configured languages\n    mapLanguages(thirdsAndVersions: Map>): Observable[] {\n        const locales = this.translate.getLangs();\n        return locales.map(locale => {\n            return forkJoin(this.mapThirds(locale, thirdsAndVersions))\n                .pipe(concatAll())\n        });\n    }\n\n    // iterate over thirds\n    mapThirds(locale: string, thirdsAndVersion: Map>): Observable[] {\n        const thirds = Object.keys(thirdsAndVersion);\n\n        return thirds.map(third => {\n            return forkJoin(this.mapVersions(locale, third, thirdsAndVersion[third]))\n                .pipe(concatAll());\n        })\n    }\n\n    // iterate over versions\n    mapVersions(locale: string, publisher: string, versions: Set): Observable[] {\n        return Array.from(versions.values()).map(version => {\n            return this.thirdService.askForI18nJson(publisher, locale, version)\n                .pipe(map(i18n => {\n                    this.translate.setTranslation(locale, i18n, true);\n                    return true;\n                }));\n        });\n    }\n\n\n    @Effect()\n    refreshLanguageUsedByTranslation: Observable = this.actions$\n        .pipe(\n            ofType(TranslateActionsTypes.UpdateTranslationSuccessful)\n            , map((action: UpdateTranslationSuccessful) => {\n                this.translate.use(action.payload.language);\n                return new RefreshTranslation();\n            })\n        );\n\n    @Effect()\n    verifyTranslationNeeded: Observable = this.actions$\n        .pipe(\n            ofType(LightCardActionTypes.LoadLightCardsSuccess)\n            // extract cards\n            , map((loadedCardAction: LoadLightCardsSuccess) => loadedCardAction.payload.lightCards)\n            // extract thirds+version\n            , map((cards: LightCard[]) => TranslateEffects.extractPublisherAssociatedWithDistinctVersionsFromCards(cards))\n            // extract version needing to be updated\n            , switchMap((versions: Map>) => {\n                return this.extractI18nToUpdate(versions);\n            })\n            // send action accordingly\n            , map((publisherAndVersion: Map>) => {\n                return TranslateEffects.sendTranslateAction(publisherAndVersion)\n            })\n        );\n\n    private extractI18nToUpdate(versions: Map>) {\n        return this.store.select(selectI18nUpLoaded).pipe(\n            map((referencedTranslation: Map>) => {\n                return TranslateEffects.extractThirdToUpdate(versions, referencedTranslation)\n            }));\n    }\n\n    static extractPublisherAssociatedWithDistinctVersionsFromCards(cards: LightCard[]): Map> {\n        let thirdsAndVersions: TransitionalThirdWithItSVersion[];\n        // See OC-555 to avoid the infinite loop\n        thirdsAndVersions = cards.map(card => {\n            return new TransitionalThirdWithItSVersion(card.publisher,card.publisherVersion);\n        });\n        \n        return this.consolidateThirdAndVersions(thirdsAndVersions);\n    };\n\n    @Effect()\n    verifyTranslationNeedForMenus:Observable = this.actions$\n        .pipe(\n            ofType(MenuActionTypes.LoadMenuSuccess)\n            , map((loadedMenusAction:LoadMenuSuccess)=>loadedMenusAction.payload.menu)\n            , map((menus:ThirdMenu[])=>TranslateEffects.extractPublisherAssociatedWithDistinctVersionsFrom(menus))\n            , switchMap((versions: Map>)=>this.extractI18nToUpdate(versions))\n            , map((publisherAndVersions:Map>)=>TranslateEffects.sendTranslateAction(publisherAndVersions))\n\n\n        );\n\n\n    static extractPublisherAssociatedWithDistinctVersionsFrom(menus: ThirdMenu[]):Map>{\n\n        const thirdsAndVersions = menus.map(menu=>{\n            return new TransitionalThirdWithItSVersion(menu.id,menu.version);\n        })\n        return this.consolidateThirdAndVersions(thirdsAndVersions);\n\n    }\n\n    private static consolidateThirdAndVersions(thirdsAndVersions:TransitionalThirdWithItSVersion[]) {\n        const result = new Map>();\n        thirdsAndVersions.forEach(u => {\n            const versions = result[u.third];\n            if (versions) {\n                versions.add(u.version)\n            } else {\n                result[u.third] = new Set([u.version]);\n            }\n        });\n        return result;\n    }\n\n    static extractThirdToUpdate(versionInput: Map>, cachedVersions: Map>): Map> {\n        const inputPublishers = Object.keys(versionInput);\n        const cachedPublishers = Object.keys(cachedVersions);\n        const unCachedPublishers = _.difference(inputPublishers, cachedPublishers);\n\n        const translationReferencesToUpdate = new Map>();\n        unCachedPublishers.forEach(publisher => {\n            const versions2Update = versionInput[publisher];\n            translationReferencesToUpdate[publisher] = versions2Update;\n        });\n\n        let cachedPublishersForVersionVerification = inputPublishers;\n        if (unCachedPublishers && (unCachedPublishers.length > 0)) {\n            cachedPublishersForVersionVerification = _.difference(unCachedPublishers, inputPublishers);\n        }\n\n        cachedPublishersForVersionVerification.forEach(third => {\n            const currentInputVersions = versionInput[third];\n            const currentCachedVersions = cachedVersions[third];\n            const untrackedVersions = _.difference(Array.from(currentInputVersions), Array.from(currentCachedVersions));\n            if (untrackedVersions && Object.keys(untrackedVersions).length > 0) {\n                translationReferencesToUpdate[third] = new Set(untrackedVersions);\n            }\n        });\n        const nbOfPublishers = Object.keys(translationReferencesToUpdate).length;\n        return (nbOfPublishers > 0) ? translationReferencesToUpdate : null;\n    }\n\n    static sendTranslateAction(versionToUpdate: Map>): TranslateActions {\n        if (versionToUpdate) return new UpdateTranslation({versions: versionToUpdate});\n        return new TranslationUpToDate();\n    }\n}\n\nclass TransitionalThirdWithItSVersion {\n    constructor(public third:string, public version:string){}\n};\n\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TranslateEffects.html":{"url":"injectables/TranslateEffects.html","title":"injectable - TranslateEffects","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  TranslateEffects\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/effects/translate.effects.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                refreshLanguageUsedByTranslation\n                            \n                            \n                                updateTranslateService\n                            \n                            \n                                verifyTranslationNeeded\n                            \n                            \n                                verifyTranslationNeedForMenus\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Static\n                                consolidateThirdAndVersions\n                            \n                            \n                                    Private\n                                extractI18nToUpdate\n                            \n                            \n                                    Static\n                                extractPublisherAssociatedWithDistinctVersionsFrom\n                            \n                            \n                                    Static\n                                extractPublisherAssociatedWithDistinctVersionsFromCards\n                            \n                            \n                                    Static\n                                extractThirdToUpdate\n                            \n                            \n                                mapLanguages\n                            \n                            \n                                mapThirds\n                            \n                            \n                                mapVersions\n                            \n                            \n                                    Static\n                                sendTranslateAction\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store, actions$: Actions, translate: TranslateService, thirdService: ThirdsService)\n                    \n                \n                        \n                            \n                                Defined in src/app/store/effects/translate.effects.ts:34\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                        Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        actions$\n                                                  \n                                                        \n                                                                        Actions\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        translate\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        thirdService\n                                                  \n                                                        \n                                                                        ThirdsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            Static\n                            consolidateThirdAndVersions\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    consolidateThirdAndVersions(thirdsAndVersions: TransitionalThirdWithItSVersion[])\n                \n            \n\n\n            \n                \n                    Defined in src/app/store/effects/translate.effects.ts:164\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    thirdsAndVersions\n                                    \n                                            TransitionalThirdWithItSVersion[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            extractI18nToUpdate\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    extractI18nToUpdate(versions: Map>)\n                \n            \n\n\n            \n                \n                    Defined in src/app/store/effects/translate.effects.ts:125\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    versions\n                                    \n                                                Map>\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            extractPublisherAssociatedWithDistinctVersionsFrom\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    extractPublisherAssociatedWithDistinctVersionsFrom(menus: ThirdMenu[])\n                \n            \n\n\n            \n                \n                    Defined in src/app/store/effects/translate.effects.ts:155\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    menus\n                                    \n                                            ThirdMenu[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Map>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            extractPublisherAssociatedWithDistinctVersionsFromCards\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    extractPublisherAssociatedWithDistinctVersionsFromCards(cards: LightCard[])\n                \n            \n\n\n            \n                \n                    Defined in src/app/store/effects/translate.effects.ts:132\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    cards\n                                    \n                                            LightCard[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Map>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            extractThirdToUpdate\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    extractThirdToUpdate(versionInput: Map>, cachedVersions: Map>)\n                \n            \n\n\n            \n                \n                    Defined in src/app/store/effects/translate.effects.ts:177\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    versionInput\n                                    \n                                                Map>\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    cachedVersions\n                                    \n                                                Map>\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Map>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            mapLanguages\n                        \n                        \n                    \n                \n            \n            \n                \nmapLanguages(thirdsAndVersions: Map>)\n                \n            \n\n\n            \n                \n                    Defined in src/app/store/effects/translate.effects.ts:67\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    thirdsAndVersions\n                                    \n                                                Map>\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable[]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            mapThirds\n                        \n                        \n                    \n                \n            \n            \n                \nmapThirds(locale: string, thirdsAndVersion: Map>)\n                \n            \n\n\n            \n                \n                    Defined in src/app/store/effects/translate.effects.ts:76\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    locale\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    thirdsAndVersion\n                                    \n                                                Map>\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable[]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            mapVersions\n                        \n                        \n                    \n                \n            \n            \n                \nmapVersions(locale: string, publisher: string, versions: Set)\n                \n            \n\n\n            \n                \n                    Defined in src/app/store/effects/translate.effects.ts:86\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    locale\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    publisher\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    versions\n                                    \n                                            Set\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable[]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            sendTranslateAction\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    sendTranslateAction(versionToUpdate: Map>)\n                \n            \n\n\n            \n                \n                    Defined in src/app/store/effects/translate.effects.ts:205\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    versionToUpdate\n                                    \n                                                Map>\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         TranslateActions\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            refreshLanguageUsedByTranslation\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Observable\n\n                        \n                    \n                    \n                        \n                            Default value : this.actions$\n        .pipe(\n            ofType(TranslateActionsTypes.UpdateTranslationSuccessful)\n            , map((action: UpdateTranslationSuccessful) => {\n                this.translate.use(action.payload.language);\n                return new RefreshTranslation();\n            })\n        )\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Effect()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/effects/translate.effects.ts:98\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updateTranslateService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Observable\n\n                        \n                    \n                    \n                        \n                            Default value : this.actions$\n        .pipe(\n            ofType(TranslateActionsTypes.UpdateTranslation)\n            ,\n            mergeMap((action: UpdateTranslation) => {\n                const thirdsWithTheirVersions = action.payload.versions;\n                return forkJoin(this.mapLanguages(thirdsWithTheirVersions)).pipe(\n                    concatAll(),\n                    catchError((error, caught) => {\n                        console.error('error while trying to update translation', error);\n                        return caught;\n                    }));\n            })\n            ,\n            map(elem => new UpdateTranslationSuccessful({language: this.translate.currentLang}))\n            ,\n            catchError(error => {\n                return of(new UpdateTranslationFailed({error: error}))\n            })\n        )\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Effect()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/effects/translate.effects.ts:45\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            verifyTranslationNeeded\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Observable\n\n                        \n                    \n                    \n                        \n                            Default value : this.actions$\n        .pipe(\n            ofType(LightCardActionTypes.LoadLightCardsSuccess)\n            // extract cards\n            , map((loadedCardAction: LoadLightCardsSuccess) => loadedCardAction.payload.lightCards)\n            // extract thirds+version\n            , map((cards: LightCard[]) => TranslateEffects.extractPublisherAssociatedWithDistinctVersionsFromCards(cards))\n            // extract version needing to be updated\n            , switchMap((versions: Map>) => {\n                return this.extractI18nToUpdate(versions);\n            })\n            // send action accordingly\n            , map((publisherAndVersion: Map>) => {\n                return TranslateEffects.sendTranslateAction(publisherAndVersion)\n            })\n        )\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Effect()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/effects/translate.effects.ts:108\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            verifyTranslationNeedForMenus\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Observable\n\n                        \n                    \n                    \n                        \n                            Default value : this.actions$\n        .pipe(\n            ofType(MenuActionTypes.LoadMenuSuccess)\n            , map((loadedMenusAction:LoadMenuSuccess)=>loadedMenusAction.payload.menu)\n            , map((menus:ThirdMenu[])=>TranslateEffects.extractPublisherAssociatedWithDistinctVersionsFrom(menus))\n            , switchMap((versions: Map>)=>this.extractI18nToUpdate(versions))\n            , map((publisherAndVersions:Map>)=>TranslateEffects.sendTranslateAction(publisherAndVersions))\n\n\n        )\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Effect()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/effects/translate.effects.ts:143\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import {Injectable} from \"@angular/core\";\nimport {Store} from \"@ngrx/store\";\nimport {AppState} from \"@ofStore/index\";\nimport {Actions, Effect, ofType} from \"@ngrx/effects\";\nimport {TranslateService} from \"@ngx-translate/core\";\nimport {forkJoin, Observable, of} from \"rxjs\";\nimport {LightCardActionTypes, LoadLightCardsSuccess} from \"@ofActions/light-card.actions\";\nimport {catchError, concatAll, map, mergeMap, switchMap} from \"rxjs/operators\";\nimport {\n    RefreshTranslation,\n    TranslateActions,\n    TranslateActionsTypes,\n    TranslationUpToDate,\n    UpdateTranslation,\n    UpdateTranslationFailed,\n    UpdateTranslationSuccessful\n} from \"@ofActions/translate.actions\";\nimport {LightCard} from \"@ofModel/light-card.model\";\nimport {Map} from \"@ofModel/map\";\nimport * as _ from 'lodash';\nimport {selectI18nUpLoaded} from \"@ofSelectors/translation.selectors\";\nimport {ThirdsService} from \"@ofServices/thirds.service\";\nimport {ThirdMenu} from \"@ofModel/thirds.model\";\nimport {LoadMenuSuccess, MenuActionTypes} from \"@ofActions/menu.actions\";\n\n@Injectable()\nexport class TranslateEffects {\n\n    constructor(private store: Store\n        , private actions$: Actions\n        , private translate: TranslateService\n        , private thirdService: ThirdsService\n    ) {\n    }\n\n\n    @Effect()\n    updateTranslateService: Observable = this.actions$\n        .pipe(\n            ofType(TranslateActionsTypes.UpdateTranslation)\n            ,\n            mergeMap((action: UpdateTranslation) => {\n                const thirdsWithTheirVersions = action.payload.versions;\n                return forkJoin(this.mapLanguages(thirdsWithTheirVersions)).pipe(\n                    concatAll(),\n                    catchError((error, caught) => {\n                        console.error('error while trying to update translation', error);\n                        return caught;\n                    }));\n            })\n            ,\n            map(elem => new UpdateTranslationSuccessful({language: this.translate.currentLang}))\n            ,\n            catchError(error => {\n                return of(new UpdateTranslationFailed({error: error}))\n            })\n        );\n\n// iterate over configured languages\n    mapLanguages(thirdsAndVersions: Map>): Observable[] {\n        const locales = this.translate.getLangs();\n        return locales.map(locale => {\n            return forkJoin(this.mapThirds(locale, thirdsAndVersions))\n                .pipe(concatAll())\n        });\n    }\n\n    // iterate over thirds\n    mapThirds(locale: string, thirdsAndVersion: Map>): Observable[] {\n        const thirds = Object.keys(thirdsAndVersion);\n\n        return thirds.map(third => {\n            return forkJoin(this.mapVersions(locale, third, thirdsAndVersion[third]))\n                .pipe(concatAll());\n        })\n    }\n\n    // iterate over versions\n    mapVersions(locale: string, publisher: string, versions: Set): Observable[] {\n        return Array.from(versions.values()).map(version => {\n            return this.thirdService.askForI18nJson(publisher, locale, version)\n                .pipe(map(i18n => {\n                    this.translate.setTranslation(locale, i18n, true);\n                    return true;\n                }));\n        });\n    }\n\n\n    @Effect()\n    refreshLanguageUsedByTranslation: Observable = this.actions$\n        .pipe(\n            ofType(TranslateActionsTypes.UpdateTranslationSuccessful)\n            , map((action: UpdateTranslationSuccessful) => {\n                this.translate.use(action.payload.language);\n                return new RefreshTranslation();\n            })\n        );\n\n    @Effect()\n    verifyTranslationNeeded: Observable = this.actions$\n        .pipe(\n            ofType(LightCardActionTypes.LoadLightCardsSuccess)\n            // extract cards\n            , map((loadedCardAction: LoadLightCardsSuccess) => loadedCardAction.payload.lightCards)\n            // extract thirds+version\n            , map((cards: LightCard[]) => TranslateEffects.extractPublisherAssociatedWithDistinctVersionsFromCards(cards))\n            // extract version needing to be updated\n            , switchMap((versions: Map>) => {\n                return this.extractI18nToUpdate(versions);\n            })\n            // send action accordingly\n            , map((publisherAndVersion: Map>) => {\n                return TranslateEffects.sendTranslateAction(publisherAndVersion)\n            })\n        );\n\n    private extractI18nToUpdate(versions: Map>) {\n        return this.store.select(selectI18nUpLoaded).pipe(\n            map((referencedTranslation: Map>) => {\n                return TranslateEffects.extractThirdToUpdate(versions, referencedTranslation)\n            }));\n    }\n\n    static extractPublisherAssociatedWithDistinctVersionsFromCards(cards: LightCard[]): Map> {\n        let thirdsAndVersions: TransitionalThirdWithItSVersion[];\n        // See OC-555 to avoid the infinite loop\n        thirdsAndVersions = cards.map(card => {\n            return new TransitionalThirdWithItSVersion(card.publisher,card.publisherVersion);\n        });\n        \n        return this.consolidateThirdAndVersions(thirdsAndVersions);\n    };\n\n    @Effect()\n    verifyTranslationNeedForMenus:Observable = this.actions$\n        .pipe(\n            ofType(MenuActionTypes.LoadMenuSuccess)\n            , map((loadedMenusAction:LoadMenuSuccess)=>loadedMenusAction.payload.menu)\n            , map((menus:ThirdMenu[])=>TranslateEffects.extractPublisherAssociatedWithDistinctVersionsFrom(menus))\n            , switchMap((versions: Map>)=>this.extractI18nToUpdate(versions))\n            , map((publisherAndVersions:Map>)=>TranslateEffects.sendTranslateAction(publisherAndVersions))\n\n\n        );\n\n\n    static extractPublisherAssociatedWithDistinctVersionsFrom(menus: ThirdMenu[]):Map>{\n\n        const thirdsAndVersions = menus.map(menu=>{\n            return new TransitionalThirdWithItSVersion(menu.id,menu.version);\n        })\n        return this.consolidateThirdAndVersions(thirdsAndVersions);\n\n    }\n\n    private static consolidateThirdAndVersions(thirdsAndVersions:TransitionalThirdWithItSVersion[]) {\n        const result = new Map>();\n        thirdsAndVersions.forEach(u => {\n            const versions = result[u.third];\n            if (versions) {\n                versions.add(u.version)\n            } else {\n                result[u.third] = new Set([u.version]);\n            }\n        });\n        return result;\n    }\n\n    static extractThirdToUpdate(versionInput: Map>, cachedVersions: Map>): Map> {\n        const inputPublishers = Object.keys(versionInput);\n        const cachedPublishers = Object.keys(cachedVersions);\n        const unCachedPublishers = _.difference(inputPublishers, cachedPublishers);\n\n        const translationReferencesToUpdate = new Map>();\n        unCachedPublishers.forEach(publisher => {\n            const versions2Update = versionInput[publisher];\n            translationReferencesToUpdate[publisher] = versions2Update;\n        });\n\n        let cachedPublishersForVersionVerification = inputPublishers;\n        if (unCachedPublishers && (unCachedPublishers.length > 0)) {\n            cachedPublishersForVersionVerification = _.difference(unCachedPublishers, inputPublishers);\n        }\n\n        cachedPublishersForVersionVerification.forEach(third => {\n            const currentInputVersions = versionInput[third];\n            const currentCachedVersions = cachedVersions[third];\n            const untrackedVersions = _.difference(Array.from(currentInputVersions), Array.from(currentCachedVersions));\n            if (untrackedVersions && Object.keys(untrackedVersions).length > 0) {\n                translationReferencesToUpdate[third] = new Set(untrackedVersions);\n            }\n        });\n        const nbOfPublishers = Object.keys(translationReferencesToUpdate).length;\n        return (nbOfPublishers > 0) ? translationReferencesToUpdate : null;\n    }\n\n    static sendTranslateAction(versionToUpdate: Map>): TranslateActions {\n        if (versionToUpdate) return new UpdateTranslation({versions: versionToUpdate});\n        return new TranslationUpToDate();\n    }\n}\n\nclass TransitionalThirdWithItSVersion {\n    constructor(public third:string, public version:string){}\n};\n\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TranslationState.html":{"url":"interfaces/TranslationState.html","title":"interface - TranslationState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  TranslationState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/states/translation.state.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        error\n                                \n                                \n                                        i18nBundleVersionLoaded\n                                \n                                \n                                        loading\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        error\n                                    \n                                \n                                \n                                    \n                                        error:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        i18nBundleVersionLoaded\n                                    \n                                \n                                \n                                    \n                                        i18nBundleVersionLoaded:         Map>\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Map>\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        loading\n                                    \n                                \n                                \n                                    \n                                        loading:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {Map} from \"@ofModel/map\";\n\nexport interface TranslationState {\n    i18nBundleVersionLoaded: Map>,\n    loading:boolean,\n    error:string\n}\n\nexport const translationInitialState: TranslationState = {\n    i18nBundleVersionLoaded:new Map>(),\n    loading:false,\n    error:null\n\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TranslationUpToDate.html":{"url":"classes/TranslationUpToDate.html","title":"class - TranslationUpToDate","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TranslationUpToDate\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/translate.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : TranslateActionsTypes.TranslationUpToDate\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/translate.actions.ts:27\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Action} from \"@ngrx/store\";\nimport {Map} from \"@ofModel/map\";\n\nexport enum TranslateActionsTypes {\n    UpdateTranslation = '[i18n] Translation need an update',\n    UpdateTranslationSuccessful = '[i18n] Translation successfully updated',\n    UpdateTranslationFailed = '[i18n] Translation update failed',\n    TranslationUpToDate = '[i18n] all Translation materials are already loaded',\n    RefreshTranslation ='[i18n] translate handler has been refreshed'\n}\n\nexport class UpdateTranslation implements Action {\n    readonly type = TranslateActionsTypes.UpdateTranslation;\n\n    constructor(public payload: { versions: Map> }) {\n    }\n}\n\nexport class TranslationUpToDate implements Action {\n    readonly type = TranslateActionsTypes.TranslationUpToDate;\n}\n\nexport class UpdateTranslationSuccessful implements Action {\n    readonly type = TranslateActionsTypes.UpdateTranslationSuccessful;\n\n    constructor(public payload: { language: string }) {\n    }\n}\n\nexport class UpdateTranslationFailed implements Action {\n    readonly type = TranslateActionsTypes.UpdateTranslationFailed;\n\n    constructor(public payload: { error: Error }) {\n    }\n}\n\n\nexport class RefreshTranslation implements Action {\n    readonly type = TranslateActionsTypes.RefreshTranslation;\n}\nexport type TranslateActions = UpdateTranslation |\n    UpdateTranslationSuccessful | UpdateTranslationFailed | TranslationUpToDate | RefreshTranslation;\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TryToLogIn.html":{"url":"classes/TryToLogIn.html","title":"class - TryToLogIn","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TryToLogIn\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/authentication.actions.ts\n        \n\n            \n                Description\n            \n            \n                Action used to push login/password pair to the authentication service\nEmitted by {LoginComponent} in the onSubmit @method which is called\nwhen the user click on the Login button of the login page form.\n\n            \n\n\n            \n                Implements\n            \n            \n                            Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/store/actions/authentication.actions.ts:87\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/authentication.actions.ts:90\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : AuthenticationActionTypes.TryToLogIn\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/authentication.actions.ts:87\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Action} from '@ngrx/store';\nimport {Guid} from 'guid-typescript';\nimport {Message} from \"@ofModel/message.model\";\nimport {ExtractI18nBuilderOptions} from \"@angular-devkit/build-angular\";\n\nexport enum AuthenticationActionTypes {\n    InitAuthStatus = '[Authentication] Init Authentication Status',\n    CheckAuthenticationStatus = '[Authentication] Check Authentication Status',\n    AcceptLogIn = '[Authentication] Accept the user log in attempt',\n    RejectLogIn = '[Authentication] Reject the user log in attempt',\n    TryToLogIn = '[Authentication] Try to log the user in',\n    TryToLogOut = '[Authentication] Try to log the user out',\n    AcceptLogOut = '[Authentication] Accept the user log out attempt',\n    AcceptLogOutSuccess = '[Authentication] Success Accept the user log out attempt',\n    CheckImplicitFlowAuthenticationStatus = '[Authentication] Check Authentication Status specifically for the Implicit Flow',\n    UselessAuthAction = '[Authentication] test purpose action'\n    // TODO the following actions should be merge with password and code flow management of authentication\n    , ImplicitallyAuthenticated = '[Authentication] user is authentication using Implicit Flow' //\n    , UnAuthenticationFromImplicitFlow = '[Authentication[ user is log out by implicit Flow internal managment'\n}\n\n/**\n * Authentication success payload\n */\nexport class PayloadForSuccessfulAuthentication {\n    constructor(public identifier: string,\n                public clientId: Guid,\n                public token: string,\n                public expirationDate: Date,\n                public firstName?:string,\n                public lastName?:string) {\n    }\n}\n\n/**\n * It aims to validate the current authentication if exists.\n *\n */\nexport class InitAuthStatus implements Action {\n    readonly type = AuthenticationActionTypes.InitAuthStatus;\n    /* istanbul ignore next */\n    constructor(public payload:{code: string}){}\n}\n\n/**\n * It aims to validate the current authentication if exists.\n *\n */\nexport class CheckAuthenticationStatus implements Action {\n    /* istanbul ignore next */\n    readonly type = AuthenticationActionTypes.CheckAuthenticationStatus;\n}\n\n/**\n * Action used to update the state with the authentication information\n *\n * Emitted by {AuthenticationEffects} in the following {Observable} @members:\n *  * TryToLogIn\n *  * CheckAuthentication via handleLogInAttempt @method\n *\n * Used in the {function} reducer of the {authentication.reducer.ts} file to create a new state\n * containing the authentication information by filtering on the {AuthenticationActionTypes.AcceptLogIn} type.\n *\n */\nexport class AcceptLogIn implements Action {\n    readonly type = AuthenticationActionTypes.AcceptLogIn;\n\n    /* istanbul ignore next */\n    constructor(public payload: PayloadForSuccessfulAuthentication) {}\n}\n\n/**\n * Action used to push login/password pair to the authentication service\n *\n * Emitted by {LoginComponent} in the onSubmit @method which is called\n * when the user click on the `Login` button of the login page form.\n */\nexport class TryToLogIn implements Action {\n    readonly type= AuthenticationActionTypes.TryToLogIn;\n\n    /* istanbul ignore next */\n    constructor(public payload: {username: string, password: string}){}\n}\n\n/**\n * Action used when the user logout\n *\n * Emitted by {NavbarComponent} win the logOut @method which is called\n * when the user click on the `logOut` button of the `navbar`\n */\nexport class TryToLogOut implements Action {\n    /* istanbul ignore next */\n    readonly type = AuthenticationActionTypes.TryToLogOut;\n}\n\n/**\n * Action used to notify the store that the authentication is not possible.\n *\n * Emmited by {AuthenticationEffect} in the following {Observable} @members:\n *  * `TryToLogin`;\n *  *  `CheckAuthentication`\n *  and in the `handleRejectedLogin` @method called by the `ChecAuthentication` {Observable}\n *\n * Used in the {function} reducer of the {authentication.reducer.ts} file to create a new state\n * without any authentication information and containing a message about login rejection\n * by filtering on the {AuthenticationActionTypes.RejectLogIn} type.\n *\n */\nexport class RejectLogIn implements Action {\n    readonly type = AuthenticationActionTypes.RejectLogIn;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Message }) {}\n}\n\n/**\n * Action used to removes authentication information of the system and thus logOut the user.\n *\n * Emitted by {AuthenticationEffect} in the following {Observable} @members:\n *  * `TryToLogOut`\n *  * `RejectLogInAttempt`\n *\n *  Consume by {AuthenticationEffect} in the `AcceptLogOut` {Observable} @member\n *\n */\nexport class AcceptLogOut implements Action {\n    readonly type = AuthenticationActionTypes.AcceptLogOut;\n\n    /* istanbul ignore next */\n    constructor(){}\n}\n\n/**\n * Action used to notify the store to remove authentication information\n *\n * Emitted by {AuthenticationEffect} in `AcceptLogOut` {Observable} @member.\n *\n * Used in the {function} reducer of the {authentication.reducer.ts} file to create a new state\n * without any authentication information by filtering on the {AuthenticationActionTypes.AcceptLogOut} type.\n */\nexport class AcceptLogOutSuccess implements Action {\n    /* istanbul ignore next */\n    readonly type = AuthenticationActionTypes.AcceptLogOutSuccess;\n}\n\nexport class CheckImplicitFlowAuthenticationStatus implements Action {\n    readonly type = AuthenticationActionTypes.CheckImplicitFlowAuthenticationStatus;\n}\n\nexport class UselessAuthAction implements  Action{\n    readonly type = AuthenticationActionTypes.UselessAuthAction;\n\n}\n\nexport class ImplicitlyAuthenticated implements Action {\n    readonly type = AuthenticationActionTypes.ImplicitallyAuthenticated;\n}\n\nexport class UnAuthenticationFromImplicitFlow implements Action {\n    readonly type = AuthenticationActionTypes.UnAuthenticationFromImplicitFlow;\n}\nexport type AuthenticationActions =\n    InitAuthStatus\n    | AcceptLogIn\n    | RejectLogIn\n    | TryToLogIn\n    | TryToLogOut\n    | CheckAuthenticationStatus\n    | AcceptLogOut\n    | AcceptLogOutSuccess\n    | CheckImplicitFlowAuthenticationStatus\n    | UselessAuthAction\n    | ImplicitlyAuthenticated\n    |UnAuthenticationFromImplicitFlow;\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TryToLogOut.html":{"url":"classes/TryToLogOut.html","title":"class - TryToLogOut","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TryToLogOut\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/authentication.actions.ts\n        \n\n            \n                Description\n            \n            \n                Action used when the user logout\nEmitted by {NavbarComponent} win the logOut @method which is called\nwhen the user click on the logOut button of the navbar\n\n            \n\n\n            \n                Implements\n            \n            \n                            Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : AuthenticationActionTypes.TryToLogOut\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/authentication.actions.ts:101\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Action} from '@ngrx/store';\nimport {Guid} from 'guid-typescript';\nimport {Message} from \"@ofModel/message.model\";\nimport {ExtractI18nBuilderOptions} from \"@angular-devkit/build-angular\";\n\nexport enum AuthenticationActionTypes {\n    InitAuthStatus = '[Authentication] Init Authentication Status',\n    CheckAuthenticationStatus = '[Authentication] Check Authentication Status',\n    AcceptLogIn = '[Authentication] Accept the user log in attempt',\n    RejectLogIn = '[Authentication] Reject the user log in attempt',\n    TryToLogIn = '[Authentication] Try to log the user in',\n    TryToLogOut = '[Authentication] Try to log the user out',\n    AcceptLogOut = '[Authentication] Accept the user log out attempt',\n    AcceptLogOutSuccess = '[Authentication] Success Accept the user log out attempt',\n    CheckImplicitFlowAuthenticationStatus = '[Authentication] Check Authentication Status specifically for the Implicit Flow',\n    UselessAuthAction = '[Authentication] test purpose action'\n    // TODO the following actions should be merge with password and code flow management of authentication\n    , ImplicitallyAuthenticated = '[Authentication] user is authentication using Implicit Flow' //\n    , UnAuthenticationFromImplicitFlow = '[Authentication[ user is log out by implicit Flow internal managment'\n}\n\n/**\n * Authentication success payload\n */\nexport class PayloadForSuccessfulAuthentication {\n    constructor(public identifier: string,\n                public clientId: Guid,\n                public token: string,\n                public expirationDate: Date,\n                public firstName?:string,\n                public lastName?:string) {\n    }\n}\n\n/**\n * It aims to validate the current authentication if exists.\n *\n */\nexport class InitAuthStatus implements Action {\n    readonly type = AuthenticationActionTypes.InitAuthStatus;\n    /* istanbul ignore next */\n    constructor(public payload:{code: string}){}\n}\n\n/**\n * It aims to validate the current authentication if exists.\n *\n */\nexport class CheckAuthenticationStatus implements Action {\n    /* istanbul ignore next */\n    readonly type = AuthenticationActionTypes.CheckAuthenticationStatus;\n}\n\n/**\n * Action used to update the state with the authentication information\n *\n * Emitted by {AuthenticationEffects} in the following {Observable} @members:\n *  * TryToLogIn\n *  * CheckAuthentication via handleLogInAttempt @method\n *\n * Used in the {function} reducer of the {authentication.reducer.ts} file to create a new state\n * containing the authentication information by filtering on the {AuthenticationActionTypes.AcceptLogIn} type.\n *\n */\nexport class AcceptLogIn implements Action {\n    readonly type = AuthenticationActionTypes.AcceptLogIn;\n\n    /* istanbul ignore next */\n    constructor(public payload: PayloadForSuccessfulAuthentication) {}\n}\n\n/**\n * Action used to push login/password pair to the authentication service\n *\n * Emitted by {LoginComponent} in the onSubmit @method which is called\n * when the user click on the `Login` button of the login page form.\n */\nexport class TryToLogIn implements Action {\n    readonly type= AuthenticationActionTypes.TryToLogIn;\n\n    /* istanbul ignore next */\n    constructor(public payload: {username: string, password: string}){}\n}\n\n/**\n * Action used when the user logout\n *\n * Emitted by {NavbarComponent} win the logOut @method which is called\n * when the user click on the `logOut` button of the `navbar`\n */\nexport class TryToLogOut implements Action {\n    /* istanbul ignore next */\n    readonly type = AuthenticationActionTypes.TryToLogOut;\n}\n\n/**\n * Action used to notify the store that the authentication is not possible.\n *\n * Emmited by {AuthenticationEffect} in the following {Observable} @members:\n *  * `TryToLogin`;\n *  *  `CheckAuthentication`\n *  and in the `handleRejectedLogin` @method called by the `ChecAuthentication` {Observable}\n *\n * Used in the {function} reducer of the {authentication.reducer.ts} file to create a new state\n * without any authentication information and containing a message about login rejection\n * by filtering on the {AuthenticationActionTypes.RejectLogIn} type.\n *\n */\nexport class RejectLogIn implements Action {\n    readonly type = AuthenticationActionTypes.RejectLogIn;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Message }) {}\n}\n\n/**\n * Action used to removes authentication information of the system and thus logOut the user.\n *\n * Emitted by {AuthenticationEffect} in the following {Observable} @members:\n *  * `TryToLogOut`\n *  * `RejectLogInAttempt`\n *\n *  Consume by {AuthenticationEffect} in the `AcceptLogOut` {Observable} @member\n *\n */\nexport class AcceptLogOut implements Action {\n    readonly type = AuthenticationActionTypes.AcceptLogOut;\n\n    /* istanbul ignore next */\n    constructor(){}\n}\n\n/**\n * Action used to notify the store to remove authentication information\n *\n * Emitted by {AuthenticationEffect} in `AcceptLogOut` {Observable} @member.\n *\n * Used in the {function} reducer of the {authentication.reducer.ts} file to create a new state\n * without any authentication information by filtering on the {AuthenticationActionTypes.AcceptLogOut} type.\n */\nexport class AcceptLogOutSuccess implements Action {\n    /* istanbul ignore next */\n    readonly type = AuthenticationActionTypes.AcceptLogOutSuccess;\n}\n\nexport class CheckImplicitFlowAuthenticationStatus implements Action {\n    readonly type = AuthenticationActionTypes.CheckImplicitFlowAuthenticationStatus;\n}\n\nexport class UselessAuthAction implements  Action{\n    readonly type = AuthenticationActionTypes.UselessAuthAction;\n\n}\n\nexport class ImplicitlyAuthenticated implements Action {\n    readonly type = AuthenticationActionTypes.ImplicitallyAuthenticated;\n}\n\nexport class UnAuthenticationFromImplicitFlow implements Action {\n    readonly type = AuthenticationActionTypes.UnAuthenticationFromImplicitFlow;\n}\nexport type AuthenticationActions =\n    InitAuthStatus\n    | AcceptLogIn\n    | RejectLogIn\n    | TryToLogIn\n    | TryToLogOut\n    | CheckAuthenticationStatus\n    | AcceptLogOut\n    | AcceptLogOutSuccess\n    | CheckImplicitFlowAuthenticationStatus\n    | UselessAuthAction\n    | ImplicitlyAuthenticated\n    |UnAuthenticationFromImplicitFlow;\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TypeAheadSettingsComponent.html":{"url":"components/TypeAheadSettingsComponent.html","title":"component - TypeAheadSettingsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  TypeAheadSettingsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/settings/components/settings/type-ahead-settings/type-ahead-settings.component.ts\n\n\n\n    \n        Extends\n    \n    \n                MultiSettingsComponent\n    \n\n    \n        Implements\n    \n    \n                    OnInit\n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                of-type-ahead-settings\n            \n\n            \n                styleUrls\n                ./type-ahead-settings.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./type-ahead-settings.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                baseSettings\n                            \n                            \n                                form\n                            \n                            \n                                    Private\n                                ngUnsubscribe$\n                            \n                            \n                                    Protected\n                                placeholder$\n                            \n                            \n                                    Protected\n                                setting$\n                            \n                            \n                                    Private\n                                baseSettings\n                            \n                            \n                                form\n                            \n                            \n                                    Private\n                                ngUnsubscribe$\n                            \n                            \n                                    Protected\n                                placeholder$\n                            \n                            \n                                    Protected\n                                setting$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                computeMultiValidators\n                            \n                            \n                                initFormGroup\n                            \n                            \n                                updateValue\n                            \n                            \n                                    Protected\n                                convert\n                            \n                            \n                                    Private\n                                dispatch\n                            \n                            \n                                    Protected\n                                initFormGroup\n                            \n                            \n                                    Protected\n                                isEqual\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                    Protected\n                                submitValue\n                            \n                            \n                                    Protected\n                                updateValue\n                            \n                            \n                                    Protected\n                                convert\n                            \n                            \n                                    Private\n                                dispatch\n                            \n                            \n                                    Protected\n                                initFormGroup\n                            \n                            \n                                    Protected\n                                isEqual\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                    Protected\n                                submitValue\n                            \n                            \n                                    Protected\n                                updateValue\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                messagePlaceholder\n                            \n                            \n                                requiredField\n                            \n                            \n                                settingPath\n                            \n                            \n                                messagePlaceholder\n                            \n                            \n                                requiredField\n                            \n                            \n                                settingPath\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/settings/components/settings/type-ahead-settings/type-ahead-settings.component.ts:19\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                        Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        messagePlaceholder\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                            \n                                \n                                    Inherited from         MultiSettingsComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         MultiSettingsComponent:28\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        requiredField\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                            \n                                \n                                    Inherited from         MultiSettingsComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         MultiSettingsComponent:29\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        settingPath\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                            \n                                \n                                    Inherited from         MultiSettingsComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         MultiSettingsComponent:27\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        messagePlaceholder\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                            \n                                \n                                    Inherited from         BaseSettingComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseSettingComponent:28\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        requiredField\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                            \n                                \n                                    Inherited from         BaseSettingComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseSettingComponent:29\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        settingPath\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                            \n                                \n                                    Inherited from         BaseSettingComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseSettingComponent:27\n\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            computeMultiValidators\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    computeMultiValidators()\n                \n            \n\n\n            \n                \n                    Inherited from         MultiSettingsComponent\n\n                \n            \n            \n                \n                        Defined in         MultiSettingsComponent:32\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     {}\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            initFormGroup\n                        \n                        \n                    \n                \n            \n            \n                \ninitFormGroup()\n                \n            \n\n\n            \n                \n                    Inherited from         MultiSettingsComponent\n\n                \n            \n            \n                \n                        Defined in         MultiSettingsComponent:25\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            updateValue\n                        \n                        \n                    \n                \n            \n            \n                \nupdateValue(value)\n                \n            \n\n\n            \n                \n                    Inherited from         MultiSettingsComponent\n\n                \n            \n            \n                \n                        Defined in         MultiSettingsComponent:39\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            convert\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    convert(value: any)\n                \n            \n\n\n            \n                \n                    Inherited from         MultiSettingsComponent\n\n                \n            \n            \n                \n                        Defined in         MultiSettingsComponent:83\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            dispatch\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    dispatch(value: any)\n                \n            \n\n\n            \n                \n                    Inherited from         MultiSettingsComponent\n\n                \n            \n            \n                \n                        Defined in         MultiSettingsComponent:88\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            initFormGroup\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    initFormGroup()\n                \n            \n\n\n            \n                \n                    Inherited from         MultiSettingsComponent\n\n                \n            \n            \n                \n                        Defined in         MultiSettingsComponent:79\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         FormGroup\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            isEqual\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    isEqual(formA, formB)\n                \n            \n\n\n            \n                \n                    Inherited from         MultiSettingsComponent\n\n                \n            \n            \n                \n                        Defined in         MultiSettingsComponent:94\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    formA\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    formB\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Inherited from         MultiSettingsComponent\n\n                \n            \n            \n                \n                        Defined in         MultiSettingsComponent:70\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Inherited from         MultiSettingsComponent\n\n                \n            \n            \n                \n                        Defined in         MultiSettingsComponent:40\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            submitValue\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    submitValue()\n                \n            \n\n\n            \n                \n                    Inherited from         MultiSettingsComponent\n\n                \n            \n            \n                \n                        Defined in         MultiSettingsComponent:98\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            updateValue\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updateValue(value: any)\n                \n            \n\n\n            \n                \n                    Inherited from         MultiSettingsComponent\n\n                \n            \n            \n                \n                        Defined in         MultiSettingsComponent:75\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            convert\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    convert(value: any)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseSettingComponent\n\n                \n            \n            \n                \n                        Defined in         BaseSettingComponent:83\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            dispatch\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    dispatch(value: any)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseSettingComponent\n\n                \n            \n            \n                \n                        Defined in         BaseSettingComponent:88\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            initFormGroup\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    initFormGroup()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseSettingComponent\n\n                \n            \n            \n                \n                        Defined in         BaseSettingComponent:79\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         FormGroup\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            isEqual\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    isEqual(formA, formB)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseSettingComponent\n\n                \n            \n            \n                \n                        Defined in         BaseSettingComponent:94\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    formA\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    formB\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseSettingComponent\n\n                \n            \n            \n                \n                        Defined in         BaseSettingComponent:70\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseSettingComponent\n\n                \n            \n            \n                \n                        Defined in         BaseSettingComponent:40\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            submitValue\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    submitValue()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseSettingComponent\n\n                \n            \n            \n                \n                        Defined in         BaseSettingComponent:98\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            updateValue\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updateValue(value: any)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseSettingComponent\n\n                \n            \n            \n                \n                        Defined in         BaseSettingComponent:75\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            baseSettings\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {}\n                        \n                    \n                            \n                                \n                                    Inherited from         MultiSettingsComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         MultiSettingsComponent:34\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            form\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormGroup\n\n                        \n                    \n                            \n                                \n                                    Inherited from         MultiSettingsComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         MultiSettingsComponent:33\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            ngUnsubscribe$\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Subject()\n                        \n                    \n                            \n                                \n                                    Inherited from         MultiSettingsComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         MultiSettingsComponent:30\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            placeholder$\n                            \n                        \n                    \n                \n                            \n                                \n                                    Inherited from         MultiSettingsComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         MultiSettingsComponent:32\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            setting$\n                            \n                        \n                    \n                \n                            \n                                \n                                    Inherited from         MultiSettingsComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         MultiSettingsComponent:31\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            baseSettings\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {}\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseSettingComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseSettingComponent:34\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            form\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormGroup\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseSettingComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseSettingComponent:33\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            ngUnsubscribe$\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Subject()\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseSettingComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseSettingComponent:30\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            placeholder$\n                            \n                        \n                    \n                \n                            \n                                \n                                    Inherited from         BaseSettingComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseSettingComponent:32\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            setting$\n                            \n                        \n                    \n                \n                            \n                                \n                                    Inherited from         BaseSettingComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseSettingComponent:31\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import {Component, OnDestroy, OnInit} from '@angular/core';\nimport {MultiSettingsComponent} from \"../multi-settings/multi-settings.component\";\nimport {Store} from \"@ngrx/store\";\nimport {AppState} from \"@ofStore/index\";\n\n@Component({\n  selector: 'of-type-ahead-settings',\n  templateUrl: './type-ahead-settings.component.html',\n  styleUrls: ['./type-ahead-settings.component.scss']\n})\nexport class TypeAheadSettingsComponent extends MultiSettingsComponent implements OnInit, OnDestroy {\n\n    constructor(protected store: Store) {\n        super(store)\n    }\n\n}\n\n    \n\n    \n        \n\n\n\n\n\n\n\n    \n        settings.{{settingPath}}\n        \n    \n\n\n    \n\n    \n                \n                    ./type-ahead-settings.component.scss\n                \n                /* Copyright (c) 2020, RTE (http://www.rte-france.com)\n *\n * This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n */\n\n.tags-field {\n    /deep/ .dropdown-toggle {\n        display: none;\n    }\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            settings.{{settingPath}}            '\n    var COMPONENTS = [{'name': 'ActionComponent', 'selector': 'of-action'},{'name': 'AppComponent', 'selector': 'of-root'},{'name': 'ArchiveFiltersComponent', 'selector': 'of-archive-filters'},{'name': 'ArchiveListComponent', 'selector': 'of-archive-list'},{'name': 'ArchiveListPageComponent', 'selector': 'of-archive-list-page'},{'name': 'ArchivesComponent', 'selector': 'of-archives'},{'name': 'BaseSettingComponent', 'selector': 'of-base-setting'},{'name': 'CardComponent', 'selector': 'of-card'},{'name': 'CardDetailsComponent', 'selector': 'of-card-details'},{'name': 'CardListComponent', 'selector': 'of-card-list'},{'name': 'ConfirmModalComponent', 'selector': 'confirm-modal-component'},{'name': 'CustomLogoComponent', 'selector': 'of-custom-logo'},{'name': 'CustomTimelineChartComponent', 'selector': 'of-custom-timeline-chart'},{'name': 'DatetimeFilterComponent', 'selector': 'of-datetime-filter'},{'name': 'DetailComponent', 'selector': 'of-detail'},{'name': 'DetailsComponent', 'selector': 'of-details'},{'name': 'EmailSettingComponent', 'selector': 'of-email-setting'},{'name': 'FeedComponent', 'selector': 'of-cards'},{'name': 'FiltersComponent', 'selector': 'of-filters'},{'name': 'IconComponent', 'selector': 'of-icon'},{'name': 'IframeDisplayComponent', 'selector': 'of-iframedisplay'},{'name': 'InfoComponent', 'selector': 'of-info'},{'name': 'InitChartComponent', 'selector': 'of-init-chart'},{'name': 'ListSettingComponent', 'selector': 'of-list-setting'},{'name': 'LoginComponent', 'selector': 'of-login'},{'name': 'MenuLinkComponent', 'selector': 'of-menu-link'},{'name': 'MultiFilterComponent', 'selector': 'of-multi-filter'},{'name': 'MultiSettingsComponent', 'selector': 'of-multi-settings'},{'name': 'NavbarComponent', 'selector': 'of-navbar'},{'name': 'NoSelectionComponent', 'selector': 'of-no-selection'},{'name': 'ResizableComponent', 'selector': 'of-resizable'},{'name': 'SettingsComponent', 'selector': 'of-settings'},{'name': 'TagsFilterComponent', 'selector': 'of-tags-filter'},{'name': 'TextSettingComponent', 'selector': 'of-text-setting'},{'name': 'TimeFilterComponent', 'selector': 'of-time-filter'},{'name': 'TimeLineComponent', 'selector': 'of-time-line'},{'name': 'TypeAheadSettingsComponent', 'selector': 'of-type-ahead-settings'},{'name': 'TypeFilterComponent', 'selector': 'of-type-filter'}];\n    var DIRECTIVES = [{'name': 'CalcHeightDirective', 'selector': '[calcHeightDirective]'},{'name': 'DraggableDirective', 'selector': '[appDraggable]'},{'name': 'MouseWheelDirective', 'selector': '[appMouseWheel]'}];\n    var ACTUAL_COMPONENT = {'name': 'TypeAheadSettingsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TypeFilterComponent.html":{"url":"components/TypeFilterComponent.html","title":"component - TypeFilterComponent","body":"\n                   \n\n\n\n\n\n  Components\n  TypeFilterComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/feed/components/card-list/filters/type-filter/type-filter.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                of-type-filter\n            \n\n            \n                styleUrls\n                ./type-filter.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./type-filter.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _filter$\n                            \n                            \n                                    Private\n                                ngUnsubscribe$\n                            \n                            \n                                typeFilterForm\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                createFormGroup\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    filter$\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/feed/components/card-list/filters/type-filter/type-filter.component.ts:35\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                        Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            createFormGroup\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createFormGroup()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/feed/components/card-list/filters/type-filter/type-filter.component.ts:45\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/feed/components/card-list/filters/type-filter/type-filter.component.ts:54\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/feed/components/card-list/filters/type-filter/type-filter.component.ts:60\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _filter$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/feed/components/card-list/filters/type-filter/type-filter.component.ts:31\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            ngUnsubscribe$\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Subject()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/feed/components/card-list/filters/type-filter/type-filter.component.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            typeFilterForm\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormGroup\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/feed/components/card-list/filters/type-filter/type-filter.component.ts:29\n                            \n                        \n\n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        filter$\n                    \n                \n\n                \n                    \n                        getfilter$()\n                    \n                \n                            \n                                \n                                    Defined in src/app/modules/feed/components/card-list/filters/type-filter/type-filter.component.ts:33\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import {Component, OnDestroy, OnInit} from '@angular/core';\nimport {Observable, Subject, timer} from \"rxjs\";\nimport {Filter} from \"@ofModel/feed-filter.model\";\nimport {Store} from \"@ngrx/store\";\nimport {AppState} from \"@ofStore/index\";\nimport {buildFilterSelector} from \"@ofSelectors/feed.selectors\";\nimport {FormControl, FormGroup} from \"@angular/forms\";\nimport {debounce, distinctUntilChanged, first, takeUntil} from \"rxjs/operators\";\nimport {ApplyFilter} from \"@ofActions/feed.actions\";\nimport * as _ from 'lodash';\nimport {FilterType} from \"@ofServices/filter.service\";\n\n\n@Component({\n    selector: 'of-type-filter',\n    templateUrl: './type-filter.component.html',\n    styleUrls: ['./type-filter.component.scss']\n})\nexport class TypeFilterComponent implements OnInit, OnDestroy {\n    private ngUnsubscribe$ = new Subject();\n    typeFilterForm: FormGroup;\n\n    private _filter$: Observable;\n\n    get filter$(): Observable{\n        return this._filter$;\n    }\n\n    // set filter$(filter: Observable) {\n    //     this._filter$ = filter;\n    // }\n\n    constructor(private store: Store) {\n        this.typeFilterForm = this.createFormGroup();\n    }\n\n    private createFormGroup() {\n        return new FormGroup({\n            alarm: new FormControl(),\n            action: new FormControl(),\n            compliant: new FormControl(),\n            information: new FormControl()\n        },{updateOn: 'change'});\n    }\n\n    ngOnDestroy() {\n        this.ngUnsubscribe$.next();\n        this.ngUnsubscribe$.complete();\n    }\n\n\n    ngOnInit() {\n        this._filter$ = this.store.select(buildFilterSelector(FilterType.TYPE_FILTER));\n        this._filter$.pipe(takeUntil(this.ngUnsubscribe$)).subscribe((next: Filter) => {\n            if (next) {\n                this.typeFilterForm.get('alarm').setValue(!next.active || next.status.alarm, {emitEvent: false});\n                this.typeFilterForm.get('action').setValue(!next.active || next.status.action, {emitEvent: false});\n                this.typeFilterForm.get('compliant').setValue(!next.active || next.status.compliant, {emitEvent: false});\n                this.typeFilterForm.get('information').setValue(!next.active || next.status.information, {emitEvent: false});\n            } else {\n                this.typeFilterForm.get('alarm').setValue(true,{emitEvent: false});\n                this.typeFilterForm.get('action').setValue(true,{emitEvent: false});\n                this.typeFilterForm.get('compliant').setValue(true,{emitEvent: false});\n                this.typeFilterForm.get('information').setValue(true,{emitEvent: false});\n            }\n        });\n        this._filter$.pipe(first(),takeUntil(this.ngUnsubscribe$)).subscribe(()=>{\n            this.typeFilterForm\n                .valueChanges\n                .pipe(\n                    takeUntil(this.ngUnsubscribe$),\n                    distinctUntilChanged((formA, formB)=>{\n                        return _.isEqual(formA,formB);\n                    }),\n                    debounce(() => timer(500)))\n                .subscribe(form => this.store.dispatch(\n                    new ApplyFilter({\n                        name: FilterType.TYPE_FILTER,\n                        active: !(form.alarm && form.action && form.compliant && form.information),\n                        status: form\n                    }))\n                );\n        });\n    }\n\n\n}\n\n    \n\n    \n        \n\n\n\n\n\n\n    \n        \n            \n                \n                \n                feed.filters.type.alarm.label\n            \n            \n                \n                \n                feed.filters.type.action.label\n            \n            \n                \n                \n                feed.filters.type.compliant.label\n            \n            \n                \n                \n                feed.filters.type.information.label\n            \n        \n    \n    feed.filters.type.title\n    \n        \n            \n                \n                \n            \n            \n                \n                \n            \n        \n    \n\n\n    \n\n    \n                \n                    ./type-filter.component.scss\n                \n                /* Copyright (c) 2020, RTE (http://www.rte-france.com)\n *\n * This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n */\n\n@import \"~assets/styles/_variables.scss\";\n\n$cell-width: 10;\n\n.type-selections {\n  display: table;\n  width: $cell-width * 2px;\n  height: $cell-width * 2px;\n}\n\n.fa-circle {\n  margin-right: 0.3rem;\n}  \n\n.type-row {\n  display: table-row;\n}\n\n.type-cell {\n  display: table-cell;\n}\n\n/deep/ .popover {\n  background-color: $dark;\n  .popover-header {\n    color: $light;\n    background-color: $dark;\n  }\n  .popover-body {\n    color: $light;\n  }\n  .arrow::after{\n    border-right-color: $dark;\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                        feed.filters.type.alarm.label                                                                        feed.filters.type.action.label                                                                        feed.filters.type.compliant.label                                                                        feed.filters.type.information.label                            feed.filters.type.title                                                                                                                                        '\n    var COMPONENTS = [{'name': 'ActionComponent', 'selector': 'of-action'},{'name': 'AppComponent', 'selector': 'of-root'},{'name': 'ArchiveFiltersComponent', 'selector': 'of-archive-filters'},{'name': 'ArchiveListComponent', 'selector': 'of-archive-list'},{'name': 'ArchiveListPageComponent', 'selector': 'of-archive-list-page'},{'name': 'ArchivesComponent', 'selector': 'of-archives'},{'name': 'BaseSettingComponent', 'selector': 'of-base-setting'},{'name': 'CardComponent', 'selector': 'of-card'},{'name': 'CardDetailsComponent', 'selector': 'of-card-details'},{'name': 'CardListComponent', 'selector': 'of-card-list'},{'name': 'ConfirmModalComponent', 'selector': 'confirm-modal-component'},{'name': 'CustomLogoComponent', 'selector': 'of-custom-logo'},{'name': 'CustomTimelineChartComponent', 'selector': 'of-custom-timeline-chart'},{'name': 'DatetimeFilterComponent', 'selector': 'of-datetime-filter'},{'name': 'DetailComponent', 'selector': 'of-detail'},{'name': 'DetailsComponent', 'selector': 'of-details'},{'name': 'EmailSettingComponent', 'selector': 'of-email-setting'},{'name': 'FeedComponent', 'selector': 'of-cards'},{'name': 'FiltersComponent', 'selector': 'of-filters'},{'name': 'IconComponent', 'selector': 'of-icon'},{'name': 'IframeDisplayComponent', 'selector': 'of-iframedisplay'},{'name': 'InfoComponent', 'selector': 'of-info'},{'name': 'InitChartComponent', 'selector': 'of-init-chart'},{'name': 'ListSettingComponent', 'selector': 'of-list-setting'},{'name': 'LoginComponent', 'selector': 'of-login'},{'name': 'MenuLinkComponent', 'selector': 'of-menu-link'},{'name': 'MultiFilterComponent', 'selector': 'of-multi-filter'},{'name': 'MultiSettingsComponent', 'selector': 'of-multi-settings'},{'name': 'NavbarComponent', 'selector': 'of-navbar'},{'name': 'NoSelectionComponent', 'selector': 'of-no-selection'},{'name': 'ResizableComponent', 'selector': 'of-resizable'},{'name': 'SettingsComponent', 'selector': 'of-settings'},{'name': 'TagsFilterComponent', 'selector': 'of-tags-filter'},{'name': 'TextSettingComponent', 'selector': 'of-text-setting'},{'name': 'TimeFilterComponent', 'selector': 'of-time-filter'},{'name': 'TimeLineComponent', 'selector': 'of-time-line'},{'name': 'TypeAheadSettingsComponent', 'selector': 'of-type-ahead-settings'},{'name': 'TypeFilterComponent', 'selector': 'of-type-filter'}];\n    var DIRECTIVES = [{'name': 'CalcHeightDirective', 'selector': '[calcHeightDirective]'},{'name': 'DraggableDirective', 'selector': '[appDraggable]'},{'name': 'MouseWheelDirective', 'selector': '[appMouseWheel]'}];\n    var ACTUAL_COMPONENT = {'name': 'TypeFilterComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UnAuthenticationFromImplicitFlow.html":{"url":"classes/UnAuthenticationFromImplicitFlow.html","title":"class - UnAuthenticationFromImplicitFlow","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UnAuthenticationFromImplicitFlow\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/authentication.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : AuthenticationActionTypes.UnAuthenticationFromImplicitFlow\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/authentication.actions.ts:168\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Action} from '@ngrx/store';\nimport {Guid} from 'guid-typescript';\nimport {Message} from \"@ofModel/message.model\";\nimport {ExtractI18nBuilderOptions} from \"@angular-devkit/build-angular\";\n\nexport enum AuthenticationActionTypes {\n    InitAuthStatus = '[Authentication] Init Authentication Status',\n    CheckAuthenticationStatus = '[Authentication] Check Authentication Status',\n    AcceptLogIn = '[Authentication] Accept the user log in attempt',\n    RejectLogIn = '[Authentication] Reject the user log in attempt',\n    TryToLogIn = '[Authentication] Try to log the user in',\n    TryToLogOut = '[Authentication] Try to log the user out',\n    AcceptLogOut = '[Authentication] Accept the user log out attempt',\n    AcceptLogOutSuccess = '[Authentication] Success Accept the user log out attempt',\n    CheckImplicitFlowAuthenticationStatus = '[Authentication] Check Authentication Status specifically for the Implicit Flow',\n    UselessAuthAction = '[Authentication] test purpose action'\n    // TODO the following actions should be merge with password and code flow management of authentication\n    , ImplicitallyAuthenticated = '[Authentication] user is authentication using Implicit Flow' //\n    , UnAuthenticationFromImplicitFlow = '[Authentication[ user is log out by implicit Flow internal managment'\n}\n\n/**\n * Authentication success payload\n */\nexport class PayloadForSuccessfulAuthentication {\n    constructor(public identifier: string,\n                public clientId: Guid,\n                public token: string,\n                public expirationDate: Date,\n                public firstName?:string,\n                public lastName?:string) {\n    }\n}\n\n/**\n * It aims to validate the current authentication if exists.\n *\n */\nexport class InitAuthStatus implements Action {\n    readonly type = AuthenticationActionTypes.InitAuthStatus;\n    /* istanbul ignore next */\n    constructor(public payload:{code: string}){}\n}\n\n/**\n * It aims to validate the current authentication if exists.\n *\n */\nexport class CheckAuthenticationStatus implements Action {\n    /* istanbul ignore next */\n    readonly type = AuthenticationActionTypes.CheckAuthenticationStatus;\n}\n\n/**\n * Action used to update the state with the authentication information\n *\n * Emitted by {AuthenticationEffects} in the following {Observable} @members:\n *  * TryToLogIn\n *  * CheckAuthentication via handleLogInAttempt @method\n *\n * Used in the {function} reducer of the {authentication.reducer.ts} file to create a new state\n * containing the authentication information by filtering on the {AuthenticationActionTypes.AcceptLogIn} type.\n *\n */\nexport class AcceptLogIn implements Action {\n    readonly type = AuthenticationActionTypes.AcceptLogIn;\n\n    /* istanbul ignore next */\n    constructor(public payload: PayloadForSuccessfulAuthentication) {}\n}\n\n/**\n * Action used to push login/password pair to the authentication service\n *\n * Emitted by {LoginComponent} in the onSubmit @method which is called\n * when the user click on the `Login` button of the login page form.\n */\nexport class TryToLogIn implements Action {\n    readonly type= AuthenticationActionTypes.TryToLogIn;\n\n    /* istanbul ignore next */\n    constructor(public payload: {username: string, password: string}){}\n}\n\n/**\n * Action used when the user logout\n *\n * Emitted by {NavbarComponent} win the logOut @method which is called\n * when the user click on the `logOut` button of the `navbar`\n */\nexport class TryToLogOut implements Action {\n    /* istanbul ignore next */\n    readonly type = AuthenticationActionTypes.TryToLogOut;\n}\n\n/**\n * Action used to notify the store that the authentication is not possible.\n *\n * Emmited by {AuthenticationEffect} in the following {Observable} @members:\n *  * `TryToLogin`;\n *  *  `CheckAuthentication`\n *  and in the `handleRejectedLogin` @method called by the `ChecAuthentication` {Observable}\n *\n * Used in the {function} reducer of the {authentication.reducer.ts} file to create a new state\n * without any authentication information and containing a message about login rejection\n * by filtering on the {AuthenticationActionTypes.RejectLogIn} type.\n *\n */\nexport class RejectLogIn implements Action {\n    readonly type = AuthenticationActionTypes.RejectLogIn;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Message }) {}\n}\n\n/**\n * Action used to removes authentication information of the system and thus logOut the user.\n *\n * Emitted by {AuthenticationEffect} in the following {Observable} @members:\n *  * `TryToLogOut`\n *  * `RejectLogInAttempt`\n *\n *  Consume by {AuthenticationEffect} in the `AcceptLogOut` {Observable} @member\n *\n */\nexport class AcceptLogOut implements Action {\n    readonly type = AuthenticationActionTypes.AcceptLogOut;\n\n    /* istanbul ignore next */\n    constructor(){}\n}\n\n/**\n * Action used to notify the store to remove authentication information\n *\n * Emitted by {AuthenticationEffect} in `AcceptLogOut` {Observable} @member.\n *\n * Used in the {function} reducer of the {authentication.reducer.ts} file to create a new state\n * without any authentication information by filtering on the {AuthenticationActionTypes.AcceptLogOut} type.\n */\nexport class AcceptLogOutSuccess implements Action {\n    /* istanbul ignore next */\n    readonly type = AuthenticationActionTypes.AcceptLogOutSuccess;\n}\n\nexport class CheckImplicitFlowAuthenticationStatus implements Action {\n    readonly type = AuthenticationActionTypes.CheckImplicitFlowAuthenticationStatus;\n}\n\nexport class UselessAuthAction implements  Action{\n    readonly type = AuthenticationActionTypes.UselessAuthAction;\n\n}\n\nexport class ImplicitlyAuthenticated implements Action {\n    readonly type = AuthenticationActionTypes.ImplicitallyAuthenticated;\n}\n\nexport class UnAuthenticationFromImplicitFlow implements Action {\n    readonly type = AuthenticationActionTypes.UnAuthenticationFromImplicitFlow;\n}\nexport type AuthenticationActions =\n    InitAuthStatus\n    | AcceptLogIn\n    | RejectLogIn\n    | TryToLogIn\n    | TryToLogOut\n    | CheckAuthenticationStatus\n    | AcceptLogOut\n    | AcceptLogOutSuccess\n    | CheckImplicitFlowAuthenticationStatus\n    | UselessAuthAction\n    | ImplicitlyAuthenticated\n    |UnAuthenticationFromImplicitFlow;\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateALightCard.html":{"url":"classes/UpdateALightCard.html","title":"class - UpdateALightCard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateALightCard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/light-card.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/store/actions/light-card.actions.ts:129\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/light-card.actions.ts:131\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : LightCardActionTypes.UpdateALightCard\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/light-card.actions.ts:129\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Action} from '@ngrx/store';\nimport {LightCard} from '@ofModel/light-card.model';\nimport {Action as ThirdAction, ActionStatus} from '@ofModel/thirds.model';\nimport {Update} from \"@ngrx/entity\";\n\nexport enum LightCardActionTypes {\n    LoadLightCards = '[LCard] Load',\n    EmptyLightCards = '[LCard] Empty',\n    LoadLightCardsSuccess = '[LCard] Load Success',\n    LoadLightCardsExtendedData = '[LCard] Load Extended Data',\n    LoadLightCardsFailure = '[LCard] Load Fail',\n    SelectLightCard = '[LCard] Select One',\n    ClearLightCardSelection = '[LCard] Clear Light Card Selection',\n    AddLightCardFailure = '[LCard] Add Light Card Fail',\n    UpdatedSubscription = '[LCard] UpdateSubscription',\n    HandleUnexpectedError = '[LCard] Handle unexpected error related to authentication issue',\n    RemoveLightCard = '[LCard] Remove a card',\n    AddThirdActions = '[LCard] Adds some Third Actions to existing card',\n    UpdateALightCard = '[LCard] Update a Light Card',\n    UpdateAnAction = '[LCard] Update one Action of a LightCard',\n    UpdateAnActionFailure = '[LCard] No actions where available to update for the current selected card in the state',\n    ThirdActionAlreadyLoaded = '[LCard] Light Card contains actions',\n    ThirdActionAlreadyUpdated = '[LCard] Third Action unchanged',\n    DelayedLightCardUpdate = '[LCard] update Light Card actions later',\n    LightCardAlreadyUpdated = '[LCard] Light Card already Updated'\n}\n\n// needed by NGRX entities\nexport class LoadLightCards implements Action {\n    /* istanbul ignore next */\n    readonly type = LightCardActionTypes.LoadLightCards;\n}\n\nexport class EmptyLightCards implements Action {\n    /* istanbul ignore next */\n    readonly type = LightCardActionTypes.EmptyLightCards;\n}\n\nexport class LoadLightCardsSuccess implements Action {\n    readonly type = LightCardActionTypes.LoadLightCardsSuccess;\n\n    /* istanbul ignore next */\n    constructor(public payload: { lightCards: LightCard[] }) {\n    }\n}\n\nexport class LoadLightCardsExtendedData implements Action {\n    readonly type = LightCardActionTypes.LoadLightCardsExtendedData;\n\n    /* istanbul ignore next */\n    constructor() {\n    }\n}\n\nexport class LoadLightCardsFailure implements Action {\n    readonly type = LightCardActionTypes.LoadLightCardsFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport class SelectLightCard implements Action {\n    /* istanbul ignore next */\n    readonly type = LightCardActionTypes.SelectLightCard;\n\n    /* istanbul ignore next */\n    constructor(public payload: { selectedCardId: string }) {\n    }\n\n}\n\nexport class ClearLightCardSelection implements Action {\n\n    readonly type = LightCardActionTypes.ClearLightCardSelection;\n\n    constructor() {\n    }\n}\n\nexport class AddLightCardFailure implements Action {\n    readonly type = LightCardActionTypes.AddLightCardFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport class UpdatedSubscription implements Action {\n    readonly type = LightCardActionTypes.UpdatedSubscription;\n\n    /* istanbul ignore next */\n    constructor() {\n    }\n}\n\nexport class HandleUnexpectedError implements Action {\n    /* istanbul ignore next */\n    readonly type = LightCardActionTypes.HandleUnexpectedError;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport class RemoveLightCard implements Action {\n    readonly type = LightCardActionTypes.RemoveLightCard;\n\n    constructor(public  payload: { cards: string[] }) {\n    }\n}\n\nexport class AddThirdActions implements Action {\n    readonly type = LightCardActionTypes.AddThirdActions;\n\n    constructor(public payload: { card: LightCard, actions: Map }) {\n    }\n}\n\nexport class UpdateALightCard implements Action {\n    readonly type = LightCardActionTypes.UpdateALightCard;\n\n    constructor(public payload: { card: LightCard }) {\n    }\n}\n\nexport class UpdateAnAction implements Action {\n    readonly type = LightCardActionTypes.UpdateAnAction;\n\n    constructor(public payload: { cardId: string, actionKey: string, status: ActionStatus }) {\n    }\n}\n\nexport class UpdateAnActionFailure implements Action {\n    readonly type = LightCardActionTypes.UpdateAnActionFailure;\n\n    constructor() {\n    }\n}\n\nexport class ThirdActionAlreadyLoaded implements Action {\n    readonly type = LightCardActionTypes.ThirdActionAlreadyLoaded;\n\n    constructor() {\n    }\n}\n\nexport class ThirdActionAlreadyUpdated implements Action {\n    readonly type = LightCardActionTypes.ThirdActionAlreadyUpdated;\n\n    constructor() {\n    }\n}\n\nexport class DelayedLightCardUpdate implements Action {\n    readonly type = LightCardActionTypes.DelayedLightCardUpdate;\n\n    constructor(public payload: { card: LightCard }) {\n    }\n}\n\nexport class LightCardAlreadyUpdated implements Action {\n    readonly type = LightCardActionTypes.LightCardAlreadyUpdated;\n\n    constructor() {\n    }\n}\n\nexport type LightCardActions =\n    LoadLightCards\n    | LoadLightCardsSuccess\n    | LoadLightCardsFailure\n    | SelectLightCard\n    | ClearLightCardSelection\n    | AddLightCardFailure\n    | UpdatedSubscription\n    | HandleUnexpectedError\n    | EmptyLightCards\n    | AddThirdActions\n    | UpdateALightCard\n    | UpdateAnAction\n    | UpdateAnActionFailure\n    | ThirdActionAlreadyLoaded\n    | ThirdActionAlreadyUpdated\n    | DelayedLightCardUpdate\n    | LightCardAlreadyUpdated\n    | RemoveLightCard;\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateAnAction.html":{"url":"classes/UpdateAnAction.html","title":"class - UpdateAnAction","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateAnAction\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/light-card.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/store/actions/light-card.actions.ts:136\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/light-card.actions.ts:138\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : LightCardActionTypes.UpdateAnAction\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/light-card.actions.ts:136\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Action} from '@ngrx/store';\nimport {LightCard} from '@ofModel/light-card.model';\nimport {Action as ThirdAction, ActionStatus} from '@ofModel/thirds.model';\nimport {Update} from \"@ngrx/entity\";\n\nexport enum LightCardActionTypes {\n    LoadLightCards = '[LCard] Load',\n    EmptyLightCards = '[LCard] Empty',\n    LoadLightCardsSuccess = '[LCard] Load Success',\n    LoadLightCardsExtendedData = '[LCard] Load Extended Data',\n    LoadLightCardsFailure = '[LCard] Load Fail',\n    SelectLightCard = '[LCard] Select One',\n    ClearLightCardSelection = '[LCard] Clear Light Card Selection',\n    AddLightCardFailure = '[LCard] Add Light Card Fail',\n    UpdatedSubscription = '[LCard] UpdateSubscription',\n    HandleUnexpectedError = '[LCard] Handle unexpected error related to authentication issue',\n    RemoveLightCard = '[LCard] Remove a card',\n    AddThirdActions = '[LCard] Adds some Third Actions to existing card',\n    UpdateALightCard = '[LCard] Update a Light Card',\n    UpdateAnAction = '[LCard] Update one Action of a LightCard',\n    UpdateAnActionFailure = '[LCard] No actions where available to update for the current selected card in the state',\n    ThirdActionAlreadyLoaded = '[LCard] Light Card contains actions',\n    ThirdActionAlreadyUpdated = '[LCard] Third Action unchanged',\n    DelayedLightCardUpdate = '[LCard] update Light Card actions later',\n    LightCardAlreadyUpdated = '[LCard] Light Card already Updated'\n}\n\n// needed by NGRX entities\nexport class LoadLightCards implements Action {\n    /* istanbul ignore next */\n    readonly type = LightCardActionTypes.LoadLightCards;\n}\n\nexport class EmptyLightCards implements Action {\n    /* istanbul ignore next */\n    readonly type = LightCardActionTypes.EmptyLightCards;\n}\n\nexport class LoadLightCardsSuccess implements Action {\n    readonly type = LightCardActionTypes.LoadLightCardsSuccess;\n\n    /* istanbul ignore next */\n    constructor(public payload: { lightCards: LightCard[] }) {\n    }\n}\n\nexport class LoadLightCardsExtendedData implements Action {\n    readonly type = LightCardActionTypes.LoadLightCardsExtendedData;\n\n    /* istanbul ignore next */\n    constructor() {\n    }\n}\n\nexport class LoadLightCardsFailure implements Action {\n    readonly type = LightCardActionTypes.LoadLightCardsFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport class SelectLightCard implements Action {\n    /* istanbul ignore next */\n    readonly type = LightCardActionTypes.SelectLightCard;\n\n    /* istanbul ignore next */\n    constructor(public payload: { selectedCardId: string }) {\n    }\n\n}\n\nexport class ClearLightCardSelection implements Action {\n\n    readonly type = LightCardActionTypes.ClearLightCardSelection;\n\n    constructor() {\n    }\n}\n\nexport class AddLightCardFailure implements Action {\n    readonly type = LightCardActionTypes.AddLightCardFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport class UpdatedSubscription implements Action {\n    readonly type = LightCardActionTypes.UpdatedSubscription;\n\n    /* istanbul ignore next */\n    constructor() {\n    }\n}\n\nexport class HandleUnexpectedError implements Action {\n    /* istanbul ignore next */\n    readonly type = LightCardActionTypes.HandleUnexpectedError;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport class RemoveLightCard implements Action {\n    readonly type = LightCardActionTypes.RemoveLightCard;\n\n    constructor(public  payload: { cards: string[] }) {\n    }\n}\n\nexport class AddThirdActions implements Action {\n    readonly type = LightCardActionTypes.AddThirdActions;\n\n    constructor(public payload: { card: LightCard, actions: Map }) {\n    }\n}\n\nexport class UpdateALightCard implements Action {\n    readonly type = LightCardActionTypes.UpdateALightCard;\n\n    constructor(public payload: { card: LightCard }) {\n    }\n}\n\nexport class UpdateAnAction implements Action {\n    readonly type = LightCardActionTypes.UpdateAnAction;\n\n    constructor(public payload: { cardId: string, actionKey: string, status: ActionStatus }) {\n    }\n}\n\nexport class UpdateAnActionFailure implements Action {\n    readonly type = LightCardActionTypes.UpdateAnActionFailure;\n\n    constructor() {\n    }\n}\n\nexport class ThirdActionAlreadyLoaded implements Action {\n    readonly type = LightCardActionTypes.ThirdActionAlreadyLoaded;\n\n    constructor() {\n    }\n}\n\nexport class ThirdActionAlreadyUpdated implements Action {\n    readonly type = LightCardActionTypes.ThirdActionAlreadyUpdated;\n\n    constructor() {\n    }\n}\n\nexport class DelayedLightCardUpdate implements Action {\n    readonly type = LightCardActionTypes.DelayedLightCardUpdate;\n\n    constructor(public payload: { card: LightCard }) {\n    }\n}\n\nexport class LightCardAlreadyUpdated implements Action {\n    readonly type = LightCardActionTypes.LightCardAlreadyUpdated;\n\n    constructor() {\n    }\n}\n\nexport type LightCardActions =\n    LoadLightCards\n    | LoadLightCardsSuccess\n    | LoadLightCardsFailure\n    | SelectLightCard\n    | ClearLightCardSelection\n    | AddLightCardFailure\n    | UpdatedSubscription\n    | HandleUnexpectedError\n    | EmptyLightCards\n    | AddThirdActions\n    | UpdateALightCard\n    | UpdateAnAction\n    | UpdateAnActionFailure\n    | ThirdActionAlreadyLoaded\n    | ThirdActionAlreadyUpdated\n    | DelayedLightCardUpdate\n    | LightCardAlreadyUpdated\n    | RemoveLightCard;\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateAnActionFailure.html":{"url":"classes/UpdateAnActionFailure.html","title":"class - UpdateAnActionFailure","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateAnActionFailure\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/light-card.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/store/actions/light-card.actions.ts:143\n                            \n                        \n\n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : LightCardActionTypes.UpdateAnActionFailure\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/light-card.actions.ts:143\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Action} from '@ngrx/store';\nimport {LightCard} from '@ofModel/light-card.model';\nimport {Action as ThirdAction, ActionStatus} from '@ofModel/thirds.model';\nimport {Update} from \"@ngrx/entity\";\n\nexport enum LightCardActionTypes {\n    LoadLightCards = '[LCard] Load',\n    EmptyLightCards = '[LCard] Empty',\n    LoadLightCardsSuccess = '[LCard] Load Success',\n    LoadLightCardsExtendedData = '[LCard] Load Extended Data',\n    LoadLightCardsFailure = '[LCard] Load Fail',\n    SelectLightCard = '[LCard] Select One',\n    ClearLightCardSelection = '[LCard] Clear Light Card Selection',\n    AddLightCardFailure = '[LCard] Add Light Card Fail',\n    UpdatedSubscription = '[LCard] UpdateSubscription',\n    HandleUnexpectedError = '[LCard] Handle unexpected error related to authentication issue',\n    RemoveLightCard = '[LCard] Remove a card',\n    AddThirdActions = '[LCard] Adds some Third Actions to existing card',\n    UpdateALightCard = '[LCard] Update a Light Card',\n    UpdateAnAction = '[LCard] Update one Action of a LightCard',\n    UpdateAnActionFailure = '[LCard] No actions where available to update for the current selected card in the state',\n    ThirdActionAlreadyLoaded = '[LCard] Light Card contains actions',\n    ThirdActionAlreadyUpdated = '[LCard] Third Action unchanged',\n    DelayedLightCardUpdate = '[LCard] update Light Card actions later',\n    LightCardAlreadyUpdated = '[LCard] Light Card already Updated'\n}\n\n// needed by NGRX entities\nexport class LoadLightCards implements Action {\n    /* istanbul ignore next */\n    readonly type = LightCardActionTypes.LoadLightCards;\n}\n\nexport class EmptyLightCards implements Action {\n    /* istanbul ignore next */\n    readonly type = LightCardActionTypes.EmptyLightCards;\n}\n\nexport class LoadLightCardsSuccess implements Action {\n    readonly type = LightCardActionTypes.LoadLightCardsSuccess;\n\n    /* istanbul ignore next */\n    constructor(public payload: { lightCards: LightCard[] }) {\n    }\n}\n\nexport class LoadLightCardsExtendedData implements Action {\n    readonly type = LightCardActionTypes.LoadLightCardsExtendedData;\n\n    /* istanbul ignore next */\n    constructor() {\n    }\n}\n\nexport class LoadLightCardsFailure implements Action {\n    readonly type = LightCardActionTypes.LoadLightCardsFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport class SelectLightCard implements Action {\n    /* istanbul ignore next */\n    readonly type = LightCardActionTypes.SelectLightCard;\n\n    /* istanbul ignore next */\n    constructor(public payload: { selectedCardId: string }) {\n    }\n\n}\n\nexport class ClearLightCardSelection implements Action {\n\n    readonly type = LightCardActionTypes.ClearLightCardSelection;\n\n    constructor() {\n    }\n}\n\nexport class AddLightCardFailure implements Action {\n    readonly type = LightCardActionTypes.AddLightCardFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport class UpdatedSubscription implements Action {\n    readonly type = LightCardActionTypes.UpdatedSubscription;\n\n    /* istanbul ignore next */\n    constructor() {\n    }\n}\n\nexport class HandleUnexpectedError implements Action {\n    /* istanbul ignore next */\n    readonly type = LightCardActionTypes.HandleUnexpectedError;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport class RemoveLightCard implements Action {\n    readonly type = LightCardActionTypes.RemoveLightCard;\n\n    constructor(public  payload: { cards: string[] }) {\n    }\n}\n\nexport class AddThirdActions implements Action {\n    readonly type = LightCardActionTypes.AddThirdActions;\n\n    constructor(public payload: { card: LightCard, actions: Map }) {\n    }\n}\n\nexport class UpdateALightCard implements Action {\n    readonly type = LightCardActionTypes.UpdateALightCard;\n\n    constructor(public payload: { card: LightCard }) {\n    }\n}\n\nexport class UpdateAnAction implements Action {\n    readonly type = LightCardActionTypes.UpdateAnAction;\n\n    constructor(public payload: { cardId: string, actionKey: string, status: ActionStatus }) {\n    }\n}\n\nexport class UpdateAnActionFailure implements Action {\n    readonly type = LightCardActionTypes.UpdateAnActionFailure;\n\n    constructor() {\n    }\n}\n\nexport class ThirdActionAlreadyLoaded implements Action {\n    readonly type = LightCardActionTypes.ThirdActionAlreadyLoaded;\n\n    constructor() {\n    }\n}\n\nexport class ThirdActionAlreadyUpdated implements Action {\n    readonly type = LightCardActionTypes.ThirdActionAlreadyUpdated;\n\n    constructor() {\n    }\n}\n\nexport class DelayedLightCardUpdate implements Action {\n    readonly type = LightCardActionTypes.DelayedLightCardUpdate;\n\n    constructor(public payload: { card: LightCard }) {\n    }\n}\n\nexport class LightCardAlreadyUpdated implements Action {\n    readonly type = LightCardActionTypes.LightCardAlreadyUpdated;\n\n    constructor() {\n    }\n}\n\nexport type LightCardActions =\n    LoadLightCards\n    | LoadLightCardsSuccess\n    | LoadLightCardsFailure\n    | SelectLightCard\n    | ClearLightCardSelection\n    | AddLightCardFailure\n    | UpdatedSubscription\n    | HandleUnexpectedError\n    | EmptyLightCards\n    | AddThirdActions\n    | UpdateALightCard\n    | UpdateAnAction\n    | UpdateAnActionFailure\n    | ThirdActionAlreadyLoaded\n    | ThirdActionAlreadyUpdated\n    | DelayedLightCardUpdate\n    | LightCardAlreadyUpdated\n    | RemoveLightCard;\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateArchiveFilter.html":{"url":"classes/UpdateArchiveFilter.html","title":"class - UpdateArchiveFilter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateArchiveFilter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/archive.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/store/actions/archive.actions.ts:24\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/archive.actions.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : ArchiveActionTypes.UpdateArchiveFilter\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/archive.actions.ts:24\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Action} from '@ngrx/store';\nimport {LightCard} from '@ofModel/light-card.model';\nimport {Page} from '@ofModel/page.model';\n\nexport enum ArchiveActionTypes {\n    UpdateArchiveFilter = '[Archive] Update Filter',\n    SendArchiveQuery = '[Archive] Send Query',\n    ArchiveQuerySuccess = '[Archive] Query was successful',\n    UpdateArchivePage = '[Archive] Update query result page',\n    HandleUnexpectedError = '[Archive] Handle unexpected error related to archived card issue',\n    SelectArchivedLightCard = '[Archive] Select one archived light card'\n\n}\n\nexport class UpdateArchiveFilter implements Action {\n    readonly type = ArchiveActionTypes.UpdateArchiveFilter;\n    /* istanbul ignore next */\n    constructor(public payload: {filters: Map}) {}\n}\n\nexport class SendArchiveQuery implements Action {\n    readonly type = ArchiveActionTypes.SendArchiveQuery;\n    constructor(public payload: {params: Map}) {}\n}\n\nexport class HandleUnexpectedError implements Action {\n    /* istanbul ignore next */\n    readonly type = ArchiveActionTypes.HandleUnexpectedError;\n\n    /* istanbul ignore next */\n    constructor(public payload: {error: Error}) {}\n}\n\nexport class ArchiveQuerySuccess implements Action {\n    readonly type = ArchiveActionTypes.ArchiveQuerySuccess;\n    /* istanbul ignore next */\n    constructor(public payload: {resultPage: Page}) {}\n\n}\n\nexport class UpdateArchivePage implements Action {\n    readonly type = ArchiveActionTypes.UpdateArchivePage;\n    /* istanbul ignore next */\n    constructor(public payload: {page: number}) {}\n}\nexport class SelectArchivedLightCard implements Action {\n    /* istanbul ignore next */\n    readonly type = ArchiveActionTypes.SelectArchivedLightCard;\n    /* istanbul ignore next */\n    constructor(public payload: {selectedCardId: string}) {}\n}\n\nexport type ArchiveActions = UpdateArchiveFilter\n    | SendArchiveQuery\n    | HandleUnexpectedError\n    | ArchiveQuerySuccess\n    | UpdateArchivePage\n    | SelectArchivedLightCard;\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateArchivePage.html":{"url":"classes/UpdateArchivePage.html","title":"class - UpdateArchivePage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateArchivePage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/archive.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/store/actions/archive.actions.ts:50\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/archive.actions.ts:52\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : ArchiveActionTypes.UpdateArchivePage\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/archive.actions.ts:50\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Action} from '@ngrx/store';\nimport {LightCard} from '@ofModel/light-card.model';\nimport {Page} from '@ofModel/page.model';\n\nexport enum ArchiveActionTypes {\n    UpdateArchiveFilter = '[Archive] Update Filter',\n    SendArchiveQuery = '[Archive] Send Query',\n    ArchiveQuerySuccess = '[Archive] Query was successful',\n    UpdateArchivePage = '[Archive] Update query result page',\n    HandleUnexpectedError = '[Archive] Handle unexpected error related to archived card issue',\n    SelectArchivedLightCard = '[Archive] Select one archived light card'\n\n}\n\nexport class UpdateArchiveFilter implements Action {\n    readonly type = ArchiveActionTypes.UpdateArchiveFilter;\n    /* istanbul ignore next */\n    constructor(public payload: {filters: Map}) {}\n}\n\nexport class SendArchiveQuery implements Action {\n    readonly type = ArchiveActionTypes.SendArchiveQuery;\n    constructor(public payload: {params: Map}) {}\n}\n\nexport class HandleUnexpectedError implements Action {\n    /* istanbul ignore next */\n    readonly type = ArchiveActionTypes.HandleUnexpectedError;\n\n    /* istanbul ignore next */\n    constructor(public payload: {error: Error}) {}\n}\n\nexport class ArchiveQuerySuccess implements Action {\n    readonly type = ArchiveActionTypes.ArchiveQuerySuccess;\n    /* istanbul ignore next */\n    constructor(public payload: {resultPage: Page}) {}\n\n}\n\nexport class UpdateArchivePage implements Action {\n    readonly type = ArchiveActionTypes.UpdateArchivePage;\n    /* istanbul ignore next */\n    constructor(public payload: {page: number}) {}\n}\nexport class SelectArchivedLightCard implements Action {\n    /* istanbul ignore next */\n    readonly type = ArchiveActionTypes.SelectArchivedLightCard;\n    /* istanbul ignore next */\n    constructor(public payload: {selectedCardId: string}) {}\n}\n\nexport type ArchiveActions = UpdateArchiveFilter\n    | SendArchiveQuery\n    | HandleUnexpectedError\n    | ArchiveQuerySuccess\n    | UpdateArchivePage\n    | SelectArchivedLightCard;\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateTimeReference.html":{"url":"classes/UpdateTimeReference.html","title":"class - UpdateTimeReference","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateTimeReference\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/time.actions.ts\n        \n\n            \n                Description\n            \n            \n                Action dispatch to update the current virtual time of the application\n\n            \n\n\n            \n                Implements\n            \n            \n                            Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/store/actions/time.actions.ts:43\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/time.actions.ts:44\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : TimeActionTypes.UpdateTimeReference\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/time.actions.ts:43\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Action} from \"@ngrx/store\";\nimport {TimeReference} from \"@ofModel/time.model\";\nimport {Message} from \"@ofModel/message.model\";\nimport * as moment from \"moment-timezone\";\n\nexport enum TimeActionTypes{\n    Tick='[Time] tick',\n    UpdateTimeReference='[Time] try to update the time reference',\n    FailToUpdateTimeReference='[Time] fail to update the time reference'\n}\n\n/**\n * Heart beat of the application change current date\n * Contains the elapsed virtual time since the previous heart beat so any components following the clock\n * can shift their timespan accordingly\n */\nexport class Tick implements  Action{\n    readonly type=TimeActionTypes.Tick;\n    constructor(public payload:TickPayload){}\n}\n\n/**\n * Clock tick (heart beat) payload\n */\nexport class TickPayload {\n    constructor(public currentTime: moment.Moment,\n                public elapsedSinceLast: number) {\n    }\n}\n\n/**\n * Action dispatch to update the current virtual time of the application\n */\n\nexport class UpdateTimeReference implements Action{\n    readonly type=TimeActionTypes.UpdateTimeReference;\n    constructor(public payload:{timeReference:TimeReference}){};\n}\n\n\n/**\n * Notify that something went wrong while changing the virtual time.\n * Nothing has been done and an error is reported\n */\nexport class FailToUpdateTimeReference implements Action{\n    readonly type = TimeActionTypes.FailToUpdateTimeReference;\n    constructor(public payload:{ error: Message;}){}\n}\n\n\nexport type TimeActions =\n      Tick\n    | UpdateTimeReference\n    | FailToUpdateTimeReference;\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateTranslation.html":{"url":"classes/UpdateTranslation.html","title":"class - UpdateTranslation","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateTranslation\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/translate.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/store/actions/translate.actions.ts:20\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/translate.actions.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : TranslateActionsTypes.UpdateTranslation\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/translate.actions.ts:20\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Action} from \"@ngrx/store\";\nimport {Map} from \"@ofModel/map\";\n\nexport enum TranslateActionsTypes {\n    UpdateTranslation = '[i18n] Translation need an update',\n    UpdateTranslationSuccessful = '[i18n] Translation successfully updated',\n    UpdateTranslationFailed = '[i18n] Translation update failed',\n    TranslationUpToDate = '[i18n] all Translation materials are already loaded',\n    RefreshTranslation ='[i18n] translate handler has been refreshed'\n}\n\nexport class UpdateTranslation implements Action {\n    readonly type = TranslateActionsTypes.UpdateTranslation;\n\n    constructor(public payload: { versions: Map> }) {\n    }\n}\n\nexport class TranslationUpToDate implements Action {\n    readonly type = TranslateActionsTypes.TranslationUpToDate;\n}\n\nexport class UpdateTranslationSuccessful implements Action {\n    readonly type = TranslateActionsTypes.UpdateTranslationSuccessful;\n\n    constructor(public payload: { language: string }) {\n    }\n}\n\nexport class UpdateTranslationFailed implements Action {\n    readonly type = TranslateActionsTypes.UpdateTranslationFailed;\n\n    constructor(public payload: { error: Error }) {\n    }\n}\n\n\nexport class RefreshTranslation implements Action {\n    readonly type = TranslateActionsTypes.RefreshTranslation;\n}\nexport type TranslateActions = UpdateTranslation |\n    UpdateTranslationSuccessful | UpdateTranslationFailed | TranslationUpToDate | RefreshTranslation;\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateTranslationFailed.html":{"url":"classes/UpdateTranslationFailed.html","title":"class - UpdateTranslationFailed","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateTranslationFailed\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/translate.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/store/actions/translate.actions.ts:38\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/translate.actions.ts:40\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : TranslateActionsTypes.UpdateTranslationFailed\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/translate.actions.ts:38\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Action} from \"@ngrx/store\";\nimport {Map} from \"@ofModel/map\";\n\nexport enum TranslateActionsTypes {\n    UpdateTranslation = '[i18n] Translation need an update',\n    UpdateTranslationSuccessful = '[i18n] Translation successfully updated',\n    UpdateTranslationFailed = '[i18n] Translation update failed',\n    TranslationUpToDate = '[i18n] all Translation materials are already loaded',\n    RefreshTranslation ='[i18n] translate handler has been refreshed'\n}\n\nexport class UpdateTranslation implements Action {\n    readonly type = TranslateActionsTypes.UpdateTranslation;\n\n    constructor(public payload: { versions: Map> }) {\n    }\n}\n\nexport class TranslationUpToDate implements Action {\n    readonly type = TranslateActionsTypes.TranslationUpToDate;\n}\n\nexport class UpdateTranslationSuccessful implements Action {\n    readonly type = TranslateActionsTypes.UpdateTranslationSuccessful;\n\n    constructor(public payload: { language: string }) {\n    }\n}\n\nexport class UpdateTranslationFailed implements Action {\n    readonly type = TranslateActionsTypes.UpdateTranslationFailed;\n\n    constructor(public payload: { error: Error }) {\n    }\n}\n\n\nexport class RefreshTranslation implements Action {\n    readonly type = TranslateActionsTypes.RefreshTranslation;\n}\nexport type TranslateActions = UpdateTranslation |\n    UpdateTranslationSuccessful | UpdateTranslationFailed | TranslationUpToDate | RefreshTranslation;\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateTranslationSuccessful.html":{"url":"classes/UpdateTranslationSuccessful.html","title":"class - UpdateTranslationSuccessful","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateTranslationSuccessful\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/translate.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/store/actions/translate.actions.ts:31\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/translate.actions.ts:33\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : TranslateActionsTypes.UpdateTranslationSuccessful\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/translate.actions.ts:31\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Action} from \"@ngrx/store\";\nimport {Map} from \"@ofModel/map\";\n\nexport enum TranslateActionsTypes {\n    UpdateTranslation = '[i18n] Translation need an update',\n    UpdateTranslationSuccessful = '[i18n] Translation successfully updated',\n    UpdateTranslationFailed = '[i18n] Translation update failed',\n    TranslationUpToDate = '[i18n] all Translation materials are already loaded',\n    RefreshTranslation ='[i18n] translate handler has been refreshed'\n}\n\nexport class UpdateTranslation implements Action {\n    readonly type = TranslateActionsTypes.UpdateTranslation;\n\n    constructor(public payload: { versions: Map> }) {\n    }\n}\n\nexport class TranslationUpToDate implements Action {\n    readonly type = TranslateActionsTypes.TranslationUpToDate;\n}\n\nexport class UpdateTranslationSuccessful implements Action {\n    readonly type = TranslateActionsTypes.UpdateTranslationSuccessful;\n\n    constructor(public payload: { language: string }) {\n    }\n}\n\nexport class UpdateTranslationFailed implements Action {\n    readonly type = TranslateActionsTypes.UpdateTranslationFailed;\n\n    constructor(public payload: { error: Error }) {\n    }\n}\n\n\nexport class RefreshTranslation implements Action {\n    readonly type = TranslateActionsTypes.RefreshTranslation;\n}\nexport type TranslateActions = UpdateTranslation |\n    UpdateTranslationSuccessful | UpdateTranslationFailed | TranslationUpToDate | RefreshTranslation;\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdatedSubscription.html":{"url":"classes/UpdatedSubscription.html","title":"class - UpdatedSubscription","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdatedSubscription\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/light-card.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/store/actions/light-card.actions.ts:98\n                            \n                        \n\n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : LightCardActionTypes.UpdatedSubscription\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/light-card.actions.ts:98\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Action} from '@ngrx/store';\nimport {LightCard} from '@ofModel/light-card.model';\nimport {Action as ThirdAction, ActionStatus} from '@ofModel/thirds.model';\nimport {Update} from \"@ngrx/entity\";\n\nexport enum LightCardActionTypes {\n    LoadLightCards = '[LCard] Load',\n    EmptyLightCards = '[LCard] Empty',\n    LoadLightCardsSuccess = '[LCard] Load Success',\n    LoadLightCardsExtendedData = '[LCard] Load Extended Data',\n    LoadLightCardsFailure = '[LCard] Load Fail',\n    SelectLightCard = '[LCard] Select One',\n    ClearLightCardSelection = '[LCard] Clear Light Card Selection',\n    AddLightCardFailure = '[LCard] Add Light Card Fail',\n    UpdatedSubscription = '[LCard] UpdateSubscription',\n    HandleUnexpectedError = '[LCard] Handle unexpected error related to authentication issue',\n    RemoveLightCard = '[LCard] Remove a card',\n    AddThirdActions = '[LCard] Adds some Third Actions to existing card',\n    UpdateALightCard = '[LCard] Update a Light Card',\n    UpdateAnAction = '[LCard] Update one Action of a LightCard',\n    UpdateAnActionFailure = '[LCard] No actions where available to update for the current selected card in the state',\n    ThirdActionAlreadyLoaded = '[LCard] Light Card contains actions',\n    ThirdActionAlreadyUpdated = '[LCard] Third Action unchanged',\n    DelayedLightCardUpdate = '[LCard] update Light Card actions later',\n    LightCardAlreadyUpdated = '[LCard] Light Card already Updated'\n}\n\n// needed by NGRX entities\nexport class LoadLightCards implements Action {\n    /* istanbul ignore next */\n    readonly type = LightCardActionTypes.LoadLightCards;\n}\n\nexport class EmptyLightCards implements Action {\n    /* istanbul ignore next */\n    readonly type = LightCardActionTypes.EmptyLightCards;\n}\n\nexport class LoadLightCardsSuccess implements Action {\n    readonly type = LightCardActionTypes.LoadLightCardsSuccess;\n\n    /* istanbul ignore next */\n    constructor(public payload: { lightCards: LightCard[] }) {\n    }\n}\n\nexport class LoadLightCardsExtendedData implements Action {\n    readonly type = LightCardActionTypes.LoadLightCardsExtendedData;\n\n    /* istanbul ignore next */\n    constructor() {\n    }\n}\n\nexport class LoadLightCardsFailure implements Action {\n    readonly type = LightCardActionTypes.LoadLightCardsFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport class SelectLightCard implements Action {\n    /* istanbul ignore next */\n    readonly type = LightCardActionTypes.SelectLightCard;\n\n    /* istanbul ignore next */\n    constructor(public payload: { selectedCardId: string }) {\n    }\n\n}\n\nexport class ClearLightCardSelection implements Action {\n\n    readonly type = LightCardActionTypes.ClearLightCardSelection;\n\n    constructor() {\n    }\n}\n\nexport class AddLightCardFailure implements Action {\n    readonly type = LightCardActionTypes.AddLightCardFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport class UpdatedSubscription implements Action {\n    readonly type = LightCardActionTypes.UpdatedSubscription;\n\n    /* istanbul ignore next */\n    constructor() {\n    }\n}\n\nexport class HandleUnexpectedError implements Action {\n    /* istanbul ignore next */\n    readonly type = LightCardActionTypes.HandleUnexpectedError;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport class RemoveLightCard implements Action {\n    readonly type = LightCardActionTypes.RemoveLightCard;\n\n    constructor(public  payload: { cards: string[] }) {\n    }\n}\n\nexport class AddThirdActions implements Action {\n    readonly type = LightCardActionTypes.AddThirdActions;\n\n    constructor(public payload: { card: LightCard, actions: Map }) {\n    }\n}\n\nexport class UpdateALightCard implements Action {\n    readonly type = LightCardActionTypes.UpdateALightCard;\n\n    constructor(public payload: { card: LightCard }) {\n    }\n}\n\nexport class UpdateAnAction implements Action {\n    readonly type = LightCardActionTypes.UpdateAnAction;\n\n    constructor(public payload: { cardId: string, actionKey: string, status: ActionStatus }) {\n    }\n}\n\nexport class UpdateAnActionFailure implements Action {\n    readonly type = LightCardActionTypes.UpdateAnActionFailure;\n\n    constructor() {\n    }\n}\n\nexport class ThirdActionAlreadyLoaded implements Action {\n    readonly type = LightCardActionTypes.ThirdActionAlreadyLoaded;\n\n    constructor() {\n    }\n}\n\nexport class ThirdActionAlreadyUpdated implements Action {\n    readonly type = LightCardActionTypes.ThirdActionAlreadyUpdated;\n\n    constructor() {\n    }\n}\n\nexport class DelayedLightCardUpdate implements Action {\n    readonly type = LightCardActionTypes.DelayedLightCardUpdate;\n\n    constructor(public payload: { card: LightCard }) {\n    }\n}\n\nexport class LightCardAlreadyUpdated implements Action {\n    readonly type = LightCardActionTypes.LightCardAlreadyUpdated;\n\n    constructor() {\n    }\n}\n\nexport type LightCardActions =\n    LoadLightCards\n    | LoadLightCardsSuccess\n    | LoadLightCardsFailure\n    | SelectLightCard\n    | ClearLightCardSelection\n    | AddLightCardFailure\n    | UpdatedSubscription\n    | HandleUnexpectedError\n    | EmptyLightCards\n    | AddThirdActions\n    | UpdateALightCard\n    | UpdateAnAction\n    | UpdateAnActionFailure\n    | ThirdActionAlreadyLoaded\n    | ThirdActionAlreadyUpdated\n    | DelayedLightCardUpdate\n    | LightCardAlreadyUpdated\n    | RemoveLightCard;\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UselessAuthAction.html":{"url":"classes/UselessAuthAction.html","title":"class - UselessAuthAction","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UselessAuthAction\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/authentication.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : AuthenticationActionTypes.UselessAuthAction\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/authentication.actions.ts:159\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Action} from '@ngrx/store';\nimport {Guid} from 'guid-typescript';\nimport {Message} from \"@ofModel/message.model\";\nimport {ExtractI18nBuilderOptions} from \"@angular-devkit/build-angular\";\n\nexport enum AuthenticationActionTypes {\n    InitAuthStatus = '[Authentication] Init Authentication Status',\n    CheckAuthenticationStatus = '[Authentication] Check Authentication Status',\n    AcceptLogIn = '[Authentication] Accept the user log in attempt',\n    RejectLogIn = '[Authentication] Reject the user log in attempt',\n    TryToLogIn = '[Authentication] Try to log the user in',\n    TryToLogOut = '[Authentication] Try to log the user out',\n    AcceptLogOut = '[Authentication] Accept the user log out attempt',\n    AcceptLogOutSuccess = '[Authentication] Success Accept the user log out attempt',\n    CheckImplicitFlowAuthenticationStatus = '[Authentication] Check Authentication Status specifically for the Implicit Flow',\n    UselessAuthAction = '[Authentication] test purpose action'\n    // TODO the following actions should be merge with password and code flow management of authentication\n    , ImplicitallyAuthenticated = '[Authentication] user is authentication using Implicit Flow' //\n    , UnAuthenticationFromImplicitFlow = '[Authentication[ user is log out by implicit Flow internal managment'\n}\n\n/**\n * Authentication success payload\n */\nexport class PayloadForSuccessfulAuthentication {\n    constructor(public identifier: string,\n                public clientId: Guid,\n                public token: string,\n                public expirationDate: Date,\n                public firstName?:string,\n                public lastName?:string) {\n    }\n}\n\n/**\n * It aims to validate the current authentication if exists.\n *\n */\nexport class InitAuthStatus implements Action {\n    readonly type = AuthenticationActionTypes.InitAuthStatus;\n    /* istanbul ignore next */\n    constructor(public payload:{code: string}){}\n}\n\n/**\n * It aims to validate the current authentication if exists.\n *\n */\nexport class CheckAuthenticationStatus implements Action {\n    /* istanbul ignore next */\n    readonly type = AuthenticationActionTypes.CheckAuthenticationStatus;\n}\n\n/**\n * Action used to update the state with the authentication information\n *\n * Emitted by {AuthenticationEffects} in the following {Observable} @members:\n *  * TryToLogIn\n *  * CheckAuthentication via handleLogInAttempt @method\n *\n * Used in the {function} reducer of the {authentication.reducer.ts} file to create a new state\n * containing the authentication information by filtering on the {AuthenticationActionTypes.AcceptLogIn} type.\n *\n */\nexport class AcceptLogIn implements Action {\n    readonly type = AuthenticationActionTypes.AcceptLogIn;\n\n    /* istanbul ignore next */\n    constructor(public payload: PayloadForSuccessfulAuthentication) {}\n}\n\n/**\n * Action used to push login/password pair to the authentication service\n *\n * Emitted by {LoginComponent} in the onSubmit @method which is called\n * when the user click on the `Login` button of the login page form.\n */\nexport class TryToLogIn implements Action {\n    readonly type= AuthenticationActionTypes.TryToLogIn;\n\n    /* istanbul ignore next */\n    constructor(public payload: {username: string, password: string}){}\n}\n\n/**\n * Action used when the user logout\n *\n * Emitted by {NavbarComponent} win the logOut @method which is called\n * when the user click on the `logOut` button of the `navbar`\n */\nexport class TryToLogOut implements Action {\n    /* istanbul ignore next */\n    readonly type = AuthenticationActionTypes.TryToLogOut;\n}\n\n/**\n * Action used to notify the store that the authentication is not possible.\n *\n * Emmited by {AuthenticationEffect} in the following {Observable} @members:\n *  * `TryToLogin`;\n *  *  `CheckAuthentication`\n *  and in the `handleRejectedLogin` @method called by the `ChecAuthentication` {Observable}\n *\n * Used in the {function} reducer of the {authentication.reducer.ts} file to create a new state\n * without any authentication information and containing a message about login rejection\n * by filtering on the {AuthenticationActionTypes.RejectLogIn} type.\n *\n */\nexport class RejectLogIn implements Action {\n    readonly type = AuthenticationActionTypes.RejectLogIn;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Message }) {}\n}\n\n/**\n * Action used to removes authentication information of the system and thus logOut the user.\n *\n * Emitted by {AuthenticationEffect} in the following {Observable} @members:\n *  * `TryToLogOut`\n *  * `RejectLogInAttempt`\n *\n *  Consume by {AuthenticationEffect} in the `AcceptLogOut` {Observable} @member\n *\n */\nexport class AcceptLogOut implements Action {\n    readonly type = AuthenticationActionTypes.AcceptLogOut;\n\n    /* istanbul ignore next */\n    constructor(){}\n}\n\n/**\n * Action used to notify the store to remove authentication information\n *\n * Emitted by {AuthenticationEffect} in `AcceptLogOut` {Observable} @member.\n *\n * Used in the {function} reducer of the {authentication.reducer.ts} file to create a new state\n * without any authentication information by filtering on the {AuthenticationActionTypes.AcceptLogOut} type.\n */\nexport class AcceptLogOutSuccess implements Action {\n    /* istanbul ignore next */\n    readonly type = AuthenticationActionTypes.AcceptLogOutSuccess;\n}\n\nexport class CheckImplicitFlowAuthenticationStatus implements Action {\n    readonly type = AuthenticationActionTypes.CheckImplicitFlowAuthenticationStatus;\n}\n\nexport class UselessAuthAction implements  Action{\n    readonly type = AuthenticationActionTypes.UselessAuthAction;\n\n}\n\nexport class ImplicitlyAuthenticated implements Action {\n    readonly type = AuthenticationActionTypes.ImplicitallyAuthenticated;\n}\n\nexport class UnAuthenticationFromImplicitFlow implements Action {\n    readonly type = AuthenticationActionTypes.UnAuthenticationFromImplicitFlow;\n}\nexport type AuthenticationActions =\n    InitAuthStatus\n    | AcceptLogIn\n    | RejectLogIn\n    | TryToLogIn\n    | TryToLogOut\n    | CheckAuthenticationStatus\n    | AcceptLogOut\n    | AcceptLogOutSuccess\n    | CheckImplicitFlowAuthenticationStatus\n    | UselessAuthAction\n    | ImplicitlyAuthenticated\n    |UnAuthenticationFromImplicitFlow;\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/User.html":{"url":"classes/User.html","title":"class - User","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/model/user.model.ts\n        \n\n\n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \n                                Public\n                        constructor(login: string, firstName: string, lastName: string)\n                    \n                \n                        \n                            \n                                Defined in src/app/model/user.model.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        login\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        firstName\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        lastName\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class User {\n\n    public constructor(\n    readonly login:string,\n    readonly firstName:string,\n    readonly lastName:string\n){}\n\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UserApplicationNotRegistered.html":{"url":"classes/UserApplicationNotRegistered.html","title":"class - UserApplicationNotRegistered","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UserApplicationNotRegistered\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/user.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/store/actions/user.actions.ts:29\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/user.actions.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : UserActionsTypes.UserApplicationNotRegistered\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/user.actions.ts:29\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {User} from '@ofModel/user.model';\nimport {Action} from '@ngrx/store';\n\nexport enum UserActionsTypes {\n\n    UserApplicationRegistered =         '[User] User application registered',\n    UserApplicationNotRegistered =      '[User] User application not registered',\n    CreateUserApplication =             '[User] Create the User in the application',\n    CreateUserApplicationOnSuccess =    '[User] Create the User in the application on success',\n    CreateUserApplicationOnFailure =    '[User] Create the User in the application on failure',\n    HandleUnexpectedError =             '[User] Handle unexpected error related to user creation issue'\n}\n\nexport class UserApplicationRegistered implements Action {\n    /* istanbul ignore next */ \n    readonly type = UserActionsTypes.UserApplicationRegistered;\n    constructor(public payload : {user : User}) {}\n}\n\nexport class UserApplicationNotRegistered implements Action {\n    /* istanbul ignore next */ \n    readonly type = UserActionsTypes.UserApplicationNotRegistered;\n    constructor(public payload : {error : Error, user : User}) {}\n}\n\nexport class CreateUserApplication implements Action {\n    /* istanbul ignore next */ \n    readonly type = UserActionsTypes.CreateUserApplication;\n    constructor(public payload : {user : User}) {}\n}\n\n\nexport class CreateUserApplicationOnSuccess implements Action {\n    /* istanbul ignore next */ \n    readonly type = UserActionsTypes.CreateUserApplicationOnSuccess;\n    constructor(public payload : {user : User}) {}\n}\n\nexport class CreateUserApplicationOnFailure implements Action {\n    /* istanbul ignore next */ \n    readonly type = UserActionsTypes.CreateUserApplicationOnFailure;\n    constructor(public payload : {error : Error}) {}\n}\n\n\nexport class HandleUnexpectedError implements Action {\n    /* istanbul ignore next */ \n    readonly type = UserActionsTypes.HandleUnexpectedError;\n    constructor(public payload : {error : Error}) {}\n}\n\nexport type UserActions = UserApplicationRegistered\n    | UserApplicationNotRegistered\n    | CreateUserApplication\n    | CreateUserApplicationOnSuccess\n    | CreateUserApplicationOnFailure\n    | HandleUnexpectedError;\n\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UserApplicationRegistered.html":{"url":"classes/UserApplicationRegistered.html","title":"class - UserApplicationRegistered","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UserApplicationRegistered\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/user.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/store/actions/user.actions.ts:23\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/user.actions.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : UserActionsTypes.UserApplicationRegistered\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/user.actions.ts:23\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {User} from '@ofModel/user.model';\nimport {Action} from '@ngrx/store';\n\nexport enum UserActionsTypes {\n\n    UserApplicationRegistered =         '[User] User application registered',\n    UserApplicationNotRegistered =      '[User] User application not registered',\n    CreateUserApplication =             '[User] Create the User in the application',\n    CreateUserApplicationOnSuccess =    '[User] Create the User in the application on success',\n    CreateUserApplicationOnFailure =    '[User] Create the User in the application on failure',\n    HandleUnexpectedError =             '[User] Handle unexpected error related to user creation issue'\n}\n\nexport class UserApplicationRegistered implements Action {\n    /* istanbul ignore next */ \n    readonly type = UserActionsTypes.UserApplicationRegistered;\n    constructor(public payload : {user : User}) {}\n}\n\nexport class UserApplicationNotRegistered implements Action {\n    /* istanbul ignore next */ \n    readonly type = UserActionsTypes.UserApplicationNotRegistered;\n    constructor(public payload : {error : Error, user : User}) {}\n}\n\nexport class CreateUserApplication implements Action {\n    /* istanbul ignore next */ \n    readonly type = UserActionsTypes.CreateUserApplication;\n    constructor(public payload : {user : User}) {}\n}\n\n\nexport class CreateUserApplicationOnSuccess implements Action {\n    /* istanbul ignore next */ \n    readonly type = UserActionsTypes.CreateUserApplicationOnSuccess;\n    constructor(public payload : {user : User}) {}\n}\n\nexport class CreateUserApplicationOnFailure implements Action {\n    /* istanbul ignore next */ \n    readonly type = UserActionsTypes.CreateUserApplicationOnFailure;\n    constructor(public payload : {error : Error}) {}\n}\n\n\nexport class HandleUnexpectedError implements Action {\n    /* istanbul ignore next */ \n    readonly type = UserActionsTypes.HandleUnexpectedError;\n    constructor(public payload : {error : Error}) {}\n}\n\nexport type UserActions = UserApplicationRegistered\n    | UserApplicationNotRegistered\n    | CreateUserApplication\n    | CreateUserApplicationOnSuccess\n    | CreateUserApplicationOnFailure\n    | HandleUnexpectedError;\n\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UserContext.html":{"url":"classes/UserContext.html","title":"class - UserContext","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UserContext\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/model/user-context.model.ts\n        \n\n\n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(login: string, token: string, firstName: string, lastName: string)\n                    \n                \n                        \n                            \n                                Defined in src/app/model/user-context.model.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        login\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        token\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        firstName\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        lastName\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class UserContext{\n    constructor(\n        readonly login:string,\n        readonly token:string,\n        readonly firstName:string,\n        readonly lastName:string,\n    ){}\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserEffects.html":{"url":"injectables/UserEffects.html","title":"injectable - UserEffects","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  UserEffects\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/effects/user.effects.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                checkUserApplication\n                            \n                            \n                                CreateUserApplication\n                            \n                            \n                                transition2CreateUserApplication\n                            \n                            \n                                transition2UserApplicationRegistered\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store, actions$: Actions, userService: UserService, authService: AuthenticationService)\n                    \n                \n                        \n                            \n                                Defined in src/app/store/effects/user.effects.ts:30\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                        Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        actions$\n                                                  \n                                                        \n                                                                        Actions\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            checkUserApplication\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Observable\n\n                        \n                    \n                    \n                        \n                            Default value : this.actions$\n        .pipe(\n            ofType(AuthenticationActionTypes.AcceptLogIn),\n            switchMap((action: AcceptLogIn) => {\n                const userPayload = action.payload;\n                return this.userService.askUserApplicationRegistered(userPayload.identifier)\n                    .pipe(\n                        map((user: User) => new UserApplicationRegistered({user})),\n                        catchError((error, caught) => {\n                            const userData: User = new User(userPayload.identifier, userPayload.firstName, userPayload.lastName);\n                            this.store.dispatch(new UserApplicationNotRegistered({error: error, user: userData}));\n                            return caught;\n                        })\n                    );\n            })\n        )\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Effect()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/effects/user.effects.ts:45\n                            \n                        \n\n                \n                    \n                        after that the user is authentificated throught the token,\ndetect if the user is already registered in the application and raise the UserApplicationRegistered action\nif not, set the creation user workflow\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            CreateUserApplication\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Observable\n\n                        \n                    \n                    \n                        \n                            Default value : this.actions$\n        .pipe(\n            ofType(UserActionsTypes.CreateUserApplication),\n            switchMap((action: CreateUserApplication) => {\n                const user = action.payload.user;\n                return this.userService.askCreateUser(user)\n                    .pipe(\n                        map(currentUser => {\n                            // console.log(\"ok creation user \" + user.login);\n                            return new CreateUserApplicationOnSuccess({user: currentUser});\n                        }),\n                        catchError((error, caught) => {\n                            // console.log(error, caught, \"error on creation user application for the user \")\n                            this.authService.clearAuthenticationInformation();\n                            this.store.dispatch(new CreateUserApplicationOnFailure({error: error}));\n                            return caught;\n                        })\n                    );\n            }),\n        )\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Effect()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/effects/user.effects.ts:81\n                            \n                        \n\n                \n                    \n                        create the user application (first time in the application)\nraise an CreateUserApplicationOnSuccess action or CreateUserApplicationOnFailure action.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            transition2CreateUserApplication\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Observable\n\n                        \n                    \n                    \n                        \n                            Default value : this.actions$\n        .pipe(\n            ofType(UserActionsTypes.UserApplicationNotRegistered),\n            map((action: UserApplicationNotRegistered) => {\n                const userDataPayload = action.payload.user;\n                // console.log(\"transitionCreateUserApplication userPayload : \" + userDataPayload);\n                return new CreateUserApplication({user: userDataPayload});\n            })\n        )\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Effect()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/effects/user.effects.ts:66\n                            \n                        \n\n                \n                    \n                        transition to the creation user application workflow\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            transition2UserApplicationRegistered\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Observable\n\n                        \n                    \n                    \n                        \n                            Default value : this.actions$\n        .pipe(\n            ofType(UserActionsTypes.CreateUserApplicationOnSuccess),\n            map((action: CreateUserApplicationOnSuccess) => {\n                const userDataPayload = action.payload.user;\n                return new UserApplicationRegistered({user: userDataPayload});\n            })\n        )\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Effect()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/effects/user.effects.ts:106\n                            \n                        \n\n                \n                    \n                        transition to the userApplicationRegistered action after an CreateUserApplicationOnSuccess action\n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import {Injectable} from '@angular/core';\nimport {Store} from '@ngrx/store';\nimport {AppState} from \"@ofStore/index\";\nimport {Actions, Effect, ofType} from '@ngrx/effects';\nimport {UserService} from '@ofServices/user.service';\nimport {Observable} from 'rxjs';\nimport {\n    CreateUserApplication,\n    CreateUserApplicationOnFailure,\n    CreateUserApplicationOnSuccess,\n    UserActions,\n    UserActionsTypes,\n    UserApplicationNotRegistered,\n    UserApplicationRegistered\n} from '@ofStore/actions/user.actions';\nimport {AcceptLogIn, AuthenticationActionTypes} from '@ofStore/actions/authentication.actions';\nimport {catchError, map, switchMap} from 'rxjs/operators';\nimport {User} from '@ofModel/user.model';\nimport {AuthenticationService} from \"@ofServices/authentication/authentication.service\";\n\n\n@Injectable()\nexport class UserEffects {\n\n    constructor(private store: Store,\n                private actions$: Actions,\n                private userService: UserService,\n                private authService: AuthenticationService\n    ) {\n    }\n\n    /**\n     * after that the user is authentificated throught the token,\n     * detect if the user is already registered in the application and raise the UserApplicationRegistered action\n     * if not, set the creation user workflow\n     */\n    @Effect()\n    checkUserApplication: Observable = this.actions$\n        .pipe(\n            ofType(AuthenticationActionTypes.AcceptLogIn),\n            switchMap((action: AcceptLogIn) => {\n                const userPayload = action.payload;\n                return this.userService.askUserApplicationRegistered(userPayload.identifier)\n                    .pipe(\n                        map((user: User) => new UserApplicationRegistered({user})),\n                        catchError((error, caught) => {\n                            const userData: User = new User(userPayload.identifier, userPayload.firstName, userPayload.lastName);\n                            this.store.dispatch(new UserApplicationNotRegistered({error: error, user: userData}));\n                            return caught;\n                        })\n                    );\n            })\n        );\n\n    /**\n     * transition to the creation user application workflow\n     */\n    @Effect()\n    transition2CreateUserApplication: Observable = this.actions$\n        .pipe(\n            ofType(UserActionsTypes.UserApplicationNotRegistered),\n            map((action: UserApplicationNotRegistered) => {\n                const userDataPayload = action.payload.user;\n                // console.log(\"transitionCreateUserApplication userPayload : \" + userDataPayload);\n                return new CreateUserApplication({user: userDataPayload});\n            })\n        );\n\n    /**\n     * create the user application (first time in the application)\n     * raise an CreateUserApplicationOnSuccess action or CreateUserApplicationOnFailure action.\n     */\n    @Effect()\n    CreateUserApplication: Observable = this.actions$\n        .pipe(\n            ofType(UserActionsTypes.CreateUserApplication),\n            switchMap((action: CreateUserApplication) => {\n                const user = action.payload.user;\n                return this.userService.askCreateUser(user)\n                    .pipe(\n                        map(currentUser => {\n                            // console.log(\"ok creation user \" + user.login);\n                            return new CreateUserApplicationOnSuccess({user: currentUser});\n                        }),\n                        catchError((error, caught) => {\n                            // console.log(error, caught, \"error on creation user application for the user \")\n                            this.authService.clearAuthenticationInformation();\n                            this.store.dispatch(new CreateUserApplicationOnFailure({error: error}));\n                            return caught;\n                        })\n                    );\n            }),\n        );\n\n    /**\n     * transition to the userApplicationRegistered action after an CreateUserApplicationOnSuccess action\n     */\n    @Effect()\n    transition2UserApplicationRegistered: Observable = this.actions$\n        .pipe(\n            ofType(UserActionsTypes.CreateUserApplicationOnSuccess),\n            map((action: CreateUserApplicationOnSuccess) => {\n                const userDataPayload = action.payload.user;\n                return new UserApplicationRegistered({user: userDataPayload});\n            })\n        );\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserService.html":{"url":"injectables/UserService.html","title":"injectable - UserService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  UserService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/user.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                userUrl\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                askCreateUser\n                            \n                            \n                                askUserApplicationRegistered\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(httpClient: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/user.service.ts:19\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        httpClient\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nAngular build-in\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            askCreateUser\n                        \n                        \n                    \n                \n            \n            \n                \naskCreateUser(userData: User)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/user.service.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userData\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            askUserApplicationRegistered\n                        \n                        \n                    \n                \n            \n            \n                \naskUserApplicationRegistered(user: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/user.service.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            userUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/user.service.ts:19\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from \"@angular/core\";\nimport { environment } from '@env/environment';\nimport { Observable, of } from 'rxjs';\nimport { User } from '@ofModel/user.model';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\n\n\n\n@Injectable()\nexport class UserService {\n\n    readonly userUrl : string;\n\n    /**\n     * @constructor\n     * @param httpClient - Angular build-in\n     */\n    constructor(private httpClient : HttpClient) {\n        this.userUrl = `${environment.urls.users}`;\n    }\n\n    askUserApplicationRegistered(user : string) : Observable {\n        console.log(\"user in askUserApplicationRegistered service : \" + user);\n        return this.httpClient.get(`${this.userUrl}/users/${user}`);\n    }\n\n    askCreateUser(userData : User) : Observable {\n        console.log(\"user in askCreateUser service : \" + userData.login);\n        return this.httpClient.put(`${this.userUrl}/users/${userData.login}`, userData);\n    }\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/UserState.html":{"url":"interfaces/UserState.html","title":"interface - UserState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  UserState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/states/user.state.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        group\n                                \n                                \n                                        registered\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        group\n                                    \n                                \n                                \n                                    \n                                        group:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        registered\n                                    \n                                \n                                \n                                    \n                                        registered:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface UserState {\n    registered : boolean,\n    group : string[]\n}\n\nexport const userInitialState : UserState = {\n    registered : false,\n    group : null\n}\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UtilitiesModule.html":{"url":"modules/UtilitiesModule.html","title":"module - UtilitiesModule","body":"\n                   \n\n\n\n\n    Modules\n    UtilitiesModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_UtilitiesModule\n\n\n\ncluster_UtilitiesModule_declarations\n\n\n\ncluster_UtilitiesModule_exports\n\n\n\n\nCalcHeightDirective\n\nCalcHeightDirective\n\n\n\nUtilitiesModule\n\nUtilitiesModule\n\nUtilitiesModule -->\n\nCalcHeightDirective->UtilitiesModule\n\n\n\n\n\nResizableComponent\n\nResizableComponent\n\nUtilitiesModule -->\n\nResizableComponent->UtilitiesModule\n\n\n\n\n\nCalcHeightDirective \n\nCalcHeightDirective \n\nCalcHeightDirective  -->\n\nUtilitiesModule->CalcHeightDirective \n\n\n\n\n\nResizableComponent \n\nResizableComponent \n\nResizableComponent  -->\n\nUtilitiesModule->ResizableComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/modules/utilities/utilities.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            CalcHeightDirective\n                        \n                        \n                            ResizableComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            CalcHeightDirective\n                        \n                        \n                            ResizableComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        /* Copyright (c) 2020, RTE (http://www.rte-france.com)\n *\n * This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n */\n\n\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { CalcHeightDirective } from \"./calc-height.directive\";\nimport { ResizableComponent } from './components/resizable/resizable.component';\n//TODO Find out where directive would be best put\n\n@NgModule({\n  declarations: [CalcHeightDirective, ResizableComponent],\n  imports: [\n    CommonModule\n  ],\n  exports: [\n      CalcHeightDirective, ResizableComponent\n  ]\n})\nexport class UtilitiesModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/XAxisTickFormatPipe.html":{"url":"pipes/XAxisTickFormatPipe.html","title":"pipe - XAxisTickFormatPipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Pipes\n  XAxisTickFormatPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/modules/feed/components/time-line/tick-format-pipe/x-axis-tick-format.pipe.ts\n        \n\n\n\n        \n            Metadata\n            \n                \n                    \n                        Name\n                        xAxisTickFormat\n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            transform\n                        \n                        \n                    \n                \n            \n            \n                \ntransform(value: any, clusterLevel: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/feed/components/time-line/tick-format-pipe/x-axis-tick-format.pipe.ts:86\n                \n            \n\n\n            \n                \n                    return a string formatted from value by the according cluster level\nelse return an empty string\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    clusterLevel\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            transformAdvanced\n                        \n                        \n                    \n                \n            \n            \n                \ntransformAdvanced(value: any, clusterLevel: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/feed/components/time-line/tick-format-pipe/x-axis-tick-format.pipe.ts:62\n                \n            \n\n\n            \n                \n                    special format function used for wrote all ticks on one horizontal line\nif cluster level is correct return a string formatted from value\nelse return an empty string\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    clusterLevel\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            transformHovered\n                        \n                        \n                    \n                \n            \n            \n                \ntransformHovered(value: any, clusterLevel: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/feed/components/time-line/tick-format-pipe/x-axis-tick-format.pipe.ts:23\n                \n            \n\n\n            \n                \n                    return a string formatted from value by the according cluster level\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    clusterLevel\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {Pipe, PipeTransform} from '@angular/core';\nimport * as moment from 'moment';\nimport {TimeService} from \"@ofServices/time.service\";\n\n@Pipe({\n  name: 'xAxisTickFormat'\n})\nexport class XAxisTickFormatPipe implements PipeTransform {\n  constructor(private timeService: TimeService) {\n  }\n  /**\n   * return a string formatted from value by the according cluster level\n   * @param value\n   * @param clusterLevel\n   */\n  transformHovered(value: any, clusterLevel: string): string {\n    if (typeof value === 'string') {\n      return value;\n    }\n    if (clusterLevel) {\n      const date = moment(value);\n      switch (clusterLevel) {\n        case 'Min':\n        case 'Sec': {\n          return this.timeService.predefinedFormat(date, 'dateInsideTooltipsWeek') +\n              'h' + this.timeService.predefinedFormat(date, 'minutesOnly');\n        }\n        case 'Hou': {\n          return this.timeService.predefinedFormat(date, 'dateInsideTooltipsWeek') + 'h';\n        }\n        case 'Day':\n        case 'Dat':\n        case 'Wee':\n        case 'Mon':\n        case 'Yea':\n        case 'nbW': {\n          return this.timeService.predefinedFormat(date, 'dateInsideTooltipsMonth');\n        }\n        default: {\n          return date.format(clusterLevel);\n        }\n      }\n    } else {\n      return '';\n    }\n  }\n\n  /**\n   * special format function used for wrote all ticks on one horizontal line\n   * if cluster level is correct return a string formatted from value\n   * else return an empty string\n   * @param value\n   * @param clusterLevel\n   */\n  transformAdvanced(value: any, clusterLevel: string): string {\n    if (clusterLevel) {\n      const date = moment(value);\n      if (date) {\n        if (clusterLevel === 'Hou') {\n          return this.timeService.predefinedFormat(date, 'hoursOnly') + 'h';\n        } else if (clusterLevel === 'Min') {\n          return this.timeService.predefinedFormat(date, 'minutesOnly');\n        } else if (clusterLevel === 'Sec') {\n          return this.timeService.predefinedFormat(date, 'secondedsOnly');\n        } else if (clusterLevel === 'nbW') {\n          return this.timeService.predefinedFormat(date, 'weekNumberOnly');\n        }\n      }\n    }\n    return '';\n  }\n\n  /**\n   * return a string formatted from value by the according cluster level\n   * else return an empty string\n   * @param value\n   * @param clusterLevel\n   */\n  transform(value: any, clusterLevel: string): string {\n    if (typeof value === 'string') {\n      return value;\n    }\n    if (clusterLevel) {\n    const date = moment(value);\n    const startYear = moment(date).startOf('year');\n      switch (clusterLevel) {\n        case 'Hou' : {\n          if (date.valueOf() === startYear.valueOf()) {\n            return date.format( 'DD MMM YY');\n            // return this.timeService.predefinedFormat(date, 'dateInsideTooltipsMonth');\n          }\n          if (date.hours() === 0) {\n            return this.timeService.predefinedFormat(date, 'dateOnDay');\n          } else {\n            return this.timeService.predefinedFormat(date, 'hoursOnly');\n          }\n        }\n        case 'Min': {\n          if (date.minutes() === 0) {\n            if (date.hour() === 0) {\n              return this.timeService.predefinedFormat(date, 'dateOnDay');\n            } else {\n              return this.timeService.predefinedFormat(date, 'hoursOnly') + 'h';\n            }\n          }\n        }\n        case 'Sec': {\n          if (date.seconds() === 0) {\n            if (date.minutes() === 0) {\n              if (date.hour() === 0) {\n                return this.timeService.predefinedFormat(date, 'dateOnDay');\n              } else {\n                return this.timeService.predefinedFormat(date, 'hoursOnly') + 'h';\n              }\n            } else {\n              return this.timeService.predefinedFormat(date, 'minutesOnly');\n            }\n          }\n        }\n        case 'Day': {\n          if (date.valueOf() === startYear.valueOf()) {\n            return this.timeService.predefinedFormat(date, 'dateOnDayNewYear');\n          }\n          return this.timeService.predefinedFormat(date, 'dateOnDay');\n        }\n        case 'Dat': {\n          if (date.valueOf() === startYear.valueOf()) {\n            return this.timeService.predefinedFormat(date, 'dateSimplifliedOnDayNewYear');\n          }\n          return this.timeService.predefinedFormat(date, 'dateSimplifliedOnDay');\n        }\n        case 'Wee': {\n          return this.timeService.predefinedFormat(date, 'dateOnWeek');\n        }\n        case 'Mon': {\n          return this.timeService.predefinedFormat(date, 'dateOnMonth');\n        }\n        case 'Yea': {\n          return this.timeService.predefinedFormat(date, 'dateOnYear');\n        }\n        case 'nbW': {\n          return this.timeService.predefinedFormat(date, 'dateOnYear');\n        }\n        default: {\n          return date.format(clusterLevel);\n        }\n      }\n    } else {\n      return '';\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ^7.2.2\n        \n            @angular/cdk : ^7.3.7\n        \n            @angular/common : ^7.2.2\n        \n            @angular/compiler : ^7.2.2\n        \n            @angular/core : ^7.2.2\n        \n            @angular/forms : ^7.2.2\n        \n            @angular/http : ^7.2.2\n        \n            @angular/platform-browser : ^7.2.2\n        \n            @angular/platform-browser-dynamic : ^7.2.2\n        \n            @angular/router : ^7.2.2\n        \n            @fortawesome/angular-fontawesome : ^0.3.0\n        \n            @fortawesome/fontawesome-svg-core : ^1.2.17\n        \n            @fortawesome/free-solid-svg-icons : ^5.8.1\n        \n            @ng-bootstrap/ng-bootstrap : ^4.0.0\n        \n            @ngrx/effects : ^7.1.0\n        \n            @ngrx/entity : ^7.1.0\n        \n            @ngrx/router-store : ^7.1.0\n        \n            @ngrx/store : ^7.1.0\n        \n            @ngrx/store-devtools : ^7.1.0\n        \n            @ngx-translate/core : ^11.0.1\n        \n            @ngx-translate/http-loader : ^4.0.0\n        \n            @swimlane/ngx-charts : ^10.1.0\n        \n            @types/jwt-decode : ^2.2.1\n        \n            angular-oauth2-oidc : ^8.0.4\n        \n            bootstrap : ^4.3.1\n        \n            core-js : ^2.6.3\n        \n            guid-typescript : ^1.0.9\n        \n            handlebars : ^4.0.14\n        \n            jwt-decode : ^2.2.0\n        \n            lodash : ^4.17.15\n        \n            moment : ^2.24.0\n        \n            moment-timezone : ^0.5.25\n        \n            ng-event-source : ^1.0.14\n        \n            ngrx-router : ^2.0.1\n        \n            ngx-type-ahead : ^2.0.1\n        \n            rxjs : ^6.3.3\n        \n            svg-pan-zoom : ^3.6.0\n        \n            tslib : ^1.9.3\n        \n            zone.js : ^0.8.29\n    \n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            ActionType   (src/.../thirds.model.ts)\n                        \n                        \n                            ArchiveActionTypes   (src/.../archive.actions.ts)\n                        \n                        \n                            AuthenticationActionTypes   (src/.../authentication.actions.ts)\n                        \n                        \n                            CardActionTypes   (src/.../card.actions.ts)\n                        \n                        \n                            CardOperationType   (src/.../card-operation.model.ts)\n                        \n                        \n                            ConfigActionTypes   (src/.../config.actions.ts)\n                        \n                        \n                            Display   (src/.../light-card.model.ts)\n                        \n                        \n                            FeedActionTypes   (src/.../feed.actions.ts)\n                        \n                        \n                            FilterDateTypes   (src/.../archive-filters.component.ts)\n                        \n                        \n                            FilterType   (src/.../filter.service.ts)\n                        \n                        \n                            InputType   (src/.../thirds.model.ts)\n                        \n                        \n                            LightCardActionTypes   (src/.../light-card.actions.ts)\n                        \n                        \n                            LocalStorageAuthContent   (src/.../authentication.service.ts)\n                        \n                        \n                            MenuActionTypes   (src/.../menu.actions.ts)\n                        \n                        \n                            MessageLevel   (src/.../message.model.ts)\n                        \n                        \n                            SettingsActionTypes   (src/.../settings.actions.ts)\n                        \n                        \n                            Severity   (src/.../light-card.model.ts)\n                        \n                        \n                            Sound   (src/.../light-card.model.ts)\n                        \n                        \n                            ThirdActionComporentModalReturn   (src/.../confirm-modal.component.ts)\n                        \n                        \n                            TimeActionTypes   (src/.../time.actions.ts)\n                        \n                        \n                            TimelineActionTypes   (src/.../timeline.actions.ts)\n                        \n                        \n                            TimeSpeed   (src/.../time.model.ts)\n                        \n                        \n                            TitlePosition   (src/.../card.model.ts)\n                        \n                        \n                            TranslateActionsTypes   (src/.../translate.actions.ts)\n                        \n                        \n                            UserActionsTypes   (src/.../user.actions.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/model/thirds.model.ts\n    \n        \n            \n                \n                    \n                        \n                        ActionType\n                    \n                \n                        \n                            \n                                 EXTERNAL\n                            \n                        \n                        \n                            \n                                Value : EXTERNAL\n                            \n                        \n                        \n                            \n                                 JNLP\n                            \n                        \n                        \n                            \n                                Value : JNLP\n                            \n                        \n                        \n                            \n                                 URL\n                            \n                        \n                        \n                            \n                                Value : URL\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        InputType\n                    \n                \n                        \n                            \n                                 TEXT\n                            \n                        \n                        \n                            \n                                 LIST\n                            \n                        \n                        \n                            \n                                 LIST_RADIO\n                            \n                        \n                        \n                            \n                                 SWITCH_LIST\n                            \n                        \n                        \n                            \n                                 LONGTEXT\n                            \n                        \n                        \n                            \n                                 BOOLEAN\n                            \n                        \n                        \n                            \n                                 STATIC\n                            \n                        \n            \n        \n\n    src/app/store/actions/archive.actions.ts\n    \n        \n            \n                \n                    \n                        \n                        ArchiveActionTypes\n                    \n                \n                        \n                            \n                                 UpdateArchiveFilter\n                            \n                        \n                        \n                            \n                                Value : [Archive] Update Filter\n                            \n                        \n                        \n                            \n                                 SendArchiveQuery\n                            \n                        \n                        \n                            \n                                Value : [Archive] Send Query\n                            \n                        \n                        \n                            \n                                 ArchiveQuerySuccess\n                            \n                        \n                        \n                            \n                                Value : [Archive] Query was successful\n                            \n                        \n                        \n                            \n                                 UpdateArchivePage\n                            \n                        \n                        \n                            \n                                Value : [Archive] Update query result page\n                            \n                        \n                        \n                            \n                                 HandleUnexpectedError\n                            \n                        \n                        \n                            \n                                Value : [Archive] Handle unexpected error related to archived card issue\n                            \n                        \n                        \n                            \n                                 SelectArchivedLightCard\n                            \n                        \n                        \n                            \n                                Value : [Archive] Select one archived light card\n                            \n                        \n            \n        \n\n    src/app/store/actions/authentication.actions.ts\n    \n        \n            \n                \n                    \n                        \n                        AuthenticationActionTypes\n                    \n                \n                        \n                            \n                                 InitAuthStatus\n                            \n                        \n                        \n                            \n                                Value : [Authentication] Init Authentication Status\n                            \n                        \n                        \n                            \n                                 CheckAuthenticationStatus\n                            \n                        \n                        \n                            \n                                Value : [Authentication] Check Authentication Status\n                            \n                        \n                        \n                            \n                                 AcceptLogIn\n                            \n                        \n                        \n                            \n                                Value : [Authentication] Accept the user log in attempt\n                            \n                        \n                        \n                            \n                                 RejectLogIn\n                            \n                        \n                        \n                            \n                                Value : [Authentication] Reject the user log in attempt\n                            \n                        \n                        \n                            \n                                 TryToLogIn\n                            \n                        \n                        \n                            \n                                Value : [Authentication] Try to log the user in\n                            \n                        \n                        \n                            \n                                 TryToLogOut\n                            \n                        \n                        \n                            \n                                Value : [Authentication] Try to log the user out\n                            \n                        \n                        \n                            \n                                 AcceptLogOut\n                            \n                        \n                        \n                            \n                                Value : [Authentication] Accept the user log out attempt\n                            \n                        \n                        \n                            \n                                 AcceptLogOutSuccess\n                            \n                        \n                        \n                            \n                                Value : [Authentication] Success Accept the user log out attempt\n                            \n                        \n                        \n                            \n                                 CheckImplicitFlowAuthenticationStatus\n                            \n                        \n                        \n                            \n                                Value : [Authentication] Check Authentication Status specifically for the Implicit Flow\n                            \n                        \n                        \n                            \n                                 UselessAuthAction\n                            \n                        \n                        \n                            \n                                Value : [Authentication] test purpose action\n                            \n                        \n                        \n                            \n                                 ImplicitallyAuthenticated\n                            \n                        \n                        \n                            \n                                Value : [Authentication] user is authentication using Implicit Flow\n                            \n                        \n                        \n                            \n                                 UnAuthenticationFromImplicitFlow\n                            \n                        \n                        \n                            \n                                Value : [Authentication[ user is log out by implicit Flow internal managment\n                            \n                        \n            \n        \n\n    src/app/store/actions/card.actions.ts\n    \n        \n            \n                \n                    \n                        \n                        CardActionTypes\n                    \n                \n                        \n                            \n                                 ClearCard\n                            \n                        \n                        \n                            \n                                Value : [Card] Clear\n                            \n                        \n                        \n                            \n                                 LoadCard\n                            \n                        \n                        \n                            \n                                Value : [Card] Load Card\n                            \n                        \n                        \n                            \n                                 LoadCardSuccess\n                            \n                        \n                        \n                            \n                                Value : [Card] Load Card Success\n                            \n                        \n                        \n                            \n                                 LoadCardFailure\n                            \n                        \n                        \n                            \n                                Value : [Card] Load Card Fail\n                            \n                        \n                        \n                            \n                                 LoadArchivedCard\n                            \n                        \n                        \n                            \n                                Value : [Card] Load Archived Card\n                            \n                        \n                        \n                            \n                                 LoadArchivedCardSuccess\n                            \n                        \n                        \n                            \n                                Value : [Card] Load Archived Card Success\n                            \n                        \n                        \n                            \n                                 LoadArchivedCardFailure\n                            \n                        \n                        \n                            \n                                Value : [Card] Load Archived Card Fail\n                            \n                        \n                        \n                            \n                                 HandleUnexpectedError\n                            \n                        \n                        \n                            \n                                Value : [Card] Handle unexpected error related to card issue\n                            \n                        \n                        \n                            \n                                 AddActionsAppear\n                            \n                        \n                        \n                            \n                                Value : [Card] Add Actions Appear\n                            \n                        \n            \n        \n\n    src/app/model/card-operation.model.ts\n    \n        \n            \n                \n                    \n                        \n                        CardOperationType\n                    \n                \n                        \n                            \n                                 ADD\n                            \n                        \n                        \n                            \n                                 UPDATE\n                            \n                        \n                        \n                            \n                                 DELETE\n                            \n                        \n            \n        \n\n    src/app/store/actions/config.actions.ts\n    \n        \n            \n                \n                    \n                        \n                        ConfigActionTypes\n                    \n                \n                        \n                            \n                                 LoadConfig\n                            \n                        \n                        \n                            \n                                Value : [Config] Load Config\n                            \n                        \n                        \n                            \n                                 LoadConfigSuccess\n                            \n                        \n                        \n                            \n                                Value : [Config] Load Config Success\n                            \n                        \n                        \n                            \n                                 LoadConfigFailure\n                            \n                        \n                        \n                            \n                                Value : [Config] Load Config Fail\n                            \n                        \n                        \n                            \n                                 HandleUnexpectedError\n                            \n                        \n                        \n                            \n                                Value : [Config] Handle unexpected error related to configuration issue\n                            \n                        \n            \n        \n\n    src/app/model/light-card.model.ts\n    \n        \n            \n                \n                    \n                        \n                        Display\n                    \n                \n                        \n                            \n                                 BUBBLE\n                            \n                        \n                        \n                            \n                                 LINE\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        Severity\n                    \n                \n                        \n                            \n                                 ALARM\n                            \n                        \n                        \n                            \n                                Value : ALARM\n                            \n                        \n                        \n                            \n                                 ACTION\n                            \n                        \n                        \n                            \n                                Value : ACTION\n                            \n                        \n                        \n                            \n                                 INFORMATION\n                            \n                        \n                        \n                            \n                                Value : INFORMATION\n                            \n                        \n                        \n                            \n                                 COMPLIANT\n                            \n                        \n                        \n                            \n                                Value : COMPLIANT\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        Sound\n                    \n                \n                        \n                            \n                                 INFORMATION\n                            \n                        \n                        \n                            \n                                 COMPLIANT\n                            \n                        \n            \n        \n\n    src/app/store/actions/feed.actions.ts\n    \n        \n            \n                \n                    \n                        \n                        FeedActionTypes\n                    \n                \n                        \n                            \n                                 ApplyFilter\n                            \n                        \n                        \n                            \n                                Value : [Feed] Change filter Status\n                            \n                        \n                        \n                            \n                                 InitFilter\n                            \n                        \n                        \n                            \n                                Value : [Feed] Init filter\n                            \n                        \n            \n        \n\n    src/app/modules/archives/components/archive-filters/archive-filters.component.ts\n    \n        \n            \n                \n                    \n                        \n                        FilterDateTypes\n                    \n                \n                        \n                            \n                                 PUBLISH_DATE_FROM_PARAM\n                            \n                        \n                        \n                            \n                                Value : publishDateFrom\n                            \n                        \n                        \n                            \n                                 PUBLISH_DATE_TO_PARAM\n                            \n                        \n                        \n                            \n                                Value : publishDateTo\n                            \n                        \n                        \n                            \n                                 ACTIVE_FROM_PARAM\n                            \n                        \n                        \n                            \n                                Value : activeFrom\n                            \n                        \n                        \n                            \n                                 ACTIVE_TO_PARAM\n                            \n                        \n                        \n                            \n                                Value : activeTo\n                            \n                        \n            \n        \n\n    src/app/services/filter.service.ts\n    \n        \n            \n                \n                    \n                        \n                        FilterType\n                    \n                \n                        \n                            \n                                 TYPE_FILTER\n                            \n                        \n                        \n                            \n                                 RECIPIENT_FILTER\n                            \n                        \n                        \n                            \n                                 TAG_FILTER\n                            \n                        \n                        \n                            \n                                 TIME_FILTER\n                            \n                        \n                        \n                            \n                                 TEST_FILTER\n                            \n                        \n            \n        \n\n    src/app/store/actions/light-card.actions.ts\n    \n        \n            \n                \n                    \n                        \n                        LightCardActionTypes\n                    \n                \n                        \n                            \n                                 LoadLightCards\n                            \n                        \n                        \n                            \n                                Value : [LCard] Load\n                            \n                        \n                        \n                            \n                                 EmptyLightCards\n                            \n                        \n                        \n                            \n                                Value : [LCard] Empty\n                            \n                        \n                        \n                            \n                                 LoadLightCardsSuccess\n                            \n                        \n                        \n                            \n                                Value : [LCard] Load Success\n                            \n                        \n                        \n                            \n                                 LoadLightCardsExtendedData\n                            \n                        \n                        \n                            \n                                Value : [LCard] Load Extended Data\n                            \n                        \n                        \n                            \n                                 LoadLightCardsFailure\n                            \n                        \n                        \n                            \n                                Value : [LCard] Load Fail\n                            \n                        \n                        \n                            \n                                 SelectLightCard\n                            \n                        \n                        \n                            \n                                Value : [LCard] Select One\n                            \n                        \n                        \n                            \n                                 ClearLightCardSelection\n                            \n                        \n                        \n                            \n                                Value : [LCard] Clear Light Card Selection\n                            \n                        \n                        \n                            \n                                 AddLightCardFailure\n                            \n                        \n                        \n                            \n                                Value : [LCard] Add Light Card Fail\n                            \n                        \n                        \n                            \n                                 UpdatedSubscription\n                            \n                        \n                        \n                            \n                                Value : [LCard] UpdateSubscription\n                            \n                        \n                        \n                            \n                                 HandleUnexpectedError\n                            \n                        \n                        \n                            \n                                Value : [LCard] Handle unexpected error related to authentication issue\n                            \n                        \n                        \n                            \n                                 RemoveLightCard\n                            \n                        \n                        \n                            \n                                Value : [LCard] Remove a card\n                            \n                        \n                        \n                            \n                                 AddThirdActions\n                            \n                        \n                        \n                            \n                                Value : [LCard] Adds some Third Actions to existing card\n                            \n                        \n                        \n                            \n                                 UpdateALightCard\n                            \n                        \n                        \n                            \n                                Value : [LCard] Update a Light Card\n                            \n                        \n                        \n                            \n                                 UpdateAnAction\n                            \n                        \n                        \n                            \n                                Value : [LCard] Update one Action of a LightCard\n                            \n                        \n                        \n                            \n                                 UpdateAnActionFailure\n                            \n                        \n                        \n                            \n                                Value : [LCard] No actions where available to update for the current selected card in the state\n                            \n                        \n                        \n                            \n                                 ThirdActionAlreadyLoaded\n                            \n                        \n                        \n                            \n                                Value : [LCard] Light Card contains actions\n                            \n                        \n                        \n                            \n                                 ThirdActionAlreadyUpdated\n                            \n                        \n                        \n                            \n                                Value : [LCard] Third Action unchanged\n                            \n                        \n                        \n                            \n                                 DelayedLightCardUpdate\n                            \n                        \n                        \n                            \n                                Value : [LCard] update Light Card actions later\n                            \n                        \n                        \n                            \n                                 LightCardAlreadyUpdated\n                            \n                        \n                        \n                            \n                                Value : [LCard] Light Card already Updated\n                            \n                        \n            \n        \n\n    src/app/services/authentication/authentication.service.ts\n    \n        \n            \n                \n                    \n                        \n                        LocalStorageAuthContent\n                    \n                \n                        \n                            \n                                 token\n                            \n                        \n                        \n                            \n                                Value : token\n                            \n                        \n                        \n                            \n                                 expirationDate\n                            \n                        \n                        \n                            \n                                Value : expirationDate\n                            \n                        \n                        \n                            \n                                 identifier\n                            \n                        \n                        \n                            \n                                Value : identifier\n                            \n                        \n                        \n                            \n                                 clientId\n                            \n                        \n                        \n                            \n                                Value : clientId\n                            \n                        \n            \n        \n\n    src/app/store/actions/menu.actions.ts\n    \n        \n            \n                \n                    \n                        \n                        MenuActionTypes\n                    \n                \n                        \n                            \n                                 LoadMenu\n                            \n                        \n                        \n                            \n                                Value : [Menu] Load Menu\n                            \n                        \n                        \n                            \n                                 LoadMenuSuccess\n                            \n                        \n                        \n                            \n                                Value : [Menu] Load Menu Success\n                            \n                        \n                        \n                            \n                                 LoadMenuFailure\n                            \n                        \n                        \n                            \n                                Value : [Menu] Load Menu Fail\n                            \n                        \n                        \n                            \n                                 HandleUnexpectedError\n                            \n                        \n                        \n                            \n                                Value : [Menu] Handle unexpected error\n                            \n                        \n                        \n                            \n                                 SelectMenuLink\n                            \n                        \n                        \n                            \n                                Value : [Menu] Select Menu Link\n                            \n                        \n                        \n                            \n                                 SelectMenuLinkSuccess\n                            \n                        \n                        \n                            \n                                Value : [Menu] Select Menu Link Success\n                            \n                        \n                        \n                            \n                                 SelectMenuLinkFailure\n                            \n                        \n                        \n                            \n                                Value : [Menu] Select Menu Link Failure\n                            \n                        \n            \n        \n\n    src/app/model/message.model.ts\n    \n        \n            \n                \n                    \n                        \n                        MessageLevel\n                    \n                \n                        \n                            \n                                 ERROR\n                            \n                        \n                        \n                            \n                                 INFO\n                            \n                        \n                        \n                            \n                                 DEBUG\n                            \n                        \n            \n        \n\n    src/app/store/actions/settings.actions.ts\n    \n        \n            \n                \n                    \n                        \n                        SettingsActionTypes\n                    \n                \n                        \n                            \n                                 LoadSettings\n                            \n                        \n                        \n                            \n                                Value : [Settings] Load Settings\n                            \n                        \n                        \n                            \n                                 LoadSettingsSuccess\n                            \n                        \n                        \n                            \n                                Value : [Settings] Load Settings Success\n                            \n                        \n                        \n                            \n                                 LoadSettingsFailure\n                            \n                        \n                        \n                            \n                                Value : [Settings] Load Settings Fail\n                            \n                        \n                        \n                            \n                                 PatchSettings\n                            \n                        \n                        \n                            \n                                Value : [Settings] Patch Settings\n                            \n                        \n                        \n                            \n                                 PatchSettingsSuccess\n                            \n                        \n                        \n                            \n                                Value : [Settings] Patch Settings Success\n                            \n                        \n                        \n                            \n                                 PatchSettingsFailure\n                            \n                        \n                        \n                            \n                                Value : [Settings] Patch Settings Fail\n                            \n                        \n                        \n                            \n                                 HandleUnexpectedError\n                            \n                        \n                        \n                            \n                                Value : [Settings] Handle unexpected error related to user settings issue\n                            \n                        \n            \n        \n\n    src/app/modules/cards/components/action/confirm-modal/confirm-modal.component.ts\n    \n        \n            \n                \n                    \n                        \n                        ThirdActionComporentModalReturn\n                    \n                \n                        \n                            \n                                 CANCEL\n                            \n                        \n                        \n                            \n                                 OK\n                            \n                        \n                        \n                            \n                                 DISMISS\n                            \n                        \n            \n        \n\n    src/app/store/actions/time.actions.ts\n    \n        \n            \n                \n                    \n                        \n                        TimeActionTypes\n                    \n                \n                        \n                            \n                                 Tick\n                            \n                        \n                        \n                            \n                                Value : [Time] tick\n                            \n                        \n                        \n                            \n                                 UpdateTimeReference\n                            \n                        \n                        \n                            \n                                Value : [Time] try to update the time reference\n                            \n                        \n                        \n                            \n                                 FailToUpdateTimeReference\n                            \n                        \n                        \n                            \n                                Value : [Time] fail to update the time reference\n                            \n                        \n            \n        \n\n    src/app/store/actions/timeline.actions.ts\n    \n        \n            \n                \n                    \n                        \n                        TimelineActionTypes\n                    \n                \n                        \n                            \n                                 InitTimeline\n                            \n                        \n                        \n                            \n                                Value : [timeline] Init timeline\n                            \n                        \n                        \n                            \n                                 SetCardDataTimeline\n                            \n                        \n                        \n                            \n                                Value : [timeline] Set Card Data\n                            \n                        \n            \n        \n\n    src/app/model/time.model.ts\n    \n        \n            \n                \n                    \n                        \n                        TimeSpeed\n                    \n                \n                        \n                            \n                                 X1\n                            \n                        \n                        \n                            \n                                Value : 1\n                            \n                        \n                        \n                            \n                                 X2\n                            \n                        \n                        \n                            \n                                Value : 2\n                            \n                        \n                        \n                            \n                                 X10\n                            \n                        \n                        \n                            \n                                Value : 10\n                            \n                        \n                        \n                            \n                                 X60\n                            \n                        \n                        \n                            \n                                Value : 60\n                            \n                        \n                        \n                            \n                                 X3600\n                            \n                        \n                        \n                            \n                                Value : 3600\n                            \n                        \n                        \n                            \n                                 HALF\n                            \n                        \n                        \n                            \n                                Value : 0.5\n                            \n                        \n            \n        \n\n    src/app/model/card.model.ts\n    \n        \n            \n                \n                    \n                        \n                        TitlePosition\n                    \n                \n                        \n                            \n                                 UP\n                            \n                        \n                        \n                            \n                                 DOWN\n                            \n                        \n                        \n                            \n                                 NONE\n                            \n                        \n            \n        \n\n    src/app/store/actions/translate.actions.ts\n    \n        \n            \n                \n                    \n                        \n                        TranslateActionsTypes\n                    \n                \n                        \n                            \n                                 UpdateTranslation\n                            \n                        \n                        \n                            \n                                Value : [i18n] Translation need an update\n                            \n                        \n                        \n                            \n                                 UpdateTranslationSuccessful\n                            \n                        \n                        \n                            \n                                Value : [i18n] Translation successfully updated\n                            \n                        \n                        \n                            \n                                 UpdateTranslationFailed\n                            \n                        \n                        \n                            \n                                Value : [i18n] Translation update failed\n                            \n                        \n                        \n                            \n                                 TranslationUpToDate\n                            \n                        \n                        \n                            \n                                Value : [i18n] all Translation materials are already loaded\n                            \n                        \n                        \n                            \n                                 RefreshTranslation\n                            \n                        \n                        \n                            \n                                Value : [i18n] translate handler has been refreshed\n                            \n                        \n            \n        \n\n    src/app/store/actions/user.actions.ts\n    \n        \n            \n                \n                    \n                        \n                        UserActionsTypes\n                    \n                \n                        \n                            \n                                 UserApplicationRegistered\n                            \n                        \n                        \n                            \n                                Value : [User] User application registered\n                            \n                        \n                        \n                            \n                                 UserApplicationNotRegistered\n                            \n                        \n                        \n                            \n                                Value : [User] User application not registered\n                            \n                        \n                        \n                            \n                                 CreateUserApplication\n                            \n                        \n                        \n                            \n                                Value : [User] Create the User in the application\n                            \n                        \n                        \n                            \n                                 CreateUserApplicationOnSuccess\n                            \n                        \n                        \n                            \n                                Value : [User] Create the User in the application on success\n                            \n                        \n                        \n                            \n                                 CreateUserApplicationOnFailure\n                            \n                        \n                        \n                            \n                                Value : [User] Create the User in the application on failure\n                            \n                        \n                        \n                            \n                                 HandleUnexpectedError\n                            \n                        \n                        \n                            \n                                Value : [User] Handle unexpected error related to user creation issue\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"overview - index","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_ArchivesModule\n\n\n\ncluster_ArchivesModule_declarations\n\n\n\ncluster_ArchivesModule_imports\n\n\n\ncluster_CardsModule\n\n\n\ncluster_CardsModule_declarations\n\n\n\ncluster_CardsModule_exports\n\n\n\ncluster_CardsModule_providers\n\n\n\ncluster_FeedModule\n\n\n\ncluster_FeedModule_declarations\n\n\n\ncluster_FeedModule_imports\n\n\n\ncluster_FeedModule_exports\n\n\n\ncluster_ServicesModule\n\n\n\ncluster_ServicesModule_providers\n\n\n\ncluster_SettingsModule\n\n\n\ncluster_SettingsModule_declarations\n\n\n\ncluster_SettingsModule_imports\n\n\n\ncluster_StateModule\n\n\n\ncluster_StateModule_imports\n\n\n\ncluster_ThirdpartyModule\n\n\n\ncluster_ThirdpartyModule_declarations\n\n\n\ncluster_ThirdpartyModule_imports\n\n\n\ncluster_UtilitiesModule\n\n\n\ncluster_UtilitiesModule_declarations\n\n\n\ncluster_UtilitiesModule_exports\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nCustomLogoComponent\n\nCustomLogoComponent\n\nAppModule -->\n\nCustomLogoComponent->AppModule\n\n\n\n\n\nIconComponent\n\nIconComponent\n\nAppModule -->\n\nIconComponent->AppModule\n\n\n\n\n\nInfoComponent\n\nInfoComponent\n\nAppModule -->\n\nInfoComponent->AppModule\n\n\n\n\n\nLoginComponent\n\nLoginComponent\n\nAppModule -->\n\nLoginComponent->AppModule\n\n\n\n\n\nMenuLinkComponent\n\nMenuLinkComponent\n\nAppModule -->\n\nMenuLinkComponent->AppModule\n\n\n\n\n\nNavbarComponent\n\nNavbarComponent\n\nAppModule -->\n\nNavbarComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nServicesModule\n\nServicesModule\n\nAppModule -->\n\nServicesModule->AppModule\n\n\n\n\n\nStateModule\n\nStateModule\n\nAppModule -->\n\nStateModule->AppModule\n\n\n\n\n\nUtilitiesModule\n\nUtilitiesModule\n\nAppModule -->\n\nUtilitiesModule->AppModule\n\n\n\n\n\nCardsModule\n\nCardsModule\n\nCardsModule -->\n\nUtilitiesModule->CardsModule\n\n\n\n\n\nFeedModule\n\nFeedModule\n\nFeedModule -->\n\nUtilitiesModule->FeedModule\n\n\n\n\n\nCalcHeightDirective \n\nCalcHeightDirective \n\nCalcHeightDirective  -->\n\nUtilitiesModule->CalcHeightDirective \n\n\n\n\n\nResizableComponent \n\nResizableComponent \n\nResizableComponent  -->\n\nUtilitiesModule->ResizableComponent \n\n\n\n\n\nArchiveFiltersComponent\n\nArchiveFiltersComponent\n\n\n\nArchivesModule\n\nArchivesModule\n\nArchivesModule -->\n\nArchiveFiltersComponent->ArchivesModule\n\n\n\n\n\nArchiveListComponent\n\nArchiveListComponent\n\nArchivesModule -->\n\nArchiveListComponent->ArchivesModule\n\n\n\n\n\nArchiveListPageComponent\n\nArchiveListPageComponent\n\nArchivesModule -->\n\nArchiveListPageComponent->ArchivesModule\n\n\n\n\n\nArchivesComponent\n\nArchivesComponent\n\nArchivesModule -->\n\nArchivesComponent->ArchivesModule\n\n\n\n\n\nDatetimeFilterComponent\n\nDatetimeFilterComponent\n\nArchivesModule -->\n\nDatetimeFilterComponent->ArchivesModule\n\n\n\n\n\nMultiFilterComponent\n\nMultiFilterComponent\n\nArchivesModule -->\n\nMultiFilterComponent->ArchivesModule\n\n\n\n\n\nArchivesRoutingModule\n\nArchivesRoutingModule\n\nArchivesModule -->\n\nArchivesRoutingModule->ArchivesModule\n\n\n\nArchivesModule -->\n\nCardsModule->ArchivesModule\n\n\n\n\n\nCardComponent \n\nCardComponent \n\nCardComponent  -->\n\nCardsModule->CardComponent \n\n\n\n\n\nCardDetailsComponent \n\nCardDetailsComponent \n\nCardDetailsComponent  -->\n\nCardsModule->CardDetailsComponent \n\n\n\n\n\nConfirmModalComponent \n\nConfirmModalComponent \n\nConfirmModalComponent  -->\n\nCardsModule->ConfirmModalComponent \n\n\n\n\n\nDetailComponent \n\nDetailComponent \n\nDetailComponent  -->\n\nCardsModule->DetailComponent \n\n\n\n\n\nDetailsComponent \n\nDetailsComponent \n\nDetailsComponent  -->\n\nCardsModule->DetailsComponent \n\n\n\nFeedModule -->\n\nCardsModule->FeedModule\n\n\n\n\n\nActionComponent\n\nActionComponent\n\nCardsModule -->\n\nActionComponent->CardsModule\n\n\n\n\n\nCardComponent\n\nCardComponent\n\nCardsModule -->\n\nCardComponent->CardsModule\n\n\n\n\n\nCardDetailsComponent\n\nCardDetailsComponent\n\nCardsModule -->\n\nCardDetailsComponent->CardsModule\n\n\n\n\n\nConfirmModalComponent\n\nConfirmModalComponent\n\nCardsModule -->\n\nConfirmModalComponent->CardsModule\n\n\n\n\n\nDetailComponent\n\nDetailComponent\n\nCardsModule -->\n\nDetailComponent->CardsModule\n\n\n\n\n\nDetailsComponent\n\nDetailsComponent\n\nCardsModule -->\n\nDetailsComponent->CardsModule\n\n\n\n\n\nHandlebarsService\n\nHandlebarsService\n\nCardsModule -->\n\nHandlebarsService->CardsModule\n\n\n\n\n\nCardListComponent\n\nCardListComponent\n\nFeedModule -->\n\nCardListComponent->FeedModule\n\n\n\n\n\nCustomTimelineChartComponent\n\nCustomTimelineChartComponent\n\nFeedModule -->\n\nCustomTimelineChartComponent->FeedModule\n\n\n\n\n\nDraggableDirective\n\nDraggableDirective\n\nFeedModule -->\n\nDraggableDirective->FeedModule\n\n\n\n\n\nFeedComponent\n\nFeedComponent\n\nFeedModule -->\n\nFeedComponent->FeedModule\n\n\n\n\n\nFiltersComponent\n\nFiltersComponent\n\nFeedModule -->\n\nFiltersComponent->FeedModule\n\n\n\n\n\nInitChartComponent\n\nInitChartComponent\n\nFeedModule -->\n\nInitChartComponent->FeedModule\n\n\n\n\n\nMouseWheelDirective\n\nMouseWheelDirective\n\nFeedModule -->\n\nMouseWheelDirective->FeedModule\n\n\n\n\n\nNoSelectionComponent\n\nNoSelectionComponent\n\nFeedModule -->\n\nNoSelectionComponent->FeedModule\n\n\n\n\n\nTagsFilterComponent\n\nTagsFilterComponent\n\nFeedModule -->\n\nTagsFilterComponent->FeedModule\n\n\n\n\n\nTimeFilterComponent\n\nTimeFilterComponent\n\nFeedModule -->\n\nTimeFilterComponent->FeedModule\n\n\n\n\n\nTimeLineComponent\n\nTimeLineComponent\n\nFeedModule -->\n\nTimeLineComponent->FeedModule\n\n\n\n\n\nTypeFilterComponent\n\nTypeFilterComponent\n\nFeedModule -->\n\nTypeFilterComponent->FeedModule\n\n\n\n\n\nXAxisTickFormatPipe\n\nXAxisTickFormatPipe\n\nFeedModule -->\n\nXAxisTickFormatPipe->FeedModule\n\n\n\n\n\nFeedComponent \n\nFeedComponent \n\nFeedComponent  -->\n\nFeedModule->FeedComponent \n\n\n\n\n\nFeedRoutingModule\n\nFeedRoutingModule\n\nFeedModule -->\n\nFeedRoutingModule->FeedModule\n\n\n\n\n\nAuthenticationService\n\nAuthenticationService\n\nServicesModule -->\n\nAuthenticationService->ServicesModule\n\n\n\n\n\nCardService\n\nCardService\n\nServicesModule -->\n\nCardService->ServicesModule\n\n\n\n\n\nConfigService\n\nConfigService\n\nServicesModule -->\n\nConfigService->ServicesModule\n\n\n\n\n\nFilterService\n\nFilterService\n\nServicesModule -->\n\nFilterService->ServicesModule\n\n\n\n\n\nI18nService\n\nI18nService\n\nServicesModule -->\n\nI18nService->ServicesModule\n\n\n\n\n\nNotifyService\n\nNotifyService\n\nServicesModule -->\n\nNotifyService->ServicesModule\n\n\n\n\n\nSettingsService\n\nSettingsService\n\nServicesModule -->\n\nSettingsService->ServicesModule\n\n\n\n\n\nThirdActionService\n\nThirdActionService\n\nServicesModule -->\n\nThirdActionService->ServicesModule\n\n\n\n\n\nThirdsService\n\nThirdsService\n\nServicesModule -->\n\nThirdsService->ServicesModule\n\n\n\n\n\nTimeService\n\nTimeService\n\nServicesModule -->\n\nTimeService->ServicesModule\n\n\n\n\n\nTokenInjector\n\nTokenInjector\n\nServicesModule -->\n\nTokenInjector->ServicesModule\n\n\n\n\n\nUserService\n\nUserService\n\nServicesModule -->\n\nUserService->ServicesModule\n\n\n\n\n\nBaseSettingComponent\n\nBaseSettingComponent\n\n\n\nSettingsModule\n\nSettingsModule\n\nSettingsModule -->\n\nBaseSettingComponent->SettingsModule\n\n\n\n\n\nEmailSettingComponent\n\nEmailSettingComponent\n\nSettingsModule -->\n\nEmailSettingComponent->SettingsModule\n\n\n\n\n\nListSettingComponent\n\nListSettingComponent\n\nSettingsModule -->\n\nListSettingComponent->SettingsModule\n\n\n\n\n\nMultiSettingsComponent\n\nMultiSettingsComponent\n\nSettingsModule -->\n\nMultiSettingsComponent->SettingsModule\n\n\n\n\n\nSettingsComponent\n\nSettingsComponent\n\nSettingsModule -->\n\nSettingsComponent->SettingsModule\n\n\n\n\n\nTextSettingComponent\n\nTextSettingComponent\n\nSettingsModule -->\n\nTextSettingComponent->SettingsModule\n\n\n\n\n\nTypeAheadSettingsComponent\n\nTypeAheadSettingsComponent\n\nSettingsModule -->\n\nTypeAheadSettingsComponent->SettingsModule\n\n\n\n\n\nSettingsRoutingModule\n\nSettingsRoutingModule\n\nSettingsModule -->\n\nSettingsRoutingModule->SettingsModule\n\n\n\n\n\n!environment\n\n!environment\n\nStateModule -->\n\n!environment->StateModule\n\n\n\n\n\nIframeDisplayComponent\n\nIframeDisplayComponent\n\n\n\nThirdpartyModule\n\nThirdpartyModule\n\nThirdpartyModule -->\n\nIframeDisplayComponent->ThirdpartyModule\n\n\n\n\n\nThirdpartyRoutingModule\n\nThirdpartyRoutingModule\n\nThirdpartyModule -->\n\nThirdpartyRoutingModule->ThirdpartyModule\n\n\n\n\n\nCalcHeightDirective\n\nCalcHeightDirective\n\nUtilitiesModule -->\n\nCalcHeightDirective->UtilitiesModule\n\n\n\n\n\nResizableComponent\n\nResizableComponent\n\nUtilitiesModule -->\n\nResizableComponent->UtilitiesModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        14 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    38 Components\n                \n            \n        \n        \n            \n                \n                    \n                    3 Directives\n                \n            \n        \n        \n            \n                \n                    \n                    25 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    1 Pipe\n                \n            \n        \n        \n            \n                \n                    \n                    118 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    14 Interfaces\n                \n            \n        \n        \n            \n                \n                    \n                    \n                        30 Routes\n                    \n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ArchivesModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ArchivesRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        CardsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        FeedModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        FeedRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ServicesModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SettingsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SettingsRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        StateModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ThirdpartyModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ThirdpartyRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UtilitiesModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"routes.html":{"url":"routes.html","title":"routes - routes","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Routes\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            ArchiveActions   (src/.../archive.actions.ts)\n                        \n                        \n                            AuthenticationActions   (src/.../authentication.actions.ts)\n                        \n                        \n                            CardActions   (src/.../card.actions.ts)\n                        \n                        \n                            ConfigActions   (src/.../config.actions.ts)\n                        \n                        \n                            FeedActions   (src/.../feed.actions.ts)\n                        \n                        \n                            LightCardActions   (src/.../light-card.actions.ts)\n                        \n                        \n                            MenuActions   (src/.../menu.actions.ts)\n                        \n                        \n                            Omit   (src/.../thirds.model.ts)\n                        \n                        \n                            SettingsActions   (src/.../settings.actions.ts)\n                        \n                        \n                            TimeActions   (src/.../time.actions.ts)\n                        \n                        \n                            TimelineActions   (src/.../timeline.actions.ts)\n                        \n                        \n                            TranslateActions   (src/.../translate.actions.ts)\n                        \n                        \n                            UserActions   (src/.../user.actions.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/store/actions/archive.actions.ts\n    \n    \n        \n            \n                \n                    \n                    ArchiveActions\n                \n            \n            \n                \n                        UpdateArchiveFilter | SendArchiveQuery | HandleUnexpectedError | ArchiveQuerySuccess | UpdateArchivePage | SelectArchivedLightCard\n\n                \n            \n        \n    \n    src/app/store/actions/authentication.actions.ts\n    \n    \n        \n            \n                \n                    \n                    AuthenticationActions\n                \n            \n            \n                \n                        InitAuthStatus | AcceptLogIn | RejectLogIn | TryToLogIn | TryToLogOut | CheckAuthenticationStatus | AcceptLogOut | AcceptLogOutSuccess | CheckImplicitFlowAuthenticationStatus | UselessAuthAction | ImplicitlyAuthenticated | UnAuthenticationFromImplicitFlow\n\n                \n            \n        \n    \n    src/app/store/actions/card.actions.ts\n    \n    \n        \n            \n                \n                    \n                    CardActions\n                \n            \n            \n                \n                        ClearCard | LoadCard | LoadCardSuccess | LoadCardFailure | LoadArchivedCard | LoadArchivedCardSuccess | LoadArchivedCardFailure | HandleUnexpectedError | AddActionsAppear\n\n                \n            \n        \n    \n    src/app/store/actions/config.actions.ts\n    \n    \n        \n            \n                \n                    \n                    ConfigActions\n                \n            \n            \n                \n                        LoadConfig | LoadConfigSuccess | LoadConfigFailure | HandleUnexpectedError\n\n                \n            \n        \n    \n    src/app/store/actions/feed.actions.ts\n    \n    \n        \n            \n                \n                    \n                    FeedActions\n                \n            \n            \n                \n                        InitFilters | ApplyFilter\n\n                \n            \n        \n    \n    src/app/store/actions/light-card.actions.ts\n    \n    \n        \n            \n                \n                    \n                    LightCardActions\n                \n            \n            \n                \n                        LoadLightCards | LoadLightCardsSuccess | LoadLightCardsFailure | SelectLightCard | ClearLightCardSelection | AddLightCardFailure | UpdatedSubscription | HandleUnexpectedError | EmptyLightCards | AddThirdActions | UpdateALightCard | UpdateAnAction | UpdateAnActionFailure | ThirdActionAlreadyLoaded | ThirdActionAlreadyUpdated | DelayedLightCardUpdate | LightCardAlreadyUpdated | RemoveLightCard\n\n                \n            \n        \n    \n    src/app/store/actions/menu.actions.ts\n    \n    \n        \n            \n                \n                    \n                    MenuActions\n                \n            \n            \n                \n                        LoadMenu | LoadMenuSuccess | LoadMenuFailure | HandleUnexpectedError | SelectMenuLink | SelectMenuLinkSuccess | SelectMenuLinkFailure\n\n                \n            \n        \n    \n    src/app/model/thirds.model.ts\n    \n    \n        \n            \n                \n                    \n                    Omit\n                \n            \n            \n                \n                        Pick>\n\n                \n            \n        \n    \n    src/app/store/actions/settings.actions.ts\n    \n    \n        \n            \n                \n                    \n                    SettingsActions\n                \n            \n            \n                \n                        LoadSettings | LoadSettingsSuccess | LoadSettingsFailure | PatchSettings | PatchSettingsSuccess | PatchSettingsFailure | HandleUnexpectedError\n\n                \n            \n        \n    \n    src/app/store/actions/time.actions.ts\n    \n    \n        \n            \n                \n                    \n                    TimeActions\n                \n            \n            \n                \n                        Tick | UpdateTimeReference | FailToUpdateTimeReference\n\n                \n            \n        \n    \n    src/app/store/actions/timeline.actions.ts\n    \n    \n        \n            \n                \n                    \n                    TimelineActions\n                \n            \n            \n                \n                        InitTimeline | SetCardDataTimeline\n\n                \n            \n        \n    \n    src/app/store/actions/translate.actions.ts\n    \n    \n        \n            \n                \n                    \n                    TranslateActions\n                \n            \n            \n                \n                        UpdateTranslation | UpdateTranslationSuccessful | UpdateTranslationFailed | TranslationUpToDate | RefreshTranslation\n\n                \n            \n        \n    \n    src/app/store/actions/user.actions.ts\n    \n    \n        \n            \n                \n                    \n                    UserActions\n                \n            \n            \n                \n                        UserApplicationRegistered | UserApplicationNotRegistered | CreateUserApplication | CreateUserApplicationOnSuccess | CreateUserApplicationOnFailure | HandleUnexpectedError\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
